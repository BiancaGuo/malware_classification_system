# -*- coding: UTF-8 -*-
'''
function: 爬取开源malware（worms、backdoors、trojans、rootkits、spyware、adware、others[linux/windows]
url:http://malwaredb.malekal.com/index.php

'''


from bs4 import BeautifulSoup
import os
import re
import requests
import sys
type = sys.getfilesystemencoding()
from threading import Thread
import time
from multiprocessing.pool import ThreadPool

headers = {
        # "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
        # "Accept-Encoding": "gzip, deflate",
        # "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8",
        # "Cache-Control": "no-cache",
        # "Connection": "keep-alive",
        # "Cookie": "_ga=GA1.2.923209739.1545890753",
        # "Host": "malwaredb.malekal.com",
        # "Pragma": "no-cache",
        # "Upgrade-Insecure-Requests": 1,
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
        }


# def download(_url):  # 下载函数
#     name = ".\\malware_dataset\\windows\\worms\\" + _url[-32:] + ".zip"  # 设置路径和文件名
#     print name
#     if os.path.exists(name) == False:
#         if (_url == None):  # 地址若为None则跳过
#             pass
#         result = requests.get(_url, headers=headers)
#         data = result.content  # 否则开始下载到本地
#         with open(name, "wb") as code:
#             code.write(data)
#             code.close()

def download(_url):
    path = ".\\malware_dataset\\windows\\rootkits\\" + _url[-32:] + ".zip"
    if not os.path.exists(path):
        r = requests.get(_url, stream=True)
        if r.status_code == 200:
            with open(path, 'wb') as f:
                for chunk in r:
                    f.write(chunk)
    else:
        print(path,"exit!")

def download2(_url):  # 下载函数
    name = ".\\malware_dataset\\linux\\rootkits\\" + _url[-32:] + ".zip"  # 设置路径和文件名
    if os.path.exists(name) == False:
        if (_url == None):  # 地址若为None则跳过
            pass
        result = requests.get(_url, headers=headers)
        data = result.content  # 否则开始下载到本地
        with open(name, "wb") as code:
            code.write(data)
            code.close()

if __name__=="__main__":
    #url = "http://malwaredb.malekal.com/index.php?page="  # 指定的URL
    url="http://malwaredb.malekal.com/index.php?malware=rootkit"
    html = requests.get(url)
    html.encoding = 'utf-8'  # utf-8是根据网页源代码中设置的编码格式来指定的
    soup = BeautifulSoup(html.text, 'lxml')
    lst = []
    # lst2=[]
    for count in range(2, 398):
        md5 = soup.select('body > div:nth-of-type(5) > table > tr:nth-of-type({}) > td:nth-of-type(3) > a:nth-of-type(1)'.format(count))
        md5 = md5[0].get_text()
        print(md5)
        download_url = "http://malwaredb.malekal.com/files.php?file=" + md5
        information = soup.select(
            'body > div:nth-of-type(5) > table > tr:nth-of-type({}) > td:nth-of-type(5)'.format(count))
        information = information[0].get_text()
        if 'win' in information.lower():
            lst.append(download_url)
        # if 'linux' in information.lower():
        #     lst2.append(download_url)

    threads = []
    for item in lst:
        t = Thread(target=download(item))
        t.start()
        threads.append(t)
    for t in threads:
        t.join()

    threads = []
    for item in lst2:
        t = Thread(target=download2(item))
        t.start()
        threads.append(t)
    for t in threads:
        t.join()

    # for address in lst2:
    #     # if os.path.exists(address):
    #     print address
    #     if address != None:
    #             pathName = ".\\malware_dataset\\linux\\worms\\" + address[-32:] + ".zip"
    #             if os.path.exists(pathName) == False:
    #                 print pathName
    #                 #download(address, pathName)  # 下载
    #                 # start(address, pathName)
    #             else:
    #                 print pathName + " exit!"

    # for page in range(14,50):
    #     #time.sleep(3)
    #     print page
    #     url=url+str(page)
    #     html = requests.get(url)
    #     html.encoding = 'utf-8'  # utf-8是根据网页源代码中设置的编码格式来指定的
    #     soup = BeautifulSoup(html.text, 'lxml')
    #     dict={}
    #     for count in range(2,52):
    #         #md5 = soup.select('body > div:nth-child(13) > table > tbody > tr:nth-child({}) > td:nth-child(3) > a:nth-child(2)'.format(count)).get_text()
    #         md5=soup.select('body > div:nth-of-type(5) > table > tr:nth-of-type({}) > td:nth-of-type(3) > a:nth-of-type(1)'.format(count))
    #         #md5=soup.select('body > div:nth-of-type(13) > table:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(3) > a:nth-of-type(2)')
    #         md5=md5[0].get_text()
    #         #print(md5)
    #         download_url="http://malwaredb.malekal.com/files.php?file="+md5
    #         information=soup.select('body > div:nth-of-type(5) > table > tr:nth-of-type({}) > td:nth-of-type(5)'.format(count))
    #         information = information[0].get_text()
    #         #Trojan\
    #         if 'adware' in information.lower():
    #             dict[download_url]='adwares'
    #         elif 'spyware' in information.lower():
    #             dict[download_url] = 'spywares'
    #         elif 'rootkit' in information.lower():
    #             dict[download_url] = 'rootkits'
    #         elif 'backdoor' in information.lower():
    #             dict[download_url] = 'backdoors'
    #         elif 'worm' in information.lower():
    #             dict[download_url] = 'worms'
    #         elif 'trojan' in information.lower():
    #             dict[download_url] = 'trojans'
    #         else:
    #             dict[download_url] = 'others'
    #         if 'win' in information.lower():
    #             dict[download_url] += 'win'
    #         if 'linux' in information.lower():
    #             dict[download_url] += 'lnx'
    #
    #     for address,type in dict.items():
    #         # if os.path.exists(address):
    #         #     print address
    #         if address != None:
    #             if type[-3:]=='win':
    #                 pathName = ".\\malware_dataset\\windows\\" + type[:-3]+ "\\"+ address[-32:] + ".zip"  # 设置路径和文件名
    #                 if os.path.exists(pathName)==False:
    #                     print pathName
    #                     download(address, pathName)  # 下载
    #                     #start(address, pathName)
    #                 else:
    #                     print pathName+" exit!"
    #             if type[-3:]=='lnx':
    #                 pathName = ".\\malware_dataset\\linux\\" + type[:-3]+ "\\"+ address[-32:] + ".zip" # 设置路径和文件名
    #                 if os.path.exists(pathName)==False:
    #                     print pathName
    #                     download(address, pathName)  # 下载
    #                     #start(address, pathName)
    #                 else:
    #                     print pathName+" exit!"





