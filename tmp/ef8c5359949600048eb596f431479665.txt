add
push
add
or
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
pop
jge
add
add
jb
add
jo
adc
add
and
pop
xchg
adc
add
jb
add
jo
adc
add
pop
jge
add
add
jb
add
jo
push
add
add
jae
add
or
add
add
and
add
mov
add
push
jge
add
add
jae
add
or
add
add
pop
jns
sbb
add
and
add
add
add
add
pop
jge
add
add
jae
add
or
add
add
pop
jge
add
add
jae
add
or
add
add
jb
add
jo
and
add
pop
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
and
xor
xor
loope
inc
jge
add
add
pop
js
sub
pop
inc
jge
add
add
pop
je
xor
add
add
dec
cmp
add
add
push
and
add
subb
add
push
sub
xor
add
add
add
add
cmp
add
add
push
and
aad
add
add
add
and
add
add
add
add
and
add
jae
add
or
add
or
adc
adc
jae
add
or
pop
sub
add
jb
add
jo
or
add
je
add
sbb
sbb
add
or
add
sub
add
adc
or
nop
add
add
add
adc
add
add
es push
jae
add
or
push
and
add
add
and
add
add
add
add
and
add
add
add
or
add
(bad)  
aam
jmp
or
add
add
add
and
add
add
add
add
and
add
add
add
or
pop
adc
push
add
add
adc
add
jb
add
jo
lea
add
add
or
or
sub
add
sub
add
or
adc
adc
add
or
add
add
push
sub
xor
add
add
add
add
cmp
add
add
push
sub
add
push
adc
clc    
add
jo
lea
add
add
adc
adc
add
adc
push
add
jo
lea
add
add
adc
adc
add
or
add
add
push
sub
xor
add
add
add
add
cmp
add
add
push
adc
and
add
sub
add
or
add
jo
lea
add
add
push
sub
add
sub
add
or
add
jo
or
adc
sub
add
or
sub
dec
cmp
add
add
push
and
add
subb
add
push
sub
xor
add
add
add
add
add
es push
pop
je
push
sub
outsb
add
jo
add
adc
jae
add
or
jae
add
or
sub
adc
pop
add
add
push
add
adc
add
add
es push
push
add
or
add
inc
add
add
or
add
jo
pop
or
push
add
or
or
adc
add
add
adc
jle
add
add
add
add
mov
xchg
popa   
pushf  
jae
add
or
push
push
adc
add
pop
adc
add
or
mov
(bad)  
incl
or
add
add
push
sub
xor
add
add
add
adc
add
add
es push
jle
add
add
sub
add
cmp
add
add
add
jo
add
adc
add
outsl
adc
push
add
or
pop
xorb
add
xor
add
cmp
add
add
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
or
add
sldt
and
jb
outsb
addr16 jae
add
add
add
and
add
sbb
add
add
add
inc
push
dec
inc
add
add
sbb
add
add
add
inc
insb
outsl
bound
add
add
add
add
add
push
add
add
add
sub
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
xchg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
adc
push
add
add
add
add
add
add
add
add
add
gs add
add
lods
add
add
add
add
add
add
add
add
add
adc
push
add
add
roll
adc
push
add
push
aas    
add
add
pop
adc
push
add
adc
push
add
test
push
add
push
adc
push
add
add
cmp
or
xor
adc
push
add
add
add
test
push
add
add
cmpxchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
add
add
(bad)  
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
sgdtl
add
add
add
jnp
sgdtl
add
add
add
add
add
add
add
add
add
add
add
loop
pop
add
add
add
add
add
add
add
add
sbb
add
add
add
xor
add
add
cmp
sbb
add
inc
add
add
add
sgdtl
add
add
add
arpl
adc
add
add
add
add
add
add
add
add
add
add
int
sgdtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
mov
push
cmpb
mov
push
mov
push
movb
add
lret
and
add
add
sbb
and
add
je
add
or
push
sbb
sub
add
lods
and
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
and
pop
add
add
add
add
add
add
add
addb
and
push
jno
or
add
push
jp
adc
sub
add
or
push
add
enter
or
push
add
add
add
and
add
add
add
add
add
add
add
pop
(bad)  
add
add
add
add
pop
loope
adc
add
add
addb
and
ljmp
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
sub
sub
jo
add
or
push
add
and
sub
movsb
and
add
add
add
add
add
add
add
or
sub
add
add
addb
and
or
das    
add
add
add
or
xor
add
add
addb
and
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
addb
and
cltd   
add
add
add
or
add
add
addb
and
or
sbb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
mov
xchg
add
mov
add
add
jecxz
add
add
cld    
add
sub
add
add
cmp
add
add
push
push
add
add
xchg
add
add
sahf   
pop
add
add
lods
pop
add
add
mov
add
pop
add
add
pop
or
add
add
or
add
add
add
add
pop
or
add
add
add
add
mov
add
add
mov
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
je
add
add
mov
add
add
(bad)  
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
jnp
add
add
mov
add
add
lds
add
add
add
add
or
add
add
or
add
add
add
add
push
or
add
add
add
add
test
add
add
mov
add
or
add
add
or
add
add
or
add
add
add
add
xor
add
add
add
add
(bad)  
or
add
add
add
or
add
add
or
add
add
or
add
add
or
push
or
and
add
add
add
add
add
orl
add
mov
add
or
(bad)  
or
or
add
add
adc
adc
pop
add
add
add
inc
add
add
inc
add
add
pop
add
pop
add
push
add
inc
add
pop
add
popa   
add
inc
add
pop
add
jno
pop
add
roll
add
add
pop
add
add
add
add
add
inc
add
add
push
xchg
add
add
push
lcall
add
add
les
jns
scas
push
fildl
stc    
add
add
out
sub
pop
add
add
add
sub
cmp
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
roll
add
add
add
add
test
add
add
add
add
add
add
lock add
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
pop
add
bound
popl
lret   
pop
das    
or
or
or
or
mov
or
push
push
sub
inc
add
add
add
add
(bad)  
jae
add
inc
add
add
add
adc
and
add
add
push
add
sbb
add
pop
add
pop
or
inc
add
add
or
inc
add
add
add
add
daa    
add
or
inc
add
add
add
add
or
add
add
add
xor
add
aaa    
add
add
cmp
test
adc
inc
add
add
adc
inc
add
add
aas    
add
or
add
inc
add
or
inc
add
push
add
inc
add
add
out
or
add
or
add
clc    
add
add
add
add
add
add
add
sbb
add
add
add
lahf   
add
pop
add
add
add
add
add
add
lret   
push
add
sti    
stos
or
add
add
out
add
add
add
add
imul
xor
inc
outsl
outsl
insb
gs popa 
outsb
add
jae
gs insl
add
arpl
insb
imul
imul
popa   
je
bound
imul
bound
add
jae
gs insl
cs push
jne
je
insl
gs cs inc
outsl
insl
jo
insb
gs jb
gs jb
imul
je
jb
push
outsl
imul
bound
imul
outsl
outsb
inc
je
jb
bound
add
jae
gs insl
cs push
gs data16 insb
arpl
outsb
add
jb
outsb
add
jae
insl
bound
imul
imul
outsl
insl
push
imul
je
jb
bound
add
jae
gs insl
cs push
jne
je
insl
gs cs dec
outsb
je
jb
jo
gs jb
imul
insl
jo
insb
popa   
je
outsl
outsb
push
gs insb
popa   
js
je
outsl
outsb
jae
je
jb
bound
add
je
xor
inc
jne
fs inc
je
jb
bound
add
jae
insl
bound
jb
fs jne
je
je
jb
bound
add
jae
insl
bound
gs jae
jb
jo
imul
imul
jae
gs insl
bound
outsl
jo
jb
addr16 push
jb
bound
add
jae
insl
bound
outsl
insl
jo
outsb
jns
je
jb
bound
add
imul
xor
gs js
add
gs add
dec
push
arpl
jbe
cmp
xor
push
add
push
arpl
insl
push
jp
inc
jp
insl
add
inc
inc
push
push
dec
dec
dec
pop
push
push
inc
push
inc
add
jne
add
jae
jne
arpl
add
cs push
gs jae
jne
arpl
add
bound
addr16 push
dec
push
fs push
je
push
imul
push
insl
push
dec
add
outsb
outsl
insl
add
dec
xor
outsb
je
jo
add
jb
outsb
addr16 inc
jne
insb
fs gs jb
push
jns
je
insl
cs push
gs js
add
imul
dec
push
push
cmp
dec
arpl
outsl
insl
push
jp
inc
jp
insl
xor
inc
jns
add
outsl
pushw
js
insb
js
add
push
xor
inc
inc
insl
pop
jae
pop
ss js
jp
popa   
add
popa   
push
xor
push
pop
push
data16 add
je
xor
inc
jne
bound
arpl
add
inc
dec
push
arpl
inc
xor
dec
xor
popa   
fs dec
jns
add
popa   
jb
pop
xor
outsb
dec
outsb
inc
dec
dec
dec
add
gs push
imul
inc
jo
jp
jbe
dec
insb
add
push
push
bound
arpl
add
push
dec
add
bound
push
inc
xor
inc
xor
aaa    
popa   
xor
outsb
add
jb
push
dec
insb
dec
xor
add
push
dec
cmp
xor
dec
dec
add
bound
inc
xor
dec
xor
add
dec
popa   
push
push
add
xor
add
jne
addr16 jns
pop
add
dec
ja
jne
dec
xor
push
inc
xor
inc
add
addr16 je
insl
push
dec
xor
insb
dec
pop
cmp
dec
ss ss push
arpl
inc
dec
dec
je
xor
dec
dec
pop
push
add
push
inc
fs popa 
inc
dec
pop
pop
push
bound
add
pop
dec
insl
jne
inc
insl
add
dec
ss push
pop
aaa    
outsl
push
push
xor
push
dec
push
dec
xor
xor
dec
imul
jo
je
outsl
outsl
arpl
add
dec
push
dec
dec
addr16 dec
bound
pop
jne
inc
xor
add
inc
inc
push
push
add
xor
dec
je
add
dec
addr16 inc
add
cmp
inc
inc
dec
add
jne
push
je
aaa    
add
inc
outsb
jbe
dec
cmp
inc
insb
add
push
push
data16 jae
inc
xor
jne
push
add
imul
pop
xor
aaa    
push
jb
outsl
fs push
inc
inc
push
dec
js
dec
add
addr16 push
inc
jo
insl
jae
xor
arpl
outsl
jb
push
gs jae
jne
arpl
popa   
outsb
popa   
addr16 gs jb
push
jns
je
insl
cs push
gs jae
jne
arpl
add
je
bound
arpl
jb
jbe
outsb
je
outsl
outsb
imul
jb
outsl
ja
add
dec
dec
imul
jne
push
add
gs push
jo
outsb
add
imul
addr16 gs ja
data16 je
dec
dec
imul
push
jns
push
inc
dec
add
outsb
je
xor
dec
outsb
je
je
add
xor
insb
xor
xor
jne
outsl
dec
imul
push
jns
add
jp
push
push
cmp
add
data16 js
jb
jb
dec
dec
dec
popa   
jns
ss push
xor
imul
jne
dec
xor
xor
inc
xor
dec
add
inc
dec
xor
jb
dec
inc
inc
data16 jo
inc
xor
pop
popa   
outsl
jae
js
push
dec
outsb
je
je
add
outsl
gs dec
add
push
outsb
inc
push
inc
add
popa   
jns
inc
dec
imul
dec
cs fs insb
insb
add
jo
insb
addr16 push
inc
outsb
jns
inc
push
outsl
push
add
jbe
inc
dec
inc
pop
dec
xor
push
inc
outsb
jo
push
push
dec
dec
add
imul
jo
add
push
push
pop
dec
inc
dec
pop
outsl
cmp
ss je
push
cs fs insb
insb
add
push
xor
cmp
xor
pop
outsl
push
add
bound
js
imul
push
inc
jo
xor
push
jb
fs xor
dec
dec
push
push
ss dec
dec
dec
pop
push
add
ss dec
jne
inc
dec
bound
aaa    
jb
push
jbe
outsb
dec
push
add
dec
popa   
jp
xor
dec
xor
fs insb
insb
add
push
dec
dec
dec
add
push
dec
dec
imul
bound
add
inc
push
dec
push
push
xor
outsl
push
arpl
push
push
jne
xor
dec
aaa    
cmp
jne
addr16 aaa 
aaa    
inc
xor
add
pop
pop
jb
aaa    
xor
fs insb
insb
add
je
push
inc
js
arpl
imul
add
inc
insb
popa   
addr16 jae
imul
gs insb
xor
cs fs insb
insb
add
inc
inc
pop
insl
cmp
dec
jne
insb
gs popa 
push
dec
push
inc
jb
add
jae
insl
bound
push
jns
add
je
jns
gs inc
jb
insl
dec
popa   
outsb
fs insb
add
outsb
je
insl
gs push
jns
gs dec
popa   
outsb
fs insb
add
outsb
je
insl
gs dec
gs insb
jo
jb
add
je
bound
arpl
insb
jne
add
ja
popa   
je
inc
imul
dec
imul
je
push
imul
jae
arpl
inc
outsl
insl
jo
insb
gs jb
gs jb
imul
arpl
jae
data16 je
push
imul
jae
arpl
dec
popa   
je
inc
gs je
pop
je
dec
push
dec
arpl
dec
push
inc
add
je
pop
aaa    
jbe
push
jb
push
dec
add
je
jbe
je
jb
dec
popa   
je
inc
popa   
insb
insb
add
aaa    
push
push
push
outsb
xor
xor
dec
pop
add
imul
insl
bound
inc
imul
arpl
ss jne
xor
inc
dec
inc
add
ja
xor
dec
push
push
push
inc
bound
cmp
cmp
xor
pop
jbe
pop
push
dec
inc
inc
xor
cs fs insb
insb
add
inc
push
push
inc
imul
jns
imul
push
push
dec
dec
fs inc
dec
popa   
dec
aaa    
inc
add
cmp
jo
bound
dec
dec
push
inc
push
add
inc
js
data16 jne
ss dec
push
je
push
push
push
imul
cmp
arpl
push
cs fs insb
insb
add
inc
xor
gs insl
dec
dec
cmp
push
dec
inc
addr16 aaa 
pop
bound
je
jo
fs push
ja
dec
jb
jns
add
addr16 gs dec
ja
dec
jo
je
bound
addr16 push
add
cmp
imul
gs pop
ss push
push
jbe
js
push
insl
push
imul
js
jbe
js
bound
jbe
data16 aaa 
outsb
inc
cs fs insb
insb
add
cmp
push
xor
push
jp
inc
imul
dec
jne
outsb
fs pop
add
xor
push
inc
pop
xor
push
jns
xor
push
xor
imul
push
jbe
push
push
push
outsb
inc
dec
add
dec
outsl
inc
jb
inc
insl
push
dec
insl
pop
ss push
push
push
cs fs insb
insb
add
cmp
xor
dec
js
dec
dec
fs dec
xor
jp
pop
push
xor
inc
bound
jbe
push
push
popa   
imul
data16 js
dec
xor
addr16 pop
ja
add
ss insl
dec
push
jp
xor
add
aaa    
jo
dec
push
dec
xor
outsb
cs fs insb
insb
add
dec
jbe
dec
insl
push
jp
pop
dec
jo
jp
add
insb
imul
outsl
ss inc
add
cmp
inc
dec
inc
outsb
dec
inc
inc
je
arpl
insl
push
bound
jb
add
xor
inc
cmp
push
aaa    
xor
bound
data16 add
addr16 jns
fs push
jbe
dec
aaa    
ss push
cmp
cmp
fs insb
insb
add
inc
jns
add
dec
jo
push
pop
dec
push
popa   
pop
dec
dec
pop
push
dec
arpl
dec
inc
push
insl
xor
dec
inc
dec
push
popa   
add
jp
insb
inc
dec
add
arpl
dec
dec
xor
fs insb
insb
add
push
gs dec
push
pop
outsb
jb
push
js
xor
dec
insl
push
cmp
outsb
add
push
dec
xor
ja
jns
dec
dec
xor
arpl
inc
inc
push
dec
dec
push
inc
outsl
add
dec
dec
jo
jns
dec
xor
inc
js
inc
dec
dec
inc
inc
push
fs insb
insb
add
insb
outsl
ja
outsl
outsb
imul
jb
outsl
ja
add
imul
ja
aaa    
ja
jns
dec
inc
jb
addr16 je
js
push
inc
inc
add
insb
push
xor
popa   
fs push
jb
arpl
jae
gs insl
outsl
jb
add
xor
outsl
arpl
jae
inc
add
popa   
jae
inc
fs fs jb
jae
add
jne
data16 gs jb
arpl
gs popa 
add
jne
bound
dec
inc
jns
gs jae
gs popa 
add
arpl
inc
inc
xor
push
dec
push
cmp
jns
bound
pop
dec
cmp
popa   
push
dec
dec
outsb
inc
fs jne
add
imul
insb
dec
jbe
push
push
outsb
inc
jo
push
outsb
outsl
aaa    
dec
pop
add
cmp
aaa    
dec
push
jb
popa   
add
jbe
dec
ss xor
dec
jb
inc
pop
inc
xor
je
xor
fs insb
insb
add
push
inc
arpl
cmp
inc
add
jne
ja
xor
jbe
dec
cmp
push
push
inc
xor
ja
data16 jp
push
xor
inc
imul
jae
push
insb
inc
outsl
push
outsl
js
gs inc
inc
add
dec
jne
inc
jns
jns
jne
inc
push
push
xor
popa   
ss jae
xor
fs insb
insb
add
inc
ja
addr16 popa 
pop
dec
addr16 inc
push
xor
cmp
xor
ja
outsl
insl
inc
dec
fs push
jbe
arpl
xor
push
inc
je
inc
dec
arpl
fs dec
xor
dec
inc
push
ja
inc
xor
jbe
outsl
js
jns
jp
fs addr16 jns
add
inc
dec
pop
push
fs insb
insb
add
ss data16 jo
inc
addr16 dec
xor
dec
dec
jae
inc
popa   
insb
push
ja
js
dec
cmp
push
dec
addr16 push
dec
xor
push
add
popa   
insl
dec
data16 add
aaa    
xor
outsl
pop
pop
je
jne
inc
push
pop
bound
inc
jne
imul
push
xor
push
inc
xor
xor
dec
ss push
inc
cs fs insb
insb
add
inc
cmp
jp
cmp
push
imul
data16 add
inc
dec
outsb
dec
je
dec
jp
insl
bound
push
pop
inc
dec
push
add
inc
ss push
cmp
pop
gs jae
inc
inc
inc
xor
push
push
inc
add
imul
bound
dec
dec
inc
jae
inc
add
popa   
dec
inc
dec
cs fs insb
insb
add
inc
ss je
dec
imul
dec
push
dec
insl
jae
imul
cmp
xor
insl
inc
inc
aaa    
outsl
add
gs dec
push
js
push
jbe
inc
dec
add
push
dec
push
push
pop
xor
fs insb
insb
add
push
xor
popa   
dec
add
aaa    
jne
inc
inc
inc
push
add
xor
aaa    
add
ss insl
dec
xor
insl
dec
cmp
outsl
arpl
inc
ss push
pop
imul
gs inc
push
xor
pop
cs fs insb
insb
add
push
dec
inc
js
jp
push
outsb
bound
inc
jbe
outsb
push
je
dec
dec
jns
push
add
dec
outsb
je
dec
imul
pop
bound
jb
inc
jne
gs dec
insb
jns
xor
addr16 addr16 inc
push
inc
imul
xor
inc
pop
inc
addr16 jb
insl
jp
inc
push
js
jo
cmp
add
push
xor
jo
xor
inc
gs pop
xor
add
insl
jne
outsl
jo
push
jb
fs push
dec
add
inc
push
imul
ja
arpl
push
xor
cmp
imul
push
dec
inc
outsb
dec
cs fs insb
insb
add
insw
inc
pop
push
add
cmp
outsb
jb
jo
xor
jb
inc
add
arpl
jb
add
dec
dec
jae
push
push
inc
dec
inc
imul
push
push
push
imul
dec
cs fs insb
insb
add
insb
jne
pop
pop
add
pop
inc
dec
dec
push
dec
dec
push
dec
push
push
add
pop
inc
dec
push
push
dec
inc
pop
pop
push
inc
push
push
dec
push
inc
inc
add
jae
jne
arpl
popa   
outsb
add
jae
jne
arpl
jne
je
jb
add
insb
je
jb
dec
outsb
outsw
add
jae
gs insl
cs inc
insb
outsl
bound
imul
add
je
push
gs jae
jne
arpl
popa   
outsb
popa   
addr16 gs jb
push
gs data16 gs jb
outsb
arpl
jno
popa   
insb
jae
addr16 gs je
inc
jae
gs insl
bound
dec
push
pop
dec
outsb
fs js
popa   
dec
imul
jne
arpl
add
imul
xor
addr16 jb,pn
jae
jne
arpl
add
inc
push
push
inc
je
jb
bound
add
popa   
addr16 jae
je
jb
bound
add
fs gs dec
outsl
fs jne
gs dec
popa   
insl
gs inc
je
jb
bound
add
popa   
outsb
fs popa 
jb
dec
outsl
fs jne
gs inc
je
jb
bound
add
insl
jo
insb
gs jb
outsb
gs jb
je
fs inc
je
jb
bound
add
jne
addr16 gs jb
outsl
outsb
push
jae
jb
outsl
fs gs inc
je
jb
bound
add
jae
gs insl
cs inc
imul
imul
je
jb
jb
ja
popa   
bound
je
jb
bound
add
jae
gs insl
cs inc
outsl
insl
jo
outsb
outsb
je
outsl
fs gs insb
add
imul
jae
bound
je
je
add
add
push
push
add
dec
add
add
add
add
imul
add
push
add
add
jae
jne
inc
add
inc
add
jb
aaa    
add
imul
add
dec
add
xor
data16 add
push
add
popa   
add
dec
add
inc
add
andb
add
insl
add
imul
add
dec
add
dec
add
inc
add
add
cmp
aaa    
add
add
dec
add
popa   
add
dec
add
add
je
pop
add
add
jp
cmp
ja
dec
add
dec
add
push
add
cmp
insb
add
js
jbe
push
add
dec
add
add
add
insl
add
pop
add
jo
cmp
jae
dec
add
imul
inc
add
jne
pop
add
add
outsl
add
js
cmp
dec
add
push
add
insl
add
jns
je
dec
add
add
inc
add
add
outsb
add
xor
jae
dec
add
add
xor
push
add
jns
ja
aaa    
add
xor
inc
add
insb
add
xor
push
jbe
xor
xor
push
add
add
add
add
dec
add
dec
add
push
add
add
data16 add
add
inc
add
arpl
dec
add
popa   
add
inc
add
push
add
push
add
dec
add
je
inc
add
push
add
xor
inc
add
arpl
pop
add
add
push
add
jae
dec
add
pop
add
dec
add
add
add
add
add
je
arpl
push
sbb
add
insl
add
imul
add
jns
xor
imul
add
dec
add
popa   
add
adc
je
jb
jns
push
add
imul
add
add
arpl
insb
add
jb
imul
je
jns
jo
add
sbb
add
je
add
outsb
add
je
popa   
add
arpl
add
and
push
add
pop
add
dec
add
add
push
add
dec
add
data16 add
xorb
add
add
dec
add
aaa    
add
add
pop
add
add
cmp
add
add
jbe
inc
add
add
xor
popa   
add
add
jne
jp
dec
add
inc
add
add
jbe
dec
add
insl
add
js
pop
add
add
xor
dec
add
outsb
add
aaa    
add
insb
add
xor
jne
dec
add
add
inc
add
cmp
js
arpl
push
add
push
add
dec
add
push
add
dec
add
add
jns
push
add
jne
arpl
push
add
jbe
dec
add
add
add
mulb
push
scas
jmp
sbb
xor
add
mov
pop
push
sbb
mov
add
add
push
add
push
jb
jo
outsl
outsb
inc
js
gs jo
imul
ja
add
and
add
add
or
cs xor
xor
add
add
push
adc
add
inc
pop
cmp
push
insb
pop
xor
add
add
add
add
add
or
add
add
add
add
or
add
and
bound
popa   
xor
xor
aaa    
sub
sub
sub
xor
cmp
arpl
arpl
add
push
data16 bound
dec
add
adc
add
jae
ja
outsb
cmp
dec
inc
jo
add
outsl
jo
jb
addr16 push
sub
xor
xor
sub
and
je
data16 aaa 
xor
inc
inc
cmp
inc
arpl
insb
add
sgdtl
or
gs dec
inc
push
arpl
inc
add
add
or
push
adc
push
adc
push
sbb
add
or
push
add
push
adc
push
push
add
or
add
add
add
sbb
pop
or
adc
sbb
adc
adc
or
add
add
or
sbb
add
adc
add
sbb
dec
add
sbb
sbb
add
or
add
adc
adc
adc
or
pop
add
inc
adc
sbb
add
adc
addb
or
aad
cmp
add
sbb
adc
sbb
adc
add
pop
add
pop
add
or
sbb
adc
sbb
adc
add
or
add
sbb
dec
or
add
sbb
add
sbb
dec
sbb
and
add
sbb
sbb
push
or
add
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
add
adc
inc
or
push
or
add
push
add
sbb
pop
or
add
add
inc
add
add
dec
or
add
dec
or
or
add
sbb
add
add
sbb
or
add
sbb
add
add
sbb
add
add
sbb
adc
add
sbb
dec
or
add
sbb
add
or
add
sbb
add
add
dec
add
or
push
adc
add
add
addb
add
add
adc
push
adc
adc
pop
add
popa   
adc
add
add
add
add
jns
and
add
adc
or
adc
add
add
or
add
add
add
add
and
add
xorb
into   
lret
add
add
xchg
add
add
jae
gs insl
cs push
gs jae
jne
arpl
cs push
gs jae
jne
arpl
gs popa 
fs gs jb
and
arpl
insb
imul
jae
outsl
outsb
cmp
xor
xor
inc
jne
je
jb
cmp
jb
insb
sub
push
jne
insb
imul
imul
bound
aaa    
popa   
xor
cmp
xor
xor
cmp
push
jns
je
insl
cs push
gs jae
jne
arpl
cs push
jne
je
insl
gs push
gs jae
jne
arpl
gs je
add
add
add
add
add
push
inc
inc
push
inc
inc
push
or
mov
or
dec
daa    
lods
test
push
add
add
add
add
add
add
add
add
dec
add
add
push
add
pop
add
outsb
add
add
popa   
add
imul
add
push
push
push
add
dec
add
add
cltd   
add
add
outsb
add
pop
add
push
add
push
add
add
bound
aaa    
add
add
je
push
add
imul
add
jns
xor
imul
stos
dec
or
and
or
add
add
add
test
add
jp
lods
inc
sbb
shr
lods
fnstenv
stc    
cli    
fs push
adc
in
cmp
add
push
push
(bad)  
jbe
insl
ret    
popa   
ds
push
nop
jo
adc
adcb
cmp
sub
rolb
das    
xchg
mov
fwait
mov
inc
and
and
xor
mov
insl
ds in
(bad)  
fwait
insl
roll
outsl
dec
in
xor
stos
mov
rcrl
(bad)  
repnz or
cmp
xor
jecxz
aaa    
cmp
in
addr16 lcall
jns
cmpsl
push
sti    
roll
enter
inc
mov
mov
es jmp
add
pop
dec
mov
stc    
push
cld    
fistpl
mov
add
sti    
jmp
push
push
xchg
clc    
pop
ds sti 
adc
push
call
enter
fsubrl
dec
dec
mov
mov
mov
test
pop
mov
fcmove
pop
mov
mov
movsb
and
(bad)
iretw  
js
outsb
lcall
mov
negb
dec
jo
or
mov
aad
push
xchg
testl
bound
and
psubsw
mov
jo
ret    
addr16 push
pop
mov
test
and
inc
into   
je
mov
jmp
lea
push
(bad)  
add
add
add
add
pop
add
add
dec
dec
insb
jp
and
dec
or
xchg
cmp
ret    
loop
into   
rcrb
je
mov
out
xlat
subps
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
test
push
add
stc    
adc
int3   
pop
call
aam
(bad)  
mov
or
add
dec
aaa    
scas
fiaddl
arpl
iret   
jbe
mov
pusha  
push
push
aad
ljmp
push
ss fcmove
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sub
push
clc    
sub
xor
xchg
sub
adc
ss fdiv
mov
out
xlat
scas
sbb
cmp
jbe
icebp  
out
mov
dec
sub
mov
out
das    
negl
mov
cmpsl
iret   
in
popf   
test
out
pop
dec
sbb
mov
out
ror
fdivrp
mov
hlt    
xchg
hlt    
mov
into   
test
xbegin
iret   
fdiv
mov
out
xlat
iret   
in
xchg
lcall
mov
(bad)  
xlat
(bad)  
hlt    
mov
(bad)  
xlat
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
mov
xor
(bad)  
mov
je
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sbb
cli    
jne
(bad)  
jno
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
fisubr
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
adc
sbb
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
hlt    
inc
sahf   
pop
pop
movsb
cld    
mov
or
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
into   
xlat
out
cmp
mov
xchg
call
iret   
dec
sbb
iret   
lock rol
fdivl
iret   
fdiv
mov
out
xlat
iret   
fdiv
stos
(bad)  
mov
test
loop
iret   
lock leave 
xor
out
mov
movsb
xlat
push
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sbb
lret
sub
(bad)  
out
stos
(bad)
call
lock fdiv
mov
fsubl
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
jl
jmp
lods
xchg
or
inc
xor
hlt    
aam
pushf  
fmul
fdiv
mov
out
xlat
iret   
fdiv
mov
outsb
pop
(bad)  
bound
dec
testb
fsubr
cli    
(bad)  
out
xlat
out
xchg
iret   
xor
or
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
scas
or
aas    
loop
imul
mov
(bad)  
(bad)  
mov
out
jmp
out
xlat
iret   
fdiv
mov
out
xlat
subps
sbb
sbb
inc
hlt    
lret
(bad)
pusha  
mov
popa   
sub
fdiv
mov
out
xlat
iret   
fdiv
mov
cs push
nopl
cli    
jbe
jecxz
hlt    
sbb
push
dec
leave  
sub
fdivr
mov
fdiv
mov
out
xlat
iret   
fdiv
lret
pop
dec
sbb
mov
out
xlat
iret   
fdiv
mov
out
mov
out
xlat
xor
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sbb
lret
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
stos
out
add
mov
sbb
fdiv
mov
out
xlat
iret   
in
aam
cli    
and
sub
stos
push
test
adc
adc
push
hlt    
lret   
pop
enter
cmc    
mov
fwait
sub
push
daa    
or
int3   
gs adc
cmp
stc    
hlt    
mov
or
aaa    
sub
aas    
je
lret   
mov
shr
(bad)  
out
xlat
pop
and
aaa    
sub
in
xchg
adc
(bad)  
out
jl
and
inc
push
xchg
pop
pop
(bad)  
cli    
(bad)  {%k2}
jb
xchg
loop
iret   
fcoml
outsb
or
sbb
or
adc
push
insb
aas    
mov
cmp
sub
mov
scas
(bad)  
cmp
daa    
add
dec
jge
aas    
add
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
mov
mov
hlt    
mov
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
sub
aaa    
pop
pop
jg
enter
and
push
jno
push
xlat
iret   
fdiv
mov
cmp
lods
fstpt
mov
nop
in
in
push
xor
cs dec
jecxz
mov
in
xlat
enter
(bad)  
out
xlat
(bad)  
pop
mov
(bad)  
out
xlat
xor
xchg
jg
jbe
out
cmp
test
or
sbb
repz test
(bad)  
scas
push
(bad)  
fdiv
mov
sub
jl
dec
jno
adc
outsb
pop
shl
int3   
mov
push
push
roll
inc
and
inc
roll
iret   
pop
jno
dec
pop
loop
adc
xchg
pop
add
or
cmc    
mov
out
xlat
iret   
fdiv
mov
scas
push
(bad)  
fdiv
mov
sub
fs in
repnz
not
iret   
fdiv
mov
ss rcr
into   
add
jns
pop
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
in
mov
scas
inc
iret   
insb
dec
loop
mov
xbegin
xchg
es aaa 
mov
adc
mov
in
mov
lods
push
cmp
adc
dec
pop
pusha  
cmp
mov
jbe
jae
negl
adc
outsb
std    
sbb
xchg
pop
pop
adc
mov
popl
mulb
mov
fidivrl
inc
mov
sahf   
es test
adc
push
rcrl
pop
pop
sbb
xchg
mov
popl
mov
push
mov
je
or
flds
es cld 
aam
adc
es leave 
sbb
xchg
pop
pop
and
lret   
xchg
mov
popl
xchg
mov
ljmp
cmp
es aam
jmp
subl
pop
pop
jmp
mov
popl
mov
mov
dec
cmp
or
sahf   
es mov
stos
or
sbb
xchg
pop
pop
dec
add
xchg
mov
popl
xchg
mov
jbe
mov
(bad)  
jae
jp
sahf   
es pop
and
or
aaa    
adc
mov
xchg
mov
popl
xor
dec
adc
cmp
xor
jp
sahf   
mov
addr16 or
inc
jnp
test
pop
pop
xchg
jae
lret
mov
add
mov
and
subl
ret
(bad)  
inc
inc
loope
xor
jo
inc
xchg
mov
bound
aas    
push
or
mov
sahf   
es in
cltd   
adc
push
inc
adc
xor
lret
mov
sub
fdivrl
imul
jne
mov
cmp
lret
rcrb
popa   
or
add
into   
jg
js
push
add
or
cs das 
jle
inc
bound
enter
jp
cmp
pop
test
push
mov
dec
jns
sbb
or
aaa    
insb
clc    
insl
add
push
pop
push
add
sub
add
xor
stos
or
in
aaa    
mov
nop
mov
int3   
mov
add
arpl
imull
shl
ret
loope
nop
(bad)  
add
test
enter
js
into   
andb
inc
or
loope
mov
repz jnp
imull
call
rorb
mov
scas
mov
cltd   
jnp
test
fildll
clc    
jecxz
lahf   
sar
icebp  
adc
fistl
cltd   
xchg
xlat
adc
lods
sub
lahf   
movsb
jno
movsb
data16 sub
dec
out
mov
aam
repz pop
mov
push
(bad)  
in
fwait
(bad)  
sbb
dec
xor
iret   
int3   
jns
lods
sahf   
sub
mov
aad
notb
mov
push
lods
lcall
mov
sub
add
out
sahf   
sub
mov
aad
notb
mov
icebp  
adc
fistl
cltd   
xchg
sub
cmp
repnz out
outsb
(bad)  
aaa    
std    
cltd   
jbe
mov
loop
sub
dec
out
outsb
sub
stos
(bad)  
das    
fisubrl
add
jno
stos
lcall
xor
and
push
pop
fsubrl
cmp
insb
sub
in
mul
lahf   
add
lods
cltd   
icebp  
mov
test
mov
jg
xchg
lret
addb
sub
or
les
inc
clc    
sti    
sbb
fdivs
loope
push
cmc    
mov
dec
pusha  
push
xor
inc
out
pop
outsl
ret
mov
inc
gs aam
mov
push
orl
mov
fiadd
xor
lret
hlt    
lock mov
add
imul
dec
test
andl
std    
aas    
dec
inc
and
lock decl
ret    
sbb
cmc    
dec
pop
add
lret
cld    
mov
cmp
cld    
fimul
lds
call
outsl
out
adc
cmpsl
test
xor
cs mov
mov
sarb
mov
cs mov
xchg
cmp
(bad)  
cmc    
mov
sub
std    
(bad)  
mov
in
mov
xchg
mov
(bad)  
aaa    
gs out
stc    
mov
mov
mov
fcompl
push
fcoms
fstpt
sbb
scas
iret   
jns
lahf   
cmp
and
jmp
icebp  
loope
lret
dec
adc
mov
inc
xchg
push
cli    
push
and
dec
cmp
sarb
xchg
out
pop
dec
xor
in
call
xor
push
pop
std    
insl
mov
push
in
push
ja
mov
mov
test
stc    
xchg
mov
inc
xchg
ds in
mov
inc
int
ret
pop
insl
in
pop
inc
mov
leave  
fsubrl
add
mov
mov
pop
xchg
jne
pop
jb
imul
mov
aam
cs pop
adc
mov
aad
fs repz sti 
mov
adc
fwait
arpl
jae
jmp
loop
int3   
outsb
fldt
xchg
rorb
push
ja
xchg
lds
sub
scas
inc
mov
lea
movsb
lahf   
clc    
sub
inc
cmpsb
cmpb
mov
sti    
jg
out
loop
aam
leave  
pop
repz mov
and
jne
jb
decl
cmp
adc
push
repz mov
xchg
xchg
flds
cli    
adcb
scas
(bad)  
cld    
xor
jp
rorb
adc
es das 
jle
mov
outsl
xchg
cld    
cmp
adc
gs cld 
sub
lods
ret    
aad
test
adc
and
mov
jae
fucom
mov
cwtl   
je,pt
jmp
pop
xor
cltd   
hlt    
cmpsb
pop
mov
push
or
adc
int
or
loopne
pop
mov
or
jbe
rcrb
lods
movb
sub
push
movsb
hlt    
or
push
and
jcxz
call
pusha  
iret   
dec
inc
sub
jmp
xor
adc
sti    
mov
push
lods
lods
data16 mov
mov
insl
cli    
pop
dec
mov
add
ds dec
cmp
and
add
(bad)  
(bad)  
icebp  
(bad)  
clc    
pop
aad
ret    
mov
push
fcoml
test
xor
adc
nop
or
lret
imul
test
mov
sahf   
fistp
pop
sub
inc
xor
cmp
push
or
ret    
sbb
xor
into   
pop
lret   
or
add
or
ret
fwait
loopne
test
xchg
cmp
xlat
fwait
sub
mov
mov
int
int3   
mov
cmpsb
sbb
pop
loope
rorb
xor
adc
pop
call
cmp
(bad)  
cld    
(bad)  
(bad)  
sub
cmp
int
(bad)  
pusha  
jo
(bad)  
cld    
test
mov
sub
xor
sub
lahf   
sub
push
ja
icebp  
loop
xchg
js
adc
popf   
imul
mov
push
jb
sub
xchg
nop
mov
or
es cs aam
mov
pop
mov
jecxz
test
pop
loop
pcmpeqd
inc
pop
test
stos
jmp
and
push
aaa    
and
mov
repnz ror
lcall
xor
maxps
and
sub
push
inc
inc
xchg
sbb
pop
cmpsl
mov
imul
movsl
cmpsb
push
scas
lea
ret
std    
int3   
iret   
stc    
pop
cmp
es pop
jno
mov
repnz
jb
cld    
push
xchg
loopne
or
ds xchg
lock adc
add
mov
push
xor
xchg
xchg
adc
call
cmc    
mov
jmp
(bad)  
(bad)  
xchg
xchg
in
mov
cld    
xor
adc
add
add
(bad)  
notl
xchg
lret   
push
cmp
xchg
xor
dec
leave  
frstor
adc
leave  
frstor
in
into   
scas
dec
cs dec
leave  
frstor
inc
add
mov
push
jl
xor
lahf   
fstpl
out
addr16 or
(bad)  
imul
xchg
and
jg
add
push
dec
and
repz sti 
mov
call
addr16 or
loopne
or
push
imul
lret
jne
or
and
adc
or
fildl
sahf   
imul
cmp
add
hlt    
sbb
outsl
pusha  
popf   
sahf   
imul
push
inc
mov
hlt    
xor
pop
testb
imul
std    
xchg
popf   
add
xchg
xor
sub
lods
out
shrl
aaa    
sbb
(bad)  
jne
fwait
imul
clc    
rcrl
xor
adc
xchg
push
movsb
xchg
push
sbb
sbb
sbb
js
push
xor
jl
push
mov
mov
sub
add
stc    
adc
mov
add
pop
arpl
hlt    
xor
sub
sbb
(bad)  
in
rorl
imul
xor
cmpsb
lds
(bad)  
mov
hlt    
stos
dec
xchg
push
test
push
cmp
es mov
test
js
mov
cmp
xor
or
mov
loop
in
mov
loop
(bad)  
gs clc 
sub
fdivl
mov
push
inc
cmp
sbb
sub
mov
scas
mov
dec
leave  
frstor
pop
pop
pop
jo
dec
jp
ret    
bound
inc
sbb
sbb
and
fcmovnu
xlat
cmp
icebp  
jle
aam
and
xchg
mov
mov
mov
insl
fimull
clc    
mov
les
lret   
mov
inc
xchg
aam
and
out
fucomp
mov
das    
lret
fisubrl
rorl
js
iret   
cmp
lret   
sub
sbb
xor
adc
ja
pop
pop
stos
jmp
in
bound
shr
cmc    
lods
jmp
adc
cs aaa 
xor
mov
dec
xchg
adc
movsb
or
inc
cmpsl
and
add
mov
cmp
stos
pop
daa    
icebp  
mov
jno
mov
leave  
dec
lahf   
pop
cmpsl
cmpsb
mov
xchg
out
idivb
jne
cmp
pop
ss jne
xchg
mov
bound
mov
repnz adc
jo
push
loop
mov
(bad)  
mov
aam
ficompl
leave  
(bad)  
jns
adc
pop
adc
jns
mov
popf   
adc
xchg
(bad)  
sti    
add
dec
adc
lds
add
rol
and
xor
mov
(bad)  
inc
and
scas
fsubs
add
jmp
(bad)  
sahf   
pop
ficompl
push
icebp  
jecxz
xchg
and
and
jne
stos
adc
xchg
cmpsl
mov
mov
push
insb
cld    
fcmovnbe
or
(bad)  
jns
cmpsl
adc
push
nop
icebp  
cmpsb
out
sub
pusha  
es scas
leave  
insl
sti    
mov
bound
xchg
addl
cmpsl
addr16 sti 
aad
mov
test
mov
cmp
inc
mov
xor
test
add
inc
into   
(bad)  
mov
aam
sub
mov
test
in
jmp
inc
mov
mov
jns
jle
dec
sti    
notb
push
inc
divb
xchg
cmp
mov
out
stos
aam
out
inc
xor
out
aam
and
repz xchg
nop
or
jo
xchg
mov
out
xor
cmc    
mov
lcall
xchg
adc
arpl
xor
lret   
cmp
sub
sarb
mov
xlat
enter
and
imul
aad
add
ds pushf 
sbb
cmp
das    
mov
mov
in
sbb
ljmp
(bad)  
movsl
(bad)  
xor
ljmp
into   
jmp
rorb
cmp
rcr
inc
push
shrb
mov
aad
call
daa    
adc
push
xchg
test
and
mov
(bad)  
inc
sbb
jl
pop
pop
aad
jne
sbb
aaa    
ljmp
es aaa 
or
sti    
mov
test
in
dec
adc
ret    
repnz into 
shl
scas
sub
sbb
push
push
dec
xchg
lods
sbb
test
repz cld 
rcll
jne
xchg
mov
out
push
and
xchg
add
test
outsb
or
cmc    
(bad)  
cltd   
test
sbbl
mov
jno
adc
push
(bad)  
or
in
ja
jo
ss out
xchg
ret
daa    
pop
pop
repz xchg
dec
(bad)  
outsb
or
cmc    
js
dec
and
adc
dec
sub
jp
es scas
in
ljmp
lock lret 
inc
jae
iret   
pop
ret    
jbe
scas
in
mov
xor
cmp
nop
icebp  
aad
push
mov
xor
leave  
cmp
scas
pop
aaa    
cld    
or
jle
pop
cld    
dec
jo
inc
insl
das    
sbb
push
fs inc
or
sti    
adc
push
sbb
(bad)  
loopne
ds lret
inc
adc
test
divb
insb
push
adc
dec
xor
mov
xchg
nop
mov
or
xchg
xchg
test
into   
jle
add
lcall
pop
test
cmc    
test
loope
mov
call
(bad)  
roll
jne
sti    
and
std    
mov
enter
cwtl   
in
mov
iret   
hlt    
fcmovnu
(bad)  
(bad)  
(bad)  
daa    
jge
movsl
int3   
dec
pushf  
(bad)  
lea
outsb
push
push
ficom
lret   
loope
scas
hlt    
or
push
xor
in
dec
xchg
int3   
lcall
(bad)  
int
cmp
pusha  
fdiv
lcall
xchg
adc
push
jle
xor
cmp
aas    
mov
dec
in
or
fdiv
lcall
xchg
adc
push
arpl
in
push
xchg
(bad)  
outsb
lret   
jl
mov
xchg
or
rcr
mov
or
(bad)  
pop
popf   
xor
mov
(bad)  
es inc
shrl
cmp
sbb
xchg
ret
(bad)  
roll
iret   
pop
adc
inc
es pop
ss jne
xchg
mov
cmpsl
scas
lea
ds push
inc
adc
jae
mov
jns
mov
or
sub
mov
push
cmp
xchg
dec
pop
in
andl
inc
mov
out
pusha  
jp
fidivl
mov
(bad)  
loopne
repz lret 
lahf   
(bad)  
bound
mov
jmp
inc
cmp
ja
das    
add
sahf   
add
rolb
lahf   
or
jge
(bad)  
out
addr16 or
loopne
or
pusha  
mov
push
dec
in
lcall
xlat
out
jle
pop
hlt    
stc    
dec
test
jne
cltd   
(bad)  
dec
sbb
ret    
add
or
xchg
(bad)  
rorl
mov
test
add
mov
into   
mov
xchg
or
and
and
out
(bad)  
lret
mov
inc
sub
imul
lds
push
adc
dec
das    
sbb
ret    
repnz into 
pop
jmp
daa    
pop
sub
ficoml
mov
inc
xchg
and
adc
daa    
adc
mov
xor
mov
mov
xchg
scas
jg
pop
push
lret
fld
mov
and
or
pop
out
aam
bound
bound
popa   
lock push
in
dec
xor
test
pop
scas
mov
xlat
add
pop
out
jl
shlb
daa    
inc
mov
cmpsl
push
and
ficoml
stos
xor
jp
dec
test
je
mov
aam
add
jbe
in
das    
add
pop
mov
es push
inc
(bad)  
sti    
fs jo
xor
icebp  
or
in
frstor
sub
or
icebp  
or
in
frstor
hlt    
jbe
rorb
inc
sbb
mov
iret   
ss enter
xchg
repz xor
jae
mov
rcr
rclb
xchg
xchg
lret
pop
arpl
dec
push
shrb
cmp
mov
or
hlt    
popa   
test
rcll
in
xabort
int
and
cmc    
in
jb
dec
push
(bad)  
cmpsb
mov
sti    
sbb
repz scas
xchg
xor
cmp
daa    
pushf  
out
mov
mov
inc
sub
inc
(bad)  
pop
(bad)  
jbe
xchg
lret
jb
jecxz
loopne
adc
cmp
jne
push
dec
ds cs pop
imull
dec
push
iret   
std    
repz jae
gs aad
mov
add
sbb
sahf   
jae
stos
cld    
popa   
cmc    
pop
xlat
cmp
mov
dec
das    
aad
mov
add
adc
sahf   
jae
mov
jns
pop
xlat
cmp
mov
dec
das    
aad
mov
add
adc
sahf   
jae
mov
xlat
cmp
mov
dec
das    
aad
mov
add
push
pop
mov
loopne
cmc    
pop
xlat
cmp
mov
dec
das    
aad
mov
add
pop
pop
cmpsl
sahf   
jae
cmp
pop
xlat
cmp
mov
dec
das    
aad
mov
add
cmp
cmpsb
sahf   
jae
cmp
xchg
cmc    
pop
xlat
cmp
mov
dec
das    
aad
mov
add
cmp
mov
pop
xlat
cmp
mov
dec
das    
aad
mov
add
ret
sahf   
jae
mov
xlat
cmp
mov
cmp
cmp
(bad)  
fsts
loop
faddl
flds
jle
sti    
das    
or
cmp
insl
sub
sub
sub
lret
pop
mov
pusha  
(bad)  
xor
push
adc
xchg
jne
mov
inc
xor
in
mov
adc
sub
jno
add
rolb
cltd   
cmc    
dec
lcall
repz mov
pop
add
xor
push
(bad)  
fimul
aam
adc
mov
mov
xor
(bad)  
push
cld    
test
test
inc
lock xchg
out
inc
pop
xor
leave  
orl
or
push
popl
inc
jne
mov
out
cmp
loope
mov
cmp
mov
sar
dec
or
imull
in
jmp
sbb
xchg
dec
std    
lods
cmp
(bad)  
jp
mov
dec
hlt    
mov
push
push
test
test
mov
in
add
repz mov
mov
aad
cmp
push
(bad)  
mov
jp
xchg
movsb
sar
mov
shr
shrl
test
lea
pop
mov
imul
mov
je
jg
sahf   
arpl
aaa    
(bad)  
mov
cmp
ljmp
or
pushf  
cmp
je
ret    
bound
inc
sbb
pop
repz lcall
mov
mov
lea
imul
pop
in
inc
iret   
sbb
daa    
xor
adc
pop
mov
jb
jp
xchg
add
mov
and
push
cltd   
mov
cmc    
dec
xor
in
mov
push
push
xlat
fcomip
adc
and
mov
xchg
xchg
inc
mov
xor
inc
fwait
xchg
cmpsl
push
and
cld    
aaa    
iret   
mov
fisttpl
dec
(bad)  
adc
cwtl   
fwait
jbe
mov
shll
scas
dec
std    
je
sbb
xchg
mov
jne
fsubrl
idivb
add
inc
test
mov
push
lock add
addr16 jge
addr16 mov
xchg
sbb
mov
lea
mov
and
inc
iret   
je
ds lock cltd 
jnp
mov
pop
inc
jno
jmp
arpl
rorl
lea
inc
(bad)  
mov
les
sub
ret
inc
std    
repz cmp
lret
pop
mov
jo
hlt    
(bad)  {%k2}{z}
xchg
(bad)  
aas    
pop
adc
icebp  
and
push
in
sub
repz inc
pop
or
in
push
mov
cwtl   
arpl
and
inc
pop
xchg
ds inc
in
inc
cmp
push
push
iret   
jg
stos
xor
and
inc
mov
push
(bad)  
stc    
scas
decl
adc
cmp
xchg
das    
aam
dec
outsl
and
imul
(bad)  
mov
(bad)  
out
aam
insl
push
fs out
sub
mov
sub
das    
xlat
lret   
or
mov
out
sub
out
mov
inc
mov
cli    
loopne
ds lock mov
jnp
pop
xor
xor
xchg
pop
sub
sbb
stc    
mov
push
mov
inc
dec
pop
xchg
stos
leave  
dec
int3   
test
(bad)  
rcll
out
xor
sub
pop
push
ljmp
mov
inc
fidivrl
daa    
(bad)  
out
dec
inc
inc
int3   
and
fstp
pop
mov
je
xchg
or
hlt    
sbb
jae
mov
push
mov
imul
xor
lds
hlt    
sub
ljmp
fisubl
push
mov
or
mulb
or
and
adc
cmp
push
cmp
fdivs
pushf  
scas
lock add
and
inc
xlat
mov
jmp
mov
dec
flds
leave  
mov
rol
mov
dec
pop
rcr
xchg
repz or
cmp
fiadd
cmpl
iret   
pop
test
hlt    
xor
mov
push
add
ja
inc
inc
stos
(bad)  
hlt    
push
jle
lods
aam
lret   
lods
mov
fstpl
push
out
int
or
mov
cmpsb
xchg
dec
xor
mov
pop
xchg
lcall
inc
(bad)  
fstpt
push
cs in
sub
js
lods
(bad)  
adc
popf   
dec
jns
mov
xor
out
stc    
call
pop
xor
lret
sahf   
sub
xchg
lods
cmp
sub
or
test
jnp
jb
adc
cmp
mov
cmpsb
pop
mov
mov
lret   
pop
jne
pop
stos
push
xchg
cs in
inc
into   
and
xchg
cmpl
mov
push
mov
movsb
int
adc
divl
(bad)  
out
or
jns
popf   
jmp
ret
dec
adc
mov
bound
xchg
mov
in
adc
mov
(bad)  
jp
or
repnz sub
inc
mov
or
into   
rcr
push
in
pop
xchg
adc
out
daa    
mov
out
out
dec
xor
sbb
aaa    
xchg
mov
xchg
(bad)  
fdivrl
cltd   
cld    
jg
push
mov
pop
xchg
insb
sbb
push
(bad)  
in
cmp
jb
sahf   
dec
mov
outsl
sbb
aam
imul
sub
mov
dec
add
xor
sub
sub
dec
cli    
mov
out
push
or
xchg
pop
push
jae
out
mov
cmpsb
push
out
jg
adc
sub
pop
push
mov
inc
stc    
out
mov
pop
push
jbe
out
mov
cmpsb
lods
jnp
inc
pop
adc
mull
(bad)  
mov
lahf   
inc
je
xchg
mov
xchg
add
(bad)  
sub
or
push
out
ret    
insb
add
pop
mov
insb
aam
xor
lahf   
xchg
pop
adc
cmp
push
push
rol
imul
idivb
mov
lcall
out
sub
pop
push
lock fwait
mov
mov
and
out
sub
pop
push
lock mov
test
(bad)  
(bad)  
int3   
scas
inc
jl
lea
adc
cmp
fisubl
std    
fmulp
sub
xchg
mov
jns
cmpsb
lret
xchg
push
rcrb
dec
mov
pop
pop
xchg
fwait
out
push
fwait
imul
fsubrl
insb
enter
out
aas    
jmp
(bad)  
notb
daa    
xor
xchg
inc
mov
inc
dec
arpl
jns
test
(bad)  
(bad)  
jp
mov
and
(bad)  
cmpsl
jae,pn
pop
xor
je
into   
decb
cli    
sub
mov
mov
out
sub
pop
push
adc
lahf   
xor
mov
(bad)  
int3   
lahf   
jnp
push
xor
out
adc
jl
popa   
pop
lret   
mov
xor
mov
cmpsl
add
inc
mov
das    
mov
mov
xor
sbb
enter
jno
into   
jo
jne
idivl
(bad)  
in
jmp
push
inc
mov
push
test
test
push
imull
sbb
mul
mov
hlt    
ds
aas    
subb
mov
lret   
pop
xchg
shlb
sbb
push
jnp
inc
pop
and
push
rolb
iret   
and
inc
push
inc
dec
je
fwait
cmp
add
(bad)  
push
add
add
jae
push
cmp
cmp
das    
or
out
jl
or
mov
fstl
and
sbb
mov
iret   
sub
xchg
jae
fcomi
push
in
jecxz
push
pop
cmp
mov
push
add
add
jae
push
cmp
dec
cmp
aas    
lret   
rorl
insl
lret
add
pop
pop
sti    
into   
adc
addr16 aas 
cmp
lret
cld    
hlt    
mov
test
sbb
add
jb
mov
in
cmc    
lahf   
lret
dec
arpl
push
pop
test
sub
xor
add
inc
jne
loope
inc
pop
cmp
adc
xchg
sahf   
pop
aas    
jbe
(bad)  
aad
mov
xchg
jge
or
cs pop
scas
xor
int
jmp
jne
fnstcw
inc
lret
cs dec
ja
hlt    
inc
pop
xor
xchg
jg
add
jb
test
add
ret    
inc
lret   
in
mov
imul
jns
aam
lds
dec
push
cld    
pusha  
mov
push
mov
sub
int3   
mov
ret
stc    
(bad)  
daa    
dec
jp
cmp
stc    
je
inc
stos
mov
out
pop
mov
mov
pop
in
mov
stos
adc
or
mov
sahf   
pushf  
inc
loope
cmp
cmp
mov
xor
adc
jp
lods
mov
jae
loopne
push
xor
push
push
shl
movsb
mov
cs dec
aad
movsb
mov
push
jge
aad
sub
test
and
and
subl
lock lock jmp
loope
jp
lods
add
and
jns
push
sti    
hlt    
movsl
mov
inc
mov
xchg
and
test
dec
call
inc
xchg
popl
mov
sti    
push
sahf   
mov
mov
jnp
rol
add
scas
lods
sbb
stos
adc
icebp  
mov
nop
stos
mov
inc
mov
fistl
xorl
lret
push
fdivl
and
pusha  
aaa    
call
jge
dec
fcmove
je
loop
jle
mov
push
push
leave  
shr
dec
repnz sub
mov
(bad)  
sahf   
pushf  
xlat
lock jbe
sbb
cmp
pop
mov
shrb
lods
lds
(bad)  
cs
mov
loope
pop
mov
popw
or
add
pop
mov
push
add
fstpt
mov
xchg
aas    
jbe
mov
test
xchg
stos
adc
cli    
dec
mov
xor
outsb
fist
cmp
ret
jnp
(bad)  
inc
out
popa   
scas
mov
ret
inc
sbb
cmp
fisubr
repnz push
sub
insl
mov
in
ret    
mov
xchg
scas
out
push
and
pop
scas
pusha  
les
js
dec
mov
mov
(bad)
hlt    
fwait
mov
sbb
push
xorl
xorl
dec
mov
lcall
sub
dec
xlat
mov
dec
(bad)  
xchg
outsl
add
icebp  
fstpt
dec
dec
mov
or
pop
mov
scas
mov
or
push
popa   
cmpsb
sahf   
(bad)  
xchg
movsl
mov
jle
loop
adc
dec
jmp
arpl
pop
xchg
outsb
lds
outsb
addr16 es je
ret    
insl
fs jle
push
and
xlat
dec
scas
or
xlat
ret    
xchg
leave  
or
add
adc
shl
rorb
or
out
xlat
iret   
enter
mov
or
out
xlat
inc
add
mov
and
jmp
je
mov
and
addr16 push
jb
hlt    
mov
sub
testb
hlt    
xor
pop
or
enter
addr16 fdiv
mov
pop
pop
jl
scas
enter
jg
hlt    
xor
cmc    
lds
and
repz shr
ja
rep outsl
cmp
rolb
jle
call
mov
inc
dec
addr16 push
das    
sahf   
stc    
daa    
xchg
js
add
jnp
mov
mov
js
add
xchg
in
dec
hlt    
pop
test
aam
addr16 and
sbbl
cmp
mov
mov
pop
imul
inc
cmp
jo
shll
or
jecxz
mov
mov
(bad)  
inc
push
sti    
inc
les
adc
mov
inc
or
ja
jg
test
flds
test
jl
insl
mov
jae
dec
cltd   
mov
push
mov
cwtl   
xchg
repz scas
jns
push
mov
ret    
and
cmc    
mov
xchg
stos
loop
cmpsb
bound
push
dec
imul
cmp
sub
adc
xchg
call
inc
push
stos
iret   
pop
movsl
ljmp
iret   
pop
xchg
bound
dec
into   
mov
pop
sarb
aad
rolb
jnp
shlb
xor
popf   
xchg
dec
out
outsb
sub
xchg
mov
loop
or
jl
mov
inc
clc    
scas
daa    
cmp
push
in
je
jle
or
or
mov
loopne
xchg
insl
repnz push
sub
out
pop
outsl
ret
mov
inc
imul
sbb
bound
or
push
mov
cld    
imul
mov
mov
pop
mov
dec
xor
mov
inc
jbe
fcmovnb
mov
call
mov
push
adc
push
lock mov
repnz or
cmc    
cmpsb
movsb
(bad)  
nop
fidivrl
movsl
cmpsb
(bad)  
xor
lock
mov
mov
imull
xchg
fmul
movsl
int3   
leave  
sub
mov
or
lahf   
sarb
(bad)  
out
sahf   
push
sub
pop
sbb
adc
pop
pusha  
or
add
in
xchg
mov
cltd   
mov
mov
add
push
in
test
std    
adc
push
cmpsb
sbb
jp
or
adc
test
aas    
pop
jg
inc
push
scas
push
idivb
push
(bad)  
movsl
pop
outsl
outsl
add
mov
push
pop
aaa    
xchg
repz adc
or
fcomi
jnp
jbe
fs test
inc
addr16 push
je
jecxz
xor
push
mov
popf   
xor
ds mov
cmc    
repnz scas
cmpsb
hlt    
mov
add
xchg
jecxz
(bad)  
loop
jl
sbb
ficompl
mov
repz decl
(bad)
xor
or
or
add
in
xchg
orl
pop
lds
push
push
aad
fisttpll
jb
lock add
aad
sub
add
imul
inc
mov
jnp
sbb
js
mov
sub
inc
les
adc
mov
scas
add
(bad)  
dec
sbb
xor
pop
jecxz
pusha  
flds
sub
sbb
std    
lcall
push
sbb
aad
stos
jbe
fisubl
aaa    
xchg
jnp
aaa    
mov
cmp
push
mov
lods
(bad)  
xor
test
xchg
xchg
add
jo
cs call
out
stc    
repnz cmp
mov
dec
fidivr
add
in
push
dec
std    
jns
push
bound
lret
xor
fwait
add
arpl
sub
mov
stos
ret    
cmp
movsl
jb
lock rorb
dec
xchg
mov
(bad)  
pmaxsw
xchg
push
sbb
pop
movl
movsb
insb
out
push
fnsave
xchg
mov
jbe
scas
es mov
jle
loopne
jmp
insl
fistp
push
pop
pop
mov
xlat
add
repz push
int
jns
cmp
ret
sahf   
inc
and
and
push
pop
add
xor
sarb
in
(bad)  
jle
(bad)  
or
sarb
jmp
push
shrl
movsb
pop
popf   
inc
(bad)
in
dec
ds fabs 
add
cli    
mov
repz sbb
adc
rcll
fdivs
jne
mov
scas
mov
insl
or
mov
cmp
pop
mov
or
cmp
sti    
nop
movsl
xchg
jo
add
fiaddl
sub
out
push
sbb
cs nop
cmp
les
stc    
mov
ret    
add
and
inc
jb
loopne
imul
pop
lcall
pop
pop
and
inc
ret
nop
push
inc
(bad)  
adc
in
mov
add
loopne
retw
fimull
ret
adc
lods
adc
aam
or
and
and
cmp
lcall
mov
pop
or
dec
test
jbe
dec
push
jbe
scas
cld    
xor
fcomi
clc    
dec
movsb
jmp
out
aam
and
and
inc
pop
aad
mov
sub
gs cld 
jl
or
jmp
int3   
rcll
lret   
sarb
jne
ss
and
setae
jle
scas
(bad)  
cmpsb
outsb
cld    
jle
inc
(bad)  
stc    
jmp
out
pop
xchg
mov
mov
pop
aaa    
jp
or
loop
mov
fstp
lea
mov
fmull
lods
xor
arpl
xor
cld    
cltd   
pop
sbb
outsb
shl
faddl
or
or
sbb
(bad)  
sub
cmpsl
sti    
cli    
inc
cmc    
sub
sub
mov
in
(bad)  
jecxz
xchg
call
jnp
cmp
push
in
test
dec
or
(bad)  
push
cld    
or
faddl
aad
mov
ja
leave  
arpl
cld    
mov
shlb
lods
sbb
insb
adc
push
xlat
fdivl
inc
and
iret   
ja
and
cmp
jecxz
and
(bad)  
cs mov
push
mov
fcompl
iret   
pushf  
out
mov
test
popa   
fisubrl
push
pushf  
push
jne
push
push
cwtl   
push
sub
and
inc
iret   
es pusha 
je
(bad)  
push
iret   
das    
mov
jnp
cli    
pop
cwtl   
pop
das    
adc
test
dec
(bad)  
cmc    
xor
xchg
sarb
int
cmpsl
out
loopne
negb
inc
jnp
cmc    
mov
inc
pop
ja
dec
in
xchg
fildll
outsl
xlat
fidivr
aam
mov
push
pcmpeqd
(bad)  
movsl
fs dec
or
in
mov
mov
push
jp
mov
or
inc
jp
test
fsubs
out
mov
inc
es jae
iret   
(bad)  
push
dec
mov
fdivrl
mov
pop
movsl
cmp
pop
sarb
xor
xchg
xchg
outsb
push
lods
or
inc
out
jl
xchg
pop
sar
xor
cmc    
inc
jno
xchg
negl
jno
inc
mov
pushl
test
in
(bad)  
in
test
add
cmc    
jl
mov
pop
xor
lock jle
dec
mov
in
or
jge
pop
(bad)  
icebp  
and
movsb
hlt    
andl
jle
pop
loop
or
sub
push
push
xchg
(bad)  
pop
cmp
fildll
or
out
dec
pop
icebp  
adc
cli    
movsb
fcomps
jle
xlat
or
mov
rorb
loopne
fstpl
imul
fidivl
push
inc
jmp
pop
arpl
push
mov
cld    
or
mov
cmp
imul
mov
test
mov
repnz loopne
and
leave  
call
xor
jge
ss adc
lcall
inc
imul
sarb
xchg
inc
out
dec
fiadd
inc
iret   
mov
cli    
xor
xchg
addr16 pushf 
daa    
jecxz
jecxz
cwtl   
mov
xor
fwait
jno
cmp
hlt    
dec
pushf  
jo
push
loopne
and
(bad)  
jno
push
jns
dec
inc
xchg
cmp
jbe
xchg
sbb
stos
ficom
rorl
es mov
rolb
fistpl
or
lahf   
rcr
push
stos
addr16 or
(bad)  
sbb
xchg
daa    
inc
mov
push
jmp
arpl
rolb
fstpt
xchg
mov
jns
scas
sub
popf   
push
mov
add
mov
imul
push
cmp
add
cli    
cmpsl
lcall
scas
jae
shl
mov
mov
addr16 iret 
mov
repnz sbb
mov
xchg
(bad)  
jb
dec
fptan  
fst
addr16 jle
ret    
fcompl
jae
mov
lods
sbb
push
movsb
clc    
rclb
std    
mov
iret   
dec
stos
jno
adc
das    
data16 test
xorl
cmpsb
push
nop
mov
mov
test
mov
mov
daa    
dec
mov
jg
div
push
loope
cmp
xor
sahf   
fcmovbe
jecxz
aas    
in
mov
popf   
(bad)  
(bad)  
loopne
xchg
int3   
int
int3   
inc
pop
es xor
iret   
cli    
push
jns
sbb
push
jge
faddl
or
inc
rcll
dec
xor
inc
bound
iret   
mov
fisttpl
cmp
jge
jns
pop
inc
int
add
mov
ss dec
push
add
sarl
test
cli    
jnp
(bad)  
and
insb
inc
sbb
mov
jo
push
mov
xor
or
mov
(bad)  
jb
stc    
orl
cmp
xchg
adc
sti    
mulb
pop
sbb
xchg
je
inc
mov
and
cmp
stc    
orl
std    
push
or
mov
xchg
sar
pop
sti    
fsubrs
and
dec
mov
in
int3   
movsb
pop
lock inc
das    
scas
(bad)  
xor
loope
mov
ljmp
dec
mov
jle
and
popf   
fwait
jno
fidiv
dec
je
fsts
int3   
inc
jno
dec
jo
ljmp
add
pop
xor
fwait
add
mov
sbb
(bad)  
cltd   
mov
mov
adc
mov
fnop   
xlat
and
addl
push
xchg
push
add
adc
cltd   
into   
adc
mov
push
push
push
mov
push
clc    
adc
adc
data16 jp
repnz
lret
inc
(bad)  
cltd   
gs xor
lea
or
mov
enter
xor
xchg
jecxz
imul
push
out
cmp
test
cltd   
fsubrp
ja
outsb
dec
scas
jg
imul
xor
sub
popf   
mov
add
sbb
out
sbb
mov
add
fisubr
inc
cli    
jae
int
jle
add
out
(bad)  
mov
inc
into   
dec
aam
rorl
pop
cmc    
xchg
lods
xchg
jnp
aas    
jp
mov
(bad)  
cmp
nop
mov
xchg
jno
bound
push
jl
iret   
pop
inc
xchg
sbb
push
mov
xor
iret   
hlt    
xlat
stc    
or
icebp  
inc
xchg
test
adc
mov
jne
ja
inc
mov
test
or
insb
fisub
test
subl
insb
cmpsb
pop
out
lds
cmp
shlb
xchg
sub
and
insl
enter
ret
pop
rorl
pop
icebp  
xor
stc    
sarb
in
pop
sbb
jle
pushf  
push
jp
push
std    
or
jno
and
dec
int3   
xchg
mov
inc
aad
xor
rcr
xlat
imul
lods
fs call
xlat
cmpsl
cmp
and
xchg
daa    
loopne
aas    
in
mov
mov
jns
notb
cltd   
(bad)  
jp
lods
adc
movq
(bad)  
mov
cmp
xor
js
mov
(bad)  
ja
or
lock cmp
push
lods
es mov
dec
cmp
jb
je
cs sub
imul
lds
cltd   
cli    
cmp
xchg
mov
rorl
(bad)  
cmp
test
pop
jl
inc
jle
sarb
ljmp
mov
mov
es adc
iret   
mov
out
inc
push
dec
in
jge
mov
jge
add
pushf  
sar
fstpt
inc
and
sahf   
cltd   
(bad)  
jnp
fcoms
inc
(bad)  
xor
enter
(bad)  
icebp  
dec
xor
(bad)  
pop
inc
adc
sbb
aad
cmp
pop
lock mov
jge
add
push
sbb
daa    
and
test
adc
stos
mov
(bad)  
aam
aas    
pop
sub
push
push
adc
test
gs jg
push
push
aad
xlat
cmpsl
sar
cs cmp
or
xor
lock mov
ljmp
cmpsb
roll
notb
add
addr16
mov
ja
xor
mov
clc    
mov
in
push
mov
xchg
iret   
enter
sbb
fnstsw
adc
gs cld 
jb
das    
adc
out
insb
rclb
xchg
and
jl
pop
clc    
xor
xchg
jb
pusha  
add
call
dec
or
and
jp
and
or
pop
inc
lret
call
xchg
call
add
and
sub
pop
and
cli    
jge
xlat
inc
xchg
sub
ret
jbe
aaa    
int3   
adc
pop
ror
add
inc
dec
imulb
jp
dec
cmc    
xchg
mov
push
mov
push
mov
test
fidivl
std    
imull
daa    
les
aas    
xchg
dec
ret
jbe
xlat
pop
mov
rcl
mov
sub
dec
sub
pop
pop
sahf   
shll
hlt    
or
(bad)  
push
cmp
and
cli    
xor
jg
pop
mov
outsb
fisttpll
mov
sbb
pop
mov
dec
fwait
sahf   
pushw
in
inc
out
push
cmpsl
push
sub
sbb
cli    
or
mov
(bad)  
movsb
xchg
insl
stos
xchg
leave  
pop
inc
insl
out
and
jl
icebp  
or
add
sti    
dec
nop
fs inc
adc
pusha  
lds
das    
xor
xchg
cmp
repz xchg
pop
scas
mov
add
and
stc    
rorb
xchg
shll
mov
stc    
in
dec
mov
vmwrite
fstpt
push
sbb
test
xchg
sub
es mov
out
push
mov
gs in
mov
mov
mov
cs sbb
int3   
jl
sub
les
add
mov
ret    
fcompl
imul
in
sub
mov
icebp  
movsl
(bad)  
into   
sbb
and
adcl
int
clts   
mov
arpl
or
loope
ret
jmp
jl
stos
jecxz
xchg
(bad)  
sbb
out
loop
adc
pop
hlt    
mov
lret   
gs dec
xchg
mov
xor
mov
int3   
mov
jbe
mov
add
mov
fsts
movsb
xchg
dec
push
dec
imul
ds sar
cltd   
add
mov
enter
test
cmc    
add
push
aaa    
outsb
std    
hlt    
jle
lret
xor
xor
(bad)  
(bad)  
mov
rep outsb
arpl
mov
sbb
push
xchg
pop
sahf   
mov
cmpsl
inc
jo
push
fldenv
jne
pop
adc
inc
scas
xchg
xchg
dec
xor
in
insb
fsts
(bad)  
xchg
imul
mov
and
jmp
pop
arpl
push
mov
(bad)  
mov
(bad)  
cmp
mov
inc
imul
(bad)  
fisttpll
adc
jbe
xchg
sti    
dec
adc
pusha  
aaa    
test
lahf   
movsb
xchg
or
cmp
and
xor
aam
rclb
fadds
or
adc
cmp
mov
outsl
mov
push
dec
hlt    
or
(bad)  
mov
les
in
push
push
and
es
dec
xor
(bad)  
xchg
xchg
aas    
cmp
push
mov
sub
paddusb
push
and
cmc    
outsl
cmp
je
mov
and
insl
pop
pusha  
test
dec
mov
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
pop
je
inc
outsb
push
dec
mov
arpl
mov
sti    
inc
mov
xlat
movsl
fsubl
adc
into   
scas
test
popa   
jno
pop
mov
adc
cmp
(bad)  {%k2}{z}
jmp
in
pusha  
(bad)  
pusha  
jns
test
aam
movsb
jl
xor
pop
pop
and
sysenter 
dec
sti    
das    
lea
push
xchg
xor
mov
or
push
inc
xlat
sarl
clc    
add
xlat
inc
loop
andb
mov
dec
mov
rcrl
arpl
lods
dec
sub
xor
adc
mov
add
xchg
lods
movsl
mov
jmp
inc
pop
jne
ds test
adc
inc
idivl
xchg
test
ret
sub
lret   
push
ljmp
(bad)  
mov
inc
sbb
push
push
mov
rcll
add
inc
lods
sub
or
mov
or
je
sub
pop
repz je
adc
lcall
adc
stos
dec
cmpsb
adc
push
inc
xchg
stc    
jnp
(bad)  
mov
lahf   
or
aaa    
aas    
mov
inc
popa   
push
pop
rclb
stc    
data16 jb
xchg
add
(bad)  
out
xlat
iret   
fdivl
adc
iret   
fdiv
mov
outsb
jl
mov
xlat
iret   
jl
push
xlat
iret   
fdiv
mov
xlat
dec
sbb
mov
out
xlat
push
dec
xor
out
xlat
iret   
fdivl
jmp
push
paddusb
mov
adc
out
xlat
iret   
clc    
nop
pushf  
idivl
iret   
fdiv
or
xor
(bad)  
out
mov
(bad)  
mov
iret   
(bad)  
inc
jns
add
(bad)  
xchg
push
aad
dec
sub
out
xlat
jge
jbe
fdiv
mov
cmp
lret
mov
adc
iret   
pop
test
leave  
jne
xchg
mov
(bad)
cltd   
push
shl
xlat
repz xchg
aas    
out
repnz shll
adc
repz cmp
cs lea
dec
shld
cli    
adc
loope
in
dec
popa   
xor
sub
xchg
aad
xor
nop
inc
cs in
test
(bad)  
mov
push
sub
sbb
mov
jnp
add
adc
xchg
mov
into   
cmp
sti    
xchg
sub
scas
test
test
cmp
fstl
xor
adc
aas    
adc
neg
xlat
ret    
jp
ret    
fimull
mov
mov
xor
jnp
daa    
dec
arpl
and
push
jb
xor
mov
inc
shrl
sub
jecxz
sub
pop
push
sbb
movsl
xor
data16
dec
or
mov
rolb
fwait
into   
andl
cmp
lock fisttpll
cltd   
cmp
lret   
xchg
jne
jbe
pop
and
jl
popa   
xor
iret   
dec
std    
mov
(bad)  
cli    
push
shr
fstpt
ds aam
(bad)  
loope
pop
sbb
mov
daa    
in
cmp
inc
sub
ds push
test
cmp
out
inc
mov
out
sbb
sarb
jb
sbb
cmpsb
xchg
bound
jns
mov
aam
jge
xchg
(bad)  
pop
push
and
jle
lods
in
shrl
mov
mov
dec
mov
and
and
mov
aas    
(bad)  
(bad)  
ja
and
fcmovbe
(bad)  
out
or
(bad)  
lods
pop
cmp
and
int
call
out
mov
push
push
aaa    
push
std    
mov
cld    
out
mov
or
cmc    
cld    
mov
adc
hlt    
scas
ljmp
sub
daa    
xchg
fsts
icebp  
pop
push
scas
ljmp
bound
add
jecxz
imul
test
loop
cmp
jle
lcall
add
js
or
jmp
cmpsl
fnstcw
sub
cmp
mov
inc
push
jno
std    
and
push
scas
fisttp
push
xchg
mov
loop
fnstsw
jl
js
cmpsb
inc
xor
xchg
in
dec
and
xchg
or
dec
mov
daa    
sbb
popa   
xor
enter
cmc    
mov
daa    
(bad)  
mov
in
pop
in
repz xchg
mov
fdiv
xchg
in
adc
xchg
(bad)  
adc
outsb
inc
inc
cwtl   
mov
(bad)  
xor
adc
out
cwtl   
sub
push
clc    
hlt    
xor
pop
(bad)  
std    
aas    
push
push
testb
data16 jg
xchg
fimul
aaa    
es scas
mov
mov
cld    
fldenv
lret
ret
mov
pop
jb
sbb
sti    
pop
cld    
lods
jo
mov
scas
aam
mov
(bad)  
(bad)  
nop
je
ret
add
movsl
dec
mov
xor
pop
jecxz
repnz push
sbb
or
scas
jbe
xchg
into   
jp
push
pusha  
es sub
mov
push
stos
xchg
cmp
jno
adc
testl
jb
fld
popf   
jge
aas    
stc    
pop
fwait
cwtl   
lods
movaps
les
int3   
cld    
xchg
inc
or
int3   
test
nop
aaa    
jns
rorb
dec
mov
sub
fnop   
adc
rorb
(bad)  
dec
sbb
lds
ret
ljmp
in
sbb
inc
lret
push
lods
insl
shrb
jp
jb
and
mov
adc
inc
lret
push
lods
in
shrb
addr16 xchg
lods
int3   
jae
xor
ret
inc
sbb
inc
arpl
dec
pop
test
xor
jae
or
mov
add
inc
stos
jnp
mov
inc
push
sahf   
and
stc    
cmp
sbb
dec
fdecstp 
in
push
stc    
inc
mov
scas
aas    
pop
mov
push
movsl
scas
pop
outsb
(bad)  
ja
(bad)  
add
xchg
out
pushf  
push
in
sub
xchg
pop
(bad)  
loope
stc    
adc
push
pop
rcrl
dec
ljmp
mov
cld    
dec
sbb
jg
xor
mov
stc    
sub
pop
fwait
stos
adc
gs cld 
sub
mov
inc
dec
mov
push
add
popf   
bound
fsubl
adc
xchg
dec
add
push
shlb
mov
mov
mov
jae
mov
test
sahf   
jb
cmp
push
add
arpl
sub
sti    
pop
cld    
lods
jb
inc
arpl
jecxz
in
mov
movsb
mov
out
or
data16 aaa 
insb
cmp
adc
test
hlt    
popf   
gs cld 
aaa    
xchg
out
sub
push
sub
mov
dec
and
je
inc
fmuls
adc
fldt
pop
and
mov
mov
aam
(bad)  
mov
mov
outsl
adc
inc
xchg
addl
fcoml
and
test
addb
push
ljmp
mov
cmp
es dec
xor
push
movsb
mov
mov
daa    
(bad)  
(bad)  
insb
popf   
jmp
jle
add
mov
mov
push
xchg
fstl
test
arpl
mov
pop
mov
arpl
lcall
imul
inc
xchg
or
push
jg
loop
jns
pop
pop
xor
lock ret
mov
adc
sbb
dec
test
pop
int
sbb
mov
sbb
stc    
xchg
cmp
adc
outsb
outsl
xor
popf   
mov
popa   
ja
test
shrb
(bad)  
int
mov
jb
pop
or
or
pop
jl
out
mov
roll
adc
sub
inc
rol
xor
xchg
and
out
xor
scas
dec
adc
(bad)  
leave  
mov
jp
popf   
pop
in
es pop
xchg
(bad)  
cmp
cld    
aas    
arpl
repz jle
iret   
pop
jnp
mov
inc
xchg
dec
leave  
mov
adc
aas    
push
pop
loopne
lret   
mov
inc
mov
aam
divl
shl
xor
(bad)  
in
mov
mov
jae
clc    
sbb
pushf  
xor
repz pop
mov
cmpb
adc
sbb
lock fcomps
push
jno
shrl
(bad)  
aad
xor
sbb
pop
cmpsb
cs or
out
jmp
loopne
roll
mov
mov
je
imul
pop
es or
xchg
push
rcrb
mov
test
mov
pop
or
xlat
int3   
push
xchg
lea
cmp
sti    
push
stos
in
add
loop
xchg
and
outsl
jbe
int3   
sub
mov
mov
and
hlt    
mov
repnz adc
sub
imull
mov
ficoml
add
jb
js
mov
xchg
dec
cli    
add
sbb
addr16 jmp
ss aad
clc    
fadd
add
rorb
cmp
cmp
and
sbb
dec
jl
cmp
mov
pop
out
mov
inc
cld    
popa   
jmp
mov
xchg
push
fmul
movsb
push
scas
jmp
nop
cli    
shl
jno
jle
push
mov
aas    
std    
mov
lock add
sub
fdivrs
or
ss pop
pop
adc
scas
jle
shr
xchg
fwait
and
or
hlt    
mov
cmpsb
or
mov
mov
out
rcrl
out
hlt    
xchg
bound
rep movsb
push
scas
jmp
sbb
mov
push
jbe
sbb
inc
add
and
fsubp
arpl
xlat
das    
xchg
cmp
pop
add
je
jnp
verr
insb
hlt    
or
add
mul
xlat
das    
xchg
cmp
pop
add
(bad)  
mov
mov
in
push
bound
inc
mov
cmp
shl
ss push
mov
test
jbe
call
mov
(bad)  
fmul
int
sti    
xchg
xchg
push
xor
push
ss in
add
clc    
sbb
pop
or
mov
add
in
nopl
pop
inc
jae
sub
icebp  
mov
test
mov
(bad)  
cs
test
mov
lcall
sahf   
decb
sub
dec
inc
xchg
pushf  
loopne
daa    
xor
jbe
(bad)  
jmp
jp
mov
je
clc    
sysexit 
mov
addr16 jns
xchg
lret   
pop
rclb
fs push
xor
push
ss in
mov
push
or
and
pop
(bad)  
hlt    
rcll
rcr
js
and
imul
mov
mov
xchg
gs xor
int
jle
out
hlt    
iret   
in
xlat
lret
push
lret
xchg
add
das    
call
mov
jecxz
inc
fidivr
addl
pop
lcall
loopne
imul
iret   
pop
(bad)
xor
out
aam
lds
ss cmp
fdivs
mov
daa    
xor
popa   
stos
stos
dec
adc
pop
cmp
nop
aam
jg
jb
daa    
ja
add
or
je
sub
into   
lret   
cmp
xchg
pop
pusha  
push
lock mov
insl
into   
addl
mov
push
aaa    
in
cmpsl
xchg
xor
inc
insl
scas
sub
fldt
sbb
add
jl
mov
stos
cmp
dec
pop
icebp  
lret   
add
mov
test
pop
push
dec
lahf   
cwtl   
push
add
pushf  
mov
or
lods
dec
ret
fdiv
xor
ja
iret   
fdivrl
into   
outsb
fdivs
mov
sbb
inc
pop
cmpsb
ss add
pushf  
mov
push
sub
loop
xor
xlat
inc
or
fmull
and
sti    
pushf  
cmp
out
nop
les
mov
xorb
mov
out
lods
push
cwtl   
sti    
les
sbb
sub
fidivr
addl
cmp
ffreep
fwait
jge
outsb
cs xor
dec
pop
xor
jg
mov
lret   
leave  
sbb
push
adc
stos
mov
sub
les
(bad)  
sub
jle
sub
add
aam
fnstcw
jbe
cmp
lods
aam
inc
loopne
pop
pushf  
test
dec
arpl
or
mov
jb
jle
mov
fs
ret
arpl
cmpsl
(bad)  
mov
jg
arpl
idivl
sbbl
push
pusha  
and
xchg
orl
sbb
shrl
cmpl
cmpsl
outsb
adc
push
aaa    
in
out
pushf  
loopne
daa    
xor
push
aam
idiv
lret   
inc
push
in
push
xor
dec
xchg
cmp
add
insb
test
mov
mov
ret    
pop
xchg
xchg
cmp
pop
add
push
lock enter
ja
push
or
dec
mov
push
mov
push
add
mov
shr
jbe
sbb
aam
pop
pop
into   
dec
add
call
lcall
out
fwait
sti    
cmpsb
or
mov
dec
pop
outsl
fdiv
xor
xchg
(bad)  
mov
pushl
mov
cmpsb
add
aas    
or
mov
iret   
sbb
fcompl
push
sub
loop
xor
xlat
inc
or
(bad)  
rorb
pushf  
cmp
out
nop
les
mov
xorb
mov
out
lods
gs jo
xor
aas    
jp
mov
lds
es inc
cmp
int
in
add
ds cli 
pop
loop
xor
sub
pushf  
popf   
or
push
dec
push
xlat
iret   
pop
xor
andl
mov
loop
and
adc
push
xchg
pop
or
fisttpl
iret   
push
mov
shl
mov
mov
add
mov
test
pushf  
nop
add
incl
rdmsr  
(bad)  
out
sub
loop
xor
xlat
inc
or
fdivr
fsubl
sti    
pushf  
cmp
out
nop
les
mov
je,pn
cmpl
and
sti    
(bad)  
hlt    
push
movsb
shrl
(bad)  
mov
mov
test
mov
mov
mov
add
(bad)  
out
nop
les
xor
enter
dec
mov
mov
ror
data16
repz scas
lea
push
pop
push
add
leave  
icebp  
pop
(bad)  
mov
pop
cwtl   
(bad)  {%k2}{z}
out
fidivl
jno
mov
jle
iret   
pop
mov
fdivrl
mov
adc
leave  
mull
orl
sub
mov
outsb
shr
popf   
(bad)  
data16 rcr
enter
mov
hlt    
dec
mov
shl
inc
and
fisubl
jb
hlt    
mov
test
dec
push
jl
(bad)  
addr16 adc
cmp
lret   
bound
cli    
(bad)  
insl
(bad)  
jnp
add
jp
xor
adc
out
int3   
add
lret   
stos
roll
leave  
or
pushf  
les
jg
adc
stos
(bad)  
and
(bad)  
pop
mov
data16 stc 
adc
add
adc
scas
or
and
cmc    
rcrb
mov
int
mov
inc
movsl
and
or
mov
bound
adc
xchg
pusha  
pop
mov
fidivr
add
pop
repz cmpsl
call
je
pop
lods
js
(bad)  
in
pop
jne
push
inc
mov
xor
int
ds icebp 
or
(bad)  
ss or
movsl
add
dec
gs ss and
pmuludq
add
mov
flds
mov
mov
jmp
pop
inc
jge
inc
fldenv
iret   
jbe
aam
(bad)  
xor
and
rcll
add
mov
out
xchg
xor
loop
out
imul
sti    
jmp
sub
lahf   
outsb
pop
(bad)  
cmpsb
xor
pop
sbb
int
pop
adc
inc
mov
fisttp
insl
inc
addl
inc
mov
fdivrl
jb
push
mov
jo
pop
pmaxsw
xchg
mov
or
jne
clc    
pop
or
mov
jbe
push
lods
xorb
dec
mov
cmp
cmpsl
xor
inc
lret
cli    
jbe
rcr
mov
mov
out
test
mov
push
ret    
cmp
pop
add
scas
mov
mov
jmp
mov
cwtl   
jecxz
jp
mov
mov
adc
add
xchg
sub
mov
sbb
mov
faddl
out
into   
add
(bad)  
rcrl
mov
push
hlt    
vpslld
mov
scas
add
adc
mov
jecxz
cli    
push
jmp
mov
pop
adc
imul
jno
xchg
ficompl
inc
adc
or
sbb
sub
xchg
rclb
cmc    
(bad)  
pusha  
js
mov
mov
aas    
std    
mov
lock call
mov
dec
clc    
lds
fdivp
data16 fstpl
movsl
outsb
cmp
es data16 cmp
push
out
cld    
jp
(bad)  
mov
outsb
cmpl
test
mov
jmp
jnp
out
sbb
mov
(bad)  
xor
jo
mov
mov
jno
and
sub
mov
out
cwtl   
push
ficompl
(bad)  
mov
out
movb
pushf  
dec
push
lahf   
sbb
outsb
xchg
mov
in
scas
(bad)  
jo
jo
icebp  
scas
mov
pop
fcmovb
in
xrstors
call
das    
sub
or
(bad)  
jo
or
ja
daa    
mov
dec
inc
pop
jg
into   
lods
mov
addl
or
ret
sbb
aam
pop
push
aaa    
in
cmc    
jp
jnp
imul
(bad)  
ja
out
int
in
xor
nop
(bad)  
mov
rorl
mov
data16 add
sbb
dec
mov
imul
cmpsl
das    
fidivrl
mov
fwait
or
mov
push
(bad)  
add
jge
cmp
and
daa    
(bad)  
xchg
push
push
mov
jnp
pop
sub
add
jne
(bad)  
jg
lahf   
push
push
out
add
add
pop
mov
mov
or
inc
dec
ljmp
mov
outsl
cmp
mov
cmp
jl
xlat
pop
(bad)  
jo
push
push
adc
popf   
std    
aas    
stc    
dec
ret    
std    
(bad)
(bad)  
xor
mov
cmp
repz aad
adc
push
inc
xchg
jns
mov
mov
inc
push
add
int3   
rclb
sbb
mov
enter
sbb
loopne
jns
lret
xor
or
js
(bad)  
loopne
or
xchg
cmp
dec
inc
jo
pop
cmp
or
sub
pop
inc
call
fsincos 
inc
aas    
xor
or
call
mov
nop
stos
mov
pop
pop
mov
imul
add
push
mov
jmp
pop
repz xchg
or
cmpl
ret    
loop
add
cltd   
cld    
das    
jno
lods
dec
sub
(bad)  
orb
mov
lret
pop
rcrl
mov
or
pop
mov
mov
add
add
cltd   
lock add
cwtl   
(bad)
rorb
mov
out
push
fisub
test
pop
jge
outsb
or
pop
mov
jne
cmp
cmp
sti    
mov
cli    
es inc
sbb
pop
xor
(bad)  
shrb
in
fiadd
xchg
jecxz
fldenv
mov
mov
movsb
negb
jle
daa    
int
dec
(bad)  
(bad)  
divl
insb
repnz fsubl
mov
xchg
dec
das    
push
daa    
repz push
iret   
mov
mov
push
push
rol
add
and
and
sub
jg
into   
xchg
and
imul
pushl
mov
ret
sbb
stos
rcrb
sub
push
mov
hlt    
push
pop
xchg
pop
ret    
ret
lret
mov
mov
or
push
stos
testb
sub
sti    
mov
testb
jnp
dec
test
mov
jns
or
rol
ss sar
inc
mov
mov
cmp
dec
push
ficomp
pop
fwait
xor
cmp
mov
mov
and
jne
hlt    
popa   
popf   
cmpsl
dec
cmpl
fmull
inc
add
addr16 fcomp
daa    
dec
(bad)  
divl
adc
jl,pt
mov
out
sub
jecxz
xor
dec
out
inc
inc
push
xchg
cmp
roll
insb
repnz add
subl
mov
arpl
addr16 mov
daa    
jecxz
xor
cmp
inc
inc
cmpsl
cmp
xchg
aad
out
lock in
mov
or
sbb
and
leave  
insl
jecxz
mov
inc
mov
xlat
inc
mov
sub
mov
daa    
mov
mov
adc
pop
(bad)  
pop
sbb
adc
push
cli    
cmc    
xlat
add
jbe
jle
add
push
jg
adc
(bad)  
std    
clc    
xor
push
pop
(bad)  
pop
sbb
adc
push
cli    
cmc    
xlat
add
jbe
jle
add
push
jg
mov
fwait
mov
(bad)  
sub
add
push
in
inc
xchg
add
xchg
ret
pop
enter
outsl
outsb
mov
scas
cmp
inc
mov
repnz adc
dec
jg
cmp
outsb
sub
ret    
pop
cmp
fxch
scas
jo
push
add
clc    
pushf  
jecxz
xor
xor
in
xchg
dec
pop
inc
int3   
jg
xor
verw
jp
adc
mov
dec
xchg
or
cmc    
mov
inc
jns
fimull
mov
mov
mov
or
int3   
mov
inc
jns
rol
in
add
jmp
push
adc
pop
and
push
xchg
jge
and
test
dec
jecxz
inc
popf   
mov
stos
aam
mov
push
xlat
jmp
cmp
add
pushf  
imulb
daa    
push
mov
and
xor
jl
push
lods
push
fstp
cmp
adc
pop
mov
push
dec
inc
dec
outsl
inc
repz add
lcall
pushf  
adc
push
jb
inc
and
(bad)  
fild
push
data16 pushw
rcl
jne
mov
stos
fist
lods
sti    
mov
push
fstpt
xlat
cmpsl
sbb
jo
mov
cmp
outsl
cmpsb
xor
cwtl   
push
mov
inc
mov
js
jb
jbe
scas
and
jbe
jae
add
mov
inc
inc
push
adc
lret
jge
es mov
rcr
addr16 xchg
and
popf   
dec
xchg
pop
inc
mov
push
addr16 push
dec
lret   
mov
nop
mov
dec
mov
pop
cltd   
jle
lret   
jg
out
mov
and
adc
(bad)  
test
xor
adc
imul
mov
inc
cli    
mov
imul
add
rorl
inc
lods
js
(bad)  
subl
jns
mov
(bad)  
aaa    
out
adc
mov
daa    
(bad)  
test
adc
or
lahf   
rcrb
lods
sarl
stos
aas    
cs imul
mov
sbb
into   
inc
je
xchg
push
adc
mov
popa   
fiadd
add
lea
(bad)  
je
sar
cltd   
mov
or
add
mov
xlat
rclb
adc
dec
jg
sbb
jle
bound
adc
fcomi
inc
xchg
jp
stc    
sahf   
clc    
mov
push
pop
add
(bad)  
lock
sub
aam
dec
adcl
dec
stos
sub
mov
test
push
jge
test
aaa    
pushf  
scas
lock add
pop
dec
push
lds
mov
sub
xor
push
jge
scas
push
or
fdivrp
mov
mov
xchg
xchg
in
inc
int
mov
add
add
lods
mov
push
cmp
push
sub
es ret
ljmp
ljmp
es out
xor
inc
cmp
push
movsl
push
orb
pop
push
mov
fwait
pop
cmp
cmp
shl
or
addr16 pop
mov
xchg
xchg
sub
mov
pop
xor
push
adc
mov
add
or
inc
adc
adc
hlt    
xchg
dec
dec
imul
ret    
imul
scas
leave  
hlt    
cs pop
lds
inc
add
int
enter
add
mov
lret
(bad)  
and
jg
mov
aaa    
xchg
iret   
pop
test
(bad)  
push
aad
inc
cmpsb
aam
popf   
fcoms
scas
jno
mov
sub
fiadd
setp
push
dec
pop
jae
fbld
pop
mov
push
cmp
mov
ja
push
or
push
and
inc
daa    
out
xchg
or
jae
push
cmp
shl
not
sbb
mov
sub
aaa    
and
popa   
(bad)  
out
xlat
pop
xchg
push
jge
out
lods
mov
fildl
push
xchg
rcr
mov
dec
pop
inc
xor
cmpsl
xor
fildll
or
fadds
mov
int
adc
jecxz
add
inc
ss
lahf   
adc
cmpsb
imul
mov
icebp  
mov
aaa    
(bad)  
sub
inc
mov
loope
or
mov
sub
pushf  
mov
sbb
loop
inc
pop
dec
dec
add
lahf   
dec
mov
subl
xor
or
mov
mov
ss jae
cmp
mov
mov
jbe
jno
mov
and
mov
nop
(bad)  
out
jl
out
lods
aaa    
add
dec
mov
lock xchg
and
out
push
dec
jae
je
lods
push
xchg
dec
push
faddp
icebp  
dec
jo
into   
pop
aad
and
sub
cmp
or
bswap
push
lock mov
pop
jno
push
jno
cmpsl
stos
inc
add
into   
insl
stos
xchg
xchg
repnz out
sarl
cmpsl
jbe
lret
mov
sub
cmpsl
push
fcoms
pop
mov
xchg
cmp
aas    
mov
push
push
add
adc
fdivrl
pop
lods
xchg
lret   
jns
outsl
daa    
xlat
push
fnstenv
mov
fisubr
(bad)  
jns
shlb
sub
pop
negl
in
mov
dec
lods
dec
mov
das    
loope
jmp
xchg
xorl
popf   
ljmp
hlt    
or
sbb
sarl
nop
dec
mov
pop
call
sbb
xchg
push
(bad)  
adc
insl
pop
mov
xchg
mov
(bad)  
jbe
fs xchg
lods
and
pop
mov
jp
loop
repz dec
popf   
sti    
loope
pop
inc
or
pop
mov
call
inc
scas
fadds
mov
inc
jle
loopne
ret
mov
pop
sbb
dec
call
stos
sub
adc
xchg
fwait
xor
cmp
inc
mov
sub
xlat
xchg
xlat
adc
(bad)  
xlat
in
add
add
push
int
popf   
insb
gs mov
lods
pop
jle
xor
aad
es mov
sub
iret   
jg
or
mov
gs aas 
ret
sub
pop
fs add
enter
jne
fs dec
es
mov
(bad)  
sub
jl,pn
out
(bad)  
test
pop
fcomps
xchg
jmp
inc
cltd   
sub
les
pop
sbb
idivb
(bad)  
flds
arpl
aad
int
mov
push
out
mov
xchg
mov
aam
sbb
in
bound
lahf   
scas
pop
mov
call
subl
jmp
lds
xchg
test
jg
add
mov
add
pop
ret
and
sbb
out
xlat
mov
mov
cld    
inc
sub
ds inc
insb
mov
stos
mov
pop
push
jge
fsts
pop
es test
imul
and
es rcl
mov
sbb
es in
std    
jg
imul
mov
cli    
fnsave
lods
xlat
iret   
fadd
js
(bad)  
int
out
lock push
stc    
sarb
aam
aas    
pop
or
imul
mov
hlt    
mov
es lret 
mov
icebp  
(bad)  
fcom
ja
pop
aam
hlt    
aaa    
(bad)  
dec
test
lods
dec
arpl
adc
es out
out
add
xor
or
jo
pop
pop
rcrb
and
xchg
in
add
jmp
push
adc
pop
and
push
xchg
jge
and
test
dec
loope
inc
popf   
mov
stos
aam
mov
push
xlat
jmp
cmp
add
pushf  
push
scas
aas    
and
mov
fsubl
push
lods
mov
imul
cs mov
jecxz
iret   
aas    
sti    
add
lods
jo
jae
xchg
jge
je
push
out
addr16 dec
movsl
mov
cwtl   
loope
mov
mov
insl
pop
dec
rcr
cltd   
inc
fwait
sub
mov
and
ss mov
sbb
stos
xor
add
sub
push
icebp  
es ret
xchg
and
jne
test
jns
insb
pop
dec
mov
imul
idivb
arpl
in
clc    
xor
add
and
ret
inc
cld    
jno
fs mov
cmpb
mov
(bad)  
xchg
xchg
sbb
lahf   
fildl
or
mov
fnstsw
lock sbb
jmp
fadds
stc    
shl
sbb
inc
inc
add
into   
xlat
adc
pop
(bad)  
mov
inc
clc    
xchg
mov
(bad)  
push
inc
shl
ja
sub
mov
ret
flds
xor
or
push
fwait
pop
add
and
andl
push
or
mov
xchg
sar
dec
(bad)  
aad
lods
aad
xchg
and
je
dec
jmp
sub
movsb
pop
lock inc
das    
scas
(bad)  
xor
loope
mov
sbb
pop
mov
aaa    
cmovp
stos
es pop
pop
or
and
stc    
hlt    
jne
rol
cmp
xchg
sbb
ss shl
movsl
popa   
aaa    
cltd   
adc
sub
(bad)  
leave  
adc
xor
sub
bound
xchg
and
sahf   
mov
mov
in
pop
xchg
dec
dec
ja
or
sti    
dec
jl
jg
jb
inc
push
dec
clc    
pop
add
out
hlt    
mov
cs xchg
inc
mov
fs dec
imul
adc
adc
outsl
mov
add
cwtl   
cs aam
inc
pop
fidiv
mov
notb
xchg
add
dec
jle
xor
dec
sbbl
cmpsl
jo
lahf   
addr16 stc 
addr16 xor
aam
hlt    
iret   
pop
nop
jle
mov
xor
push
xor
mov
(bad)  
mov
movl
fdivr
sbb
pop
cli    
icebp  
dec
outsb
pop
iret   
and
pushaw 
or
(bad)  
xor
out
jnp
out
pop
pop
inc
add
ja
pop
test
gs mov
enter
inc
dec
fistpl
mov
or
pop
xor
addb
mov
enter
test
les
imulb
mov
fs cld 
add
aas    
jbe
mov
xor
or
imul
jle
(bad)  
stos
ja
test
xchg
pusha  
pop
pop
sbbl
mov
outsl
nop
jle
mov
xor
push
xor
mov
(bad)  
mov
movl
fdivr
or
or
subb
aam
jbe
lret   
or
(bad)  
stc    
add
mov
movsl
bound
jbe
data16 aas 
popf   
stos
scas
fadd
jns
repnz adc
dec
jg
cmp
(bad)  
ss mov
push
pop
inc
scas
add
jns
cmp
jnp
add
sahf   
mov
je
pusha  
push
(bad)  
ficompl
aam
push
cmp
dec
shr
or
mov
and
and
call
xchg
mov
xor
sbb
outsl
jb
xor
cmpsb
in
dec
lret   
enter
aad
inc
jle
fwait
mov
les
test
stos
mov
out
cmp
mov
je
std    
or
lret
repz jp
repnz mov
pop
or
xchg
sub
xchg
pop
arpl
jle
jnp
mov
cld    
sbb
inc
roll
and
in
scas
xchg
push
imul
sbb
mov
sti    
int
in
sbb
adc
sar
jno
push
mov
lea
xchg
(bad)  {%k2}{z}
(bad)  
xchg
cmp
aaa    
or
les
cmp
clc    
adc
pop
addr16 mov
push
xchg
in
or
jbe
or
mov
bound
adc
rorl
aaa    
inc
mov
mov
fistpl
cmp
add
lods
lock push
xor
addl
test
cld    
dec
mov
mov
sub
add
jb
cmp
aad
dec
jge
dec
fdivl
shlb
inc
jl
pop
mov
mov
cmc    
pop
lret
push
sbb
mov
fcompl
faddl
sub
adc
movl
rolb
cmpsl
iret   
mov
stos
fiaddl
daa    
jb
clc    
loope
outsb
adc
mov
pop
lock
jmp
lret
shlb
pop
hlt    
leave  
xchg
mov
lret   
cmp
mov
push
dec
lods
ret    
jle
imul
aaa    
fwait
push
lret
data16 faddl
push
xor
pop
test
mov
xchg
mov
popl
push
lds
outsl
(bad)  
hlt    
mov
imul
and
ljmp
sub
aam
xchg
stos
adc
gs cld 
sub
lods
(bad)  
sub
or
push
(bad)  
cld    
gs daa 
xor
lock jns
call
loop
jnp
sub
or
xor
pop
dec
je
mov
push
xchg
add
pop
out
daa    
lea
sti    
mov
push
call
and
xchg
lock adc
lcall
pop
xor
xor
sub
fdivp
test
sbb
push
aaa    
andl
mov
mov
out
test
cmp
add
into   
dec
stos
pop
xor
aaa    
dec
ror
stos
and
idiv
mov
lods
outsb
pop
or
pushf  
mov
jne,pn
scas
mov
sbb
hlt    
call
push
dec
shll
cli    
push
mov
cmp
xchg
jae
xchg
fwait
in
pop
(bad)
fisubr
jge
enter
xchg
mov
daa    
push
cmc    
xor
into   
fildl
clc    
mov
in
insb
(bad)  
out
nop
les
push
aas    
xorl
xor
cmpsb
pop
dec
jg
mov
popa   
test
push
cmc    
das    
or
mov
xchg
push
push
jmp
fiadd
data16
xor
stos
fwait
(bad)  
sub
push
ds xor
insb
sbb
cmp
stos
out
sbb
les
xor
pop
cmc    
mull
lahf   
jmp
pop
fildll
frstor
daa    
imul
out
aaa    
xchg
lcall
xchg
data16 sarb
lret
rep movsb
insb
xor
pusha  
mov
push
or
enter
mov
or
xor
cmp
add
mov
in
repnz scas
mov
clc    
ror
fildll
jae
dec
push
into   
mov
cmp
gs or
pushf  
sbb
sub
or
cwtl   
ret
mov
hlt    
shr
fmull
xor
subl
popf   
hlt    
aad
mov
xchg
dec
inc
push
(bad)  
and
repz sahf 
outsw
jecxz
pushf  
jb
inc
dec
cld    
sti    
push
ret
dec
out
mov
movsb
test
lret
cmpsl
iret   
push
mov
mov
gs cld 
sub
lods
ret    
aad
xchg
jmp
(bad)  
out
mov
sti    
xchg
(bad)  
fdivrl
sti    
fdiv
pop
dec
jp
loope
dec
ja
cs fs ja,pn
cmc    
(bad)  
mov
pop
bound
icebp  
jmp
repz dec
add
mov
xchg
lret   
sbb
sub
add
pop
lds
sbb
imul
mov
rorl
mov
jecxz
ret
into   
pop
adc
xor
cmp
outsb
repz rorl
movsl
out
mov
clc    
insl
fs mov
push
cmpsb
push
mov
jl
inc
nop
fidivr
mov
je
mov
xchg
add
pop
dec
adc
inc
sti    
rdpmc  
jp
sub
dec
(bad)
push
ss pop
loopne
mov
mov
and
pushf  
mov
imulb
jmp
or
mov
imul
add
repz pop
sub
stos
aaa    
mov
mov
(bad)  
addr16 pop
out
enter
(bad)  
rolb
and
repz pop
dec
(bad)  
cmp
jmp
sbb
xchg
lret
lods
dec
jb
sbb
push
inc
inc
sti    
aaa    
pop
fs enter
ss pop
dec
xchg
jp
into   
xlat
(bad)  
(bad)  
mov
lret   
and
test
jl
shrl
push
lret   
ds pop
into   
mov
push
cld    
mov
jb
insb
mov
and
leave  
ss push
lret
fistpll
xorl
test
pop
mov
(bad)  
in
pop
incb
jmp
leave  
ss push
lret
jne
add
lcall
xchg
jecxz
shrl
add
lcall
xchg
aam
dec
test
xchg
lods
jp
outsl
movsl
push
bnd jge
jno
bound
inc
jmp
test
jae
outsb
or
sub
mov
orl
mov
xchg
dec
sbb
sub
push
aas    
adc
add
test
mov
leave  
ss test
pop
mov
sub
inc
mov
imulb
dec
mov
jb
pop
add
(bad)  
fldcw
xchg
test
(bad)  
inc
mov
adc
pop
inc
test
aam
sub
pop
pop
and
mov
bound
mov
jo
mov
(bad)  
cmp
pop
lcall
push
dec
icebp  
scas
lahf   
jne
iret   
xchg
push
dec
out
inc
hlt    
mov
loope
dec
js
push
test
push
xchg
xchg
adc
in
dec
fs cmp
movsl
scas
ja
out
lea
mov
sub
insb
hlt    
add
ss pop
or
mov
cmpsb
pusha  
movsbl
inc
mov
push
ret    
xchg
adc
cld    
dec
movsb
fwait
jecxz
xchg
or
inc
lret   
xchg
inc
xor
push
xor
cmpsl
mov
pop
add
cwtl   
loopne
enter
inc
cltd   
dec
kmovd
and
adc
add
inc
cltd   
leave  
stos
mov
inc
cwtl   
cli    
sub
dec
sti    
push
and
popf   
ds popf 
gs sti 
in
mov
addl
push
adc
push
jl
fwait
or
xor
or
out
mov
out
lret   
mov
adc
(bad)  
icebp  
aam
push
mov
icebp  
aas    
icebp  
scas
shll
xchg
and
lahf   
loope
ret    
or
(bad)  
mov
aam
push
gs cmovns
(bad)  
(bad)  
mov
leave  
inc
jo
pop
dec
imul
hlt    
mov
(bad)  
mov
loope
xchg
jg
movsl
dec
xchg
icebp  
dec
popa   
mov
mov
sbb
into   
in
js
(bad)  
mov
arpl
sbb
sahf   
or
dec
ret
dec
xchg
cmp
adc
cmp
lcall
mov
out
addr16 sbb
jge
mov
sarl
call
repnz mov
daa    
adc
mov
and
mov
fcompl
ret
repnz inc
sbb
lret   
inc
pop
lods
push
scas
in
sub
mov
aam
fldcw
aas    
mov
test
pop
in
xor
pop
xchg
in
les
mov
or
flds
mov
imul
dec
scas
notl
pop
adc
inc
lret
xorb
out
push
mov
push
cmp
frstor
lods
cs and
pop
loope
shll
ja
dec
stc    
jo
test
cmp
xchg
push
jp
sbb
mov
in
dec
mov
not
cmp
divl
add
sbbb
cmp
cmp
jne
stos
mov
mov
fist
pop
lock xor
in
in
xchg
pop
jnp
xchg
movl
mov
pop
mov
jp
fisttpl
(bad)  
sub
jp
mov
jg
mov
call
jns
inc
push
cmp
push
(bad)  
push
mov
fcomps
sub
fdivr
add
cmp
or
mov
mov
pop
mov
gs jmp
dec
push
mov
push
or
cmp
cmp
push
push
jecxz
mov
mov
push
sub
pop
clc    
adc
out
out
sub
out
push
mov
outsl
test
lea
mov
push
lret
and
insb
and
inc
adc
or
push
adc
repz push
xchg
ret    
imul
sub
aaa    
xor
dec
jge
fisubl
in
movl
lods
sub
imul
fwait
xor
js
sbb
dec
pop
jecxz
iret   
inc
int3   
nop
popf   
insl
mov
and
mov
mov
dec
int
pop
into   
fucom
sub
jne
iret   
pop
dec
stos
inc
pop
inc
loope
popa   
stos
dec
cmp
stos
pushf  
inc
lods
inc
dec
insl
(bad)  
jb,pt
cmp
loopne,pn
inc
stos
dec
cmp
loopne
rol
push
cmp
(bad)  
lock iret 
xchg
mov
mov
cmp
cltd   
or
jo
ds add
lgs
or
les
(bad)  
mov
lahf   
adc
cmp
in
and
(bad)  
out
mov
testl
cmp
cs insb
inc
xchg
(bad)
ret
bts
idiv
sbb
dec
loopne
loop
pop
jns
stos
ss aad
andb
cld    
push
jecxz
mov
mov
push
fnsave
xchg
sub
mov
adc
jno
mov
(bad)  
out
adc
xor
(bad)  
fadds
and
cwtl   
mov
ja
fwait
dec
aam
int3   
push
es
cmc    
rdmsr  
adc
xor
call
cmp
sub
ret    
rolb
mov
push
cmpsl
(bad)  
fdivl
cmp
and
push
hlt    
mov
push
fwait
pop
add
pop
push
test
lahf   
sub
cmp
lods
cmp
repnz hlt 
femms  
cld    
inc
repz push
invd   
and
or
xchg
cmpsl
xlat
(bad)  
dec
mov
xor
hlt    
flds
fist
aaa    
sub
xchg
aad
pop
(bad)  
hlt    
rdmsr  
adc
xor
repz aam
cwtl   
popa   
out
cmp
or
bound
xchg
xor
fidiv
test
cmp
call
pop
insb
orl
push
or
push
lods
cmpsl
push
movsb
xor
jns
push
sub
stos
push
js
fadds
leave  
psrad
out
js
inc
cmp
cwtl   
jl
cmp
mov
jmp
jle
hlt    
jbe
mov
addr16 push
fadds
jne
cmc    
push
repz sbb
out
sahf   
or
pop
out
pop
(bad)  
leave  
lahf   
xchg
fcmovu
jo
loopew
mov
and
sub
out
push
aam
xchg
ret
in
lea
xchg
cld    
into   
jp
loopne
or
push
sbb
cld    
into   
jp
stos
stos
or
fcomip
jecxz
inc
dec
xchg
inc
adc
xor
pop
push
fidivl
std    
js
dec
cli    
mov
out
adc
jb
divl
add
enter
jl
jb
das    
or
push
pop
adc
add
stos
lret
cli    
(bad)  
aam
dec
add
popf   
jne
test
repz and
pop
mov
sub
enter
jl
dec
es mov
fisttpl
insb
jl
add
stos
lret
(bad)  
(bad)  
aam
dec
add
jne
push
lret   
mov
inc
xor
mov
fldenv
(bad)  
out
mov
inc
xor
push
cmp
in
subl
add
jmp
sbb
iret   
sbb
mov
cs call
push
imul
and
dec
jo
pop
and
adc
inc
inc
cltd   
out
(bad)  
aas    
mov
dec
push
and
dec
jo
pop
cmp
sbb
adc
cmp
adc
inc
inc
cltd   
out
(bad)  
out
dec
es dec
decl
popa   
fisubl
sub
xchg
outsl
neg
pushf  
mov
pop
call
xor
stc    
in
fbstp
incb
(bad)  
push
fucompp 
lea
push
mov
mov
add
rolb
shrb
xchg
fsubrl
add
jne
ror
dec
xchg
outsb
popa   
xor
xchg
dec
adc
adc
out
notb
cmpsb
aad
iret   
fcmovne
fucom
jns
xlat
inc
test
jmp
sub
mov
scas
addr16 pop
enter
sub
pop
arpl
sub
mov
je
cmpsl
adc
xchg
xor
push
or
les
jecxz
call
fwait
mov
push
rorb
or
ret    
pop
jb
and
mov
sub
test
or
inc
lahf   
xchg
cmp
adc
add
cli    
push
jecxz
loope
push
pop
adc
jp
jae
adc
and
adc
xchg
add
xchg
jnp
jns
rorb
jp
push
cmp
cs pop
jo
mov
std    
xchg
(bad)  
aad
jle
test
push
fstpt
jle
mov
adc
sbb
insb
jmp
gs sti 
loop
sbb
mov
imul
dec
add
cmp
and
jae
imul
xlat
iret   
sub
sbb
jp
jle
out
int
sti    
push
popa   
cmpsl
sahf   
mov
in
jae
cmp
call
fxch
mov
int3   
scas
mov
inc
mov
inc
jnp
fmulp
jae
adc
les
mov
add
jp
imul
repnz cmp
(bad)  
mov
mov
insb
lret   
adc
pop
and
xor
test
fnop   
ja
mov
jecxz
in
and
les
mov
iret   
or
pop
arpl
sub
inc
mov
mov
out
int
hlt    
dec
mov
sarb
or
pop
rolb
mov
in
movsl
cwtl   
cmpsl
jg
jo
push
mov
rorb
push
adc
pop
mov
mov
out
sbb
xor
ds ljmp
ret
ret
xor
mov
jbe
jg
mov
scas
cmp
sbb
mull
(bad)  
je
sahf   
jge
ret    
sbb
nop
jnp
xchg
xchg
mov
lea
xchg
imul
aam
(bad)  
fild
dec
jge
ret
mov
je
es jecxz
je
cmpsl
mov
sbb
daa    
inc
mov
movsl
push
shrl
sub
jge
mov
dec
jge
ret
mov
insl
popa   
fcoml
nop
xor
lret   
andl
out
movl
dec
insl
xlat
cmpsb
hlt    
cli    
pop
sarb
push
xchg
rorb
rcrl
stc    
addl
test
xchg
pop
mov
fldl
cmp
fs inc
dec
(bad)
sub
cmc    
arpl
and
aaa    
jle
push
mov
out
or
xchg
pop
inc
fimull
mov
pop
rorl
inc
sub
les
and
xor
or
lea
jb
mov
js
ficompl
test
scas
push
mov
in
mov
dec
add
adc
xor
imul
mov
cltd   
add
pop
xor
mov
in
pusha  
movsl
js
mov
mov
mov
jp
push
xchg
or
jecxz
xchg
cwtl   
or
movl
int
pop
jp
cs int3 
mov
xchg
jp
push
fwait
push
stos
adc
faddl
xchg
dec
les
stos
adc
je
mov
push
jne
rorl
dec
adc
cmp
outsb
jno
and
idivl
mov
aas    
jecxz
aaa    
lcall
or
ljmp
lret
idivl
mov
test
inc
jecxz
ljmp
mov
jb
add
ja
xor
bound
jae
jle
lds
loope
(bad)
sub
jge
mov
aaa    
test
(bad)  
pop
cld    
inc
sti    
adc
jb
pusha  
movsb
gs aaa 
lock xor
and
or
orl
movsl
std    
je
dec
push
mov
lods
and
or
shld
xor
mov
cmp
mov
cld    
inc
xor
mov
sbb
std    
repz in
mov
shll
shr
(bad)  
mov
sbb
xchg
dec
lods
mov
push
movsb
mov
in
mov
loopne
pop
xlat
jae
cwtl   
rcl
sub
inc
je
jb
xchg
mov
xchg
adc
push
pop
loopne
cwtl   
jge
nop
cld    
and
(bad)  
or
fs jbe
jecxz
sub
cmp
outsb
fidiv
jns
push
push
(bad)  
lahf   
add
jnp
and
fistl
adc
cld    
push
and
cwtl   
mov
dec
pop
jns
mov
xchg
stos
test
pop
inc
jae
and
jle
fdivl
daa    
aam
or
mov
aam
mov
(bad)  
xorb
lea
sahf   
aas    
inc
fwait
adc
rol
inc
mov
(bad)  
xor
dec
jno
and
movsb
and
push
sar
cltd   
mov
cmpsl
pop
push
mov
pop
test
lret
mov
mov
push
cmp
cmp
shll
and
pop
push
rorb
cld    
jle
inc
cli    
mov
mov
pop
inc
gs push
add
mov
mov
mov
loop
(bad)  
mov
mov
add
scas
sub
push
push
pop
loopne
arpl
es inc
popa   
popa   
dec
push
jmp
es in
cmpsb
les
or
jle
cli    
das    
or
stos
bound
cld    
(bad)  
mov
pop
dec
ljmp
(bad)  
int
rcll
pminsw
cmpsb
mov
mov
and
jnp,pn
jns
rorb
shll
loope
push
cmp
imul
fsubrs
sbb
fwait
iret   
mov
in
xchg
mov
xor
repz not
aas    
add
fs lods
int
xchg
push
repz fcomip
sbb
test
repz xlat
pop
lret   
std    
jne
cs mov
test
sub
xor
inc
jne
pop
mov
xchg
sbbl
imul
cmpl
mov
(bad)  
pop
lret
ret
les
fdivrs
jnp
pop
dec
ljmp
(bad)  
int
testl
cmp
dec
mov
(bad)
std    
mov
fisttpl
mov
inc
mov
inc
sub
fldl
stc    
sarl
or
jne
push
xchg
mov
loop
ss dec
jmp
rolb
dec
pushf  
fcomp
shl
fstl
mov
pop
mov
cmp
and
subl
and
lock je
add
aaa    
or
lahf   
rclb
mov
jg
cmp
jp
or
lahf   
mov
cmp
sbb
aaa    
enter
or
out
xor
and
dec
iret   
and
cmp
push
mov
jp
push
je
(bad)  
stc    
iret   
ret    
sti    
sbb
cli    
and
out
insb
(bad)  
cld    
mov
andl
(bad)  
xlat
clc    
xchg
pushf  
stos
movsb
xor
lds
iret   
(bad)
(bad)  
jp
mov
lock
faddl
mov
sub
lahf   
sub
lcall
or
mov
in
inc
mov
ss jle
out
nop
mov
inc
xchg
(bad)  
cwtl   
or
dec
(bad)  
jo
dec
xlat
in
(bad)  
jo
dec
iret   
jmp
pop
cmp
xchg
xchg
sbbl
ss imul
aam
hlt    
imul
repz jae
mov
icebp  
mov
lcall
mov
dec
push
xchg
test
mov
mov
inc
enter
jl
nop
cli    
repnz or
(bad)  
ret    
pop
rcrl
sbb
sub
bound
jg
test
sub
and
sub
sub
inc
addl
or
sub
fistp
fmul
fdiv
mov
fidivr
pop
stc    
sub
or
jmp
cmp
jnp
xor
fimul
aas    
in
adc
jno
or
cmpsb
rcrl
sub
mov
das    
sti    
and
jle
bnd jns
adc
out
dec
add
and
dec
outsb
push
cmpsl
xor
mov
cmp
xor
(bad)  
xchg
or
add
and
orl
lret   
adc
pop
jbe
jo
adc
cli    
sub
jecxz
dec
push
pusha  
pop
adc
in
push
les
cmp
popf   
sub
test
gs jbe
mov
mov
stos
xor
add
jmp
in
cs pop
inc
or
fistpll
sahf   
es mov
stos
or
sbb
mov
mov
or
push
pop
sub
mov
mov
or
mov
sahf   
xorb
or
xchg
pop
pop
test
rcll
lea
pop
fisubr
push
xchg
cmp
push
or
sbbl
subl
pop
pop
dec
push
rcll
add
xchg
pop
jb
es sub
mov
push
and
fstpt
jp
sahf   
es pop
and
subl
pop
pop
insl
into   
and
xchg
mov
popl
or
mov
push
mov
(bad)  
jp
sahf   
cmp
pop
subl
pop
pop
or
mov
popl
ljmp
popf   
lret
je
or
jnp
leave  
jp
sahf   
xor
pop
subl
daa    
inc
mov
sbb
push
outsb
mov
test
adc
sbb
leave  
ss xchg
scas
es int3 
pop
jbe
cmp
jp
sahf   
es adc
pop
pop
subl
pop
pop
sub
rcll
test
pop
push
mov
sub
mov
and
sbb
es clc 
loop
pop
subl
pop
pop
int
ret
mov
popl
stos
sub
mov
mov
mov
repz or
sbbl
subl
pop
pop
ror
cmpsb
rcll
add
xchg
pop
push
int3   
xchg
sub
mov
xchg
and
xor
leave  
jp
sahf   
es and
(bad)  
pop
subl
pop
pop
(bad)  
mov
xchg
mov
popl
jbe
mov
push
and
pop
dec
leave  
jp
sahf   
mov
pop
subl
pop
pop
std    
mov
xchg
mov
popl
inc
sub
xchg
mov
mov
mov
sarb
es pushf 
xchg
test
subl
pop
pop
orl
ja
jp
xor
push
sub
ljmp
xchg
cli    
das    
sarb
es pusha 
repz or
subl
pop
pop
movsl
cmp
mov
xor
sub
adcb
jl
mov
xor
jp
sahf   
es push
and
subl
pop
pop
imul
mov
xor
xor
adcb
pusha  
mov
lcall
cmp
push
subl
pop
pop
or
mov
popl
adc
mov
les
mov
jb
sarb
es or
adc
or
jmp
test
pop
pop
adc
enter
ja
jp
xor
mov
sub
push
mov
mov
sahf   
adc
or
iret   
and
cmp
mov
xor
int
sub
repnz mov
mov
repnz add
sbbl
subl
pop
pop
cmp
mov
xor
aad
sub
ljmp
cmp
out
jp
sahf   
sub
rcll
stos
or
and
and
int
enter
ja
(bad)  
mov
pop
cmpsb
dec
bound
mov
push
mov
jb
sarb
es mov
stos
or
and
lea
xchg
mov
popl
pop
sub
imul
repnz mov
(bad)  
jp
sahf   
xorb
or
xchg
pop
pop
test
iret   
xchg
mov
popl
dec
sub
xor
and
int
(bad)  
jp
sahf   
es je
jae
subl
pop
pop
dec
sbb
iret   
xchg
mov
popl
and
mov
push
and
aad
(bad)  
jp
sahf   
es pop
and
subl
pop
pop
insl
enter
mov
popl
add
mov
and
xchg
rol
jp
sahf   
es xor
xor
das    
pop
add
test
pop
pop
or
mov
xor
mov
adcb
(bad)  
and
push
xor
jp
sahf   
sbb
or
inc
in
test
pop
pop
sub
mov
popl
imulb
mov
sub
mov
lea
(bad)  
jp
sahf   
es insb
jo
adc
xlat
lret
test
pop
pop
xor
ret
mov
popl
stos
sub
jmp
and
cmc    
fwait
(bad)  
jp
sahf   
es lock sar
adc
rcl
lods
and
clc    
mov
xchg
mov
popl
sahf   
sub
repz xchg
and
or
sahf   
es and
ret    
adc
aas    
cmp
and
fmuls
ja
jnp
xor
pop
jb
mov
push
and
push
inc
(bad)  
jp
sahf   
mov
adc
fwait
mov
pop
pop
std    
mov
xchg
mov
popl
inc
sub
nop
mov
mov
mov
es pushf 
xchg
mov
stos
addr16 or
test
pop
pop
orl
ja
js
aaa    
popl
cmp
mov
sbb
je
or
sbbl
subl
pop
pop
movsl
aas    
inc
into   
xchg
mov
popl
sub
xor
je
or
sbbl
subl
pop
pop
imul
mov
aaa    
popl
add
mov
pusha  
sub
je
or
sbbl
subl
pop
pop
or
mov
popl
loop
mov
shrb
push
or
lret   
(bad)  
jp
sahf   
es push
stos
or
pop
daa    
test
pop
pop
sbb
mov
popl
lret
mov
cmp
mov
mov
(bad)  
jp
sahf   
es insb
jno
adc
stos
addr16 or
leave  
lret   
daa    
test
pop
pop
xor
ret
mov
popl
stos
sub
call
push
or
hlt    
fwait
(bad)  
jp
sahf   
es lock sar
adc
stos
addr16 or
shrl
pop
aad
mov
xchg
mov
popl
sahf   
sub
lock in
sub
je
or
or
(bad)  
jp
sahf   
es and
rcll
or
cmp
daa    
test
pop
pop
(bad)  
mov
xchg
mov
popl
jb
mov
push
sub
je
or
push
inc
(bad)  
jp
sahf   
mov
adc
stos
or
daa    
test
pop
pop
std    
(bad)  
jle
xchg
mov
popl
push
sub
cltd   
mov
mov
lahf   
mov
es pushf 
xchg
xchg
subl
pop
pop
xorl
ja
add
popl
sub
adc
das    
mov
notl
lds
sahf   
es pusha 
(bad)  
imul
stos
or
jne
test
pop
pop
movsl
xor
int
mov
popl
sbb
mov
jp
mov
aas    
or
jp
sahf   
es push
outsl
sbb
xor
test
pop
pop
imul
mov
popl
push
sub
mov
das    
mov
xchg
ffreep
jp
sahf   
cmp
sbb
pop
sbb
pop
or
mov
popl
loop
mov
ret
je
or
pop
xor
jp
sahf   
es or
pop
sbb
inc
loope
test
pop
pop
adc
int
mov
popl
imulb
mov
es das 
mov
mov
lds
sahf   
adc
sbb
push
pop
pop
xor
mov
popl
stos
sub
stc    
mov
mov
lcall
es
(bad)  
lcall
subl
pop
pop
cmp
mov
xchg
mov
popl
sahf   
sub
icebp  
out
das    
mov
pop
out
lds
sahf   
sub
ret    
sbb
cmp
pop
ffree
mov
xchg
mov
popl
mov
push
std    
xchg
push
das    
mov
ja
lds
sahf   
mov
stos
or
es test
pop
pop
in
jb
xchg
mov
popl
pop
sub
mov
push
or
sbbl
subl
pop
pop
lods
inc
(bad)  {%k2}{z}
les
mov
pop
(bad)  
mov
adcb
lods
cmp
push
sub
jp
sahf   
es in
ja
adc
(bad)  
pop
sbb
mov
push
les
push
jns
popl
pop
daa    
mov
xor
mov
negb
fdivrl
sahf   
es jo
push
adc
out
aas    
sbb
push
icebp  
sub
xchg
mov
popl
xor
mov
adc
mov
jae,pt
jp
sahf   
movsb
pop
push
adc
xlat
add
pop
rcrl
xchg
mov
popl
out
mov
clc    
cmp
push
(bad)  
fdivrl
sahf   
or
adc
cmpsl
or
popa   
mov
les
xchg
or
cmp
daa    
mov
and
mov
mov
fdivrl
sahf   
add
or
dec
out
sbb
add
mov
popl
mov
push
adc
test
mov
(bad)  
mov
es hlt 
out
adc
aaa    
repz sbb
leave  
add
les
push
icebp  
or
repnz xor
daa    
mov
call
or
fimul
es int3 
aaa    
in
adc
(bad)  
mov
pop
(bad)  
icebp  
mov
xchg
mov
popl
mov
push
int
nop
cmp
ss
fdivrl
sahf   
es
divl
or
out
lahf   
sbb
cmc    
mov
les
mov
pop
scas
mov
adcb
je
mov
jle
fdivrl
sahf   
test
adc
push
arpl
stc    
pushf  
jb
xchg
mov
popl
pop
mov
pop
cmp
cli    
xchg
mov
es call
stos
addr16 or
mov
pop
pop
popf   
pop
push
lret   
xchg
mov
popl
ds mov
add
sahf   
flds
ret    
jp
sahf   
es jl
arpl
subl
pop
pop
mov
mov
popl
add
mov
cmp
push
or
sbbl
subl
pop
pop
inc
int3   
push
lret   
xchg
mov
popl
out
mov
cmpsb
fsubrl
jg
mov
push
cmp
es rcl
rcrl
mov
or
popf   
repz fsubrl
xor
inc
(bad)  
stc    
pop
into   
addr16 xchg
pinsrw
jl
pop
mov
fwait
pop
les
or
mov
rorl
inc
ljmp
inc
mov
in
aaa    
xor
je
lea
int3   
aas    
out
js
push
lea
jnp
adc
cli    
cmp
addl
insb
mov
lds
push
test
shlb
xor
and
in
cmp
(bad)  
mov
aam
push
rcr
and
cmp
data16 aad
int3   
stc    
cmp
fmul
aad
xchg
or
test
sbbl
mov
or
xor
lret   
mov
cmc    
sub
(bad)  
mov
test
mov
rcrl
stos
test
push
test
push
js
add
in
ret
das    
adc
push
(bad)  
(bad)  
(bad)  
mov
scas
pushl
mov
xchg
neg
and
pop
push
pushf  
fsubrp
mov
add
lods
push
and
jmp
(bad)  
enter
xor
xchg
stc    
fnstsw
scas
pop
cli    
out
xlat
add
scas
mov
testb
out
fadd
nop
outsb
push
fdiv
imull
data16 mov
ds pop
out
gs lret
mov
and
pop
repnz out
ret    
cmp
pusha  
(bad)  
sti    
out
mov
lahf   
dec
pop
jns
mov
jg
mov
aaa    
inc
push
jno
cmp
push
or
push
sub
sub
dec
dec
adcb
cmp
inc
inc
mov
jecxz
cmpsb
mov
lock inc
mov
stos
mov
stc    
rcrb
rclb
jl
or
dec
shrb
or
je
or
sub
jp
sahf   
adc
or
out
sbb
cmp
rclb
add
or
xlat
mov
mov
xchg
and
lock
sahf   
es
int
sbb
cmp
pop
pop
cmp
mov
xchg
mov
popl
lcall
in
clc    
and
or
lret
sahf   
sub
or
and
pop
pop
(bad)  
xchg
rclb
add
or
push
jle
mov
pop
and
(bad)  
cmc    
jae
mov
movsb
xchg
(bad)  
out
dec
cmp
jg
sti    
std    
roll
push
popf   
xorl
sti    
sarl
lods
(bad)  
mov
aam
scas
mov
add
xor
repnz sbb
xchg
movsb
xchg
(bad)  
aad
xor
(bad)  
sti    
std    
les
push
popf   
xorl
sti    
sarl
lods
(bad)  
mov
aam
scas
popf   
sub
repnz sar
jp
xchg
movsb
xchg
(bad)  
aam
cmp
(bad)  
sti    
std    
rorl
push
popf   
xorl
sti    
sarl
lods
(bad)  
mov
aam
scas
xchg
adc
repnz shl
popa   
mov
movsb
xchg
mov
(bad)  
sti    
std    
scas
cmp
push
popf   
xorl
sti    
sarl
lods
(bad)  
mov
sbb
aam
scas
out
add
dec
xor
jmp
movsb
xchg
(bad)  
lret
gs jg
sti    
std    
aad
add
movsl
jae
cmpsb
mov
sarl
lods
(bad)  
iret   
dec
add
scas
out
jl
dec
xor
(bad)  
adc
mov
movsb
xchg
(bad)  
icebp  
or
sti    
std    
mov
popf   
xorl
sti    
sarl
lods
(bad)  
les
push
(bad)  
aam
scas
stc    
insl
imul
repnz rcr
push
mov
movsb
xchg
(bad)  
lock cmp
gs jg
sti    
std    
cmpsl
inc
outsb
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
lds
push
(bad)  
aam
scas
lock xor
repnz rol
pop
mov
movsb
xchg
(bad)  
incl
sti    
std    
mov
push
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
(bad)  
jb
push
(bad)  
aam
scas
sti    
push
push
popa   
dec
xor
int
pop
mov
movsb
xchg
(bad)  
out
adc
jg
sti    
std    
mov
popf   
xorl
sti    
sarl
lods
(bad)  
stos
jo
push
(bad)  
aam
scas
repnz inc
pop
popa   
dec
xor
lret
mov
movsb
xchg
(bad)  
lods
fucomp
gs jg
sti    
std    
pushf  
(bad)  
lret   
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
pusha  
mov
push
(bad)  
aam
scas
inc
mov
repnz
mov
xor
lods
lret   
bnd gs jg
sti    
std    
mov
lret
popf   
xorl
sti    
sarl
lods
(bad)  
popa   
mov
push
(bad)  
aam
scas
pop
movsl
(bad)  
popa   
dec
xor
mov
movsb
xchg
(bad)  
fwait
cmc    
stc    
gs jg
sti    
std    
xchg
xorl
sti    
sarl
lods
(bad)  
jle
rclb
aam
scas
push
xchg
int
dec
xor
mov
movsb
xchg
movl
mov
xorl
sti    
sarl
lods
(bad)  
ja
fstl
aam
scas
scas
xorl
scas
loope
mov
movsb
xchg
(bad)  
mov
mull
(bad)  
sti    
std    
nop
mov
xorl
sti    
sarl
lods
(bad)  
mov
xor
aam
scas
mov
outsl
pslld
mov
jp
and
mov
aas    
jae
mov
int3   
inc
mov
add
ss pop
shl
(bad)  
in
xlat
enter
sbb
sbb
loopne
xor
mov
out
xlat
iret   
push
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
adc
ror
pushf  
add
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
xlat
iret   
fcomip
mov
add
mov
in
xor
dec
imul
push
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jae
sbb
into   
mov
or
mov
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
cmp
xor
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
pop
lret   
pop
loopne
(bad)  
(bad)  
xlat
pop
jmp
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
int
lahf   
flds
in
xor
dec
imul
(bad)  {%k4}{z}
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
imul
mov
mov
ret    
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
adc
outsb
xchg
notl
add
lret
and
pop
movsl
cmpsl
mov
or
hlt    
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
les
sarb
(bad)  
cmp
dec
icebp  
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
mov
sub
rcpps
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
push
mov
xlat
out
out
out
jmp
(bad)  
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
add
movsb
rorl
jle
push
leave  
fnstenv
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubrl
sti    
pop
iret   
in
hlt    
mov
lret
xor
jb
or
mov
cmp
dec
fs mov
dec
lcall
fstpl
push
sub
sub
mov
jbe
imul
lret
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
divl
mov
mov
(bad)  
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
in
mov
(bad)  
sbb
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
test
sub
lcall
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
jmp
fimull
jle
adc
cmc    
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
test
(bad)  
int
xlat
(bad)  
mov
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
xor
shrl
iret   
in
adc
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
into   
sub
fcmovnb
mov
out
arpl
fsub
(bad)  {%k4}{z}
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
or
mov
adc
push
jnp
add
cmp
mov
push
in
xchg
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
repz and
jecxz
ret
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
and
and
cmc    
xor
jecxz
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
jbe
xchg
aas    
cld    
test
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
push
mov
iret   
pop
inc
push
aaa    
lret   
movsb
adc
cli    
cmpsl
paddusb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
jmp
loopne
(bad)  
mov
ret
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
xor
mov
cmp
sub
pop
lcall
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
push
imul
xchg
lcall
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
out
xor
pop
inc
jne
repz push
jecxz
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
nop
fadd
xlat
xlat
(bad)  
in
sub
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
js
or
dec
add
lahf   
jge
aam
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
loop
jge
les
adc
(bad)  {%k4}{z}
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
cmp
test
xchg
or
mov
push
daa    
xor
adc
adc
movsl
xchg
call
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
inc
js
test
mov
or
mov
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
xor
sarl
jbe
mov
loope
scas
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
stos
lahf   
mov
iret   
add
sbb
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
or
or
decb
jb
push
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
add
xor
xlat
(bad)  
mov
adc
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
aad
je
pop
sbb
dec
pop
jbe
cmp
xor
stos
clc    
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
(bad)  
pop
xchg
(bad)  
(bad)  
xlat
jecxz
ret
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
and
jno
sbb
aas    
insl
or
xor
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
lret
cld    
test
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
(bad)  
adc
or
add
cmp
stos
add
xchg
pop
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
fisubrl
lcall
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
out
xor
push
pop
cmp
mov
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
or
(bad)  
sub
dec
icebp  
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
sub
aaa    
ffree
adc
cmc    
sbb
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
faddl
fdiv
repnz mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
out
adc
lds
add
pop
sub
paddusb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
fnop   
dec
sahf   
repz not
iret   
add
sbb
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
and
sub
in
push
ret    
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
add
lret   
sub
dec
icebp  
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
fmull
pop
iret   
packuswb
cmpsb
push
stos
fabs   
xor
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
(bad)  
addr16 daa 
addl
in
hlt    
repnz mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
mul
adc
fnstenv
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
push
jl
mov
mov
or
mov
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
aad
mov
gs das 
out
mov
cmp
push
pop
mov
notb
mov
inc
add
inc
xlat
arpl
pop
pusha  
and
or
jnp
or
test
jmp
repz repnz xlat
arpl
iret   
push
add
insb
or
sub
and
notl
enter
mov
or
pop
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
jl
(bad)  
scas
inc
iret   
insb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
jecxz
cmp
add
fdivrl
int3   
fstl
sbb
in
movb
mov
stos
sub
jno
rcr
sbb
int3   
jg
aad
pop
lds
pop
lret   
jg
test
or
and
fisubl
lods
or
(bad)  
xchg
cmpsl
sub
or
sbb
adc
push
cwtl   
ds cld 
push
(bad)
pop
aad
test
loop
negb
push
leave  
(bad)  
clc    
mov
cmp
rorb
adc
cli    
jecxz
xlat
iret   
fdiv
mov
sub
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
decl
(bad)  
iret   
mov
iret   
daa    
test
pop
je
outsb
neg
lahf   
scas
(bad)  
les
push
aas    
mov
sarb
ret
sahf   
leave  
xor
jae
enter
mov
and
dec
lret   
fldcw
inc
adc
and
add
addr16 jae
add
or
and
jl
mov
xchg
das    
inc
cwtl   
fisubrl
iret   
das    
lcall
jle
aas    
sahf   
test
dec
imul
outsl
popf   
cwtl   
mov
fs aam
adcb
or
test
mov
repnz adc
daa    
sub
mov
rorb
test
pop
jmp
inc
inc
add
or
aas    
push
or
jo
lret
sahf   
es add
sub
subl
sbb
or
(bad)  
pop
xlat
dec
(bad)  
pop
fisubrl
popa   
sarb
icebp  
mov
fstpt
cmp
fcmovnb
jne
cmp
in
or
clc    
je
clc    
adc
push
pop
fnsave
fs xor
outsb
jle
dec
aad
(bad)  
mov
mov
jne
cli    
inc
insl
mov
clc    
jnp
iret   
(bad)  
and
cli    
les
aaa    
(bad)  
cmp
add
iret   
arpl
fsubr
cmp
push
dec
lock aaa 
push
mov
push
out
movsl
icebp  
int
add
(bad)  
or
pop
mov
jnp
iret   
(bad)  
and
cli    
les
aaa    
(bad)  
cmp
add
iret   
arpl
fsubr
cmp
xchg
mov
mov
insl
or
aam
xor
sbb
pop
dec
fbstp
sahf   
mov
rclb
cmp
pmaxub
dec
dec
rcrb
movsl
xlat
xor
mov
cwtl   
lret
jg
pop
hlt    
mov
movsb
bnd ja
daa    
sbb
(bad)  
push
push
xchg
clc    
mov
mov
push
cld    
mov
aaa    
sub
xor
pop
ss pop
xlat
xor
mov
cwtl   
lret
jg
pop
hlt    
mov
movsb
bnd ja
daa    
sbb
(bad)  
push
push
xchg
clc    
jns
fwait
jnp
test
pop
cmp
ja
inc
shlb
inc
iret   
insl
stc    
mov
jb
jmp
ss or
bound
in
jns
mov
aam
into   
jge
adc
cs pop
popf   
mov
scas
cwtl   
adc
cmp
mov
jne
mov
dec
movsl
repz mov
pop
inc
pop
xor
dec
inc
daa    
out
xchg
or
mov
jp
shr
sub
jne
hlt    
pop
mov
mov
mov
andb
jae
mov
jbe
adc
sbb
cmp
sbb
jg
jmp
jmp
in
adc
sbb
jno
nop
faddl
xchg
cmp
jmp
pop
pushf  
call
push
(bad)  
clc    
ss ror
sbb
xchg
add
adc
or
pushf  
call
push
jmp
xchg
mov
in
xchg
jge
das    
push
fs
out
lds
insb
lods
jg
cmpsl
jmp
inc
pop
xor
dec
cli    
jg
xlat
ss sub
sbb
iret   
enter
push
xchg
add
cmp
mov
sbb
stos
pop
out
daa    
into   
inc
and
lcall
jae
jg
out
xchg
movsb
pop
dec
jecxz
jl
lret   
std    
add
out
popa   
adc
or
into   
movb
adc
adc
push
repz mov
dec
push
fisubr
mov
adc
movsl
sbb
and
nop
movsl
xor
out
dec
sub
mov
(bad)  
loope
mov
or
dec
mov
aam
(bad)  
push
(bad)  
adc
icebp  
mov
sahf   
adc
push
mov
lret
mov
popw
test
cmpsl
aaa    
ss mov
cmp
sbb
jae
jmp
dec
or
inc
sub
(bad)  
(bad)  
sbb
xchg
sub
aaa    
mov
outsl
cmp
inc
popf   
mov
jg
dec
pop
xchg
inc
mov
fucompp 
(bad)  
fcmovnu
test
jns
inc
sub
(bad)  
(bad)  
sbb
sbb
cmp
mov
outsl
jo
ret
cwtl   
inc
popf   
mov
(bad)  
clc    
pop
xchg
inc
mov
fucompp 
lea
shll
pop
jne
and
lret
push
sbb
push
add
sbb
out
dec
div
sahf   
pop
iret   
xchg
cltd   
sbb
stos
push
mov
mov
push
je
in
xchg
rcrb
sub
adc
and
sbb
not
pushf  
cmp
fimull
sub
dec
decl
das    
mov
daa    
loop
mov
arpl
adc
jbe
cmp
mov
outsl
sub
dec
bound
xchg
in
cmp
cmp
mov
mov
jl
subb
mov
and
ror
push
scas
mov
stc    
sarb
ljmp
inc
jg
adc
sbb
test
imul
ret
cmpsb
jmp
addr16 mov
jg
sub
std    
arpl
mov
daa    
push
cmp
aad
js
pop
mov
lods
test
push
pop
cmp
mov
fnstenv
mov
repnz adc
fsubrl
sti    
push
cltd   
mov
xchg
sub
mov
and
add
xlat
inc
mov
jns
shlb
dec
xor
xor
jae
mov
push
xor
imul
ljmp
aad
(bad)  
ja
sub
xor
(bad)  
mov
stc    
bound
fmuls
push
shll
xlat
int3   
lret   
lock sahf 
(bad)  
ds test
into   
dec
jnp
iret   
pop
dec
sbb
mov
mov
scas
rcr
xchg
cmpsb
jecxz
mov
shr
mov
jl
jl
(bad)  
inc
dec
push
and
mov
nop
sbb
arpl
sub
dec
push
and
inc
shlb
mov
cmp
mov
xlat
mov
aam
(bad)  
fdivp
lea
sub
test
xchg
pop
dec
dec
daa    
xlat
inc
lahf   
pop
repnz fdivs
mov
sahf   
js
cmp
sbb
bound
add
js
test
popa   
jbe
inc
mov
pop
add
mov
int3   
add
clc    
imul
inc
loop
mov
rorl
dec
push
call
mov
mov
dec
push
jmp
icebp  
push
jnp
les
fs test
push
xor
push
adc
ret    
aas    
cmp
pusha  
js
mov
fs lret 
jl
stc    
rolb
xchg
mov
icebp  
fsubrl
iret   
pop
sub
xor
inc
and
je
fisttpll
push
shl
jecxz
negl
lock xlat
mov
and
test
xchg
ret
test
movsl
daa    
rolb
dec
push
and
adc
gs push
mov
dec
enter
or
xchg
jl
mov
stos
mov
cmpsb
mov
ljmp
imul
inc
or
push
pop
mov
pop
(bad)  
mov
sub
outsb
test
and
xchg
jo
fsts
jecxz
add
cld    
icebp  
loope
mov
add
pop
cmpsl
inc
or
add
int
or
out
out
jns
je
fwait
(bad)  
iret   
out
outsl
das    
dec
adc
cltd   
nop
pop
rclb
fimull
inc
shl
rcl
dec
or
je
stos
pop
pop
ret    
sbb
or
jbe
sub
mov
test
das    
fimull
cmp
rol
int
mov
jecxz
sbb
xor
pop
xchg
push
mov
lcall
mov
add
cmp
xor
sbb
in
inc
sahf   
clc    
xchg
insl
xchg
cmpsb
loope
fisubr
dec
adc
lods
daa    
jmp
fcmovnu
bound
fs mov
out
pop
mov
xor
or
mov
jecxz
jns
mov
flds
js
pop
(bad)  
divb
jle
aam
aas    
sbb
test
repz in
push
jge
(bad)  
aaa    
outsb
adc
sub
ss nop
sub
inc
dec
adc
lods
dec
and
(bad)  
iret   
cli    
mov
rclb
or
test
stc    
sarb
cld    
sbb
je
or
lret
fidivl
mov
or
test
inc
fbstp
fld
dec
loopne
xor
lahf   
cs push
into   
xchg
cmpl
mov
fdivrl
mov
notl
pop
jl
xor
rol
jb
lcall
in
aas    
stos
pop
pop
add
mov
test
daa    
aam
pop
fucomip
mov
sbb
(bad)  
and
mov
ret
int3   
xchg
sub
movlps
aaa    
dec
sti    
mov
ret
or
jl
and
jl
repz xlat
xor
or
sub
cmc    
inc
sbb
adc
inc
aad
mov
scas
jno
stc    
iret   
inc
fidivr
inc
(bad)  
stc    
lea
mov
test
push
xchg
push
sub
pop
or
ja
pop
mov
aaa    
pop
mov
add
mov
mov
xchg
and
repz orl
setno
lahf   
bound
or
js
fsubl
pop
jmp
mov
push
xchg
dec
jbe
leave  
cli    
stos
leave  
sti    
mov
stc    
dec
bnd jns
lds
inc
bnd js
(bad)  
rorl
daa    
inc
mov
test
mov
cmpsb
(bad)  
out
or
push
loop
fs inc
adc
mov
mov
enter
rclb
inc
test
mov
rcr
ss fld
or
and
test
mov
sbbl
push
mov
dec
add
vmulps
and
test
adc
cmp
or
jbe
inc
sub
jl
and
pusha  
(bad)  
out
xlat
lahf   
mov
sub
dec
testl
das    
or
sbb
xchg
mov
add
cmp
push
ret
sbb
adc
pop
pushf  
push
inc
add
lea
les
fdivs
adc
mov
jae
iret   
mov
(bad)  
aad
sub
lock add
das    
push
dec
adc
mov
mov
cmp
push
cmp
push
lods
cmp
push
in
inc
out
leave  
push
or
fwait
test
mov
fbstp
or
ret
push
push
dec
(bad)  
sbb
and
jge
pusha  
stc    
cltd   
jg
mov
and
xchg
inc
mov
fucompp 
lea
das    
or
xchg
repz xlat
pop
lret   
inc
loopne
xor
in
or
dec
iret   
iret   
(bad)
mov
arpl
mov
or
scas
pop
sub
sub
push
add
int3   
sarb
repnz inc
in
and
mov
enter
enter
xor
pop
cmc    
push
stos
lea
mov
jp
pop
mov
or
push
sub
add
ror
(bad)  
sbb
popa   
lods
dec
test
fidivrl
add
lret
mov
imul
int
cmpsl
jns
mov
stc    
test
xchg
rorb
ret
adc
iret   
repz sbb
iret   
add
dec
sahf   
enter
jmp
ret    
mov
into   
lock ret
les
cmp
cltd   
or
incb
add
repz xchg
push
xchg
aam
popa   
clc    
or
mov
pop
insb
or
sti    
xchg
ds out
fnstenv
xchg
jecxz
jae
sub
xor
push
sbb
push
into   
xchg
(bad)  
push
negb
inc
mov
cltd   
dec
repnz shl
int
mov
push
sti    
iret   
jmp
sti    
test
jbe
std    
mov
adc
mov
mov
fwait
xchg
icebp  
sbb
fistl
out
mov
xlat
fwait
cwtl   
xchg
pop
in
and
inc
iret   
lret
roll
xchg
sub
roll
mov
test
push
mov
mov
test
pop
iret   
addr16 nop
mov
cwtl   
and
inc
iret   
and
push
out
fldenv
sbb
jae
sub
push
popf   
dec
test
mov
adc
jmp
imul
mov
or
jge
xor
add
jmp
lds
out
cmp
dec
adc
lret
mov
pop
repnz imul
xchg
pmullw
push
(bad)  
dec
int3   
aaa    
mov
cmpsl
add
call
rorb
mull
push
pop
add
rcl
cmp
iret   
mov
aaa    
xchg
push
fs cmp
icebp  
orl
sbb
pop
cs xchg
and
ss mov
andl
out
push
stos
mov
and
gs stos
roll
movsb
popa   
xor
inc
push
out
fsubs
arpl
das    
or
sti    
adc
pop
xor
in
inc
shll
adc
cld    
inc
ret
mov
cmc    
or
sbb
mov
inc
ret    
scas
mov
test
cmp
je
mov
xchg
enter
sbb
sti    
pop
aad
ret    
mov
sarb
iret   
outsl
shrb
and
test
out
fcoms
xor
sbb
out
push
or
int
mov
xchg
adc
pop
and
lods
sti    
lods
jge
mov
mov
bound
push
sub
sbb
mov
mov
xchg
mov
xor
lahf   
icebp  
ja
aaa    
test
das    
sbb
pop
insl
test
mov
in
in
dec
cwtl   
iret   
mov
inc
push
xchg
cmp
divl
adc
sub
(bad)
push
or
int3   
leave  
test
xchg
jge
cmpsb
xor
ror
add
adc
dec
jns
(bad)  
xor
push
movsb
add
inc
mov
in
mov
or
int3   
leave  
test
repnz roll
pop
inc
adc
xchg
jne
mov
add
dec
or
(bad)  {%k4}{z}
xor
sbb
cmpsb
adc
jge
mov
xor
xor
cmp
push
aaa    
sbb
aas    
scas
mov
insl
or
and
mov
out
iret   
xchg
(bad)  
rcl
sub
cltd   
dec
in
mov
inc
lea
xchg
inc
mov
push
sub
dec
testl
adc
xchg
inc
dec
adc
jg
sub
(bad)  
(bad)  
cli    
pushf  
rorb
xor
mov
jbe
jnp
out
push
js
xlat
adc
addr16 xchg
lods
jp
and
jle
xchg
(bad)  
pusha  
push
int3   
leave  
test
xchg
(bad)  
mov
loopne
out
xchg
fwait
pop
dec
and
test
or
xchg
xor
fidivl
sbb
push
cmp
xchg
xor
stc    
(bad)  
sub
lods
aaa    
xor
mov
ljmp
iret   
mov
dec
imul
js
cmp
xchg
fisttp
fdivrl
subw
bound
dec
pop
test
scas
lea
cmp
sti    
push
stos
cli    
cmp
pop
adc
test
jmp
mov
push
popf   
pop
xchg
xchg
pop
xor
lret   
push
mov
jl
and
popa   
(bad)  
call
mov
cmp
(bad)  
xor
mov
xchg
dec
imul
sub
out
in
mov
stos
and
xor
rolb
je
and
add
sub
mov
adc
lret
pop
mov
mov
mov
addr16 lock enter
(bad)
shlb
fdivrs
mov
adc
lods
je,pt
mov
(bad)  
mov
test
adc
gs cli 
push
jnp
dec
stc    
outsl
mov
xchg
mov
push
lea
fdivs
fs in
cmpsl
cmp
xor
cmpsb
cltd   
push
pop
push
adc
lret   
loop
xchg
ret
mov
xor
pop
jg
stc    
idiv
sbb
pop
stc    
fiadd
enter
repz fwait
jno
pop
test
mov
aad
subl
xchg
imul
xor
mov
push
cmp
mov
clc    
cmpsb
inc
js
ss jle
rclb
inc
and
or
cmp
daa    
mov
push
sub
jnp
mov
int3   
xchg
aad
imul
push
popf   
xchg
cmp
xlat
pop
jae
mov
pop
xchg
mov
aas    
addr16 cltd 
fdivr
jle
or
mov
xchg
fdivrp
mov
mov
pushf  
sbb
fdivr
in
push
aaa    
xor
pop
jmp
sub
adcl
pushf  
mov
sti    
inc
mov
inc
ja
lods
push
or
cltd   
or
test
jbe
cmp
dec
xchg
push
sti    
pop
aad
push
mulb
int3   
call
mov
(bad)  
jle
adc
add
data16 arpl
adc
scas
lret
stc    
decl
aas    
test
mov
xchg
pop
xchg
iret   
scas
punpckhwd
movsb
jg
mov
jnp
mov
fmuls
rorl
cmc    
mov
(bad)  
mov
xchg
jnp
inc
xorb
clc    
sub
push
mov
test
cmc    
sbb
test
ret
fist
inc
inc
(bad)  
daa    
icebp  
mov
cwtl   
stos
(bad)  
push
inc
and
sti    
xchg
cli    
push
in
and
mov
or
mov
xor
push
jmp
and
inc
adc
sarb
ljmp
js
pop
pop
test
lret
arpl
cwtl   
xchg
aaa    
mov
jg
jecxz
aaa    
subb
fcmovnu
mov
sub
divl
and
jbe
mov
jp
mov
adc
mov
dec
into   
rcll
cmpsb
mov
hlt    
es data16 sbb
(bad)  
jae
and
mov
xchg
sub
es test
(bad)  
mov
cmpb
(bad)  
in
jecxz
cmp
lahf   
ret
or
incl
mov
mov
mov
call
sbb
(bad)  
cmp
mov
pop
dec
(bad)  
aas    
mov
fwait
push
jne
mov
or
stos
ficom
mov
inc
push
into   
jnp
aaa    
test
push
mov
push
xchg
sbb
inc
or
inc
jecxz
xchg
add
pop
notl
push
cmp
push
shrl
lret
push
adc
xchg
sbb
faddp
dec
leave  
add
push
(bad)  
push
test
int3   
sbb
rcrl
add
(bad)  
sbbb
or
mov
lahf   
mov
in
stc    
pop
jno
mov
xchg
out
adc
mov
data16 mov
jb
lahf   
xchg
mov
insb
in
pop
into   
jb
int
push
sbb
out
fdivl
dec
mov
jae
ret
mov
bnd je
push
dec
arpl
xchg
inc
sub
inc
ret
or
sbb
aad
sbb
stos
(bad)  
(bad)  
cli    
insb
mov
pop
jle
call
xor
addr16 xor
adc
mov
movsb
xor
mov
cmp
aaa    
mov
mov
adc
lods
or
aas    
dec
jbe
int
test
sbb
testb
stc    
pop
jg
add
fistpl
pop
push
dec
getsec 
jbe
scas
and
iret   
dec
mov
lods
fidivr
icebp  
xor
adc
mov
and
jnp
cmp
mov
(bad)  
pop
adc
or
xchg
adc
dec
push
add
stc    
or
leave  
xor
int3   
ljmp
adc
sbb
jb
mov
push
cmp
mov
xchg
add
xchg
sub
bound
xor
lock int3 
ret    
adc
aaa    
xlat
push
push
jmp
aam
inc
mov
fcomip
mov
test
js
lahf   
test
pop
into   
push
scas
xchg
loopne
mov
imul
mov
xor
push
test
(bad)  
lret
xchg
add
ja
xchg
iret   
xor
mov
and
aam
jp
movsl
notb
cmp
jo
rolb
inc
mov
bnd jbe
mull
inc
or
lock xchg
mov
int3   
shlb
mov
sbb
(bad)  
imulb
rorb
cltd   
insl
dec
dec
pop
ret
mov
sbb
cltd   
insl
dec
dec
pop
ret
popa   
repz add
mov
mov
aaa    
test
pop
lret
lea
jb
mov
jg
pop
lret
mov
aaa    
addl
xor
and
cld    
pop
cld    
jb
xchg
(bad)  
or
outsb
dec
in
insb
clc    
int
out
loope
xor
xchg
shrl
es aam
pop
pop
ret    
in
sbb
sbb
int3   
add
into   
jns
sub
jo
cli    
cmp
lock fsubl
xlat
dec
mov
pushf  
in
(bad)  
es cmp
push
push
bound
mov
fsubl
xlat
lret
xchg
lock cmp
loopne
mov
jns
test
mov
push
push
xor
xor
cmp
inc
enter
or
stos
scas
(bad)  
jmp
xor
push
in
les
sbb
dec
testb
lret   
mov
cs push
test
inc
loope
pop
add
inc
xchg
jle
inc
fwait
push
pop
add
ret    
stos
ss mov
or
jge
add
sti    
in
push
xor
mov
fdivl
pop
cmpsl
pop
cmp
push
out
icebp  
fdivl
bound
negl
and
aad
(bad)  
jp
mov
fdivl
pop
(bad)  
hlt    
std    
cmp
jbe
mov
scas
mov
sbb
insl
(bad)  
sarb
pop
stc    
int
or
test
daa    
negl
jo
adc
cmp
add
or
jl
push
inc
mov
cmp
test
pop
mov
fisubrl
test
sub
shrb
loopne
jmp
cli    
imul
jl
push
ret
cmp
in
lock fist
push
in
cmp
into   
rcrl
jl
popf   
fistl
add
imul
(bad)  
xlat
inc
pop
repnz ss int3 
mov
es clc 
(bad)  
push
ds ret
mov
xchg
dec
push
mov
ljmp
adc
notb
xchg
xchg
pop
inc
sbb
lea
cmp
xchg
pop
inc
pop
pop
xor
fdivl
out
add
jl
push
xor
divl
subb
or
push
pop
push
dec
ret
mov
stos
sbb
cwtl   
ds gs mov
adcb
mov
ds test
into   
ss aam
stos
cli    
repz lret 
mov
xchg
xlat
mov
jo
or
pop
xchg
rol
mov
push
mov
test
cli    
cmp
cmpl
jge
gs mov
je
scas
clc    
dec
xchg
inc
scas
mov
push
ret
lret   
insb
jnp
jnp
sub
cmovo
(bad)  
or
xchg
call
mov
int
mov
and
mov
jne
or
push
mov
or
or
(bad)  
or
sarl
rorl
ja
dec
and
mov
repnz push
push
push
xchg
cmpsb
ljmp
xorl
stc    
mov
shlb
pusha  
sub
js
les
imul
cmpsl
push
mov
lock add
lea
adcl
stos
adc
test
out
popf   
mov
sbb
pop
jo
and
inc
mov
mov
sar
cltd   
mov
pop
outsl
sub
pop
aam
xchg
xchg
jge
add
pop
lock fistpl
or
jg
sub
(bad)  
(bad)  
in
in
jno
or
push
sbb
mov
loop
ljmp
fimul
jg
add
inc
and
mov
sub
sbb
test
outsl
cmc    
dec
pusha  
xlat
xchg
xor
mov
mov
add
push
jb
adc
fucom
cmp
push
aaa    
ret    
ds daa 
cmp
push
sub
test
mov
sti    
cli    
mov
xchg
loop
push
int
jns
jp
adc
jecxz
(bad)  
outsb
jnp
lahf   
pushf  
fsts
push
lock arpl
dec
and
aam
lret   
pop
mov
mov
jge
arpl
lods
xor
daa    
lret
in
cmp
sti    
popa   
pusha  
push
and
xor
stos
push
jb
jecxz
notb
xchg
or
dec
cmpsl
jecxz
scas
mov
cwtl   
pop
mov
push
rorl
les
cltd   
adc
jnp
test
jl
mov
(bad)  
out
aas    
ds test
mov
xlat
mov
ret
mov
mov
ror
push
stos
jmp
(bad)  
mov
ds sub
fwait
lret
aam
jae
ds pop
or
js
xchg
divb
inc
sbb
pushf  
nop
shrb
push
stos
sti    
int3   
pop
mov
aaa    
out
and
lahf   
adc
pop
mov
pop
fdiv
sub
and
popf   
jno
cli    
nop
cmpsl
stos
mov
mov
aad
xchg
rol
movsl
push
dec
or
loopne
enter
push
xor
mov
push
mov
lcall
shll
mov
fdivrs
out
lret
gs
repnz cld 
divl
pop
adc
lcall
mulb
subb
lahf   
mov
mov
roll
mov
cmp
jno
pop
jecxz
mov
sub
dec
mov
enter
dec
or
fistpll
mov
mov
jg
(bad)  
pop
fisubl
mov
ss nop
pop
lcall
outsb
sahf   
xor
(bad)  
aaa    
sub
xchg
ret    
adc
fwait
jne
lcall
lds
in
adc
or
in
fwait
mov
push
outsb
inc
inc
test
cld    
dec
ss or
outsl
and
sub
es xchg
dec
push
out
inc
js
fs shr
lods
mov
rcrl
cs leave 
aas    
(bad)  
cli    
and
mov
cld    
jle
sbb
std    
shrl
cmpsb
push
lcall
cmpsl
add
dec
les
inc
(bad)  
decl
shr
add
mov
jo
dec
ds ret 
add
pop
mov
sahf   
mov
and
lcall
movsb
(bad)  
popa   
lret
out
insl
push
fisttp
aas    
sbb
iret   
inc
jmp
(bad)  
pop
cmc    
mov
xchg
dec
test
fidiv
xor
imul
cmp
into   
cmp
jno
lods
lds
test
push
and
push
jl
pop
test
pop
xchg
pop
jo
jae
adc
jp
insb
pop
or
mov
or
subb
pop
nop
or
push
mov
es add
or
jo
sub
and
outsb
pop
inc
pop
jbe
jle
pusha  
jle
add
fs jae
int
jns
fimull
xor
push
cmp
icebp  
push
mov
outsb
jle
mov
ror
xchg
ret    
call
mov
xor
cmc    
mov
in
push
mov
cli    
push
jmp
adc
cmp
iret   
(bad)  
fild
mov
out
push
ret    
mov
push
xor
cmp
cwtl   
cmp
sahf   
xor
test
insl
(bad)  
dec
cmp
cmp
mov
add
cmp
pop
out
mov
pop
adc
mov
or
pop
push
clc    
fcoml
(bad)  
adc
mov
add
add
in
lock fmull
cmp
movsb
(bad)  
sti    
fimul
mov
push
lods
out
pop
(bad)  {%k4}{z}
pushf  
std    
mov
into   
mov
mov
jae
xchg
test
push
dec
lret
dec
cmc    
mov
stc    
add
pop
mov
cmpsl
(bad)  
cli    
jmp
jle
adc
scas
add
jecxz
adc
inc
(bad)  
fsubrs
push
inc
dec
mov
clc    
movsl
out
stc    
and
push
pop
sub
inc
out
jecxz
cmp
lahf   
das    
jmp
int
cmp
jb
pop
mov
xlat
rcrl
mov
mov
fisubl
leave  
int3   
scas
inc
jp
inc
popa   
sarl
out
scas
mov
push
cmp
jle
repz je
lea
cmp
(bad)  
jge
jno
test
cs mov
hlt    
lret   
adc
lock sarl
mov
xor
test
cmp
mov
repz popf 
je
ret    
insl
pop
test
hlt    
(bad)  
ja
xor
adc
movsb
aaa    
test
(bad)  
or
mov
bound
xchg
leave  
adc
lret
inc
in
and
pop
out
mov
clc    
rclb
fdivrl
cwtl   
jmp
adc
push
(bad)  
rcr
in
lea
in
push
mov
adc
cmp
cmpsl
and
xchg
or
sbb
repz push
popa   
jmp
jp
stc    
fsubl
iret   
mov
add
push
pushf  
mov
mov
mov
clc    
or
testl
xchg
or
mov
adc
(bad)  
lds
xor
nop
pop
push
hlt    
xor
sbb
fdivrl
js
rcrl
loop
loopne
push
sub
in
loop
sbb
fs dec
outsb
adc
jns
hlt    
xchg
gs dec
cwtl   
div
or
sub
push
jg
xor
inc
or
and
mov
sub
imul
mov
xchg
popf   
mov
add
push
pmuludq
or
jp
mov
dec
and
sub
dec
ret
xchg
lds
inc
in
mov
lret   
je
jb
adc
lods
xor
jp
lods
(bad)  
push
pop
fdivs
push
push
je
mov
fstl
push
jp
push
movsl
pop
rcll
lcall
mov
lock pop
pusha  
push
mov
mov
jg
xor
sub
adc
xchg
dec
mov
inc
mov
pusha  
gs inc
jns
(bad)  
inc
int
pushf  
and
movsl
aad
inc
fimul
inc
lea
cltd   
sub
mov
scas
es ljmp
jl
jo
add
inc
push
repnz xchg
movsb
fistl
dec
clc    
sub
and
loop
int3   
aaa    
data16 loope
cli    
iret   
movsb
mov
mov
push
cmpl
inc
adc
adc
jns
lods
(bad)  
jle
cmp
pop
push
xor
sbb
(bad)  
and
in
sub
ds dec
pop
mov
(bad)  
ds clc 
aas    
add
cmpsl
jb
or
aaa    
push
lock push
subl
inc
push
sub
sub
sbb
rcl
adc
(bad)  
stos
jns
lods
dec
test
adc
sub
aam
pop
jle
test
cs push
inc
inc
pop
jbe
(bad)  
(bad)  
cmp
sti    
hlt    
cmp
int3   
ret
cmp
ret    
stos
rolb
xor
inc
pop
lea
push
cld    
xor
push
fstpl
mov
adc
icebp  
mov
jecxz
leave  
ja
adc
mov
negl
cs mov
pop
(bad)  
and
stos
push
mov
lea
aam
scas
fwait
pop
in
jne
add
add
movsb
or
(bad)  
loopne
mov
lods
je
mov
mov
mov
jp
mov
icebp  
mov
cmp
ror
push
jns
sahf   
sar
inc
mov
mov
int3   
hlt    
sub
adc
mov
aaa    
loopne
mov
cmpl
or
int
xchg
jbe
mov
dec
cltd   
idiv
cmpsl
push
aam
push
push
xchg
rclb
in
dec
inc
bnd jge
mov
insl
stos
lds
mov
jae
mov
lock add
scas
pop
sub
rcrb
jl
add
call
dec
or
data16 fs adc
and
inc
into   
enter
test
(bad)  
pop
cmc    
ucomiss
inc
lea
imul
xor
dec
push
xchg
mov
push
inc
inc
popf   
mov
xor
lcall
pop
ss xor
xchg
jg
mov
mov
cmpsl
mov
lea
jne
jnp
or
jl
xorl
or
jne
test
mov
mov
lahf   
cld    
or
jae
shll
subl
and
mov
sahf   
mov
xchg
mov
enter
and
dec
inc
or
dec
aam
jl
pop
aam
hlt    
imul
inc
sbb
scas
ljmp
or
mov
add
push
(bad)  
fs test
pop
(bad)  
addr16 inc
icebp  
lods
pop
xlat
push
jg
or
out
cmc    
mov
test
xchg
sub
add
fild
repz addr16 jle
jns
fstps
push
mov
cmpsl
mov
sbb
mov
jmp
(bad)  
mulb
sub
push
jp
nop
enter
es mov
fbstp
add
out
pop
lock fisttpl
enter
cmp
lods
xchg
decb
int3   
int
inc
inc
test
pop
inc
mov
and
and
(bad)  
lcall
sbb
add
outsl
cli    
(bad)  
mov
cltd   
sub
xchg
sbb
mov
sub
xchg
push
nop
mov
xor
pop
jle
(bad)
inc
push
sub
cmp
lods
arpl
xchg
cmp
push
out
sbb
pop
and
add
pop
into   
mov
jns
inc
sbb
push
aam
aam
into   
ret
mov
add
xor
popa   
fbstp
mov
insb
cs in
and
movsl
or
insb
js
lret   
test
cld    
pop
push
pop
iret   
outsl
push
daa    
mov
fdivrl
pop
jmp
in
dec
lcall
or
mov
iret   
push
popf   
out
xchg
lods
lahf   
jb
sub
push
and
dec
push
jmp
movsb
divl
xchg
arpl
pop
xchg
sbb
sti    
lods
(bad)  
fs icebp 
vpaddsb
insb
test
mov
into   
stc    
lcall
hlt    
or
repnz aad
in
lods
(bad)  
fs push
inc
sbb
loop
mov
push
stos
mov
add
(bad)  
in
lahf   
repnz stos
addr16 xor
sub
in
mov
jmp
enter
cwtl   
pop
out
mov
push
sub
inc
fcomps
cmp
test
and
and
lea
repnz pusha 
arpl
pop
jg
nop
cwtl   
cwtl   
or
mov
mov
mov
inc
adc
mov
loop
stos
inc
fcmovbe
std    
ds test
cli    
push
sarb
sub
dec
pop
orb
and
outsb
aam
xor
jno
js
dec
cs mov
jecxz
lret   
push
xor
xlat
mov
cli    
stc    
sub
out
lods
lods
xor
xchg
inc
cltd   
push
xchg
test
mov
push
fwait
inc
stos
jae
jno
cmc    
sti    
inc
outsl
xor
adc
subb
pop
cld    
fwait
push
inc
mov
jmp
mov
jp
insb
lods
xor
mov
jg
jmp
or
(bad)  
add
or
outsl
mov
xchg
int3   
pop
mov
mov
icebp  
dec
test
mov
scas
cmc    
pop
in
mov
mov
popf   
jp
insb
cld    
jp
push
sahf   
test
cmc    
inc
sbb
mov
mov
inc
mov
mov
push
and
test
push
popf   
ljmp
push
xchg
test
lea
cmp
mov
xchg
mov
(bad)  
test
cmc    
mov
(bad)  
xor
pop
jno
pop
arpl
jb
jns
jbe
pushf  
repz xor
cwtl   
insl
vshufpd
daa    
push
rclb
(bad)  
repz imul
loope
inc
xor
loopne
dec
ret    
jl
mov
gs cmc 
aas    
dec
outsb
dec
dec
mov
or
mov
subl
(bad)  
cmp
mov
divl
jae
push
subl
lahf   
jl
pop
nop
and
vshufpd
daa    
push
rclb
(bad)  
repz imul
add
dec
(bad)  
fadds
cld    
fwait
push
inc
arpl
jecxz
sub
jp
das    
xchg
push
out
pop
jb
jns
push
out
sbb
lods
ret
cltd   
movsl
(bad)  
jbe
mov
movsbl
les
movsb
adc
pop
mov
int3   
repz pop
or
push
ss xor
(bad)  
jg
sub
inc
jbe
in
into   
aaa    
(bad)  
mov
pop
adcl
ret
mov
or
test
rolb
sbb
loope
cmc    
pop
and
aas    
std    
mov
jge
ss
xor
jb
ret
inc
mov
mov
cmp
movsl
push
or
jno
add
inc
mov
scas
sub
jl
out
dec
lret   
sti    
sbb
mov
pushf  
and
sub
inc
pushf  
sbb
shl
aaa    
test
jecxz
jp
jle
xchg
(bad)  
cmc    
(bad)  
je
dec
fmulp
dec
scas
adc
lahf   
inc
dec
and
xor
mov
inc
lret   
fwait
inc
adc
sub
push
mov
sbb
lea
iret   
and
jecxz,pn
ds pop
xlat
lahf   
ja
dec
movb
xchg
shll
stos
push
out
stc    
stc    
scas
mov
xchg
dec
mov
push
lock loope
dec
cld    
and
lea
iret   
and
jecxz,pn
ds pop
xlat
lahf   
test
lahf   
ja
push
out
icebp  
jl
mov
ljmp
jne
or
stc    
stc    
scas
mov
fild
push
xor
scas
aam
mov
cs scas
jae
xor
jle
sbb
jo
push
push
lds
cmp
dec
jbe
push
in
adc
(bad)  
mov
mov
dec
inc
cli    
mov
dec
fcmovbe
pop
pop
sar
push
dec
pop
sub
adc
xlat
rcrb
rorb
outsl
cs stos
arpl
(bad)  
out
and
(bad)  
popa   
mov
or
add
or
mov
dec
adc
mov
xor
cmp
addr16 xchg
gs into 
pop
adc
adc
pop
inc
jnp
fstps
inc
fcoml
fs icebp 
scas
mov
jmp
mov
add
inc
jo
ds in
(bad)  
aam
movsb
xchg
dec
sub
(bad)  
aam
movsb
sub
test
clc    
cmc    
scas
xor
mov
rolb
xchg
sub
cld    
dec
jnp
mov
outsb
loop
mov
enter
incl
sub
movl
sub
insb
lods
mov
pop
push
push
or
aaa    
(bad)  
jns
shrl
dec
mov
in
pop
dec
add
jb
jp
mov
(bad)  
push
xchg
mov
loop
or
dec
lret
fdivs
mov
xchg
cwtl   
dec
es fwait
(bad)  
sub
mov
jns
adc
cltd   
dec
vhsubpd
push
pop
cmp
sub
mov
inc
push
inc
std    
sub
(bad)  
push
repz dec
pop
jbe
shll
jle
or
or
jmp
lods
test
xchg
push
and
icebp  
loop
popa   
xchg
and
or
mov
dec
inc
out
lahf   
icebp  
inc
cmp
xlat
pop
push
rcrb
or
inc
lret   
lahf   
mov
xor
je
and
mov
add
mov
xor
xlat
enter
into   
add
loopne
pop
fwait
cwtl   
pop
jle
lret
inc
scas
mov
imul
int
jecxz
add
push
jnp
add
pushf  
sub
adc
ljmp
out
lock sub
xchg
aaa    
mov
sub
cld    
dec
jnp
mov
es sbb
and
mov
mov
(bad)  
cmc    
jnp
jns
rorb
pushf  
das    
bound
loope
insl
pop
cmpsb
int3   
imul
popa   
lea
daa    
sbb
fwait
sbb
je
jp
imul
fsubrl
xor
or
repnz xlat
shlb
xlat
iret   
sub
cmc    
inc
sbb
dec
xor
mov
test
orl
add
sbb
or
sub
and
(bad)  
mov
push
dec
add
add
dec
popf   
stos
inc
pop
icebp  
bnd ret 
or
jbe
(bad)  
ja
mov
insb
lahf   
fisttpll
sarb
inc
inc
(bad)  
cmc    
or
lock mov
test
mov
jg
inc
cwtl   
repnz xor
push
xchg
out
cld    
xchg
add
jg
inc
push
fisub
ljmp
gs int3 
adc
fisubr
sarb
out
mov
inc
inc
test
xchg
mov
mov
mov
push
pop
scas
jo
(bad)  
cmpsb
jg
fldcw
inc
xchg
sbb
sub
jb
pushf  
cmpsb
push
fcomip
push
jecxz
dec
je
push
push
roll
push
and
jecxz
(bad)  
out
xlat
iret   
ret    
out
mov
out
xlat
iret   
fdiv
mov
in
cmc    
fdiv
mov
out
into   
jmp
mov
loopne
int
hlt    
xchg
mov
fnop   
xor
rol
xchg
enter
xchg
imul
andl
cmp
cli    
xchg
call
shrl
clc    
push
xchg
pop
adc
adc
hlt    
jae
pop
fsubl
sub
sbb
fdivs
(bad)  
push
aaa    
add
mov
xlat
into   
sbb
push
mov
sbb
rcr
out
jae
(bad)
dec
and
out
dec
add
add
popf   
stc    
xor
stc    
pop
jb
push
mov
addb
pushf  
sub
mov
sub
lea
inc
and
addl
jns
cli    
push
sti    
(bad)  
mov
xor
cmpsb
mov
dec
push
sub
leave  
in
scas
add
(bad)  
arpl
(bad)  
rcrb
add
adc
js
jo
in
jnp
or
or
xlat
mov
fbstp
pushf  
pop
test
ljmp
test
add
icebp  
mov
insl
icebp  
pop
xchg
scas
loopne
lahf   
adc
mov
push
or
ret
sbb
mov
mov
mov
stc    
xor
stc    
pop
jb
push
mov
pop
aad
or
mov
add
es
xor
sub
xchg
add
movsb
mov
pop
int3   
pop
in
test
js
cmp
rcrb
ret    
xchg
popf   
cmpsl
push
add
jl
sbb
das    
rclb
aas    
cmp
out
fistp
mov
cmp
mov
call
lods
sub
mov
mov
(bad)  
mov
loope
lahf   
add
pop
and
bnd jle
lods
or
aad
cltd   
push
mov
add
pop
or
pop
iret   
lahf   
sub
jmp
sbb
fisttpl
push
or
push
push
and
stos
inc
pop
icebp  
das    
scas
(bad)  
cld    
sbb
lds
jne
in
push
adc
hlt    
repnz sbb
jg
sbb
inc
and
js
lods
adc
loop
adc
mov
(bad)  {%k4}{z}
hlt    
lea
xchg
pop
leave  
jno
push
push
push
rolb
repz in
cmp
ljmp
sub
xor
imul
xchg
push
iret   
pop
rcll
jb
xchg
mov
xchg
mov
inc
add
cmc    
jo
xlat
inc
xchg
xchg
inc
mov
sub
imul
xchg
xchg
push
dec
or
lahf   
sub
outsl
add
lock je
xlat
inc
xchg
xchg
xor
lahf   
cs and
mov
xchg
lock addr16 icebp 
mov
and
aaa    
mov
pop
mov
pushf  
adc
fdivrs
(bad)  
mov
pop
das    
fldt
(bad)
idivb
mov
pop
and
mov
inc
jle
out
sub
sarl
rcrb
ret    
test
or
(bad)  
cmp
sbb
adc
repz test
lds
inc
jle
out
sub
sarl
rcrb
jmp
popf   
cmpsl
jp
lea
(bad)  
push
test
(bad)  
ljmp
pop
cli    
or
cmc    
repz test
lds
inc
jle
out
sub
sarl
rcrb
jecxz
popf   
cmpsl
sub
or
sarl
stc    
ljmp
sarb
shrl
ss shr
daa    
cmpsl
push
cmc    
inc
stos
jecxz
shll
push
std    
cmp
shrl
inc
lods
sub
popf   
mov
pop
xor
add
mov
cli    
icebp  
jns
popf   
mov
stc    
pop
jb
push
popl
xchg
xor
ljmp
mov
adc
dec
decb
setne
jns
fcoml
inc
shlb
in
mov
popf   
out
std    
stc    
pop
sbb
mov
inc
lods
stos
add
jnp
scas
sub
lahf   
test
mov
imul
xchg
xchg
lea
call
push
into   
adc
stos
aam
sub
das    
adc
enter
(bad)  {%k4}{z}
stc    
fyl2x  
daa    
stos
mov
outsl
xchg
mov
mov
pop
pop
mov
jbe
movsb
addr16 ss jle
jne
mov
inc
push
push
cmpl
in
mov
sub
inc
xor
(bad)  
fcomi
fsubl
(bad)  
jo
and
mov
xchg
jecxz
out
imulb
in
andl
fnop   
pop
aaa    
mov
and
and
jne
mov
rsm    
add
mov
addr16 icebp 
repnz roll
add
adc
cwtl   
jmp
mov
(bad)  
fcmovnbe
(bad)
(bad)  
mov
inc
mov
jg
cmc    
inc
sar
inc
aaa    
mov
and
mov
mov
jne
mov
rsm    
add
adc
stos
mov
addr16 icebp 
repnz roll
add
adc
cwtl   
jmp
fcoml
fwait
push
(bad)  
mov
inc
mov
(bad)  
stc    
pop
int3   
jnp
xchg
mov
xor
adc
pop
test
rol
add
push
std    
add
cmp
inc
lods
inc
and
addb
lods
je
movsl
sbb
mov
sbb
mov
xchg
movsl
pop
(bad)  
xchg
push
jl
xchg
xor
stc    
pop
pop
push
shlb
hlt    
xchg
int
stos
or
add
movsb
mov
add
jno
pop
shrl
ss scas
xor
push
push
inc
add
inc
pop
icebp  
das    
pop
lods
pop
xor
xchg
sti    
jns
xlat
cmpsl
push
orl
cwtl   
add
xor
repnz insl
je
pop
pop
nop
(bad)  
mov
hlt    
xchg
cltd   
test
(bad)  
jo
mov
scas
push
mov
push
mov
jno
push
mov
pop
mov
push
mov
mov
loopne
insl
mov
lds
pop
sbb
sti    
sarl
clc    
dec
adc
or
adc
lock ljmp
(bad)  
sahf   
cmp
adc
push
mov
(bad)  
xchg
decl
sbb
aad
loop
mov
cmp
pop
and
and
sbb
ss jl
xchg
sub
xor
pop
test
pop
add
movsb
cmc    
adc
dec
and
jle
fstpt
icebp  
scas
lahf   
xor
sbbl
jb
cmp
(bad)  
cmp
iret   
pop
mov
ret    
scas
adc
fdivl
(bad)  
cld    
hlt    
imull
(bad)  
dec
ds mov
icebp  
cwtl   
jle
sbb
jno
push
xchg
repz or
icebp  
xor
add
pop
inc
movl
and
stos
xlat
aaa    
(bad)  
jae
in
push
(bad)  
or
inc
push
add
jno
or
mov
lds
mov
iret   
out
xlat
push
push
aaa    
mov
nop
stos
cli    
cmp
jae
in
mov
aas    
inc
roll
inc
stos
fcmovb
or
pop
dec
clc    
pop
mov
sub
cmpl
int
adc
aam
pusha  
dec
cmp
out
movsl
lods
les
xchg
pop
cwtl   
dec
hlt    
jno
push
xchg
iret   
jo
movsl
jmp
or
cwtl   
ljmp
fidivrl
xchg
dec
push
push
pop
mov
mov
lcall
rorl
xchg
cmpsb
ret    
aam
mov
dec
sub
inc
into   
xchg
repz inc
add
cmpsb
(bad)  
lock lock adc
jecxz
sarl
sbb
insl
mov
mov
cmp
or
dec
or
mov
lods
test
je
cmp
push
sbb
mov
xchg
test
(bad)  
addr16
in
(bad)  
fwait
cwtl   
add
xchg
and
mov
push
js
sbbl
std    
mov
stc    
dec
or
(bad)  
jbe
notl
sbb
push
add
sbb
lods
mov
clc    
add
(bad)  
sbb
fwait
pushf  
(bad)  
sti    
loopne
cmp
xor
fcmovnu
clc    
xchg
mov
inc
out
cltd   
sti    
cs mov
jne
mov
mov
ljmp
(bad)
jne
push
rorb
pop
xor
push
jns
popf   
into   
cli    
imul
call
or
inc
jp
inc
(bad)  
rorl
lea
icebp  
icebp  
dec
lret
outsb
push
sbb
pop
mov
pop
jo
and
inc
cmp
push
add
dec
loopnew
sbb
stos
lea
andb
xor
faddl
loop
add
cmp
lock cli 
sbb
mov
xor
sub
enter
aam
dec
xlat
ds mov
or
cmp
fwait
test
add
inc
repz add
mov
sub
dec
xor
cmp
jbe
jmp
inc
xor
add
in
xchg
or
sub
xchg
ljmp
call
mov
inc
mov
xchg
out
fsubl
mov
movsl
imul
outsl
data16
cmp
jns
xor
repnz lods
mov
nop
imul
mov
test
mov
cwtl   
push
xchg
cmp
xor
lds
mov
test
mov
daa    
mov
xor
stc    
mov
arpl
mov
xchg
stos
adc
gs cli 
push
sub
pop
add
jmp
add
cwtl   
rcll
stc    
lea
mov
das    
sbb
sbb
or
mov
scas
mov
mov
sbb
(bad)  
lcall
and
ds mov
aam
lret
sub
std    
mov
sub
es
mov
in
pushf  
lds
jnp
in
pop
aas    
je
jns
or
cmp
adc
test
cwtl   
scas
mov
js
xchg
test
mov
fldt
out
xchg
pavgw
test
arpl
jmp
arpl
aam
les
mov
xchg
(bad)  
fsubp
je
mov
lret   
pop
jns
xlat
inc
xchg
xchg
lcall
or
mov
aaa    
rolb
fcomps
fcoml
mov
xchg
lcall
(bad)  
fidiv
fimul
ret    
fsubs
mov
jecxz
(bad)  
xchg
shrb
pop
mov
in
into   
sub
jle
call
push
insb
add
rorl
xor
fcoml
fisub
push
xorb
push
cmp
push
pop
cld    
dec
ja
lods
mov
shll
jge
jg
ss scas
(bad)  
xchg
xchg
mov
mov
and
out
test
bound
cmp
push
daa    
add
jp
ja
mov
cmp
jg
xchg
jbe
int
xchg
dec
xor
jge
pusha  
into   
in
mov
mov
fwait
jne
xor
xlat
pop
pop
fs inc
sub
and
pop
int
cwtl   
jns
xor
xlat
pop
pop
mov
mov
cld    
pop
xchg
push
addb
das    
(bad)  
pop
inc
inc
sbb
mov
jbe
jmp
daa    
sub
push
(bad)  
rorb
(bad)  
shr
jecxz
mov
fistp
push
fpatan 
inc
ss leave 
push
add
in
add
fmull
xlat
mov
xchg
mov
movsl
mov
je
popl
mov
cmp
stos
dec
aas    
add
lock mov
lret
lcall
dec
push
push
sub
nop
adc
xor
rcrl
mov
mov
mov
push
insb
add
rorl
or
mov
dec
xchg
int
or
sti    
jns
lock hlt 
les
arpl
jg
adc
sarl
mov
mov
and
dec
(bad)  
aas    
(bad)  
testb
or
jge
aam
aaa    
push
sbb
xchg
fistpll
and
cld    
cmp
push
in
clc    
push
popl
daa    
cmp
adc
xchg
sbb
in
mov
xcrypt-ecb
cmpsl
iret   
jb
sbb
(bad)  
lds
in
in
stos
adc
pop
push
add
xchg
mov
ret    
mov
push
cld    
jle
inc
cwtl   
aad
scas
jle
adc
(bad)  
lds
dec
lock and
push
in
mov
aaa    
adc
lock xor
in
push
cld    
jle
arpl
mov
jle
dec
mov
dec
mov
(bad)  
lea
jmp
xchg
sub
iret   
aam
adc
(bad)  
iret   
movsb
cmp
inc
mov
es and
imul
mov
xchg
daa    
adc
inc
xchg
dec
(bad)  
rorl
aaa    
and
(bad)  
out
lret
hlt    
popf   
cmp
sub
mov
add
lods
inc
jnp
das    
dec
inc
das    
cmp
cmc    
ljmp
daa    
dec
lds
mov
sub
sub
cmpsl
je
fstpt
push
add
dec
jne
lods
dec
in
(bad)  
pushf  
jbe
or
xchg
mov
or
mov
rol
jno
cltd   
adc
sub
out
es loop
pop
stos
mov
jno
pop
mov
jg
pop
push
sbb
leave  
pushf  
out
lea
lods
cmp
and
xor
mov
xor
sbb
rcrb
or
les
or
(bad)  
jg
mov
leave  
mov
mov
lods
lcall
inc
mov
test
pop
imul
(bad)  
jne
inc
in
into   
sub
or
cwtl   
push
push
pop
sub
rorl
xor
mov
lock aam
mov
inc
jbe
(bad)  {%k4}{z}
std    
add
in
inc
mov
imul
hlt    
xor
dec
jae
ja
mov
ret
in
(bad)  
jbe
sbb
or
push
sbb
push
mov
into   
cmp
pop
xlat
dec
fstl
jnp
ret    
mov
(bad)  
nop
inc
in
rorb
pusha  
popf   
inc
pop
shrl
pop
sub
inc
iret   
lret
push
mov
addl
lods
(bad)  
addr16
xchg
outsb
imul
sbb
or
mov
mov
hlt    
pop
mov
je
aas    
lcall
out
pop
mov
xchg
dec
decl
cmp
pop
insl
pushf  
inc
push
cltd   
cmp
add
push
cmpsb
icebp  
xor
add
mov
sti    
scas
pusha  
test
fisubr
js
into   
adc
sbb
pusha  
scas
mov
push
sub
and
shr
mov
sub
dec
jg
and
or
iret   
pop
mov
inc
adc
lods
loopne
sbb
in
movl
cld    
les
and
mov
push
(bad)  
sub
into   
push
cmc    
das    
or
iret   
pop
mov
inc
adc
lods
cld    
out
cmp
push
add
dec
inc
jns
les
and
mov
push
(bad)  
sub
fwait
dec
dec
sub
je
or
mov
fdivrl
into   
sbb
xchg
setb
jecxz
jno
loopne
dec
add
je
gs push
push
xor
pop
ret    
pop
stos
ret
movsl
mov
jge
stos
sarb
data16 stc 
lret   
enter
jmp
cmp
testl
iret   
add
lods
inc
popa   
cltd   
pop
cltd   
push
lods
push
inc
sub
(bad)  
les
lret
pushf  
mov
outsb
and
mov
dec
xchg
add
mov
insb
movl
push
add
repz mov
mov
aam
stos
xchg
jo
and
mov
jmp
push
cmp
xchg
adc
cld    
xor
sub
das    
das    
pop
jns
mov
mov
(bad)  
out
add
out
std    
inc
cmp
pop
push
jge
je
aad
enter
or
jne
jbe
mov
or
pop
adc
or
test
sbb
and
push
add
inc
or
in
xchg
cmp
cmc    
loope
mov
push
push
mov
adc
fwait
dec
ds
aas    
(bad)  
sarb
fldl
or
lahf   
(bad)  
xor
insb
jecxz
outsb
ficomp
xorl
or
scas
jbe
push
and
push
add
popf   
inc
inc
mov
subl
sti    
push
stos
mov
aam
es push
lea
and
push
adc
lahf   
pop
cmp
inc
repnz sbb
mov
(bad)  
or
sti    
pop
cld    
lods
rolb
adc
in
mov
lcall
sbb
xchg
mov
(bad)  
push
testl
(bad)  
dec
or
stc    
subb
mov
cmp
lret
rorl
insb
pop
dec
in
ficomp
jae
or
sub
mov
pushl
sub
fcoml
add
dec
add
fisubr
sub
test
push
jp
xlat
xchg
dec
sub
aad
(bad)  
rorb
pop
jge
add
int
inc
jnp
fisub
and
jp
xlat
xchg
dec
cltd   
outsl
pop
mov
rorb
push
js
fs inc
scas
int
xlat
lret   
ret    
jb,pt
xor
push
push
pop
clc    
mov
gs pop
ret    
pop
mov
mov
(bad)  
jne
das    
into   
int3   
test
mov
iret   
ljmp
clc    
pop
sub
test
stos
mov
mov
insb
adc
lret   
insb
add
pop
lret   
sub
jno
jnp,pt
stos
nop
data16 jb
in
sub
jg
jbe
mov
hlt    
mov
ss insl
into   
pop
xchg
out
cli    
jge
pop
jns
mov
lods
inc
or
cmp
out
dec
xchg
call
push
loopne
orl
mov
loope
mov
imul
repz jl
imul
and
out
jb
xchg
lret   
in
pusha  
stc    
scas
xor
push
jl
fiadd
out
cltd   
mov
xchg
fs sbb
nop
dec
enter
call
mov
mov
mov
scas
add
sbb
les
jecxz
pusha  
fldenv
mov
dec
xor
lock fadd
cmp
das    
jbe
shrb
outsl
adc
and
sbb
add
aad
fidivl
les
sahf   
jo
push
rorb
xor
bound
loope
repnz sub
stos
imul
sub
daa    
sbb
test
(bad)  
sti    
pop
cld    
lods
cmp
pop
mov
inc
(bad)  
cmp
xor
pop
jecxz
repnz and
inc
sbb
push
bound
int
fcomi
adc
test
xor
fwait
dec
test
fcompl
mov
cs dec
jo
in
loop
(bad)  
sti    
arpl
int3   
lea
pusha  
mov
push
int3   
cmp
lods
stos
iret   
je
mov
or
jp
out
into   
(bad)  
cltd   
mov
jnp
fs fst
loope
jp
add
pop
aam
mov
ficompl
xorl
cwtl   
or
insb
scas
sub
jb
rorb
xchg
and
cmp
(bad)  
enter
(bad)  
lahf   
xlat
cmp
mov
pop
insb
or
repnz adc
fsubrl
jl
ret
out
or
sub
fisubrl
aam
pop
dec
jg
hlt    
int
xor
push
pop
mov
int
outsb
out
iret   
pop
mov
jle
decb
sbb
mov
ljmp
mov
shlb
sbb
jg
push
mov
clc    
bound
clc    
cmp
xchg
ror
xor
jmp
lcall
sbb
(bad)  
repnz lret
mov
sbb
mov
bound
incb
xor
rcll
lcall
out
mov
dec
cli    
or
fwait
push
mov
adc
scas
jp
sub
xlat
lret
ret
nop
xchg
ss popa 
jbe
cld    
lcall
xlat
gs ljmp
push
fadds
das    
cmc    
mov
cmp
lock xchg
vphaddubd
test
xlat
adc
test
stc    
js
xlat
cmpsl
addl
adc
outsb
rorl
jne
dec
xor
adc
jecxz
sbb
jmp
sub
ds xor
jb
xchg
add
arpl
jmp
inc
push
or
jecxz
in
shrb
xlat
lock out
xor
loopne
fisttpl
mov
(bad)  
mov
inc
push
add
dec
iret   
daa    
fnsave
(bad)  
(bad)  
ja
dec
sti    
incl
clc    
add
fdivrl
icebp  
fdivr
jbe
fnstenv
(bad)  
(bad)  
pop
push
scas
sti    
push
push
xor
jb
or
cs aad
mov
xor
mov
cld    
mov
mov
(bad)  
inc
dec
or
movsl
or
into   
adc
in
jge
imul
dec
mov
add
xor
mov
mov
push
inc
dec
adc
aaa    
dec
cmc    
mov
fst
clc    
fcompl
shll
or
jmp
shrl
in
mov
fwait
sub
and
mov
pusha  
test
cmpsl
lahf   
jecxz
adc
aaa    
dec
testl
(bad)  
enter
aas    
rcl
dec
pushf  
sub
iret   
in
mov
inc
les
push
push
push
mov
push
fwait
dec
ljmp
or
lahf   
lret   
outsb
push
aad
ja
xchg
pop
xorb
add
cmpsl
fcoml
xchg
es repz aam
imul
sub
(bad)  
cmpsl
fnsave
(bad)  {%k4}{z}
fcmovu
loop
outsb
rcrl
xchg
es repz aam
imul
sub
fiaddl
pop
iret   
scas
and
cmp
scas
jbe
dec
adc
dec
sub
scas
or
add
(bad)  
jge
xchg
sbb
xor
mov
jae
jle
(bad)  
popf   
dec
ds int3 
stos
imul
loop
in
imul
fdivrl
push
mov
(bad)  
shlb
es dec
clc    
lret   
(bad)  
ror
cli    
mov
pop
lea
popa   
dec
pop
cld    
jle
pop
lret   
cmp
out
jne
in
inc
stos
sbb
rcr
cmc    
rdmsr  
sub
mov
bound
icebp  
bt
std    
fcmovnbe
ret
repz sbb
jle
add
call
ljmp
jl
inc
fcoml
add
jmp
xor
leave  
mov
psubsb
xor
sub
call
push
sub
(bad)  
and
pop
push
loope
jl
pop
xor
add
push
sub
in
sbb
and
add
lods
jg
or
xchg
xchg
out
jmp
(bad)
push
test
subb
test
xlat
iret   
loop
rol
insl
imul
not
popa   
call
jp
jns
dec
mov
stos
mov
fs jle
insl
mov
jmp
xor
inc
inc
cltd   
sub
xor
cmc    
push
lock
sti    
jns
lret
xor
push
fcmovnbe
dec
ljmp
cmpsl
nop
mov
add
stos
lret
pop
sar
jns
lret
xor
xchg
pop
inc
mov
cltd   
or
aam
cli    
adc
dec
mov
fcom
ffreep
inc
xchg
mov
mov
icebp  
bt
std    
fildl
sbb
pop
imul
sub
(bad)  
imul
inc
xlat
dec
stos
(bad)  
mov
leave  
sub
lret
pop
cmp
dec
adc
aaa    
dec
testl
faddl
pop
dec
dec
ljmp
push
xor
jge
pop
loopne
mov
jp
xlat
fildl
lahf   
(bad)  
hlt    
sbb
inc
stos
rcll
insl
or
pop
nop
stos
ret    
in
pop
mov
jle
movsb
sbb
fisub
pop
jle
sbb
imul
push
lds
cmp
outsl
lret   
xchg
(bad)  
mov
or
movsl
pop
lock sti 
mov
into   
scas
cmc    
(bad)  
mov
mov
add
scas
push
(bad)  
iret   
dec
repnz decl
jg
inc
or
dec
push
ljmp
insl
push
mov
add
inc
stos
rcll
sub
test
adc
mov
cmp
or
lds
push
adc
inc
cmp
mov
movsl
scas
(bad)  
loope
repz xlat
iret   
push
mov
add
(bad)  
cmp
pop
mov
and
xor
inc
fcomps
pop
sub
inc
movsl
inc
mov
lret
les
jecxz
repnz and
inc
std    
and
outsb
pop
(bad)  
fimul
movsb
or
lret   
xchg
(bad)  
mov
imul
xor
stos
pop
mov
ficompl
xorl
inc
test
fcompl
and
or
lahf   
fldl
ret    
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
(bad)  
mov
and
push
fimull
faddl
pop
dec
dec
ljmp
push
xor
jge
int3   
andb
fimul
aam
aad
jg
cmp
mov
movsl
scas
(bad)  
loope
repz xlat
iret   
push
mov
add
(bad)  
cmp
sub
inc
in
(bad)  
aaa    
and
es repnz mov
xor
mov
imul
adc
das    
cld    
mov
out
aam
push
scas
repz faddl
stc    
fisubr
ret
jmp
xchg
aam
sahf   
test
orl
xor
adc
pop
or
mov
sub
push
call
sbb
je
sub
push
cmp
movb
test
mov
cltd   
dec
repnz shl
fidivr
ds fsub
mov
inc
int
sub
aam
and
xor
sbb
ret    
rcr
es not
enter
sub
mov
(bad)  
aas    
lods
ljmp
inc
mov
roll
cmpsl
jbe
cmp
lret   
lea
and
mov
out
cmp
das    
pop
jp
cmc    
push
jnp
mov
or
mov
and
xor
loop
cmc    
inc
sbb
push
ljmp
jecxz
popf   
icebp  
scas
pop
sub
in
pop
insb
pop
aam
xor
sbb
or
sub
js
xchg
lock daa 
xchg
lods
fnstcw
call
push
(bad)  
mov
adc
shlb
int3   
lea
(bad)  
repz mov
outsb
sub
sub
aam
sub
cmp
rcr
add
xlat
(bad)  
adc
xor
pop
push
cmp
(bad)  
xor
test
stos
xchg
(bad)  
cmp
shrl
in
mov
insb
push
pop
(bad)  
rorl
jno
imul
stos
jmp
out
daa    
inc
mov
cmp
cmp
aaa    
mov
inc
jns
xchg
dec
lahf   
adc
mov
(bad)  
or
jl
add
cltd   
and
mov
push
icebp  
add
das    
and
aam
cmp
repz xchg
inc
dec
aas    
shr
insl
xlat
ret    
jo
ret
push
jne
sbb
jnp
mov
jae
jge
aad
xchg
movsb
lock jns
inc
add
mov
mov
loope
(bad)  
lock cmc 
inc
orb
pop
jmp
fbld
and
xchg
notb
lcall
jnp
scas
inc
xor
mov
out
insb
(bad)  
sahf   
movsl
and
fidivrl
sbb
aaa    
mov
fldcw
adc
xor
sti    
dec
adc
popf   
xor
(bad)  
push
testl
cmc    
pop
or
fcoml
pop
cmp
insb
mov
add
data16 mov
mov
pop
out
rol
rorl
outsl
test
push
cmp
test
insl
mov
and
call
(bad)  
mov
adc
push
push
lock fadd
add
pop
ret    
jg
lret   
mov
lds
ja
dec
sbb
daa    
or
mov
imul
(bad)  
pop
mov
andb
loopne
cmp
and
jno
mov
mov
push
cmp
repz ss loop
ficom
or
loop
and
out
dec
stos
lds
push
rorl
in
(bad)  
outsb
(bad)  
das    
jno
fstps
and
jno
adc
ds das 
lods
dec
(bad)  
push
jns
push
adc
(bad)  
pop
cs push
or
push
pop
icebp  
or
inc
lret   
pop
lahf   
sub
push
or
dec
in
ret    
lds
add
push
cmp
(bad)  
das    
ret    
lret
mov
mov
sub
mov
stos
stos
push
sti    
xor
adc
sbb
in
ds push
xor
ljmp
sbb
cs push
add
loopne
andl
ficompl
push
les
clc    
ss ljmp
xor
out
aaa    
js
inc
xor
xor
sti    
cld    
shrl
shl
add
arpl
mov
rcrb
mov
sub
imul
xchg
jge
mov
cwtl   
inc
dec
lods
movsl
sub
stos
adc
mov
sbb
mov
or
dec
arpl
popf   
fsubrl
insb
je
mov
sub
js
or
jmp
aaa    
test
mov
fldcw
pop
pop
mov
outsl
mov
push
or
(bad)  
cmpsb
pop
imulb
mov
cltd   
js
test
(bad)  
mov
or
push
lock xchg
pop
adc
insl
cs stos
mov
movl
js
add
adc
dec
(bad)  
iret   
cmp
and
sti    
(bad)  
je
xchg
push
fs inc
(bad)  
jae
lret
mov
push
cli    
jg
(bad)  
mov
divb
pop
xchg
sub
sub
mov
sub
mov
cmp
daa    
jmp
lds
out
adc
xchg
or
pushf  
cmp
out
dec
test
cld    
int
out
sbb
mov
lahf   
in
imulb
int3   
jmp
cmp
jge
mov
mov
(bad)  
mov
leave  
sbb
fstps
sti    
push
xlat
pop
sti    
lret   
jbe
je
pop
int
add
aad
das    
inc
es xchg
mov
lahf   
int
fiadd
lea
push
xchg
ffree
lds
xchg
(bad)  
pop
int
dec
call
dec
xor
mov
nop
popf   
jbe
xchg
sub
iret   
add
aas    
dec
jmp
repz lret 
pop
cmpsb
popl
xor
lods
or
xchg
stc    
pop
int3   
add
inc
mov
mov
rorb
pop
cmpsb
and
(bad)  
ret
xor
cld    
push
out
mov
dec
mov
outsl
cli    
fs pop
xchg
sub
je
pop
fstps
push
mov
ljmp
inc
lods
add
stos
xchg
movsb
out
(bad)  
dec
subl
xchg
xchg
test
mov
lds
scas
and
sub
iret   
call
xchg
lods
pushf  
test
sahf   
and
imul
ror
aaa    
les
or
aaa    
mov
iret   
xchg
aam
sub
mov
xor
xchg
or
push
scas
pusha  
mov
fsincos 
jae
(bad)
jno
addr16 ds adc
aam
xlat
popa   
adc
pop
enter
lret   
and
sub
lret
dec
lea
lea
stos
mov
xchg
sub
dec
dec
out
nop
les
mov
jns
jnp
lds
addr16 push
dec
jge
(bad)  
aaa    
stos
sbb
cmp
divl
jb
push
add
test
pop
add
or
adc
sbb
cmp
sbb
loope
arpl
lcall
hlt    
sti    
cwtl   
xchg
std    
cmpsl
add
test
inc
(bad)  
repz sbb
mov
cmc    
and
push
out
iret   
test
dec
test
fsubs
inc
es data16 cmp
loopne
pop
jecxz
aam
mov
in
fimull
(bad)  
jg
adc
mov
push
xchg
idivb
jno
stos
mov
or
dec
cli    
sahf   
lret
int3   
int
xor
mov
xchg
dec
xchg
sub
cmpsb
mov
mov
(bad)  
or
mov
jae
mov
jno
xchg
ficompl
xorl
cwtl   
fild
leave  
xchg
sub
cltd   
repnz mov
adc
aam
test
in
test
mov
lahf   
adc
fs xchg
dec
daa    
mov
inc
add
push
movsb
and
(bad)  
xchg
pop
leave  
jno
push
(bad)  
repnz imul
inc
enter
js
dec
sub
push
ret
rorl
push
sub
sub
imul
enter
imul
decb
mov
rcll
fwait
adc
mov
jg
inc
inc
push
aam
popl
js
fbstp
mov
cmpsl
lahf   
arpl
rol
add
jbe
adc
iret   
aaa    
xchg
adc
ficoml
cmp
pop
ljmp
lret   
or
aaa    
inc
push
push
test
sarb
adc
mov
inc
out
(bad)  
repz jb
sbb
push
mov
lret
(bad)  
mov
iret   
(bad)  
jbe
in
ss stos
push
test
xor
pop
mov
mov
sti    
push
cltd   
mov
dec
in
push
das    
rclb
iret   
dec
dec
jae
(bad)  
repz lret 
inc
call
nop
lock iret 
(bad)  
sarl
aam
cmpsl
(bad)  
daa    
mov
sbb
mov
sbb
or
enter
adc
dec
cmp
mov
fsubrl
mov
test
loop
gs int
inc
sbb
loop
mov
ljmp
cmp
dec
cld    
add
push
ret    
or
nop
xchg
ss popa 
jbe
mov
stc    
icebp  
add
addr16 jnp
arpl
sahf   
movsb
mov
adc
push
data16 jno
sahf   
imul
(bad)  
cltd   
out
mov
jg
inc
aas    
jp
ja
lods
andb
aam
jmp
inc
xchg
scas
lcall
mov
pusha  
mov
daa    
push
mov
xchg
inc
sub
dec
jnp
adc
mov
insl
and
ja
shrl
or
jo
push
ljmp
popf   
nop
test
pop
push
push
add
scas
xor
pop
stos
notb
mov
mov
push
sbb
xchg
xor
jl
ret    
fsubrl
dec
je
les
and
or
(bad)  
std    
(bad)  
mov
mov
xchg
dec
data16 mov
pop
insl
fisttpl
jnp
mov
pop
aam
hlt    
popa   
test
fstpl
mov
jae
aas    
mov
sub
(bad)  
les
jns
(bad)  
mov
jl
repnz pop
jo
and
mov
adc
adc
mov
jnp
aas    
roll
sub
in
fimul
mov
stos
(bad)  
les
lret
leave  
mov
test
repnz or
add
outsb
fistpl
sub
cmpsl
dec
mov
adc
(bad)  
repz lret 
or
popf   
pop
repz sarb
mov
out
xlat
ss sub
iret   
in
nop
int
jg
add
bnd je
pop
mov
hlt    
or
cmp
mov
mov
cmpsb
or
es push
sub
pusha  
mov
sbb
aad
ret    
(bad)  
cli    
inc
sub
rclb
stc    
scas
xor
jle
stos
movsl
jmp
fbld
or
push
sub
pop
xlat
mov
and
cmp
in
subl
pop
aad
ret    
(bad)  
cli    
inc
sub
xorl
xchg
sbb
and
mov
xchg
jl
icebp  
pop
in
insl
les
pop
pop
iret   
push
push
mov
es pop
clc    
scas
or
(bad)  {%k4}{z}
pop
adc
mov
inc
addr16 xor
clc    
push
into   
push
in
das    
cmp
adc
and
(bad)  
out
(bad)  
lock scas
insb
or
and
mov
push
or
cmpl
mov
add
(bad)  
xor
(bad)  
sub
lea
lahf   
xchg
jnp
adc
aas    
lret
mov
sbb
jge
push
(bad)  {%k4}{z}
les
mov
imul
inc
mov
outsb
loop
mov
sub
sub
mov
imul
insl
mov
sti    
push
cltd   
mov
rorl
idivl
fldenv
xor
repnz lods
sti    
xchg
push
inc
sbb
pop
mov
ds int3 
cmp
or
adc
gs hlt 
xor
add
jge
sbb
xor
lock sub
xchg
dec
xor
repnz lods
sti    
cmp
xchg
jae
(bad)  
repz lret 
xchg
push
jl
repnz pop
jo
and
mov
or
push
mov
xor
stos
adc
mov
outsb
sub
or
or
pop
faddl
sarb
mov
sub
test
ljmp
jmp
cmp
xlat
lods
push
in
mov
xchg
popa   
in
mov
xor
mov
jg,pn
and
sbb
cld    
jl
pop
push
sub
scas
lea
cmp
sti    
push
stos
mov
repz popf 
cld    
pushf  
das    
or
popf   
adc
in
pop
push
jne
inc
aam
stc    
mov
sbb
pop
or
rcll
leave  
jg
mov
fsubrl
in
mov
divb
test
mov
jns
fidivr
mov
negl
mov
out
push
add
loopne
cs
lret
rclb
not
mov
imulb
lret   
out
mov
xchg
iret   
sbb
sub
imul
and
faddl
insl
add
mov
unpckhps
push
(bad)  
mov
stc    
repnz adc
adc
les
mov
ret
pop
mov
pusha  
add
pop
ror
pop
xchg
dec
cmp
and
mov
and
aas    
je
insb
pusha  
add
fwait
mov
mov
mov
pop
rolb
ljmp
ficoml
sub
or
outsb
lea
outsl
jg
or
int
mov
push
jmp
mov
mov
adc
test
xor
or
(bad)  
cmp
adcl
cmpsl
inc
repnz sub
inc
(bad)
popa   
sti    
lods
add
or
int
pop
add
aaa    
stc    
shrl
push
fidiv
inc
sbb
adc
pop
dec
lods
(bad)  
rol
jp
ljmp
mov
das    
stc    
iret   
out
xlat
cmpsl
cmpsl
pop
(bad)  
enter
(bad)  
insl
mov
repz std 
rorb
(bad)  
in
inc
xlat
mov
xlat
int3   
cmp
mov
push
sub
sub
adc
jne
xchg
sbb
dec
dec
pop
xor
mov
lahf   
push
inc
mov
dec
xor
jecxz
adc
pop
aas    
popf   
outsl
sub
push
imul
fimull
mov
outsb
mov
pop
sub
call
or
push
ficomp
inc
and
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sub
cmc    
mov
insb
neg
push
jp
push
inc
push
push
jo
insb
pop
divl
inc
adc
jae
or
sub
divl
sub
cmp
sbb
mov
aaa    
sti    
add
daa    
lret   
bnd jl
inc
mov
or
xchg
push
(bad)  
pop
jmp
test
lea
mov
inc
xlat
sbb
mov
in
mov
aad
push
adc
insl
ret
ja
fisubr
imul
mov
repnz lret 
mov
repnz fdivr
and
sub
hlt    
xor
out
stc    
cltd   
in
or
mov
cmp
jecxz
cmp
bound
lds
les
cmc    
fdivrl
data16 out
popa   
pop
xor
cmc    
sub
lea
scas
jmp
sbb
jns
xlat
inc
lea
and
lods
fmulp
push
(bad)  
daa    
adc
add
lds
dec
mov
into   
xchg
sarb
cmpb
loope
fistpll
jbe
out
sub
pop
and
icebp  
je
mov
cmpb
inc
inc
add
mov
in
jmp
jno
jo
dec
ljmp
or
push
pop
aam
jle
(bad)  
inc
mov
pop
roll
lret
scas
call
aam
sbb
(bad)  
addr16 xchg
lods
sub
cltd   
and
jo
push
cwtl   
loopne
cmp
in
xor
out
jmp
int
movsb
push
mov
mov
dec
shrl
jg
ljmpw
in
xchg
pop
aaa    
sub
fildl
push
mov
fcoms
test
in
jae
dec
and
in
mov
es sub
hlt    
xor
out
stc    
mov
leave  
and
add
(bad)  
jp
in
mov
sbb
je
and
mov
and
pop
mov
in
mov
aam
push
es sub
hlt    
xor
out
stc    
mov
mov
les
mov
sbb
shlb
push
es sub
test
test
out
stc    
inc
gs mov
les
mov
sub
sarl
adc
je
and
dec
cmp
mov
and
ds dec
cmp
jp
jge
mov
or
cmpsl
jno
add
sarl
mov
cwtl   
ss scas
mov
xlat
(bad)  
cmc    
xchg
ds out
sub
xchg
divb
xlat
cmpsl
std    
in
int3   
stos
aam
outsb
jo
mov
addr16 xchg
lods
(bad)  
jae
and
pushf  
popa   
(bad)  
add
or
adc
adc
xchg
or
add
pop
mov
je
stos
mov
icebp  
scas
je
jp
fs
enter
imul
jl
and
jge
in
xlat
and
addl
jp
pop
stos
sti    
faddl
int
or
clc    
loopne
outsl
out
or
xor
sub
dec
testl
mov
fdivp
sbb
out
pop
and
jp
in
aam
and
adc
fwait
sub
and
shr
xchg
fcompl
(bad)  
mov
mov
aaa    
and
mov
mov
xlat
pop
and
jp
jmp
pop
mov
sub
and
(bad)  
add
sub
cmp
mov
das    
push
verr
inc
push
verr
imul
rcl
push
sub
aas    
adc
mov
movsb
sar
jae
or
sub
lock repnz iret 
dec
ret    
or
mov
loop
loopne
out
(bad)  
addr16 nop
dec
push
and
mov
dec
cmpsl
(bad)  
and
mov
pushf  
inc
pushf  
loope
les
add
and
rcrl
addr16
cwtl   
stos
lret   
outsl
nop
jle
push
sub
xchg
dec
imul
pop
add
test
cmpsl
or
jecxz
clc    
mov
mov
pop
movsb
pop
popf   
(bad)  
aam
dec
enter
pop
jae
aaa    
push
sti    
jp
sub
xchg
(bad)
fcompl
dec
or
sub
insb
dec
mov
popa   
div
and
(bad)  
dec
mov
inc
inc
cmp
push
test
fnstcw
and
daa    
ja
push
outsl
jae
dec
repz daa 
sbb
mov
mov
mov
je
xlat
xlat
lret   
or
loop
mov
pop
cmp
jns
mov
dec
in
push
lret
sub
jns
rorb
or
bound
dec
dec
out
inc
sbb
and
mov
iret   
movsb
int3   
pop
or
dec
and
jle
sti    
mov
sbb
mov
rclb
cld    
cmpsl
cmp
sub
cmpsl
jmp
xor
pop
scas
iret   
fdiv
mov
fwait
sub
and
popa   
(bad)  
out
scas
fisttpl
add
stos
mov
aas    
add
idivb
cmp
je
std    
mov
cs xchg
lret   
cld    
mov
out
aam
jl
sub
xor
sarb
rorb
out
jmp
jecxz
lahf   
ret    
xchg
cltd   
jecxz
lret   
jnp
ljmp
lret
dec
out
jle
or
adc
lods
ret    
aad
mov
jno
mov
push
cmp
or
or
pop
adc
jle
insb
adc
dec
mov
pop
mov
out
or
in
(bad)
rolb
repz xchg
hlt    
xor
dec
push
cmc    
adcl
and
and
cmp
out
subl
inc
mov
push
sub
iret   
sbb
imul
inc
ret    
cltd   
cmpsl
scas
int3   
push
movsl
or
arpl
aas    
aad
fidiv
fadds
aad
push
jp
ret
mov
(bad)
xorl
(bad)  
jbe
aad
adc
nop
pushf  
arpl
stos
fist
adc
out
enter
je,pt
xlat
add
dec
xchg
inc
mov
clc    
stc    
clc    
cwtl   
ljmp
(bad)  
test
imul
or
arpl
mov
pop
mov
xchg
mov
xchg
mov
and
lods
cli    
adc
cltd   
movsl
lahf   
push
in
mov
lret   
icebp  
outsl
push
stos
aad
mov
sub
out
jns
mov
adc
out
and
jb
outsl
jne
out
jp
das    
jno
xchg
cmc    
cmp
fbld
out
sbb
cmp
xchg
xchg
repnz add
sub
shr
stc    
mov
inc
sbb
or
les
bound
mov
dec
ljmp
(bad)  
int
mov
ljmp
ljmp
adc
imul
js
ja
(bad)  
and
je
mov
xchg
stos
dec
popf   
repnz stos
scas
lret   
sarb
add
inc
and
(bad)  
lock iret 
mov
ret
xor
mov
hlt    
xchg
jecxz
xor
ss mov
cmc    
ja
out
lahf   
dec
pop
jns
mov
xorl
pop
or
dec
and
jle
fxam   
mov
loope
adcl
daa    
push
pusha  
movsb
jl
fnstcw
scas
sbb
clc    
push
push
adc
mov
mov
inc
mov
lods
push
pop
imul
cmp
jl
lcall
enter
out
mov
cld    
mov
scas
jbe
(bad)
aas    
das    
jb
pop
jno
pop
aad
dec
test
jno
push
sahf   
or
dec
inc
mov
or
jp
stos
(bad)  
testb
dec
mov
and
dec
daa    
xchg
mov
or
lahf   
dec
add
call
test
pop
pop
gs out
dec
mov
adc
imulb
(bad)  
icebp  
pop
sbb
ljmp
test
mov
sbb
xchg
mov
test
mov
sbb
lock xor
notl
mov
cmp
aad
gs mov
jge
xor
and
fisubr
cmpsl
loope
sbb
fildll
jbe
movsb
fs repz and
lods
arpl
mov
inc
pop
addr16 cmp
inc
xchg
xor
insb
cmp
test
mov
(bad)  
jp
xchg
jge
gs in
sbb
xchg
bound
sbb
and
dec
inc
cld    
lods
push
pop
sbb
jg
(bad)  
out
pop
mov
test
sbb
sub
mov
ror
xor
out
repz or
cld    
jp
stos
sbb
stos
and
mov
mov
in
sbb
xchg
pop
enter
or
push
jbe
and
pop
xor
es mov
sbb
mov
xchg
dec
imul
scas
jae
inc
and
out
mov
and
pop
xor
imul
lds
pop
out
jb
daa    
push
std    
test
pop
ds sbb
and
xlat
xor
sub
movsl
jecxz
shl
inc
pop
pop
push
loope
data16 jle
jbe
mov
cli    
(bad)  
push
popa   
icebp  
lret   
int
ljmp
and
add
jg
dec
cltd   
mov
loope
rcll
aas    
sti    
push
stos
mov
jae
pop
in
mov
xlat
push
ja
insb
pop
push
dec
fxch
cwtl   
mov
insb
or
mov
inc
mov
xchg
addr16 popa 
ljmp
arpl
decl
mov
mov
loope
fimull
out
pop
cmpsl
(bad)  
clc    
pop
aam
hlt    
imul
icebp  
xchg
insl
sub
adc
pop
test
rcrl
mov
mov
popa   
test
mov
jnp
ret    
mov
jp
xchg
neg
inc
dec
pop
aaa    
cltd   
xlat
imul
xor
sbb
cmpsl
popf   
and
jne
mov
jle
and
aas    
sbb
xor
inc
pop
mov
sub
(bad)  
xlat
cmpsl
push
inc
(bad)  
jo
push
mov
adc
mov
pop
decl
mov
sub
push
push
into   
xchg
push
adc
sbb
decb
sbb
pop
dec
std    
lret
mov
cmpsb
sbb
mov
pop
(bad)  
adc
aaa    
mov
fldcw
jae
ficompl
(bad)  
fldcw
xor
cmp
aaa    
cltd   
pop
or
lods
mov
fsubr
(bad)  
clc    
or
stos
in
xchg
pop
push
inc
push
in
jbe
pop
inc
lret
xchg
cmp
mov
xchg
adc
aas    
je
out
adc
jge
pop
xchg
cmpsl
in
lahf   
sub
outsb
push
or
out
sub
repnz cmp
push
verr
ror
imul
cmc    
mov
gs cmp
cwtl   
stc    
lcall
fsubr
add
outsb
inc
push
jne
(bad)  
push
and
mov
ds int3 
fdiv
or
jno
or
jae
stos
pop
jne
pop
push
sbb
je
xchg
lahf   
aaa    
ss hlt 
xor
fwait
sub
movd
ficompl
repnz adc
clc    
orl
cmp
add
bound
das    
mov
aad
sub
mov
clc    
push
es mov
fs and
jno
fisttpll
aas    
inc
ljmp
sbb
inc
bound
and
imul
cld    
aas    
inc
cli    
xchg
cmp
or
es mov
in
push
fcompl
pop
xor
mov
test
push
pusha  
push
(bad)  
mov
adc
push
fwait
jno
jmp
ss xor
pop
dec
add
inc
xchg
cmp
push
push
xchg
je
sbb
rol
int
jnp
xchg
jl
push
out
push
adc
sbb
jns
bound
and
in
std    
(bad)  
arpl
mov
outsb
mov
push
add
sti    
xchg
aaa    
iret   
dec
add
jge
lret
mov
adc
lods
jmp
and
push
mov
mov
aam
or
ds push
(bad)  
mov
cli    
fimul
sar
cmpsl
push
jp
push
mov
fildl
adc
(bad)  
mov
jmp
popa   
pop
cmova
aam
xor
das    
aam
data16 int3 
cmp
sbb
es inc
adc
sar
and
lds
out
inc
daa    
lock ret
mov
jmp
jno
in
mov
in
enter
call
es in
insb
imul
xlat
fldenv
xchg
cli    
pop
(bad)  
jnp
divb
dec
fwait
insb
pslld
pop
pop
es sbb
adc
outsb
inc
test
das    
sti    
jns
int
sub
aam
outsb
mov
fsubrs
fsubp
(bad)  
in
jge
addr16 add
aad
mov
pop
aad
into   
xor
inc
dec
adc
decb
pop
int3   
arpl
loopne
push
mov
add
addr16 fnsetpm(287 only) 
or
inc
push
inc
stos
aad
fldenv
(bad)  
fidivr
js
xlat
push
xor
push
and
sub
lea
cmovle
call
xor
mov
test
ja
pop
data16 sub
push
ret
repz mov
hlt    
cld    
(bad)  {%k4}{z}
(bad)  
jg
push
and
xor
sub
pop
bound
sbb
dec
in
or
adc
mov
test
mov
and
mov
stos
bound
js
js
pop
dec
ljmp
(bad)  
int
mov
(bad)  
lods
mov
mov
push
xchg
loopne
mov
sub
orb
or
(bad)  
aaa    
iret   
mov
dec
or
pushw
es
(bad)  
in
inc
into   
lret
call
jl
dec
jns
rorb
jne
bound
loope
push
and
(bad)  
xor
daa    
sbb
(bad)  
mov
push
inc
(bad)  
out
xlat
iret   
fdiv
mov
scas
push
(bad)  
fdiv
mov
sub
and
shl
f2xm1  
int
xor
cmp
insb
pop
ret
cld    
sbb
or
sub
sbb
data16 jmp
or
adc
shrl
fcmovu
jbe
sbb
xchg
dec
xchg
sub
(bad)  
mov
or
lret
push
nop
sarb
scas
push
push
inc
jl
jns
mov
loopne
cmp
gs lcall
mov
mov
jge
in
sarb
or
jae
test
lea
mov
sbb
outsl
mov
int3   
mov
out
cli    
mov
nop
test
mov
push
sub
mov
pop
jecxz
mov
add
mov
pop
pop
add
into   
arpl
fldl
lods
xor
mov
sarl
jg
cmpsl
sbb
loope
lds
dec
jp
stc    
push
lret
int
dec
mov
ss loope
mov
cmp
ljmp
fadds
jae
aaa    
ret    
sub
test
fwait
adc
and
add
cmpsb
mov
pop
jo
xchg
bound
leave  
inc
mov
out
adc
xchg
js
inc
stos
sub
jno
xchg
pop
arpl
xchg
pop
pop
aam
jg
das    
es add
pop
sub
bound
push
cmp
popa   
into   
mov
mov
or
push
push
sub
cmp
cmp
test
mov
repz jne
xor
hlt    
mov
sub
(bad)  
aaa    
xlat
iret   
fadd
adc
pop
push
mov
mov
(bad)  
out
xlat
out
push
sub
add
(bad)  
lret
repnz add
stos
scas
rorl
fstps
xlat
iret   
shl
sbb
xchg
cmp
nop
out
pop
lahf   
div
js
fdiv
mov
inc
aaa    
mov
xlat
iret   
faddl
daa    
dec
repz
out
xlat
lret   
out
sub
add
mov
push
mov
xchg
ret    
inc
or
xlat
iret   
fmull
adc
cmp
pop
ret    
push
addr16 neg
js
fdiv
mov
(bad)  
popa   
cmp
xlat
iret   
fsubrl
mov
repz
out
xlat
pop
mov
sub
iret   
out
xchg
add
mov
fs inc
mov
mov
iret   
fdiv
xchg
scas
or
pop
or
xlat
iret   
mov
jmp
(bad)  
out
ja
xchg
push
mov
add
fdiv
mov
mov
mov
xlat
iret   
fmull
push
xor
dec
repz
out
xlat
mov
push
sub
mov
mov
mov
iret   
fdiv
dec
daa    
icebp  
dec
sbb
int
or
xlat
iret   
test
cmp
mov
imul
xchg
stc    
loope
xor
hlt    
mov
movsb
daa    
(bad)  
aaa    
xlat
iret   
fcoml
stos
push
mov
dec
repz
out
xlat
pop
(bad)  
in
pushf  
inc
jb
add
pop
xchg
fs sub
iret   
fdiv
pop
das    
aad
shl
pop
or
xlat
iret   
pusha  
les
xchg
cmp
xlat
lcall
packssdw
mov
(bad)  
bound
push
pop
mov
xlat
iret   
fcoml
push
fmull
out
xlat
fildl
shrb
(bad)  
push
mov
dec
mov
iret   
fdiv
imull
cmpsw
xor
add
adc
gs lret
fnstcw
iret   
mov
ljmp
adc
clc    
fbstp
mov
fidivr
or
lods
cmp
rolb
jg
lods
fdivl
gs cmp
cmp
pop
iret   
xchg
add
lret
mov
ds sbb
mov
std    
(bad)  
cmp
xchg
(bad)
comiss
(bad)
jecxz
push
out
and
out
add
lds
pop
cmp
xor
mov
loopne
push
ss or
in
jl
xor
adc
int3   
fisttpll
jg
mov
out
sbb
cmc    
adc
or
sti    
fdivrl
mov
cli    
clc    
fdivp
adc
out
into   
fdivrl
mov
in
(bad)  
cmc    
adc
pop
mov
xchg
into   
fdivrl
mov
nop
subb
push
out
into   
fdivrl
mov
mov
ss
lea
mov
shr
mov
out
xchg
and
mov
lock sti 
xor
push
popa   
in
mov
sub
sub
mov
fdivrl
mov
pop
add
adc
lahf   
addr16 sub
fdivrl
test
or
addr16 lret
adc
outsl
lahf   
sub
fdivrl
jbe
lret   
add
adc
pop
jns
mov
jno
xor
ret
ss leave 
push
jno
cmp
icebp  
mov
dec
mov
addr16 lret
sahf   
lods
sbb
or
dec
or
test
pop
pop
jno
or
xchg
mov
popl
imulb
sub
or
and
inc
sub
mov
hlt    
mov
out
xlat
or
sbb
imulb
add
pop
es add
or
or
repnz pop
pop
pop
pop
loop
ret    
out
xlat
iret   
fdiv
dec
inc
scas
xlat
iret   
fdiv
les
jae
(bad)  
data16 or
in
out
pop
and
inc
push
jle
or
push
testl
mov
xchg
scas
mov
ljmp
xor
cmpsl
jle
iret   
(bad)  
hlt    
sub
loopne
cmp
inc
sbb
or
xchg
mov
popl
cs sub
test
je
or
pop
lret
sahf   
es dec
frstor
subl
pop
pop
insl
lret   
rclb
add
or
aaa    
push
sub
xchg
xchg
movsb
and
jno
lret   
jp
sahf   
mov
sbb
dec
imul
xchg
pop
pop
xchg
jnp
rclb
inc
sbbl
lret   
or
pop
(bad)  
mov
jbe
das    
push
mov
in
jno
or
sarl
dec
fistpll
aaa    
mov
jae
jnp
daa    
inc
mov
adc
or
jl
scas
adc
cmpl
jne
loop
pushf  
mov
jmp
pushf  
(bad)  
je
(bad)  
rcrl
dec
jns
or
jmp
rcr
aaa    
(bad)  
imulb
mov
xchg
cmpsb
and
lods
lret
and
out
mov
mov
das    
out
push
in
xchg
out
movsl
dec
add
dec
pop
jns
mov
(bad)  
fiaddl
add
stc    
inc
or
dec
and
jle
jmp
sub
jecxz
adc
push
(bad)  
insb
pop
(bad)  
fwait
and
or
sub
loop
sub
fdivr
push
cmp
std    
movsb
pop
mov
and
lcall
xchg
cld    
(bad)  
lods
lret
cmpsb
hlt    
cs leave 
push
je
das    
(bad)  
xor
sub
ficompl
xorb
cwtl   
xor
sub
popf   
mov
pushf  
adc
aam
ret
sbb
inc
sarb
sub
and
insw
stos
mov
adc
(bad)  
xor
sti    
or
dec
sub
xchg
test
and
sbb
test
movb
ds
xor
ja
and
psrad
cwtl   
add
popa   
add
std    
cli    
data16
push
sbb
push
push
xchg
push
or
aaa    
test
dec
jnp
inc
pop
movsl
outsb
(bad)  
lods
popa   
jo
inc
es data16 cmp
(bad)  
cmp
shrb
jne
adc
dec
pushf  
lahf   
adc
in
mov
xchg
xlat
push
add
fwait
test
pop
or
jb
adc
pop
arpl
push
xchg
sub
mov
jle
test
xchg
or
lods
in
cmpsl
add
daa    
jmp
test
(bad)  
sti    
pop
cld    
lods
cmp
pop
mov
js
push
jecxz
notb
ds dec
in
mov
push
or
xchg
cltd   
mov
jae
(bad)  
aaa    
shlb
popf   
and
int3   
xchg
pop
adc
aad
sti    
jge
(bad)
adc
out
(bad)  
jo
repnz decl
jg
dec
lds
dec
push
ljmp
dec
xor
(bad)
mov
mov
pop
jmp
je
sarl
dec
jns
or
jmp
rcr
aaa    
(bad)  
imulb
mov
xchg
cmpsb
aas    
data16 adc
xchg
cltd   
fistp
out
and
in
aad
stos
fsubl
out
push
in
xchg
out
movsl
dec
add
inc
mov
daa    
fs xchg
mov
loop
pop
mov
dec
inc
sbb
and
lods
lds
mov
adc
(bad)  
sub
jecxz
adc
(bad)  
dec
mov
int
or
xorb
mov
jns
or
jmp
rcr
daa    
lret   
imulb
mov
xchg
cmpsb
and
loop
inc
fistl
in
in
(bad)  
mov
leave  
push
out
lahf   
sti    
shrb
xor
test
xchg
or
dec
fisub
mov
jmp
test
ljmp
dec
mov
int
or
xorb
xor
jns
or
jmp
rcr
daa    
lret   
imulb
mov
xchg
cmpsb
das    
clc    
adc
fistl
jo
pop
aaa    
shlb
sbb
xchg
jl
mov
movsl
or
aad
mov
xchg
loop
fucomp
jae
cli    
je
mov
and
jge
hlt    
imul
pop
push
push
jp
je
daa    
jecxz
mov
jbe
fidivl
cmp
lds
cmp
xor
mov
or
aad
jne
pop
lret   
pop
and
push
outsb
test
push
loope
(bad)  
xchg
nop
and
ds out
xchg
dec
mov
xchg
ficompl
xorb
cwtl   
aad
xchg
icebp  
sub
aaa    
ss jae
adc
aam
ret
sbb
inc
sti    
cmpb
or
xchg
pop
pop
test
rclb
test
jg
lret
sbb
cmp
cltd   
jge
cmpsl
test
mov
dec
fmull
sti    
cltd   
push
dec
icebp  
aaa    
mov
jle
adc
and
or
mov
(bad)  
lret   
and
loop
mov
sub
jns
icebp  
int3   
push
outsb
jl
loop
or
(bad)  
or
push
loop
xor
jno
push
push
xor
dec
(bad)  
xor
into   
or
fbstp
add
insl
push
jne
mov
adc
repnz adc
out
lahf   
cmp
(bad)  
imul
jge
cmp
xor
or
xchg
jbe
sbb
and
sub
fmuls
icebp  
and
dec
add
lret
inc
fnsave
mov
push
adc
inc
inc
xchg
sti    
bound
jge
pushf  
fistpl
dec
dec
enter
dec
sahf   
outsb
jl
test
pushf  
push
fcoml
stos
(bad)  
push
xor
jns
push
push
call
push
push
mov
fcomps
jb
cld    
inc
outsb
dec
mov
std    
dec
jne
add
je
in
jo
jnp
cmp
(bad)  
imul
loopne
lods
mov
lods
xor
or
xchg
jbe
arpl
dec
jo
and
xchg
add
cmp
mov
add
xor
push
fldl
test
jae
xchg
and
and
ja
shrl
call
gs push
mov
adc
cmp
push
mov
stos
(bad)  
push
jo
loop
xor
js
push
push
mov
pop
dec
(bad)  
out
arpl
push
xor
jb
sbb
fimull
pusha  
jge
jne
jle
loop
in
pop
adc
lahf   
cmp
dec
push
push
pop
loopne
mov
push
arpl
fbstp
andl
addr16 adc
xchg
and
icebp  
clc    
sbb
dec
stos
add
inc
(bad)
mov
dec
dec
xchg
leave  
inc
jge
xchg
repz and
jge
dec
jno
xor
add
gs push
test
in
xor
(bad)  
mov
and
pop
mov
inc
pusha  
push
push
jns
mov
(bad)  
out
add
inc
push
push
xchg
cs fs ds inc
and
insl
jo
loope
xor
sub
int
push
aam
pop
sbb
mul
aad
mov
sub
cld    
ds lret
es or
add
lcall
and
dec
sub
rolb
sbb
or
push
notb
inc
flds
iret   
sub
mov
sub
and
in
pop
out
lret   
dec
and
inc
or
out
(bad)  
cmp
sub
lds
pop
pop
(bad)  
xor
xlat
and
adc
sahf   
xchg
(bad)  
jno
add
fmul
imul
mov
push
sbb
jb
test
cmc    
mov
das    
movsl
(bad)  
stc    
push
sbb
jb
test
(bad)  
out
add
adc
push
inc
push
(bad)  
cmp
mov
xor
test
inc
cmp
pop
out
lret
jns
mov
xor
popf   
sbb
xor
(bad)  
jno
loop
or
in
outsl
insb
pop
std    
insb
(bad)  
or
jae
or
sub
or
test
ficompl
fiadd
icebp  
addr16 sub
lcall
ret    
cmp
out
out
int3   
or
sti    
and
push
sbb
cs fwait
add
stc    
sub
leave  
(bad)  
xor
jbe
dec
inc
jle
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
pushf  
je
(bad)  
out
xlat
iret   
sbb
dec
jbe
iret   
(bad)  
hlt    
mov
out
xlat
inc
andb
jns
lret   
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
stos
enter
mov
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
xor
fldenv
(bad)  
dec
movsb
out
dec
push
out
pop
aad
lock dec
or
test
sbb
mov
xchg
cmpl
in
sub
(bad)
mov
dec
cmpsb
cmp
inc
fwait
xor
inc
adc
or
dec
dec
pusha  
adc
jge
jb
mov
mov
out
adc
add
dec
pop
sub
push
arpl
in
pop
sbb
mov
mov
push
inc
incb
inc
or
jbe
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
arpl
mov
iret   
and
sub
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
aaa    
inc
push
gs push
in
cwtl   
incb
push
jbe
fldl
inc
cmpsb
pusha  
pop
push
pop
xor
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubrl
fdiv
adc
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
aam
or
dec
dec
pusha  
adc
ret    
out
mull
lds
ss sbb
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
push
mov
push
rclb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
sbb
mov
push
adc
je
dec
add
icebp  
push
jno
xor
jo
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xchg
inc
ret    
js
mov
cmp
mov
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
sub
pop
cmp
sarl
jbe
mov
fsubrs
pop
push
je
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
clc    
out
inc
sub
imul
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
sub
cmpsb
das    
lret   
popf   
call
lret   
lea
xchg
popa   
lret   
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
xor
loopne
(bad)  
jnp
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
loop
test
or
insl
cmp
cmpsl
aam
mov
cmp
adcb
aaa    
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
pop
and
sbb
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
aaa    
sub
add
dec
jge
into   
or
sub
stc    
push
cmp
jns
sub
add
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
bound
add
mov
push
rclb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
pop
or
(bad)  
call
in
xchg
adc
mov
sbb
ret
jle
sti    
jae
lret   
(bad)  {%k4}{z}
lret   
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
pop
sub
push
add
loopne
(bad)  
jnp
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
loop
test
or
insl
cmp
xor
sub
mov
pop
hlt    
cmp
sbb
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
into   
mov
ret    
out
iret   
mov
(bad)  
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
aaa    
sub
add
dec
jge
add
adc
mov
lock or
pusha  
add
out
jns
sub
mov
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
add
mov
push
rclb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
add
movsl
(bad)  
call
jns
xor
arpl
push
sbb
out
decb
xchg
fldl2e 
jnp
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
inc
cmp
arpl
mov
cmp
mov
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
ret    
jnp
out
sub
pop
cmp
out
sbb
add
mov
or
jb
std    
mov
test
jl
inc
es data16 cmp
ljmp
dec
fistl
mov
mov
pushf  
(bad)  
jge
cmc    
out
push
rorb
pop
je
sub
fsts
fidivl
pop
push
daa    
sbb
xchg
pop
iret   
cmpsb
les
js
jge
mov
cltd   
cld    
mov
xchg
push
int3   
data16 aas 
add
inc
pop
pushw
cwtl   
pop
insb
adc
stos
cli    
icebp  
and
lods
in
jg
data16 rcl
dec
aas    
sub
jbe
xor
mov
repz xchg
js
ja
(bad)  
and
je
mov
xchg
out
mov
movsl
sub
movsb
(bad)  
std    
mov
mov
movsl
xchg
gs dec
(bad)  
out
mov
inc
cmp
ja
push
xchg
sub
sub
cmpsl
pop
test
scas
inc
cwtl   
and
iret   
movsb
xchg
fs scas
(bad)
fisttpl
jle
outsl
(bad)  
mov
jmp
dec
mov
xchg
inc
daa    
push
push
push
lds
cmp
out
mov
xchg
xor
out
icebp  
std    
dec
movsb
mov
mov
cmp
inc
push
rcrl
pusha  
pop
mov
ficompl
xorb
cwtl   
sbb
imulb
in
dec
jbe
adc
lods
jb
push
or
pop
fcmove
push
lock mov
or
stos
bound
adc
outsl
pop
dec
ljmp
(bad)  
int
and
lret   
xchg
idivl
(bad)  
jbe
notl
cs ss mov
popa   
xchg
test
cltd   
add
mov
das    
or
xor
dec
pushl
ficoml
push
add
adc
pop
loopne
or
dec
mov
arpl
mov
addb
imul
xchg
int
stos
popf   
or
daa    
ljmp
adc
inc
sub
lods
cmc    
pop
push
or
rclw
sti    
daa    
insb
adc
stos
cli    
addl
push
sbb
stos
(bad)  
fstpt
sub
ret
mov
mov
add
scas
mov
decl
jg
in
pop
dec
dec
push
clc    
bound
shrb
push
jp
push
inc
push
push
test
ret
add
adc
or
les
jecxz
call
mov
adc
ds pop
out
mov
sbb
rclb
add
inc
scas
lods
in
mov
leave  
aad
scas
adc
fstpl
in
xchg
mov
sbb
std    
mul
xchg
pop
xor
jecxz
test
insl
je
(bad)  
outsl
dec
mov
xor
add
cmpb
mov
or
mov
dec
jnp
lods
mov
fimull
jp
cmpsl
jb
inc
cmp
xchg
in
xchg
mov
mov
(bad)  
mov
loopne
fnstsw
jle
or
adc
jns
cmc    
xchg
dec
add
out
and
in
adc
popf   
jg
dec
jl
lods
fiadd
les
loop
in
adc
pop
and
scas
mov
frstor
fmuls
out
mov
mov
sbbl
(bad)  
(bad)  
addr16 aaa 
pushf  
xor
lds
imul
out
jbe
mov
in
(bad)  
aaa    
cmp
mov
push
loopne
sub
add
pusha  
push
mov
inc
add
xchg
lds
dec
cmp
and
movsl
push
scas
sti    
pusha  
and
(bad)  {%k4}{z}
(bad)  
xor
in
push
and
xor
aas    
(bad)  
iret   
sub
mov
icebp  
mov
(bad)  
jp
jb
dec
inc
push
jg
fisubrl
in
jl
inc
cmp
mov
call
cmp
scas
shlb
(bad)  
jl
fstpl
addr16 and
jle
add
out
rclb
testb
mov
mov
pop
jno
or
cmp
inc
mov
lret   
or
xor
cmpsl
inc
dec
clc    
nop
sbb
outsl
(bad)  
cmp
out
stc    
mov
notb
xor
push
cld    
pop
rorb
push
mov
sub
jp
jae
sub
je
cmc    
add
sti    
mov
inc
mov
arpl
mov
and
xchg
imul
xor
inc
ret
fcompl
and
sbb
push
mov
jno
daa    
aam
mov
shl
xor
out
and
adc
ja
push
mov
cld    
mov
mov
cld    
ret
xor
gs jno
test
add
jno
xchg
xchg
sub
mov
ss
xor
xchg
testl
movsl
add
lea
aad
xor
mov
insb
fistpl
subl
xchg
repz dec
(bad)  
cmp
cltd   
inc
push
mov
sub
orl
mov
sbbb
dec
xchg
(bad)  
in
imul
repz mov
cmp
cmp
push
push
imul
xchg
mov
push
pop
mov
enter
bound
sub
dec
movsb
pop
jns
or
jmp
(bad)
nop
in
add
and
pop
cmp
mov
rorb
push
pop
(bad)  
pop
lock xor
pop
aaa    
cmp
xchg
leave  
psrad
jl
jae
mov
lea
int
rol
mov
sbb
mov
jp
rorl
(bad)  
stc    
loop
aam
hlt    
imul
repz jae
hlt    
test
test
pop
sub
pop
inc
push
jns
imul
dec
daa    
aad
or
mov
inc
mov
test
push
and
adc
notb
sbb
and
out
icebp  
cltd   
xchg
dec
push
out
inc
adc
push
sbb
pop
xor
or
imul
es ret
mov
hlt    
iretw  
lret
je
and
cltd   
popf   
cmp
inc
add
jbe
xor
aam
ret
adc
xlat
sub
lods
sbbl
das    
fimul
inc
ljmp
adc
fimul
xor
add
or
jno
les
sub
rorb
leave  
repnz loopne
cmc    
push
out
nop
mov
push
data16 and
add
out
add
int3   
andps
add
popa   
lret   
call
ja
jp
jno
sub
lret
add
push
and
cmp
fwait
mov
incl
inc
push
faddl
push
jecxz
in
stos
sub
notl
sub
test
pop
or
push
inc
jnp
sub
mov
out
out
les
push
loopne
sub
mov
js
add
mov
add
pusha  
out
out
les
push
loopne
adc
fadds
and
add
mov
add
sub
mov
inc
fadd
mov
stc    
xor
or
xor
(bad)  
loope
sub
fwait
xchg
push
inc
xchg
js
push
fs das 
and
out
mov
dec
xchg
enter
sarb
int3   
and
inc
cmp
psubusb
xor
loopne
inc
adc
adc
loopne
pop
out
les
push
loopne
movsl
mov
sub
ja
add
nop
adc
iret   
sub
lods
data16 insb
cmp
aam
mov
sub
add
fcmovu
in
push
lds
or
cmp
xchg
loop
push
push
aam
hlt    
ss ljmp
jle
sti    
push
jmp
add
cmc    
daa    
mov
lods
sbb
mov
inc
sub
ja
dec
pop
add
stos
movsb
int3   
add
testb
mov
(bad)  
dec
xlat
push
cmpsl
sbb
jl
daa    
inc
sbb
xor
xchg
mov
mov
pop
loop
or
jae
pop
and
push
stos
(bad)  
dec
sub
out
and
add
lea
popf   
cmpsl
rolb
pop
lret
xchg
jp
nop
and
ret
pop
sub
out
lods
cmc    
inc
sbb
push
jae,pt
add
fcmovbe
das    
(bad)  
jno
or
(bad)  
ja
dec
stc    
pop
das    
mov
push
cmp
xchg
loop
ret
out
push
dec
pop
popa   
pop
xor
lcall
sbb
mov
inc
and
xchg
and
cmpsl
movsl
popa   
pop
repz xchg
adc
insb
adc
push
pop
jl
xchg
cmc    
sbb
mov
enter
mov
pushl
inc
xor
xor
mov
jae
stc    
cmp
ret
or
jp
out
inc
leave  
sub
lahf   
jb
orl
mov
int3   
cmp
xchg
cltd   
push
ret
(bad)  
cmp
ret
test
push
adc
test
pop
jmp
sub
sub
mov
pop
sub
ret    
pop
mov
inc
xchg
mov
mov
rol
imul
sub
dec
and
jle
pop
cs xor
jno
daa    
aam
or
jecxz
jno
pop
sub
xor
dec
(bad)  
mov
mov
enter
sbbl
jp
push
pushf  
es mov
sbb
bound
jae
fimul
je
repz cmp
xor
jp
cmp
mov
xor
jl
ret
movsb
cld    
push
jnp
ficomp
or
aaa    
mov
jecxz
mov
pop
xor
mov
stc    
pop
aam
or
jmp
cmp
lea
add
jne
pop
shl
mov
ja
xor
ja
xchg
stos
hlt    
dec
bndstx bnd3,(%edi,%ecx,1)
pop
push
adc
xor
andps
js
out
dec
test
test
lret
jo
test
pop
jb
sahf   
xchg
arpl
(bad)  
xchg
das    
mov
aaa    
lea
rcrl
cmp
mov
pushf  
shrl
adc
int3   
xchg
jae
int3   
jg
and
ret    
xor
fwait
mov
incl
inc
push
faddl
push
jecxz
in
stos
sub
notl
sub
test
xor
xor
test
sti    
mov
out
jmp
jg
loopne
lcall
add
add
mov
add
pusha  
out
jmp
jg
loopne
inc
jbe
jg
imul
aaa    
add
cwtl   
add
in
push
sub
mov
inc
fadd
mov
stc    
xor
or
adc
std    
cmpsl
cmp
xor
ficompl
(bad)  
xor
and
movsb
ds cs sbb
shlb
add
xor
andps
jae
pop
xor
aam
ja
sbb
(bad)  
loope
sub
fwait
xchg
push
inc
xchg
js
push
fs das 
and
out
mov
dec
xchg
enter
sarb
int3   
and
jae
push
psubusb
pop
stc    
les
loopne
inc
adc
adc
loopne
pop
jmp
jg
loopne
fdivrs
movsb
jle
inc
mov
sub
fbld
or
insb
je
and
xor
inc
jnp
and
pop
or
out
aam
push
cltd   
addb
(bad)  
mov
xchg
xchg
jo
pop
push
or
sbb
sbb
xor
cmp
les
cmc    
rclb
scas
lods
dec
sub
mov
int
lcall
out
ds sub
jb
(bad)  
loop
arpl
mov
inc
sarb
popa   
push
enter
je
shrb
dec
sub
mov
repz aam
xor
(bad)  
insl
add
xor
push
andw
ret
repnz test
mov
or
mov
pop
dec
sub
iret   
loop
mov
cwtl   
(bad)  
aas    
js
imul
pusha  
sbb
push
pop
mov
test
push
xor
insl
ficom
popa   
cmp
adc
cmp
or
test
fucompp 
icebp  
cwtl   
jle
adc
adc
fstl
pop
push
mov
rcrl
dec
subl
in
mov
sub
adc
addr16 or
sbbl
dec
sub
ds xchg
pop
adc
lods
or
mov
xorl
dec
imul
xor
inc
popf   
je
xor
pop
mov
lahf   
dec
pop
data16 mov
aad
insb
adc
(bad)  
jae
mov
fsubl
fsubp
fs mov
lods
add
fwait
inc
je
push
aad
neg
andl
movsl
or
(bad)
in
imul
add
fstp
outsb
andl
lret
in
insl
or
pop
xchg
mov
jnp
push
sbb
cmpsl
mov
sbb
pop
movsl
cmp
shlb
mov
add
scas
ret
jno
repnz decl
jg
lea
inc
dec
push
cli    
bound
add
mov
sub
and
pop
out
stos
lret
xor
mov
inc
lea
(bad)  
jecxz
bound
flds
or
ljmp
in
rcr
idivb
out
je
shll
mov
jecxz
adc
(bad)  
mov
addr16 shr
or
les
jecxz
repnz and
stc    
outsb
out
stos
sub
cld    
movsl
mov
test
ficompl
xorb
cwtl   
push
out
test
adc
adc
loope
test
dec
jnp
popf   
cmpsl
sbb
or
ja
cmp
mov
ja
movsl
mov
cmp
out
push
xchg
sub
mov
xchg
or
fdiv
lods
insl
add
cltd   
mov
pop
jle
xor
outsb
inc
mov
jecxz
cmp
lret
jmp
pusha  
sbb
push
cmpsl
(bad)  
movsb
sub
js
add
and
stos
and
jecxz
and
and
or
and
add
mov
push
cld    
pop
test
not
(bad)  
arpl
in
push
stos
mov
dec
pop
xor
(bad)  {%k4}{z}
aam
adc
je
and
dec
(bad)
mov
nop
stos
mov
(bad)  
fidivrl
or
adc
mov
and
test
pop
insl
rcr
xor
adc
dec
mov
or
leave  
lret
movntq
out
cmp
or
ret
sub
push
jle
xor
mov
sub
cmpsl
dec
jne
push
adc
cmp
dec
jns
aas    
test
sub
inc
xchg
mov
sarb
xlat
push
data16 fstpl
sbb
xlat
test
fdivs
aaa    
push
mov
dec
inc
adc
fldenv
push
and
mov
insl
push
xchg
or
jl
push
sbb
jae
mov
mov
in
add
hlt    
add
into   
sub
cmp
insb
add
push
scas
or
cltd   
outsl
sub
rcl
ds push
or
jg
jmp
or
out
and
jbe
ret
mov
clc    
inc
std    
jb
pop
fnstenv
push
or
xor
add
mov
rcl
and
dec
cwtl   
je
imul
xlat
fnstsw
bound
pop
cmpl
fldcw
enter
xchg
aad
xor
sbb
addr16 xchg
lods
out
push
iret   
orl
mov
into   
mov
addr16 xchg
lods
daa    
push
inc
shll
xchg
div
inc
leave  
mov
addr16 xchg
lods
fcompl
shrl
into   
imul
or
imul
test
or
xchg
inc
adc
lcall
(bad)  
iret   
pop
movsl
lahf   
arpl
repnz in
push
mov
and
jp
jmp
fsubl
pushf  
loop
sbb
popf   
out
sub
push
lea
and
mov
aaa    
jle
dec
int
mov
jbe
mov
ret
mov
scas
jbe
push
scas
xchg
cmp
sub
adc
bound
push
jae
popf   
repnz push
mov
mov
scas
jbe
loope
mov
mov
adc
mov
lahf   
aad
pop
negl
xor
xchg
jns
aam
xchg
fucomi
fsubrl
orl
jle
int3   
leave  
cmpsb
out
lods
data16 hlt 
add
push
jge
nop
mov
pusha  
add
(bad)  {%k4}{z}
in
adc
push
adc
aam
inc
jle
imul
enter
dec
stos
cld    
mov
xchg
jne
inc
add
or
add
cld    
jo
sbb
psubq
mov
xor
orl
pusha  
jp
and
mov
dec
ljmp
(bad)  
int
push
and
decl
xor
dec
cmp
mov
inc
fisubrl
xor
mov
ret    
push
pop
std    
pusha  
sbb
(bad)  
pop
stos
dec
lret
arpl
push
or
fdivl
(bad)  
jecxz
cmp
inc
out
stc    
movsl
dec
cs in
fsubrs
sub
lds
jg
mov
dec
icebp  
in
jl
and
loopne
mov
arpl
mov
sti    
bnd jl
in
jae
cmp
inc
in
decl
jg
ss test
mov
movsb
(bad)  
clc    
jno
or
dec
dec
sub
pushf  
xchg
(bad)  
pop
jae
or
fisubrl
lods
lret
int3   
pop
pop
(bad)  
test
fnsave
add
fbstp
xor
and
bswap
ss fs mov
cli    
cmp
cwtl   
mov
jae
jae
clc    
rolb
pop
mov
push
daa    
inc
es data16 cmp
loopne
cmp
imul
push
aaa    
cmp
addr16 mov
sub
mov
add
scas
cmp
scas
mov
push
jo
add
lret   
enter
ljmp
or
stc    
(bad)  
ljmp
lods
je
out
fcmovu
ficoml
imull
sub
(bad)  
jno
sub
int3   
rclb
sub
pop
xchg
push
je
mov
je,pn
sbb
sub
sbb
negb
dec
mov
mov
loope
push
in
xor
sbb
adc
and
adc
jmp
cli    
mov
jo
mov
jecxz
push
jo
imul
movsb
(bad)  
shlb
ss out
sti    
sub
lgs
xor
lret
xor
and
pop
call
jle
push
movsl
adc
pop
es mov
imul
popa   
push
insl
dec
jle
fimull
adc
jo
mov
dec
lods
scas
inc
(bad)  
or
cmp
xor
adc
lock cwtl 
cmp
(bad)  
mov
scas
and
test
test
mov
jo
lret
fwait
test
(bad)  
mov
aam
lret
fwait
stos
dec
in
lods
fs add
mov
rcrl
shl
outsl
fcoml
jmp
sub
out
mov
out
sbb
data16 jge
lea
mov
call
mov
test
shll
and
cmp
test
jle
cld    
repz mov
fcoms
pop
push
mov
pop
iret   
fwait
scas
push
clc    
xchg
mov
popa   
add
rcrl
ficom
push
sub
out
fnstcw
lahf   
sub
cmc    
inc
leave  
pop
iret   
fwait
stc    
scas
cmp
xchg
xor
fidivr
(bad)  
and
dec
dec
ficom
divb
(bad)  
std    
jmp
add
test
shll
xor
std    
shll
lcall
xchg
xchg
inc
sub
mov
es
roll
test
lea
pop
xor
out
inc
mov
fcoms
hlt    
dec
dec
push
(bad)  
divb
(bad)  
std    
xchg
add
mov
cmp
aad
leave  
pop
iret   
fwait
cwtl   
dec
mov
cs
dec
dec
mov
ljmp
lds
rclb
sbb
dec
sub
mov
mov
hlt    
dec
dec
push
aaa    
mov
xor
std    
mov
mov
inc
or
(bad)  
cwtl   
lahf   
fdivrs
lock inc
gs repnz xchg
cmc    
xor
popf   
stc    
mov
mov
dec
fcmovnbe
push
popa   
push
imul
mov
jae
xchg
out
mov
sbb
rorb
shr
das    
mov
pop
call
jo
loopne
adc
adc
dec
loopne
add
insl
aad
ret    
pop
(bad)  
mov
jo
xchg
out
mov
sbb
movsb
dec
sub
sub
insb
insl
mov
aaa    
ljmp
lret
or
sub
mov
ds mov
repnz
xor
aam
pop
test
jmp
insb
cmp
mull
add
mov
xor
aam
pop
test
jmp
push
sbb
mull
mov
mov
xor
aam
pop
test
jmp
or
je
mov
enter
popa   
add
rcrl
mov
pop
fcoml
xchg
out
sub
out
mov
(bad)  
fnstenv
sbb
lods
dec
mov
rcrl
enter
adc
jl
sub
out
fnstenv
push
cmp
xlat
jl
pop
iret   
fwait
test
(bad)  
sub
arpl
aad
mov
shll
and
xor
xlat
inc
pop
test
jmp
cmc    
dec
inc
stos
xlat
mov
or
ret    
lods
cmc    
dec
inc
in
adc
rol
mov
mov
test
ljmp
cmpsb
cmp
popa   
add
rcrl
add
adc
xor
xchg
add
mov
xchg
inc
test
mov
bound
das    
int3   
mov
out
xor
mov
fdivr
or
push
add
cwtl   
jno
xchg
ficompl
mov
jg
xchg
mov
stc    
std    
jmp
and
fcmovb
or
(bad)  
mov
jnp
lock lcall
(bad)  
mov
or
out
xlat
(bad)  
push
cmp
loope
fwait
ljmp
cmp
inc
lods
(bad)  
mov
cwtl   
mov
(bad)  
inc
mov
and
fsub
stc    
mov
sbb
cmp
movsl
xchg
sub
and
dec
ljmp
std    
pushf  
or
adc
xor
hlt    
jl
out
add
mov
les
jecxz
call
jmp
jbe
or
mov
ja
out
in
lcall
push
mov
xchg
ficompl
mov
mov
stc    
std    
jmp
cltd   
inc
pop
insl
dec
inc
addr16
xchg
sahf   
pop
sti    
xor
aaa    
scas
pushl
mov
mov
imul
icebp  
cpuid  
(bad)  
flds
mov
cmp
fwait
mov
cli    
mov
shll
call
mov
(bad)  
xchg
out
stos
(bad)  
fsubs
dec
xor
imul
pop
scas
push
sub
icebp  
mov
pushl
dec
imul
inc
inc
pop
lret   
adc
int
pop
ffree
mov
or
sub
push
std    
mov
xchg
jns
mov
cs lahf 
and
push
pop
push
xchg
mov
loop
movsb
fimul
fildll
pop
and
cmp
inc
adc
mov
mov
and
sbb
cpuid  
(bad)  
flds
mov
cmp
mov
push
or
jmp
inc
iret   
call
add
loopne
cs ror
(bad)  
(bad)  
mov
out
xlat
iret   
fdivr
mov
and
xor
lret   
movsb
and
push
loope
xor
and
cmp
and
mov
fdivl
mov
arpl
push
imul
mov
mov
mov
lret
ret
in
dec
(bad)  
cmp
jno
pop
mov
or
xor
sbb
sti    
test
bound
lret
addr16 pop
dec
ljmp
(bad)  
int
out
fwait
cwtl   
into   
fisubr
aam
dec
or
or
je
inc
mov
dec
sub
call
inc
les
jl
jl
xchg
sub
jg
jnp
mov
and
sbbb
sbb
dec
mov
xchg
pop
lea
(bad)  
lret   
adc
fdivl
and
push
xor
das    
xor
imul
dec
lcall
fdiv
mov
out
xlat
iret   
(bad)  
repnz test
out
xlat
repz fcmovnb
sbb
push
mov
sbb
add
int
mul
out
pop
enter
fdivrl
mov
arpl
subl
fwait
mov
ja
out
mov
lret
ret
fidivl
cmp
fwait
pop
out
test
dec
out
pop
data16 std 
cmpl
adc
rol
out
(bad)
stos
shlb
and
sub
ret
jl
xchg
sub
jg
lods
cmp
aam
(bad)  
and
nop
cmc    
idivl
out
mov
lret   
push
mov
xchg
pop
lea
sarb
push
push
jmp
inc
ljmp
xor
addr16 push
inc
jbe
mov
fsubrl
shrb
call
mov
out
xlat
iret   
(bad)  
repnz test
out
xlat
repz fneni(8087 only) 
cmpsb
cwtl   
cmp
lret   
or
lea
(bad)  
outsl
shll
pop
jmp
in
mov
or
cmp
movsb
stos
and
mov
pusha  
(bad)  
xchg
xchg
loope
jo
adc
aam
popf   
loope
mov
sub
cli    
imul
cwtl   
bound
mov
jns
dec
ljmp
(bad)  
int
out
fwait
cwtl   
xlat
mov
fidivr
dec
pop
mov
aaa    
xchg
or
jns
mov
(bad)  
js
aam
and
test
mov
js
mov
scas
and
aas    
mov
jge
movsb
push
sub
(bad)  
mov
in
sarb
cmpsl
mov
inc
mov
jb
fild
sahf   
or
inc
outsb
xor
rol
mov
xlat
sbb
xchg
out
push
mov
mov
sbb
ds inc
jno
insb
or
fist
mov
fnop   
push
inc
outsb
xor
rol
mov
xlat
sbb
xchg
out
push
mov
mov
pop
cmp
push
mov
aas    
in
fsubrl
repnz push
sub
test
inc
mov
jg
or
aas    
in
fsubrl
lcall
fisubr
adc
data16 cli 
lret   
iret   
fdivrl
repz fdiv
xor
dec
push
roll
and
in
mov
jae
add
jl
testl
add
or
les
jecxz
call
cmpsl
xchg
lret   
(bad)  
out
inc
xor
in
out
test
dec
imul
mov
cmpsb
in
inc
mov
xor
hlt    
pslld
jp
imulb
xchg
(bad)  
cmp
mov
and
inc
int3   
sub
movsb
xchg
xor
add
out
sub
test
arpl
or
mov
shrl
push
and
push
jmp
mov
jne
(bad)  
push
lret
ficoml
dec
int
cmpsb
mov
or
jl
sub
popf   
rep lods
movsb
jecxz
ret
fbstp
mov
aad
mov
xlat
mov
(bad)
jo
push
rorb
add
arpl
inc
pop
insl
add
xchg
or
sbb
enter
repnz movsl
pop
les
jno
jmp
add
mov
movsb
ja
mov
insb
pop
daa    
sub
out
or
sub
xchg
fs loope
dec
pop
lea
sbb
mov
xchg
xor
inc
loop
xor
loope
and
jge
dec
sub
divb
dec
xchg
sub
lods
cld    
mov
xchg
in
and
mov
addr16 xchg
add
lods
push
and
cwtl   
jp
clc    
jno
daa    
aam
pop
jle
(bad)
dec
or
jge
or
mov
pop
lcall
in
cmp
sub
xchg
jge
sub
dec
(bad)  
lea
pop
ss mov
insl
(bad)  
inc
adc
sub
int3   
daa    
mov
and
enter
push
repz sarl
dec
xor
jns
inc
sbb
cmpsb
ljmp
jo
cld    
sbb
adc
aad
out
cmp
sbb
scas
pop
xchg
aad
cmc    
popf   
lahf   
jo
popa   
movb
pop
jl
outsb
movsb
(bad)  
push
jns
jno
xchg
xor
arpl
pop
int3   
sbb
subl
ret    
xchg
sub
push
push
loope
push
mov
clc    
insb
push
add
jge
fistp
sahf   
push
lock jl
fucomip
push
enter
pop
outsl
inc
insb
jo
push
jge
test
xchg
in
add
fdiv
inc
jbe
nop
mov
push
cmp
pop
rcr
bound
xor
imul
push
pop
push
push
xchg
fdivrl
iret   
fcompl
inc
pop
test
test
push
pop
pop
popf   
rep lods
movsb
std    
movsb
rcl
(bad)  
addr16 push
fcomps
(bad)  
mov
jg
(bad)  
(bad)  
arpl
hlt    
sbbl
(bad)  
pop
pop
aam
xor
std    
fisttp
jb
cmp
sbb
adc
cmp
cmpsb
not
imul
out
lock or
fldenv
(bad)  
jae
or
rol
dec
test
shll
idiv
pop
xor
popf   
rep lods
movsb
std    
xor
shll
stc    
jp
ds syscall 
xor
aad
(bad)  
adc
jns
xor
std    
jmp
inc
inc
pusha  
lds
sub
pop
iret   
fwait
stc    
lods
ds std 
cmpsl
ja
push
lret
fcomp
xchg
cmp
sub
out
cmp
xchg
loopne
sub
popf   
rep lods
movsb
std    
loope
stc    
shll
push
mov
cmp
xchg
xor
sbb
push
xor
out
std    
xor
dec
clc    
stos
mov
jg
(bad)  
lods
pop
lret
popf   
or
sti    
mov
pop
iret   
fwait
test
(bad)  
xchg
adc
stos
dec
mov
fidivr
(bad)  
(bad)  
xor
roll
add
cli    
push
cmpsb
cmc    
roll
movsl
push
outsl
aaa    
jp
sbbl
mov
xor
stc    
push
(bad)  
jp
add
aam
ds pop
mov
xor
std    
mov
sub
lds
popa   
enter
cmpsb
ret
lods
insb
jge
out
sub
(bad)  
subb
out
fnstsw
fwait
outsl
add
cld    
mov
mov
xchg
sbb
jae
mov
push
dec
cmp
pop
rcrl
shll
sbb
js
ljmp
fistp
mov
lret   
xchg
sbb
push
or
jle
movsl
cmp
addr16 dec
js
dec
mov
lcall
ja
popf   
rep lods
movsb
std    
mov
mov
push
fcomps
shll
xor
sbb
mov
sbb
rorl
xor
fs xchg
call
aad
pop
mov
test
jmp
gs dec
cwtl   
add
aam
add
dec
hlt    
xor
std    
xchg
add
jmp
rcl
jne
pop
xor
popf   
rep lods
movsb
std    
push
pop
push
addr16 push
fcomps
sbb
sub
lds
lahf   
iret   
pop
iret   
fwait
cwtl   
push
hlt    
push
lret
fmul
lods
push
mov
(bad)  
lret   
jo
(bad)  
outsl
outsb
push
lret
fdivrs
shll
sub
out
mov
(bad)  
lret   
jno
test
push
lret
fsub
gs dec
out
sub
out
mov
(bad)  
lret   
jns
aaa    
movsb
out
scas
jecxz
aad
mov
sbb
std    
mov
push
ljmp
cmc    
popf   
rep lods
movsb
jecxz
hlt    
sub
lods
out
lret
pop
cmc    
xor
dec
clc    
stos
mov
mov
movb
sub
inc
jecxz
jbe
aad
push
sbb
ret
xchg
sub
mov
call
add
hlt    
dec
and
hlt    
sbb
adc
iret   
mov
fdivr
shrb
ret
adc
mov
loop
push
inc
pop
sbb
dec
lret
test
push
push
outsl
xchg
(bad)  
mov
xlat
mov
(bad)
dec
and
lods
cli    
(bad)  
sarl
movsb
stos
lret
in
jmp
cmc    
pop
push
push
verr
mov
inc
jae
inc
insb
adc
rcrl
xchg
cwtl   
pop
push
cmp
jecxz
pop
push
fs out
mov
popa   
(bad)  
mov
ljmp
push
jae
out
mov
lods
lret
scas
mov
and
cmp
mov
mov
out
cli    
cmpsl
sub
je
aam
retw   
sbb
adc
xlat
push
xchg
stos
mov
pop
in
push
xor
je
lahf   
inc
das    
lcall
pusha  
adc
jno
xchg
ficompl
xorb
cwtl   
jmp
gs push
fsubp
rcl
in
or
fisttpll
xchg
dec
je
daa    
and
jno
or
dec
dec
sub
pushf  
fcoms
cmp
je
fisubrl
lods
lret
int3   
pop
pop
(bad)  
test
fnsave
add
fbstp
dec
xchg
cwtl   
je
xor
subb
jg
jp
pop
and
jne
mov
lahf   
dec
pop
data16 jmp
lods
inc
insb
adc
rcrl
pusha  
cwtl   
push
stos
mov
fsubp
gs mov
lods
jnp
jne
out
inc
ljmpw
sub
(bad)  
repnz mov
test
mov
xor
add
jae
ds or
es in
pop
stos
ret
test
out
daa    
rol
mov
xorl
adc
out
and
js
mov
mov
insb
adc
jle
adc
data16 adc
loopne
dec
jb
xchg
push
repz sarl
dec
xor
fimul
xor
dec
sbb
xchg
into   
call
jno
std    
daa    
push
or
sbb
inc
push
and
inc
mov
pop
ss arpl
scas
jnp
(bad)  
(bad)  
jno
and
and
dec
sub
in
or
jl
dec
lcall
mov
sbb
xchg
xlat
pop
cmp
imul
fisttpl
jl
jl
ret    
test
or
cmp
lods
lcall
sub
push
jo
jno
pop
(bad)  
(bad)  
jae
cmc    
xchg
in
or
jmp
test
iret   
jg
es cltd 
add
aas    
popa   
pop
(bad)  
mov
add
or
inc
mov
jmp
xchg
inc
call
ja
fidivr
jle
mov
xchg
jge
in
rcl
mov
mov
fwait
xchg
mov
std    
cli    
leave  
xchg
xchg
adc
sub
dec
push
fcmovu
shl
fidivr
data16 jne
dec
rorl
mov
in
jge
inc
(bad)
jg
or
(bad)  
fldt
inc
jmp
ret
inc
pop
addl
dec
pop
aam
in
jge
inc
int
(bad)  
xor
cltd   
sbb
or
in
repnz addr16 xchg
sub
inc
sbb
ja
xor
add
repz ss inc
imul
(bad)  
loope
pop
aaa    
pavgw
mov
dec
cmpsl
adc
xor
or
pop
loopne
les
aam
(bad)  
sti    
test
sub
jo
lcall
push
sub
dec
xlat
leave  
jp
enter
jmp
out
fisubrl
lahf   
jo
stos
ss jge
(bad)  
xor
mov
sti    
out
ds std 
and
pop
insb
js
xchg
in
pop
out
dec
cmp
mov
dec
xor
add
rorb
and
fldl
sub
pop
adc
pushf  
nop
cmp
mov
out
enter
mov
js
ficompl
xor
dec
cmp
mov
lret
mov
add
sub
or
push
loop
xchg
sub
mov
(bad)  
stos
mov
xor
pushf  
sbb
xor
pushf  
daa    
popa   
inc
mov
inc
mov
jmp
and
(bad)  
fcompl
ja
movntps
dec
push
ficoml
mov
jg
(bad)  
(bad)  
mov
dec
mov
push
and
les
sub
loop
aas    
and
fwait
xchg
mov
jnp
iret   
pop
movsl
lahf   
jo
cli    
xor
out
ficoml
mov
fdivrl
(bad)  
dec
aam
cs test
adc
add
jge
xchg
lahf   
sub
sub
pushf  
push
mov
addr16 xchg
sub
sub
stc    
icebp  
or
sbb
and
adc
hlt    
pop
bnd js
lret
in
xchg
fldcw
mov
inc
mov
xchg
aam
out
loope
arpl
add
lock pusha 
dec
lahf   
and
pop
xor
out
in
xor
lahf   
(bad)  
jp
or
mov
lods
xchg
rorl
jmp
add
scas
mov
(bad)  
out
xlat
iret   
sub
cmc    
inc
sbb
jns
out
mov
push
cmp
je
push
lds
cmp
pop
or
sysexit 
mov
dec
mov
mov
shll
mov
leave  
cmp
test
adc
lea
xchg
sahf   
idivb
(bad)  
dec
daa    
jo
stos
cwtl   
mov
and
icebp  
je
xor
es out
clc    
imul
xor
ja
push
mov
jle
movsl
xchg
jl
and
jb
and
xchg
mov
loop
iret   
repz das 
cmp
inc
lods
call
or
sbb
ret    
push
jle
pop
mov
out
cld    
inc
sub
and
sub
or
stos
xchg
xchg
pop
leave  
inc
jb
or
mov
cmp
mov
mov
dec
pop
xlat
push
sbb
inc
stos
sub
jmp
cli    
pop
inc
rorb
pop
mov
inc
add
push
call
mov
inc
lods
(bad)  
je
insb
adc
or
imul
push
lds
cmp
pop
or
dec
add
mov
or
stos
stc    
stos
in
imul
sti    
xchg
adc
jns
rorb
jp
arpl
mov
dec
xlat
or
dec
inc
es stos
daa    
sbb
stc    
sub
stos
and
push
in
pop
or
(bad)  
xchg
pop
lcall
in
cmp
sub
push
outsb
dec
(bad)  
lea
pop
ss mov
insl
(bad)  
inc
adc
sub
int3   
daa    
mov
and
enter
push
repz sarl
dec
xor
and
lea
push
xchg
xor
cmp
and
mov
jle
push
sbb
push
jne
jns
pop
ja
popf   
push
sub
mov
std    
and
fisub
(bad)  
idivl
fs
ja
mov
cmp
cs stos
xchg
and
cmp
mov
popa   
jbe
mov
fwait
inc
je
sub
out
aaa    
or
incb
fs dec
(bad)  
jns
xor
mov
loope
mov
insl
or
jge
xor
imul
push
sub
jmp
leave  
cmp
adc
aam
loopne
xchg
test
lods
xor
ljmp
add
jb
dec
test
xor
sbb
test
mov
es
push
jbe
pop
cld    
fwait
(bad)  
stos
mov
(bad)  
mov
icebp  
sbbl
jno
leave  
pop
movsl
lahf   
dec
cmc    
xchg
xor
test
lea
ljmp
(bad)  
inc
jb
dec
test
lea
jmp
mov
repz inc
jb
dec
test
lea
leave  
mov
repz inc
jb
dec
test
lea
leave  
mov
repz inc
jb
dec
test
xor
int
nop
stos
in
(bad)  
mov
jle
jle
cmc    
xchg
mov
xchg
cmc    
inc
aad
int3   
pop
mull
sub
out
sub
out
shrb
mov
adc
lods
popf   
neg
xor
dec
ds mov
cs pop
cld    
fwait
(bad)  
in
cmp
inc
pushf  
loope
lret   
add
cmp
fwait
and
pop
xor
dec
insb
cmc    
xchg
mov
pop
movsl
lahf   
cmpb
push
imul
and
movsl
movl
mov
ret    
push
lock cwtl 
in
mov
dec
lahf   
ret    
repnz popa 
push
fcoml
xor
es daa 
ret
das    
pop
push
add
cmp
cmovns
or
lret
sbb
sbb
jne
fisttp
push
outsb
ds jmp
fcoml
xor
scas
daa    
xlat
push
mov
dec
loope
enter
adc
xchg
insl
cmc    
xchg
mov
pop
and
insl
cmc    
xchg
mov
pop
and
insl
cmc    
xchg
mov
pop
and
int
jnp
ret
in
fsubrl
inc
or
mov
mov
out
jecxz
out
sub
dec
mov
xchg
or
xor
inc
out
repz out
fimull
lods
dec
pop
add
or
mov
mov
or
lds
sbb
popf   
negb
test
sub
sti    
mov
pusha  
cld    
fwait
shrb
(bad)  
(bad)  
or
mov
repz inc
jb
dec
stos
fwait
xchg
or
clc    
mov
fisttpll
sbb
popf   
lock scas
mov
(bad)  
dec
pushf  
(bad)  
xor
mov
dec
sub
inc
xchg
cmp
mov
dec
stos
push
pop
xor
fstl
adc
imul
rcll
lods
popf   
lock insl
xor
jns
aaa    
(bad)  
mov
mov
lods
jecxz
pop
inc
xor
loopne
dec
ret    
jl
mov
std    
flds
jp
push
aaa    
mov
sub
mov
sub
lods
sbb
push
mov
lcall
inc
push
enter
(bad)  
adc
adc
mov
pop
and
stos
call
mov
arpl
adc
loop
test
fsubs
jae
mov
jb
call
mov
arpl
adc
loop
sub
jns
cmp
fs push
push
or
dec
imul
test
je
(bad)
jg
cmp
rcrb
xchg
pop
xlat
jl
(bad)  
nop
stos
inc
push
sub
out
mov
aad
(bad)  
mov
ret    
and
xlat
inc
pop
test
rcll
fildll
pop
iret   
fwait
test
(bad)  
mov
sbbl
iret   
fwait
stc    
scas
cmp
xchg
xor
mov
dec
lret
push
and
push
pop
jb
mov
jg
inc
hlt    
xor
std    
jmp
add
sbbl
inc
fwait
stc    
mov
notb
fidivr
mov
lock movb
(bad)  
mov
repnz push
repnz cltd 
sbb
dec
sbb
cwtl   
imul
aam
pop
mov
pop
push
ds pop
out
rol
out
flds
inc
decl
mov
mov
add
sub
dec
fimul
fadds
mov
imul
test
sub
inc
(bad)  
rorl
hlt    
imul
inc
sbb
or
repz
inc
cmp
int3   
mov
sub
inc
cmpsb
gs jns
or
jmp
mov
iret   
sbb
mov
repnz mov
push
push
data16 jp
imulb
xchg
xchg
sbb
dec
pushw
in
push
frstor
push
mov
adc
cmp
jecxz
test
nop
gs dec
aam
outsb
(bad)  
cmpsb
out
jmp
push
mov
add
mov
jmp
and
test
mov
idivb
lods
jmp
fnstsw
xchg
pusha  
lret   
xchg
pushf  
in
inc
ss nop
in
bound
push
mov
add
push
xchg
mov
push
jle
push
(bad)  
mov
mov
add
scas
in
jne
adc
mov
mov
mov
rcl
repnz mov
test
xchg
inc
je
dec
mov
cmp
mov
loope
test
mov
sbb
(bad)  
mov
(bad)  
xchg
mov
jl
ret
dec
cli    
mov
rcrb
xor
shlb
insb
orl
inc
bound
and
in
test
out
stc    
mov
loop
sub
pop
rcr
not
scas
stc    
sub
mov
clc    
(bad)  
mov
lret   
xlat
jmp
int3   
mov
and
je
fisubrl
lods
ret
int3   
pop
pop
(bad)  
test
fnsave
add
fbstp
lret
and
lret   
ds push
(bad)  
or
and
sub
mov
inc
jbe
dec
push
(bad)  
lcall
sbb
cli    
mov
test
xor
je
inc
popf   
repz data16 jns
or
jmp
mov
icebp  
or
in
fwait
xchg
inc
jnp
fdivs
sub
out
xchg
push
lds
arpl
mov
fcmovb
or
mov
ffree
pusha  
call
xchg
(bad)  
lea
lea
lea
and
mov
imul
push
mov
lret   
fdiv
rolb
pop
cmp
lret   
cmp
lret   
adc
lcall
repz sub
mov
inc
mov
mov
pop
push
jnp
adc
cs aad
inc
push
jbe
dec
inc
pop
aad
or
push
ss std 
jge
imul
and
mov
sub
jns
dec
cli    
scas
das    
and
shll
xchg
cmp
lods
add
fwait
mov
or
xchg
mov
iret   
js
adc
push
lahf   
das    
xor
fidivl
sbb
dec
rorl
lea
adc
cs push
aaa    
mov
pop
daa    
sbb
lret   
popa   
popa   
fidivrl
dec
mov
push
xchg
xrelease mov
pop
rcll
dec
sub
dec
and
jb
dec
test
popa   
test
mov
pop
movsl
lahf   
inc
(bad)  
mov
push
imul
in
mov
popa   
imul
dec
imul
int3   
test
inc
lea
adc
lods
popf   
imulb
(bad)  
and
(bad)  
sbb
popf   
(bad)  
dec
ss xor
jecxz
andl
adc
sbb
popf   
idivb
(bad)  
fsubp
dec
add
mov
sbb
popf   
divb
leave  
fsubp
jae
cltd   
mov
sbb
popf   
(bad)  
or
movb
aam
mov
repnz mov
imul
daa    
pop
aam
aad
jl
cltd   
ss gs cmc 
xchg
inc
adc
push
sbb
push
les
int3   
div
xchg
int3   
adc
cmc    
xchg
mov
pop
movsl
lahf   
mov
movsb
xor
test
xor
jp
sbbl
mov
mov
rcll
inc
xor
loopne
xchg
xchg
test
add
dec
(bad)
cmp
mov
sti    
out
ds std 
and
pop
insb
js
test
inc
cmp
addl
ds dec
mov
xchg
aas    
inc
(bad)  {%k1}{z}
mov
repnz xchg
cmpl
scas
cli    
lock inc
mov
jle
nop
dec
lahf   
sti    
inc
cmp
or
in
jbe
call
incb
xchg
or
mov
call
or
or
mov
out
push
xlat
inc
lea
adc
lods
popf   
imulb
inc
xchg
jg
movb
call
jbe
xorl
pop
movsl
lahf   
push
imull
push
imul
in
sets
xchg
lock cwtl 
xor
cmpsl
jl
mov
int3   
adc
or
xor
sti    
mov
cwtl   
mov
in
mov
fmull
sbb
popf   
lock nop
jge
xchg
jmp
enter
xor
jne
pop
int3   
test
mov
rorl
mov
cwtl   
lret
xchg
je
aaa    
cmpsl
jl
add
(bad)  
(bad)  
mov
xchg
adc
cmpsl
jl
cmp
adc
lods
popf   
lock jp
daa    
(bad)  
out
cmp
jno
adc
lods
popf   
lock jl
mov
push
dec
insb
cmc    
xchg
mov
push
test
fwait
sub
mov
int3   
pop
arpl
loop
ret
add
cmp
sub
in
repz push
(bad)  
fwait
lods
cmp
test
pop
dec
ljmp
(bad)  
int
push
and
decl
xor
je
mov
je
fisubrl
xor
movsb
pop
mov
ret    
push
pop
std    
pusha  
sbb
(bad)  
pop
stos
dec
lret
arpl
push
or
in
arpl
(bad)  
jecxz
dec
icebp  
cmpsl
out
stc    
lods
out
xchg
icebp  
pop
cmp
sub
lcall
repnz push
sahf   
xchg
push
lahf   
cmp
pop
jle
aas    
fbstp
push
mov
jnp
jns
rorb
test
jns
nop
movsb
dec
and
xchg
or
(bad)  
and
lea
jl
mov
jae
sbb
insl
movsb
in
(bad)  
mov
cli    
cltd   
cmp
fistpl
icebp  
pusha  
add
rcll
push
data16 jp
imulb
lcall
push
mov
and
data16 mov
lods
mov
xor
addr16 repz popf 
js
das    
mov
fisub
mov
sbb
pushf  
mov
xchg
mov
loop
imul
adc
repnz add
paddsw
or
jp
push
pop
popa   
imul
repz out
or
push
out
shlb
sbbb
or
fsubrl
les
stos
cmpsb
sti    
or
mov
inc
sbb
dec
in
inc
lret
(bad)  
mov
xchg
scas
add
outsl
scas
mov
xor
pop
jecxz
call
xchg
pop
mov
xor
popa   
and
lahf   
jo
fwait
mov
insb
xchg
ss push
adc
lods
(bad)  
xor
test
xchg
xchg
das    
pop
imul
xchg
sbb
mov
sbb
mov
repnz cmp
inc
pop
jbe
xchg
push
insl
mov
cmp
jg
inc
pop
cmp
ljmp
pop
mov
outsb
call
out
int3   
or
push
call
and
rcll
xor
notl
test
stos
adc
loop
lret
sbb
mov
xlat
push
inc
jns
fstl
(bad)  
xchg
sarl
cltd   
mov
dec
cwtl   
std    
dec
ss dec
mov
jnp
xchg
xchg
nop
imul
cld    
xchg
ja
lcall
lds
pusha  
mov
xchg
or
mov
mov
fsubrl
mov
fwait
stos
jae
sbb
ljmp
or
leave  
cmp
xor
(bad)
jg
cmp
jg
lahf   
in
cltd   
pop
mov
nop
imul
pop
mov
imul
idivl
sarl
hlt    
xchg
and
pop
test
xor
(bad)  
xchg
add
cmp
jns
dec
into   
jp
daa    
pop
test
dec
cwtl   
sbb
lock xchg
fild
mov
fisub
pop
inc
cvtps2pd
(bad)  
dec
shll
ss push
inc
xor
cmpsb
push
ror
cmpl
mov
jae
dec
into   
jp
cli    
mov
cwtl   
cmp
shr
jp
sbb
xorl
jmp
mov
mov
or
jmp
adc
xor
sahf   
xchg
(bad)  
xchg
fildl
aas    
clc    
xchg
xor
sti    
mov
inc
(bad)  
pop
mov
rolb
insb
test
xor
int
nop
stos
in
(bad)  
mov
jle
jnp
hlt    
inc
orl
sarl
cltd   
ss gs cmc 
xchg
inc
adc
pop
xchg
pushf  
ljmp
int3   
notl
mov
dec
mov
mov
fnstcw
enter
dec
cmc    
push
add
insb
test
xor
jp
sbbl
mov
mov
(bad)  
je
inc
xor
and
xchg
ss jmp
mov
(bad)
jp
jb
mov
jbe
sti    
out
ds std 
and
pop
insb
js
xchg
xchg
das    
flds
loope
mov
sbb
in
test
int3   
icebp  
mov
xchg
inc
stos
test
movsb
(bad)  
(bad)  
cmp
inc
movsb
imulb
clc    
dec
sahf   
das    
flds
loope
mov
test
test
dec
dec
lods
shrl
lods
xchg
xchg
add
dec
into   
jp
jne
jmp
sub
ficompl
idivl
and
addr16 xchg
lods
scas
jp
inc
xor
scas
(bad)  
aam
or
stos
insb
sbb
mov
dec
data16 arpl
jl
orl
mov
pop
movsl
lahf   
icebp  
arpl
add
insb
test
xor
lock cwtl 
xor
sahf   
xchg
(bad)  
xchg
popf   
adc
xchg
pop
test
mov
xorl
jmp
mov
fstp
and
addr16 adc
adc
sbb
xor
sti    
mov
jae
dec
into   
jp
xchg
out
sub
into   
pop
lret
in
enter
xor
mov
xchg
and
jp
sbb
mov
(bad)  
lods
jne
ljmp
dec
dec
(bad)  
pop
mov
rolb
insb
stos
cmp
in
fwait
inc
mov
dec
or
lods
outsb
stc    
pushf  
inc
xor
sbb
(bad)  
(bad)  
popf   
outsb
in
xor
daa    
push
jbe
jge
jbe
dec
into   
jp
jne
(bad)  
adc
lods
int3   
pop
pushf  
inc
in
rolb
inc
add
sub
jg
mov
mov
jo
mov
(bad)  
leave  
inc
in
inc
pop
(bad)  
xlat
ret
stos
push
mov
mov
inc
xor
xchg
mov
add
ret
add
cmpsl
lods
dec
ds or
je
mov
std    
mov
inc
pop
lea
push
mov
mov
inc
xor
xchg
mov
add
ret
add
cmpsb
lods
inc
push
cmp
inc
out
je
mov
std    
mov
and
ljmp
ret
add
sub
mov
xor
pop
jecxz
call
lret   
push
mov
out
mov
fdivrs
(bad)  
test
fnsave
rcrl
mov
add
jb
sub
es icebp 
push
push
inc
xlat
mov
mov
mov
cld    
push
cs lret
push
sbb
jecxz
rorl
jns
inc
je
and
je
dec
and
and
mov
lahf   
popf   
cmc    
lret
into   
add
jg
in
add
jno
popa   
mov
jnp
jns
rorb
add
out
repnz xlat
cmpsl
addr16 pop
xchg
push
es int
pusha  
rolb
mov
loope
mov
imul
inc
sbb
push
xchg
in
mov
mov
and
sub
lods
mov
push
sbb
dec
rcrl
repz scas
dec
mov
cmp
xchg
and
mov
fldenv
shl
sbb
and
or
lcall
clc    
jp
in
mov
rcr
repnz
push
cmpsb
out
stc    
cltd   
push
mov
or
add
dec
enter
or
inc
and
xchg
push
gs xchg
aam
mov
mov
jbe
cltd   
mov
add
pop
frstor
dec
jnp
mov
mov
add
scas
xchg
call
fwait
push
mov
(bad)  
mov
fs out
sub
outsb
jae
push
adc
adcl
bound
or
push
sub
iret   
sbb
and
jbe
int
daa    
inc
es data16 cmp
loopne
cmp
sub
or
or
cmp
inc
imul
mov
dec
and
mov
fstpl
jecxz
je
aam
loop
push
push
sbb
cmpl
faddl
scas
imul
ret    
mov
dec
stos
sub
cmp
cmp
lcall
(bad)  
mov
pop
mov
or
arpl
jnp
je
fldt
or
jmp
lods
fldl
dec
push
shlb
aas    
sbb
mov
xchg
mov
jae
inc
jl
xchg
sub
(bad)  
loope
cltd   
test
scas
xchg
pop
sub
sbb
add
movsl
sbb
jae
ds or
es in
stc    
sarb
xchg
sbb
jp
phaddwq
pslld
cmp
inc
bound
repz hlt 
xchg
scas
pop
dec
ljmp
(bad)  
int
inc
push
imul
push
out
sub
ficom
push
xchg
mov
mov
ja
daa    
mov
(bad)  
pop
fdivs
fwait
dec
stc    
adc
gs jl
mov
movsl
rcr
jo
scas
inc
mov
testb
sub
mov
(bad)  
hlt    
movsb
xchg
ds and
jo
ret
inc
mov
orl
cwtl   
mov
and
stos
dec
rep stos
insl
push
add
inc
mov
fadds
mov
xor
add
inc
and
data16
jb
sbb
imul
cli    
loope
pop
pop
jecxz
jmp
push
sub
popf   
and
xor
fldl
push
scas
lea
test
xor
adc
lahf   
push
cmp
test
xlat
incb
shl
push
push
bound
mov
mov
(bad)  
mov
fbstp
add
ret    
mov
cltd   
mov
int
(bad)  
aaa    
adc
sbb
xchg
cmp
sti    
jp
sub
sub
faddl
sub
int
lods
shr
inc
inc
fdivrp
call
(bad)  
adc
pusha  
dec
jmp
add
je
mov
jo
and
pop
rcll
bound
mov
mov
(bad)  
inc
sub
repz xor
push
arpl
hlt    
xchg
mov
push
mov
mov
xor
je
jo
repz out
sub
and
dec
push
pop
xchg
aaa    
outsb
mov
std    
lret
mov
or
pop
idivl
shrl
pop
bound
inc
mov
(bad)  
inc
cmp
(bad)  
or
fisubl
jge
push
add
sbb
call
daa    
setns
aaa    
adc
jp
jns
sub
or
addr16 adc
xor
sbb
ret
pop
rcrl
push
bound
push
cmpsb
and
call
mov
out
pop
(bad)  
lea
es mov
inc
xchg
jmp
ret    
lcall
and
jae
lahf   
aad
adc
xor
pop
sub
push
and
push
testb
pop
mov
dec
lret
leave  
pop
mov
mov
rclb
sbb
inc
mov
xor
mov
jns
and
xor
mov
es insl
(bad)  
cmp
xchg
dec
(bad)  
stc    
iret   
leave  
dec
fdivrl
lock inc
mov
and
jo
mov
aas    
xchg
sbb
out
jl
push
cmpb
jnp
mov
jbe
xorl
daa    
in
mov
jge
mov
imul
dec
popf   
out
outsb
sub
mov
xor
(bad)  
inc
gs lcall
jb
stos
jno
popf   
dec
mov
fdivl
mov
xor
mov
rcl
rclb
rorl
bound
mov
dec
jp
stos
adc
inc
cmp
mov
mov
das    
adc
dec
les
(bad)  {%k1}{z}
or
je
inc
or
xchg
push
cmp
test
jns
pop
shll
xor
(bad)  
inc
or
xchg
push
cmp
test
dec
cld    
pop
shll
mov
das    
ss aam
or
add
push
jecxz
adc
mov
aam
mov
jl
idiv
cmc    
xor
test
cmc    
xor
jge
inc
fdivrp
test
hlt    
jge
leave  
xchg
inc
adc
jl
out
sub
test
scas
(bad)  
lcall
popa   
adc
adc
sbb
test
and
pop
insl
andnps
test
psrad
push
(bad)  
into   
pop
into   
cmp
sub
out
jmp
or
jecxz
and
xor
clc    
mov
std    
paddsw
aaa    
adc
ss xchg
mov
fldenv
imul
incl
(bad)  
popa   
test
mov
stc    
cmp
jge
insb
test
ljmp
dec
pushf  
sbb
adc
in
xor
inc
jle
jmp
or
adc
ds pop
sbb
inc
jle
push
imul
mov
jle
scas
jns
xchg
out
jmp
mov
push
cltd   
daa    
inc
adc
push
hlt    
fcomps
mov
push
(bad)  
jecxz
rorb
out
and
xchg
add
out
jmp
inc
push
and
lret   
mov
jno
xchg
stos
add
sti    
inc
mov
lock subl
sub
movl
lcall
divl
mov
(bad)  
hlt    
xchg
insl
inc
mov
xor
incb
fcompl
and
lods
adc
sbb
shl
aaa    
test
xor
inc
add
and
repz pop
fmull
add
inc
pop
data16 aad
ja
insb
adc
stos
lret
add
cs inc
loopne
push
bound
pop
inc
mov
pop
dec
ljmp
(bad)  
int
test
dec
push
stc    
mov
je
(bad)  
out
push
mov
and
data16 mov
or
pop
sbb
mov
inc
mov
out
adc
movl
mov
daa    
pop
lods
mov
pop
add
fldl
dec
jnp
mov
mov
add
scas
mov
in
inc
dec
repnz scas
mov
loop
jg
stc    
fwait
sti    
add
push
jmp
es in
fsubrl
mov
sbbb
sub
inc
lret
xlat
inc
shrl
(bad)  
push
or
or
les
jecxz
call
xchg
xor
add
xor
imul
loop
cmp
mov
jns
mov
jbe
xchg
stos
add
pop
dec
and
jge
fdivl
and
adc
jl
mov
imulb
xchg
(bad)  
int
or
xorb
cli    
lcall
(bad)  
fistpl
sub
xor
push
stos
mov
ret
outsb
dec
icebp  
idivb
daa    
xor
pop
mov
in
pop
dec
ljmp
(bad)  
int
test
test
jb
xchg
xchg
add
mov
jp
cmp
out
mov
stc    
mov
cli    
add
dec
enter
adc
jle
jae
push
rorb
mov
dec
pop
data16 jne
imul
mov
adc
sbb
xchg
sub
mov
sub
inc
or
mov
jae
ds or
es in
cmpsb
les
mov
sldt
test
jle
sbb
in
xchg
push
push
lds
cmp
call
lods
cmp
loope
sbb
psrlq
fwait
outsl
xor
dec
push
nop
faddp
mov
mov
or
popa   
jbe
xchg
push
or
xchg
xchg
inc
popa   
scas
mov
mov
sahf   
insb
or
ljmp
pushf  
mov
jl
mov
out
cmp
dec
out
jno
fistpl
in
jne
stc    
mov
stos
push
jl
in
repnz clc 
or
cmp
lods
xchg
add
dec
dec
clc    
push
mov
iret   
iret   
push
insl
xchg
dec
cmp
movsl
repz inc
add
or
push
sbb
rorl
add
mov
(bad)  
inc
cmp
mov
cs
aaa    
adc
mov
ds fs sbb
mov
add
fidivrl
outsb
insl
cwtl   
xchg
stos
out
aam
ficomp
je
scas
push
jl
mov
idivl
(bad)  
xchg
mov
fstpt
cmp
popa   
cltd   
dec
mov
inc
imul
lret
dec
aaa    
and
push
xor
add
push
stos
adc
pop
test
pop
sub
xchg
idivl
fsubrp
add
jns
sbb
mull
jno
push
or
std    
insl
xor
hlt    
mov
(bad)  
repz xor
push
arpl
hlt    
xchg
fsubl
pop
adc
fisubrl
aaa    
setns
aaa    
adc
and
jp
dec
in
(bad)  
(bad)  
imul
stc    
loope
scas
mov
std    
add
and
xor
stos
sahf   
mov
mov
aam
jbe
gs mov
jl
push
inc
(bad)  
psrad
frstor
push
(bad)  
or
xor
push
adc
fidivr
(bad)  
sbb
nop
adc
xor
xor
out
jmp
pop
(bad)  
stc    
sahf   
and
dec
xchg
cs cmp
push
add
adc
xchg
push
mov
fldt
shll
test
xor
xchg
(bad)  
(bad)  
jo
dec
mov
add
xor
aaa    
adc
mov
addr16 inc
addr16 adc
(bad)  
sti    
test
sub
jo
mov
(bad)  
icebp  
adc
pushf  
fwait
dec
jne
in
inc
add
cmp
ja
adc
and
gs sbb
pushf  
out
sbb
cmp
ror
cltd   
jmp
(bad)  
int3   
test
mov
cmc    
popf   
lahf   
pusha  
sti    
mov
inc
fs popf 
mov
lcall
xchg
adc
mov
mov
dec
icebp  
negb
and
pusha  
pop
mov
jle
adc
movsl
aam
popa   
inc
mov
loop
fs popf 
mov
cltd   
loope
or
(bad)  
movsl
adcl
test
loop
in
(bad)  
into   
inc
lret
push
lret   
shr
jmp
push
fsub
popf   
and
xor
jl
or
aas    
shr
jmp
xor
popf   
and
cmp
(bad)  
xchg
je
inc
inc
jecxz
ds push
jnp
nop
push
inc
dec
movsb
repz out
jmp
iret   
pop
movsl
pushf  
and
cmp
(bad)  
xchg
je
inc
inc
jecxz
ds push
jnp
sbb
jecxz
adc
sbb
xchg
cmp
(bad)  
xor
add
(bad)  {%k1}{z}
leave  
mov
cltd   
add
adc
or
dec
jp
stos
xchg
aam
or
add
push
jecxz
adc
mov
aam
mov
jl
mov
cmc    
xor
mov
cmpsb
(bad)  
adc
mov
in
mov
shr
jo
add
ljmp
das    
and
xlat
inc
cmp
lods
in
setnp
cmp
jle
and
jno
and
dec
pop
addl
add
push
(bad)  
and
mov
lahf   
xor
arpl
addl
mov
adc
sbb
cmp
in
sub
inc
jl
pop
push
hlt    
xor
stos
inc
fistl
cmp
in
fildl
shrl
inc
sbb
or
je
mov
ja
lahf   
add
inc
sub
roll
mov
mov
je
fwait
jnp
mov
arpl
mov
push
sub
test
es jge
or
nop
dec
lcall
inc
fiadd
xor
and
test
out
and
jns
or
mov
arpl
mov
lods
pusha  
mov
gs imul
sbbl
or
movsl
inc
int3   
fcompl
sub
pusha  
and
iret   
movsb
sbb
sub
xlat
cmpsl
insb
jp
ds out
xchg
pop
shlb
out
dec
cli    
ds mov
pop
call
pop
xchg
std    
xchg
jp
or
mov
mov
mov
in
jne
imul
add
test
cmc    
sub
cld    
inc
sub
gs cli 
push
imul
das    
or
stos
popa   
sub
cmp
jl
mov
insb
pop
loop
gs inc
sbb
or
sub
mov
scas
pop
xlat
das    
(bad)  
push
sbb
pop
mov
xor
inc
loop
jecxz
rolb
gs jno
xor
lahf   
movsl
call
push
cwtl   
test
mov
movsb
notl
push
fnop   
(bad)  
into   
daa    
jnp
aam
loop
push
push
sbb
jle
(bad)  
sub
jmp
in
xor
loopne
cmpsb
mov
mov
mov
pushf  
test
and
cwtl   
in
sbb
and
push
jmp
xchg
ja
scas
out
fsts
(bad)  
aaa    
(bad)
jg
cmp
xchg
jecxz
(bad)  
out
js
xchg
pop
addr16 mov
(bad)  
cli    
dec
jecxz
lods
lds
test
mov
into   
push
mov
rcrl
test
mov
mov
jle
adc
daa    
iret   
cmp
jg
push
lcall
and
outsb
xchg
dec
(bad)  
mov
pop
and
mov
fistl
gs jno
loopne
adc
fldenv
test
xlat
iret   
fdiv
mov
hlt    
mov
aad
sub
out
roll
roll
and
mov
pop
je
stos
(bad)  
lret   
pop
daa    
sbb
lret   
popa   
popa   
fidivl
dec
mov
fimul
push
jle
test
icebp  
in
ret
dec
test
dec
jecxz
dec
mov
mov
in
sub
ss insl
cmpsl
lock pop
mov
mov
fimul
lahf   
mov
jl
add
and
fwait
add
movsl
sti    
pop
inc
xchg
iret   
fdivr
mov
out
xlat
iret   
pushf  
je
(bad)  
out
xlat
iret   
sbb
aaa    
pop
push
data16 insb
pop
mov
fadds
or
dec
pop
iret   
fisttpl
jp
sbb
lret   
push
sbbl
push
into   
pop
jnp
inc
sbb
test
sub
jb
mov
bnd je
aaa    
or
jae
lods
xchg
test
add
out
test
push
enter
or
mov
ss stos
xor
cmp
cmp
movsb
pop
jp
(bad)  
or
dec
aad
and
dec
insb
sub
clc    
aas    
add
rolb
mov
dec
iret   
mov
imul
pop
mov
mov
ret    
pop
pop
mov
or
sbb
and
and
xchg
(bad)  
lea
(bad)  
dec
(bad)  
int3   
push
sbb
pop
mov
or
jbe
adc
out
dec
add
push
mov
pusha  
jmp
adc
les
lds
mov
mov
push
fucompp 
icebp  
nop
push
inc
in
(bad)  
mov
les
or
mov
add
aaa    
shrb
mov
xchg
sub
or
in
out
fstl
inc
rcrl
(bad)  
and
int3   
test
cmp
(bad)  
mov
les
enter
and
je
mov
aas    
sbb
and
and
xchg
(bad)  
lea
es popf 
(bad)  
out
stc    
stc    
adcl
cmp
inc
jns
cwtl   
mov
(bad)  
mov
les
or
mov
mov
pop
ss aaa 
(bad)  
mov
adc
jl
lea
shrl
test
cmp
dec
subl
cwtl   
in
rolb
mov
dec
into   
pop
and
mov
les
enter
sbb
mov
mov
jg
lret
aad
fstl
inc
rcrl
cmpsb
aas    
xor
xor
lahf   
jae
aam
aas    
xchg
inc
add
sub
mov
je
mov
sti    
push
pop
lea
das    
xor
ds clc 
and
xchg
adcb
notl
xlat
inc
scas
icebp  
inc
insb
push
and
rolb
mov
mov
adc
hlt    
insb
cmp
hlt    
or
xchg
jnp
xchg
pop
loope
lahf   
dec
stc    
sarb
loop
ss into 
repnz test
inc
dec
mov
insl
xor
sti    
inc
mov
bnd je
aaa    
or
jae
lods
lahf   
xchg
vorps
clc    
dec
lcall
xchg
pop
push
xchg
mov
xor
cmp
push
sub
movd
push
xchg
test
imul
push
and
lock testl
rcll
(bad)  
xor
jo
(bad)  
lods
aad
sub
or
push
sub
movd
push
xchg
test
jae
mov
dec
call
lock
mov
cmpsl
enter
mov
ss
xor
int
lcall
imul
aam
rorl
jb
(bad)  
test
mov
subl
sub
and
std    
rorl
add
or
jp
cs scas
loope
outsb
jae
jl
sti    
mov
mov
jecxz
ss
or
mov
jp
gs stos
repz fsubl
mov
pop
fcmovnu
hlt    
popf   
cmp
sub
stc    
sub
xor
sbb
fcoml
lock
hlt    
repz pop
aas    
js
dec
ja
mov
decl
jle
push
stos
sarl
or
in
xlat
xor
pop
inc
or
cmp
neg
aaa    
popf   
sbb
js
jle
fistpll
xlat
pop
and
jp
in
stos
iret   
sbb
iret   
fcoml
not
hlt    
int
lock int3 
sub
hlt    
dec
adc
aaa    
dec
jecxz
(bad)  
xor
or
mov
fdiv
popf   
cmp
sub
mov
hlt    
(bad)  
fwait
sub
and
mov
add
mov
icebp  
stos
iret   
sub
adc
xchg
adc
aad
push
dec
ja
icebp  
stos
adc
aaa    
dec
stc    
mov
xor
dec
jbe
cmp
fdivs
and
retw
xchg
int3   
jle
(bad)  
adc
aaa    
dec
jecxz
(bad)  
aas    
dec
aad
jnp
sarl
and
hlt    
popf   
cmp
sub
in
lock
and
mov
sub
or
in
iret   
add
outsb
or
out
(bad)  
out
jl
and
jl
repz xlat
add
fcmovne
sub
cmc    
inc
push
je
and
lret
aam
iret   
movaps
mov
mov
xchg
(bad)  
fstpl
adc
mov
loop
sar
js,pt
in
xchg
xchg
bsf
push
or
stos
popa   
(bad)  
jmp
(bad)  
mov
sub
pop
fs jge
mov
inc
cmp
mov
idiv
mov
inc
sub
pop
jp
jge
xchg
sub
push
jo
xor
testl
xchg
pop
add
jecxz
daa    
in
cmp
pop
and
mov
out
push
mov
xor
xchg
adc
or
mov
(bad)  
xor
and
dec
jge
std    
call
push
or
or
pop
jb
imul
mov
pop
iret   
movaps
out
ret    
repnz mov
jge
js
or
movb
cld    
fmul
in
pop
pop
sbb
mov
xchg
adc
jbe
mov
lods
push
xchg
inc
mov
inc
ja
dec
mov
mov
add
scas
sahf   
orl
or
jno
sub
es push
xchg
popf   
clc    
adc
inc
sub
scas
int
(bad)  
nop
sbb
popf   
cmp
sub
test
mov
or
outsl
scas
int
xor
or
popf   
cmp
sub
xchg
add
int3   
cmp
icebp  
nop
push
inc
inc
pop
jbe
xchg
mov
mov
addr16 pop
les
pushf  
adc
dec
cmp
push
cltd   
imul
addr16 dec
hlt    
mov
scas
mov
out
xlat
iret   
fcoml
jmp
jg
cmc    
mov
push
inc
jnp
daa    
inc
mov
lahf   
pop
stos
inc
xchg
loop
sub
test
lahf   
(bad)  
(bad)  
jo
(bad)  
mov
adc
aad
xor
push
rcrb
(bad)  
lea
scas
(bad)
adc
mov
ljmp
imul
movsl
or
loop
pop
out
mov
call
es int
out
imul
pop
lods
or
jg
into   
and
pusha  
mov
test
mov
(bad)  
outsb
inc
push
(bad)  
insb
leave  
aas    
nop
test
sub
sub
in
xorl
and
scas
push
adc
cmp
ss leave 
cmc    
loopne
xchg
stos
adc
lods
cmc    
inc
sbb
scas
ljmp
xchg
inc
push
jns
jbe
inc
jns
aad
out
mov
cltd   
fnstsw
iret   
es dec
mov
sbb
xor
lahf   
push
stc    
(bad)  
enter
rorb
or
testl
icebp  
cpuid  
(bad)  
fcmovnu
test
repnz fstpl
mov
or
inc
(bad)  
lock cmp
xchg
push
loopne
adc
add
bound
stos
mov
and
insl
out
hlt    
popa   
test
mov
push
test
addr16 jno
jbe
cmp
push
iret   
and
iret   
ja
fmull
cmp
adc
cmp
cltd   
add
loopne
mov
rolb
mov
sub
rolb
jns
mov
push
xchg
(bad)  
mov
push
cmpsl
push
push
sti    
sbb
ds
pop
test
sbb
inc
imul
jbe
mov
je
stc    
pop
aad
add
mov
sarl
pop
out
mov
call
es int
call
or
iret   
push
pop
xchg
loop
out
fxch
inc
out
pop
mov
mov
les
or
flds
gs push
in
inc
xchg
pop
adc
and
mov
mov
out
inc
(bad)  
sub
dec
imul
das    
mov
add
idiv
sbb
gs xchg
sbb
lahf   
in
cld    
aas    
outsw
(bad)  
int
sub
inc
les
xor
loop
in
cwtl   
popl
pop
push
xor
sub
inc
les
lahf   
and
sbb
leave  
ss xchg
cmpsb
ljmp
idiv
nop
mov
mov
test
cli    
and
mov
stc    
movsl
add
inc
std    
(bad)  
pop
jo
out
loope
sub
ret    
mov
shl
dec
jbe
call
imul
lret   
adc
das    
or
(bad)  
cvtdq2ps
nop
enter
into   
sbb
stc    
aad
leave  
or
xchg
adc
les
mov
xchg
push
js
jp
lds
mov
jnp
je
call
jnp
push
sbb
mov
iret   
ss lcall
push
jbe
sti    
test
aam
push
std    
add
int
lds
inc
lahf   
jp
loope
repz and
pop
pop
out
insl
mov
xchg
adc
sbb
rclb
sub
gs
pusha  
cwtl   
mov
fisubr
ror
sbb
sbb
cmp
rclb
test
xor
dec
ss gs ds mov
(bad)  
jecxz
aam
scas
jmp
shll
scas
add
pop
test
xor
pop
jecxz
xor
out
mov
call
push
xchg
scas
add
add
or
les
jecxz
(bad)  
addr16 xchg
inc
lahf   
fisttpl
mov
dec
cmp
fist
sahf   
loop
ficom
gs and
ret
add
fildll
or
xor
pop
(bad)  
insb
fdivl
and
mov
push
xor
addr16 std 
and
jae
push
stc    
popa   
enter
ficoml
mull
arpl
mov
push
mov
mov
call
es int
imul
pop
dec
jg
jns
mov
add
pop
mov
and
jge
insl
jbe
mov
scas
stos
lret
in
adc
sub
inc
mov
mov
loop
movsl
outsb
dec
push
(bad)  
pop
daa    
inc
es data16 cmp
adc
sub
loop
inc
ja
arpl
xor
mov
jb
xchg
add
into   
push
stc    
lds
and
pop
iret   
jo
xor
mov
sub
(bad)  
fdivs
mov
sahf   
loop
(bad)  
jbe
insl
loopne
iret   
push
inc
push
xchg
mov
loop
cmp
add
dec
dec
pushf  
fdivs
pop
xorl
sti    
sarl
lods
(bad)  
xor
push
(bad)  
aam
scas
movsl
std    
daa    
popa   
dec
xor
xchg
lahf   
adc
dec
mov
gs jg
sti    
std    
imul
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
or
xchg
scas
mov
xor
cwtl   
lea
mov
movsb
xchg
(bad)  
mov
(bad)  
sti    
std    
mov
push
popf   
xorl
sti    
sarl
lods
(bad)  
sahf   
lret
(bad)  
aam
scas
mov
sub
rolb
xchg
(bad)  
mov
(bad)  
sti    
std    
dec
mov
xorl
sti    
sarl
lods
(bad)  
xchg
enter
aam
scas
mov
adc
dec
xor
mov
pop
mov
movsb
xchg
(bad)  
test
(bad)  
sti    
std    
jo
daa    
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
sub
nop
push
(bad)  
aam
scas
add
repnz
ja
into   
mov
movsb
xchg
(bad)  
push
(bad)  
sti    
std    
pop
inc
xchg
mov
test
sbb
sub
xchg
jnp
adc
leave  
push
jl
xor
mov
aaa    
dec
cmc    
mov
les
loop
fcomps
jmp
or
add
xchg
mov
repnz sub
mov
cmp
cs dec
repz pop
mov
add
and
xor
sub
cwtl   
(bad)  
(bad)  
jno
iret   
lcall
sti    
cmp
push
mov
inc
mov
bnd je
adc
out
outsb
jnp
(bad)  
clc    
mov
aad
sub
gs aam
(bad)  
scas
out
sbb
adc
loop
adc
in
sbb
push
insb
fistpl
addl
lods
inc
mov
lgs
daa    
and
lea
xchg
aad
sub
lock or
cld    
movsb
jnp
mov
cmp
cwtl   
mov
inc
xchg
fwait
divb
jl
rorl
add
stos
jns
loop
shr
pop
mov
dec
nop
stos
lock shrl
fild
(bad)  
in
sub
xchg
(bad)  
jne
daa    
dec
cli    
loopne
cmp
lods
mov
mov
addr16 cmp
divl
sbb
cmpsl
push
mov
xor
pop
ljmp
repnz pusha 
mov
test
jb
(bad)  
mov
loopne
dec
jl
fidivl
xor
pop
ret    
outsl
push
les
stc    
je
nop
aad
and
lret   
and
jns
mov
jns
mov
xlat
mov
mov
stc    
push
imul
inc
and
dec
loope
(bad)  
(bad)  
mov
or
lahf   
sarb
fxtract 
dec
jecxz
push
popa   
shrb
repnz cli 
add
mov
pop
dec
mov
lahf   
mov
and
xor
dec
jmp
fcom
(bad)  
lods
jecxz
or
movsl
test
push
xchg
aaa    
sbb
adc
aad
or
cmp
pop
nop
stos
cli    
cmp
mov
ret
scas
push
push
lds
cmp
dec
jbe
addr16 jo
aaa    
sbb
sub
jmp
add
push
xchg
(bad)  
loop
inc
out
push
test
dec
jb
pop
mov
lods
vpunpcklwd
or
mov
inc
pop
into   
sub
dec
sub
cmpsb
in
test
fwait
jae
jp
(bad)  
cmpsb
pop
sbb
push
sub
stos
xchg
sub
rolb
test
xchg
or
cmpl
push
add
daa    
out
jnp
mov
or
inc
(bad)  
adc
cmc    
insb
les
hlt    
or
nop
lahf   
mov
sbb
dec
xor
inc
icebp  
jp
or
enter
add
or
imul
in
xchg
(bad)  
roll
xchg
popf   
add
outsb
mov
popf   
mov
mov
pop
sub
lahf   
sarb
xor
mov
adc
and
cld    
cmpl
push
gs inc
pop
xchg
lahf   
roll
cmp
sbb
push
xor
push
fnsave
xchg
mov
push
or
push
bound
hlt    
sbb
and
and
cmp
cmpl
add
jne
(bad)  
xor
jb
fwait
sbb
mov
imul
inc
int3   
and
sub
mov
xchg
push
fbstp
pop
push
push
mov
loopne
popf   
das    
or
stos
bound
cmp
jo
pop
dec
ljmp
(bad)  
int
rcll
fisub
mov
jg
sbb
jno
xchg
ficompl
xorb
cwtl   
jmp
call
adc
orb
mov
in
sarb
pushf  
pushl
add
mov
mov
xorb
daa    
jb
dec
adc
xor
adc
ja
arpl
icebp  
mov
jecxz
sbb
jge
repnz lret
(bad)  
fstps
or
jae
pop
pop
sti    
push
insl
sbb
or
sub
in
(bad)  
dec
xchg
pop
mov
sub
mov
jns
mov
gs pop
push
ljmp
mov
add
pop
cmp
push
dec
mov
(bad)  
push
(bad)  
dec
dec
dec
pop
shrb
mov
test
or
cmp
subl
xor
shlb
lock
or
(bad)  
gs repz or
jmp
mov
into   
push
cmp
mov
mov
(bad)  
(bad)  
repnz pop
cli    
add
jb
push
dec
out
ret
cmc    
popa   
pop
jns
mov
mov
test
add
add
jae
jl
jge
fnstsw
icebp  
(bad)  
loope
test
xor
mov
xchg
mov
repnz out
ret
leave  
(bad)  
pop
jge
lcall
sbb
mov
shlb
pop
adc
lock jge
adc
sbb
stos
pop
jge
inc
push
mov
cld    
pop
adc
mov
cmp
test
add
in
mov
adc
jl
out
sub
(bad)  
mov
(bad)  
lea
std    
push
mov
push
mov
fisttpll
adc
adc
cwtl   
fidivl
inc
pop
mov
push
rolb
dec
aaa    
or
pusha  
xlat
pop
mov
xorl
jbe
jle
adc
cli    
jge
loope
jnp
int
ljmp
or
or
in
shrb
fmul
mov
dec
inc
lea
push
mov
dec
test
shrb
pop
pop
int
inc
mov
fist
(bad)  
in
pop
adc
mov
and
mov
push
data16
cltd   
ss gs cmc 
xchg
inc
xchg
std    
mov
sub
xlat
lret
shrl
or
mov
leave  
cmpsb
xchg
xorl
repz inc
iret   
test
jbe
mov
cmpsb
xchg
xorl
jmp
iret   
test
dec
mov
cltd   
xor
std    
mov
test
xlat
dec
mov
(bad)  
lret
mov
enter
mov
mov
gs shr
pop
xchg
and
inc
jo
dec
mov
fist
(bad)  
in
pop
adc
mov
xlat
into   
and
cmpsl
jl
inc
test
loop
mov
out
dec
or
sbb
je
fdiv
mov
add
dec
inc
ljmp
push
jno
(bad)  
(bad)  
repnz pop
cli    
push
xchg
in
imul
fstps
insb
or
xor
push
mov
popf   
mov
(bad)  
xor
jb
cmp
decb
dec
pop
inc
int
add
xchg
shlb
lret   
cwtl   
pusha  
jnp
repz jp
sbb
inc
sub
lret   
es mov
push
dec
inc
push
cmp
adc
push
aaa    
and
mov
jp
mov
fcom
loope
mov
(bad)  
xor
pop
mov
cmp
cmpsb
push
push
xchg
cmc    
cmc    
sub
lahf   
jp
xchg
pop
int3   
das    
adc
cmpsl
xchg
call
adc
call
test
mov
lea
mov
sub
inc
jmp
mov
and
and
jg
xchg
xlat
xor
inc
push
xchg
test
ds
(bad)  
sahf   
inc
stos
jb
xchg
mov
hlt    
popf   
xor
int
shrb
jb
jle
adc
sub
mov
dec
cmpl
pop
(bad)  
sbb
clc    
sti    
push
xchg
popf   
das    
in
xchg
or
adc
cwtl   
je,pn
jmp
add
out
push
fadd
mov
test
hlt    
stos
or
int
xchg
loopne
aaa    
lea
mov
jecxz
sub
shr
mov
push
sbb
jo
xchg
push
xor
sub
add
or
mov
shrl
cmc    
jecxz
add
add
dec
mov
mov
add
scas
data16 mov
inc
mov
nop
sarb
add
aad
and
ret    
notl
(bad)  
in
mov
cmp
jecxz
mov
out
ror
fcomip
(bad)  
dec
cmc    
mov
(bad)  
rolb
pop
jo
jnp,pn
add
sbbl
push
jg
leave  
rolb
mov
sbb
jg
leave  
rolb
xor
sub
dec
lods
sbb
jg
leave  
rolb
ret    
jmp
(bad)  
mov
jbe
push
outsb
inc
inc
insb
(bad)  
sbb
addr16 xchg
add
mov
(bad)  
out
aad
(bad)  
hlt    
push
dec
gs mov
into   
lock cmp
jmp
repz cmp
repz and
rolb
and
mov
fbld
adc
mov
jmp
add
jne
jne,pn
dec
push
push
cli    
sub
lods
clc    
push
xor
sub
add
xchg
or
add
mov
and
xor
mov
test
mov
mov
scas
ljmp
rcl
iret   
fdiv
test
out
mov
(bad)  
pop
int3   
fildll
push
inc
sbb
iret   
sbb
js
jge
sub
inc
or
dec
sub
scas
testb
(bad)  
iret   
fcoml
sub
pop
repz mov
xchg
mov
sub
sub
(bad)  
sub
lock sub
stos
ds dec
decl
dec
add
outsl
dec
cmp
insl
dec
xchg
fsubr
sbb
hlt    
sbb
test
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
repnz in
dec
and
push
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
or
pop
fstpl
and
dec
int3   
xchg
adc
fsts
pop
adc
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
imul
lret   
gs iret 
mov
popa   
xchg
insb
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
inc
cmpsl
call
pop
dec
push
mov
jns
sub
jae
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
in
mov
(bad)  
and
dec
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
loop
stos
loopne
sbb
pop
inc
aas    
lea
fstpt
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cli    
aas    
test
ret    
out
fildl
gs arpl
(bad)  
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
push
pop
dec
mov
mov
sub
dec
xor
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubrl
(bad)  
pop
loopne
fdiv
inc
pop
imul
movsb
int3   
loop
mov
cmp
dec
fs mov
dec
lcall
sbb
fistl
hlt    
inc
pop
adc
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
arpl
iretw  
mov
std    
je
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
and
and
dec
and
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
cmpsb
dec
in
addb
mov
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
push
mov
jo
cmp
into   
ret
dec
cmp
orb
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
fistpl
ror
in
(bad)  
mov
iret   
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
or
sbb
sbb
and
ret    
or
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
xchg
cmc    
xorl
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
es push
adc
call
ja
shlb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubr
pop
mov
loopne
fdiv
repnz mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
lds
int
sub
mov
adc
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
and
jmp
mov
or
mov
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
and
mulb
in
push
pusha  
lret   
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
leavew 
lods
addl
cmp
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
ljmp
cmc    
pop
push
and
shrl
adc
mov
cmpsl
scas
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sbb
sti    
fdivrl
dec
icebp  
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
and
or
repnz mov
shrb
xor
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
popa   
add
in
hlt    
ljmp
jb
or
mov
cmp
dec
fs mov
dec
lcall
jnp
adc
jg
inc
jle
xor
lret   
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
sahf   
enter
int3   
loopne
incl
adc
pushf  
and
mov
out
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
pop
inc
push
aaa    
lret   
movsb
loopne
inc
or
dec
imul
pop
lret
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
and
aaa    
stos
aas    
xlat
(bad)  
mov
(bad)  
jle
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
mull
fisttpl
movsb
cmpsb
lea
loope
std    
fidiv
adc
sahf   
sahf   
add
push
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
dec
dec
adc
mov
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
ja
shlb
pop
mov
ja
mov
push
in
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
negl
jns
not
iret   
pushf  
add
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
push
xor
aad
outsl
sub
or
hlt    
mov
out
xlat
iret   
fdiv
mov
jbe
push
inc
xor
iret   
fdiv
add
leave  
test
imulb
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
ret
ljmp
addr16 xchg
or
lods
jnp
push
dec
xchg
stos
xchg
sbb
sti    
sbb
ja
sub
xor
jp
push
jns
(bad)  
out
stos
scas
clc    
ss inc
push
add
popaw  
inc
inc
cmp
sbb
out
aam
scas
enter
push
xchg
iret   
popa   
hlt    
shr
stc    
sti    
and
cmp
mov
insl
out
(bad)
cmp
and
push
xchg
xchg
cs fwait
add
dec
das    
jmp
adc
mov
repz sahf 
mov
xlat
enter
(bad)  
out
xlat
iret   
fdiv
dec
inc
scas
xlat
iret   
fdiv
(bad)  
(bad)  
dec
mov
out
xlat
iret   
fsubl
sarb
inc
ret
arpl
fdiv
out
int
test
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
int3   
clc    
pop
loopne
fdiv
stos
dec
icebp  
test
(bad)  
imul
movsl
int3   
loop
mov
cmp
dec
fs mov
and
std    
(bad)  
fcoms
call
outsl
fnsave
imul
(bad)  
mov
in
xlat
enter
sub
not
hlt    
mov
bound
pop
jno
dec
xor
outsb
or
cmp
imul
mov
in
bound
sbb
mov
add
popaw  
push
inc
sub
jns
out
aam
scas
enter
push
xchg
iret   
add
in
test
ror
jbe
push
jle
jle
call
or
cwtl   
add
mov
lods
xchg
enter
insl
pop
insb
mov
shrl
fimul
cmp
mov
or
hlt    
mov
out
xlat
iret   
test
jbe
xor
iret   
fdiv
mov
out
xlat
lods
mov
iret   
cld    
sub
test
out
mov
scas
(bad)  
les
mov
mov
and
adc
lea
(bad)  
mov
aaa    
cltd   
jge
mov
push
out
popf   
call
fdiv
pop
adc
mov
fildl
movsb
mov
ror
inc
and
out
mov
(bad)  
cmp
mov
jg
inc
lock mov
outsl
arpl
add
aas    
xor
sahf   
xchg
int3   
inc
ja
fist
sub
mov
push
xchg
jge
cltd   
call
push
adc
mov
mov
repz in
rclb
repnz repnz
fdiv
mov
call
sbb
out
(bad)  
cwtl   
xchg
dec
mov
scas
ret    
fdivr
out
rorb
adc
sbb
mov
mov
scas
or
nopl
xor
xlat
mov
adc
fnstsw
adc
stos
ret
outsb
int
int3   
inc
(bad)  
jno
or
xor
iret   
out
(bad)  
leave  
(bad)  
ss scas
bound
paddusb
mov
rorb
out
xlat
iret   
fdiv
mov
out
xlat
iret   
(bad)  
jae
addr16 adc
fdiv
mov
out
xlat
iret   
fdiv
mov
test
inc
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
sahf   
enter
pop
sbb
cmpsb
xchg
cmp
sti    
cmp
ljmp
mov
addr16 cmp
or
fistpll
leave  
dec
dec
in
aas    
add
cwtl   
xchg
(bad)  
mov
mov
inc
fstl
popf   
gs mov
lret   
fiaddl
insb
push
arpl
xchg
aam
lods
mov
iret   
adc
stc    
test
and
and
inc
lock jns
cwtl   
loop
xchg
add
mov
mov
xor
xchg
mov
jno
or
sub
sub
xlat
cmpsl
scas
addr16 adc
sbb
adc
add
enter
outsb
gs adc
fnstsw
adc
ss
mov
jg
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
jge
mov
scas
inc
iret   
insb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
das    
(bad)  
and
movsb
pop
(bad)  
mov
pushf  
call
push
hlt    
test
(bad)  
cmpsb
adc
dec
add
mov
jle
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
in
(bad)  
sub
fimull
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
das    
(bad)  
and
test
jmp
inc
xlat
sub
insl
iret   
xor
push
add
jecxz
mov
push
cmp
push
and
and
mov
hlt    
mov
out
push
jge
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
inc
push
ds mov
mov
cmp
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
inc
std    
or
mov
mov
dec
test
sub
lods
ret
loop
(bad)  
out
(bad)  
leave  
(bad)  
ss scas
bound
pop
int3   
cld    
mov
sbb
cmp
jp
pop
pop
test
sbb
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
clc    
pop
aad
aas    
xlat
(bad)  
and
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
mov
mov
cmc    
cld    
scas
mov
repnz stos
les
aas    
scas
cli    
mull
fild
xor
js
inc
push
jp
pop
push
dec
(bad)  
imul
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
or
sqrtps
mov
sbb
mov
and
popl
and
mov
(bad)  
sub
sarb
push
jg
mov
inc
fstpt
scas
cmp
pop
xorl
pop
pop
pushf  
repz ret 
mov
mov
repz dec
scas
lock or
pusha  
dec
jle
sub
xor
lock dec
pusha  
add
xlat
iret   
fdiv
mov
cli    
sub
dec
xor
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
in
mov
sub
fimull
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
das    
(bad)  
and
movsb
pop
(bad)  
mov
sbb
xchg
cmpsb
adc
neg
hlt    
mov
in
xlat
enter
mov
not
hlt    
(bad)  
jecxz
or
nopl
shl
or
popa   
pusha  
pop
lods
pop
orl
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
adc
jno
in
mov
mov
cwtl   
xor
mov
out
mov
scas
(bad)  
les
mov
mov
and
outsb
adc
adc
cmp
outsl
mov
into   
push
arpl
or
(bad)
hlt    
cmp
test
push
inc
push
or
add
xor
out
dec
(bad)  
pop
adc
push
aam
dec
pop
out
dec
(bad)  
pop
adc
push
aam
push
adc
int3   
dec
(bad)  
pop
adc
push
aam
outsl
out
int3   
dec
(bad)  
pop
adc
push
aam
ja
out
dec
(bad)  
pop
adc
push
aam
outsl
out
out
dec
(bad)  
pop
adc
push
aam
ja
out
dec
(bad)  
pop
adc
push
aam
iret   
aaa    
out
dec
(bad)  
pop
adc
push
aam
xlat
or
int3   
dec
(bad)  
pop
adc
push
aam
iret   
aas    
out
dec
(bad)  
pop
adc
push
xchg
aas    
into   
(bad)  
iret   
push
fwait
mov
cmp
cmp
push
cmp
pop
ret    
cmp
cltd   
aas    
mov
pop
addr16 sbb
jb
or
outsb
mov
mov
push
fnop   
imul
mov
mov
add
xchg
sub
hlt    
xlat
scas
dec
ret
push
mov
push
int3   
inc
fimull
insl
fbld
ljmp
out
xchg
dec
pushf  
hlt    
mov
out
adc
call
hlt    
mov
addr16 xchg
out
std    
bound
pop
cmpsb
sbb
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
xchg
stos
cmpsl
adc
pop
in
insl
dec
loop
mov
xbegin
xchg
es aaa 
mov
adc
mov
in
mov
jne
push
outsb
arpl
shlb
ljmp
or
sub
int
jns
and
or
or
jge
and
mov
fstpl
sbb
sbb
inc
pop
or
pop
add
adc
inc
test
insl
lea
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
jnp
gs
cld    
out
(bad)  
pushf  
add
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
bound
xchg
fimull
push
(bad)  
sbb
mov
xchg
bound
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
les
movb
xchg
fdivl
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
(bad)  
push
imul
add
ds xchg
outsl
arpl
(bad)  
call
or
dec
add
lret   
(bad)  
out
xlat
iret   
fdiv
mov
jnp
enter
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
and
(bad)  
test
pusha  
mov
insb
inc
cmpsl
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
adc
popa   
xchg
cmp
fbld
out
imul
adc
repnz cmp
sub
add
pop
mov
jne
(bad)  
fmulp
lahf   
xchg
lret   
bound
or
loop
(bad)  
out
(bad)  
leave  
(bad)  
ss scas
bound
(bad)  
fdivl
ss dec
mov
push
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
repnz enter
(bad)  
es enter
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
adc
xchg
jmp
and
jns
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
notb
xor
insb
dec
loop
mov
ss jecxz
xchg
call
lahf   
stos
aam
jb
es aaa 
mov
test
mov
jmp
dec
mov
xor
out
adc
add
and
and
adc
jnp
popa   
sub
rorl
jno
test
adcl
adc
arpl
push
dec
add
movsb
or
push
out
lahf   
aas    
aad
nop
cmp
test
into   
test
flds
dec
sub
cmp
xchg
mov
popf   
cmp
rclb
cmp
xchg
xchg
(bad)  
call
push
loope
inc
outsl
pop
out
pop
pop
adc
rorb
roll
pop
aam
jecxz
push
(bad)  
push
lret   
sahf   
loope
roll
pop
lret
inc
or
(bad)  
iret   
mov
push
pusha  
or
test
test
fdiv
test
mov
fdivr
mov
out
(bad)  
aam
stos
ret    
mov
push
(bad)  
(bad)  
mov
jbe
inc
add
xor
cmpsl
shrl
lcall
lock data16 mov
clc    
notb
(bad)  
xchg
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
scas
push
(bad)  
fdiv
mov
sub
pop
mov
out
mov
hlt    
mov
shlb
imul
(bad)  
mov
repnz sarl
dec
call
mov
out
xlat
mov
or
lret   
int
mov
inc
add
iret   
and
aam
jb
es aaa 
mov
test
mov
push
push
jg
aaa    
cmp
sub
or
mov
mov
adc
jno
sub
cmp
jg
xor
pop
bound
adc
pop
jbe
jnp
inc
and
mov
out
aam
sub
faddl
and
jbe
adc
sub
inc
cmp
sub
cmp
push
or
je
push
cmp
jo
mov
push
ret
insl
adc
mov
es push
icebp  
xchg
stc    
jae
sbb
or
aad
mov
(bad)  
je
les
add
pextrw
jb
setle
add
das    
inc
cmp
(bad)  
out
or
inc
pop
mov
pop
jns
add
loop
cmp
pop
dec
add
mov
cwtl   
push
jae
leave  
ret    
in
in
lods
jne,pn
dec
push
mov
sub
mov
mov
xchg
sub
out
push
iret   
pop
hlt    
or
outsb
stos
and
inc
pop
add
mov
pop
stos
sti    
mov
mov
out
xlat
iret   
fdivl
out
xlat
enter
pop
(bad)
js
call
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
(bad)
stc    
idivl
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
ret    
out
sub
dec
pop
das    
jge
xchg
(bad)  
jb
(bad)  
mov
pop
popf   
cmp
jns
rclb
cmp
inc
xchg
xor
scas
(bad)  
or
ficompl
mov
xchg
pop
int3   
sbb
xlat
iret   
fdiv
mov
out
lahf   
into   
sar
lret   
(bad)  
out
xlat
iret   
fdiv
mov
pop
xchg
fcos   
test
cmp
dec
out
inc
jb
jg
not
lahf   
mov
mov
mov
cmp
pop
push
xchg
cmp
(bad)  
lods
ret    
test
jns
movsb
dec
idivb
or
and
hlt    
inc
mov
out
outsb
in
xor
inc
or
inc
push
pop
jae
sbb
dec
rorb
or
dec
je
mov
mov
push
aaa    
cld    
xor
popa   
jo
push
(bad)  
dec
das    
xlat
stos
add
ljmp
adc
push
divl
insb
inc
hlt    
aam
cltd   
mov
in
aaa    
push
divl
gs inc
(bad)  {%k1}{z}
jns
inc
call
xchg
sbb
sbb
stos
fidiv
pop
cli    
int
and
loope
or
pusha  
add
inc
shrb
fdiv
test
out
pop
out
add
mov
ljmp
jb
inc
addr16 push
push
daa    
popa   
inc
or
push
mov
or
inc
cwtl   
les
arpl
adc
clc    
je
add
scas
pop
sub
inc
(bad)  
lea
repnz addr16 icebp 
das    
rorb
shl
push
add
scas
clc    
les
mov
cli    
push
and
mov
cmpsl
mov
xchg
pop
aam
xchg
cmpsl
in
cli    
or
push
mov
push
mov
dec
decb
sbb
rcll
stos
stc    
rclb
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
(bad)  
int
pushf  
sahf   
(bad)  
scas
inc
iret   
insb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
in
out
cmp
sub
pop
or
(bad)  
push
ds into 
sbb
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sub
sbb
adc
(bad)  
jle
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
cmpsl
cmp
icebp  
imull
sbb
jne
test
es push
inc
in
mov
ret
mov
in
push
fcompl
push
mov
pop
pop
inc
into   
stos
scas
faddl
dec
or
imul
xor
popa   
je
in
xacquire xchg
imul
ror
cmp
sbb
jae
inc
iret   
daa    
rclb
push
mov
xchg
scas
int3   
add
push
(bad)  
push
addl
sbb
mov
mov
(bad)  
lret   
adc
mov
ret
inc
dec
lea
pop
jb
sub
jg
repnz and
adc
jne
xchg
cmpsb
in
mov
cmp
jp
bound
push
loopne
pop
push
aam
shrl
push
(bad)  
int3   
mov
and
mov
jae
rorb
xchg
mov
jp
jecxz
lods
mov
sbb
cmpsb
ja
mov
mov
cs mov
jecxz
lret   
adc
cmp
mov
xchg
adc
adc
fisttpl
mov
jbe
in
xor
mov
pushf  
xor
mov
test
mov
cmp
or
aam
mov
imul
fwait
xchg
adc
repz xlat
iret   
push
mov
add
pushl
mov
sbb
aad
popl
fnstsw
add
pop
decl
mov
out
and
(bad)  
shlb
mov
popf   
popf   
mov
(bad)  
(bad)  
in
scas
js
into   
out
or
loop
xchg
or
out
xchg
inc
sub
ret
mov
in
lock psrlq
add
ret
rolb
or
sub
sub
xorl
jg
ret    
(bad)  
or
dec
lods
jae
(bad)  
out
sub
loopne
jbe
mov
lea
ds dec
rcr
dec
add
mov
scas
inc
shr
mov
insb
lret   
and
fwait
and
inc
mov
jmp
cmpsb
push
test
rorb
fisub
or
outsl
cmp
lea
pop
or
movsb
inc
nop
add
out
in
inc
into   
into   
pop
cmpsb
sub
shr
xchg
inc
cmc    
pop
cmpsb
mov
sub
dec
fimul
mov
jmp
mov
xor
ficompl
(bad)  
daa    
inc
es data16 cmp
ljmp
dec
jge
cmp
push
ficom
and
xchg
xor
fistl
sahf   
jp
mov
pop
lods
lcall
and
(bad)  
or
push
and
daa    
fiadd
das    
cltd   
(bad)  
xchg
dec
movb
mov
pushf  
je
dec
test
in
cmp
sub
std    
into   
addr16 ljmp
mov
push
and
sub
rorb
leave  
mov
arpl
mov
mov
les
adc
and
jb
dec
aam
loop
push
push
sbb
sti    
inc
mov
and
mov
insb
mov
fsubl
into   
pusha  
fistp
mov
gs inc
iret   
push
push
push
or
pop
sbb
cmpsl
movsl
mov
mov
jns
pop
pop
xor
divl
incb
(bad)  
negl
loop
mov
insb
cmp
mov
addr16 js
xchg
repz aaa 
cmp
push
out
jno
fwait
(bad)  
in
out
nop
int
aam
movsb
(bad)  
cs xor
sub
push
aad
(bad)  
mov
addl
jg
outsb
inc
mov
and
inc
iret   
enter
addl
aas    
mov
mov
adc
jecxz
nop
fwait
dec
scas
popf   
pop
cmp
or
(bad)  
xchg
insb
mov
fwait
mov
lock push
stc    
cs mov
je
rol
cmp
push
out
jno
fwait
mov
lock push
stc    
jle
cld    
xchg
adc
push
lock mov
jnp
ret    
cmp
mov
fsubrs
(bad)  
mov
jecxz
lea
sub
loop
movsl
mov
add
mov
lea
rolb
jb
sbb
mov
out
loope
push
aam
xor
scas
mov
stc    
sarb
ljmp
scas
push
dec
pop
(bad)  
xor
cmp
mov
mov
fwait
loopne
xor
jecxz
(bad)  
xchg
flds
pop
add
mov
addr16 xchg
inc
cmpsl
lret   
rorb
mov
adcl
jge
inc
gs out
lods
popa   
sub
jle
mov
cmp
test
lods
mov
out
push
(bad)  
jecxz
dec
idivl
adc
icebp  
mov
nop
stos
mov
xchg
insb
in
xlat
sbb
add
(bad)  
pop
das    
push
out
or
fisttpll
rorb
mov
xchg
lods
dec
push
insb
out
cld    
into   
lods
jl
inc
mov
int
scas
mov
cmp
xor
into   
xor
mov
and
mov
sbbl
adc
loop
mov
imul
lea
jmp
jp
add
ja
lea
mov
mov
loop
mov
sbb
sub
loopne
rcr
mov
mov
das    
adc
sbb
int
int
xchg
dec
decl
adc
sbb
or
mov
lds
xchg
inc
mov
rorb
(bad)  
hlt    
pop
sub
aas    
xor
pop
out
cmpsb
push
push
bound
stc    
lcall
mov
cmpsl
(bad)  
clc    
pop
mov
push
push
xchg
or
jnp
test
aam
sub
jl
bound
in
imul
(bad)  
int
arpl
(bad)  
ucomiss
push
icebp  
or
aaa    
sub
int3   
mov
cmpsl
jl,pn
xor
pop
push
dec
push
pop
and
ljmp
into   
mov
js
fisub
or
xchg
dec
adcl
std    
sub
jns
mov
dec
pop
ret
and
lret
adc
jle
aad
adc
fimull
icebp  
sub
jg
jp
stos
adc
mov
out
cmpsl
dec
sub
add
js
call
and
(bad)  
xor
into   
cmpb
loopne
mov
les
aam
push
and
negb
xlat
fsubs
jmp
mov
and
int3   
ret
call
cli    
sub
pop
inc
and
cmp
mov
push
adc
inc
sar
xchg
mov
cmp
shrl
out
push
outsb
inc
pop
pop
in
in
inc
iret   
and
pop
adc
subb
cmp
movb
fsubrl
in
stc    
ret    
cmpsl
xchg
outsb
pop
mov
(bad)  
and
adc
mov
sub
out
adc
(bad)  
das    
loope
adc
pop
mov
cmpsb
xchg
jns
mov
lret
lahf   
imul
xor
mov
(bad)  
sarl
pop
mov
std    
icebp  
xchg
aad
daa    
test
xor
icebp  
xchg
push
push
sub
push
push
cmc    
stc    
cld    
push
push
mov
(bad)  
sub
mov
mov
int
xchg
dec
pop
inc
lret
notl
mov
icebp  
xchg
aad
daa    
test
xor
icebp  
xchg
push
push
(bad)  
sub
mov
bound
(bad)  
std    
fdivrs
(bad)  
xor
sub
lahf   
cwtl   
movsl
adc
(bad)  
repz pusha 
cltd   
or
jb
fcom
jmp
and
mov
lret
fsubl
cmp
push
gs cld 
sub
lods
sti    
stos
push
jle
cmp
int3   
loop
mov
cmp
scas
cwtl   
lods
push
dec
ds into 
arpl
pop
je
bound
xchg
sub
std    
(bad)  
mov
and
mov
and
sub
mov
and
flds
int
dec
and
and
or
inc
imul
popf   
sbb
arpl
fcom
sbb
in
fcmovnb
inc
loope
and
fstpt
mov
rcrb
(bad)  
inc
in
hlt    
mov
pop
mov
mov
mov
jns
dec
mov
sahf   
rolb
int
push
lds
cmp
or
mov
(bad)  
loop
and
dec
push
movsl
fsubrs
cmc    
insl
lea
push
js
sbb
pusha  
push
push
sahf   
loop
lock sub
not
adc
call
jl
fcompl
xchg
movsl
ja
cmp
xor
pop
inc
xor
loop
and
idiv
jae
mov
pop
mov
xchg
or
cmpsl
xchg
outsb
mov
insb
dec
out
add
imul
int3   
mov
lds
jbe
in
inc
pop
jns
mov
out
int
imul
lahf   
(bad)
add
jne
out
add
rcl
pop
scas
mov
sarb
mov
sbb
inc
stos
shr
fcoms
clc    
adc
inc
xor
mov
and
lahf   
sti    
fnstsw
add
mov
in
ja
add
cmpsl
sahf   
leave  
lret
xchg
std    
nop
mov
mov
adc
icebp  
mov
jecxz
sbb
insl
popa   
repnz adc
std    
inc
mov
inc
fptan  
mov
js
in
call
push
les
std    
or
out
cmp
add
push
lds
xchg
dec
movsl
pusha  
or
push
rorb
lock pop
pop
fldt
(bad)  
dec
int3   
push
fdivrl
sti    
add
jnp
in
in
push
lods
xchg
sub
push
pop
push
movsl
fmul
add
push
es
repnz xchg
out
jnp
cmpsl
mov
fild
iret   
lds
arpl
call
mov
sub
mov
cmp
sti    
inc
pop
ret
add
movsl
mov
or
les
jecxz
out
adc
jne
cmpsb
xor
movsl
and
mov
je
in
icebp  
test
mov
mov
jge
(bad)  
push
cmpsl
clc    
adc
jno
xchg
ficompl
xorb
cwtl   
leave  
xchg
les
call
adc
test
cmc    
icebp  
rdtsc  
in
jb
mov
mov
sub
ja
dec
mov
pop
jg
(bad)  
push
push
lds
cmp
pop
xor
je
lods
movsb
xor
iret   
sub
hlt    
int3   
add
mov
loop
push
mov
ljmp
imul
push
mov
mov
sbb
or
in
cmp
fidivr
or
lods
dec
push
add
scas
cld    
xor
ret
add
sub
ja
stc    
lds
lahf   
push
jnp
je
pop
dec
sbb
jnp
push
sbb
test
add
dec
sub
push
jae
sub
arpl
mov
lds
xor
sbb
sub
iret   
mov
mov
loop
xorl
stc    
vmovntps
loopne
int3   
cmp
fcoml
mov
or
stc    
(bad)  
daa    
push
jnp
je
inc
loop
fnstcw
or
jmp
mov
enter
ret    
inc
push
xchg
mov
loop
enter
addr16 mov
ljmp
imul
push
fcmove
cmp
fcoml
leave  
inc
in
jle
push
(bad)  
loop
mov
nop
push
lahf   
dec
pop
mov
mov
out
rcrl
pop
mov
mov
in
daa    
jbe
dec
mov
mov
add
scas
(bad)  
out
int3   
xchg
(bad)  
loop
cmp
sbb
dec
and
jge
fnstcw
jecxz
(bad)  
bnd je
jo
sbb
push
xor
pop
loopne
adc
sub
int
push
xor
js
sbb
dec
xor
sub
lods
adc
mov
fmul
aad
aaa    
add
fnstsw
inc
enter
and
push
in
jle
push
(bad)  
loop
shll
pop
dec
sbb
pop
out
aas    
in
je
lods
subl
inc
pusha  
js
sbb
(bad)  
(bad)  
push
xchg
sub
xor
xchg
mov
fmul
test
insb
add
fstpl
pushf  
cs in
jnp
cmpsl
mov
arpl
pop
mov
fistpl
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
rcrb
sarl
xlat
(bad)  
mov
(bad)  
jle
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
fsubr
xchg
jmp
adc
sbb
pushf  
lock in
jecxz
mov
enter
add
lea
dec
test
xchg
(bad)
ret    
outsl
stc    
mov
outsl
xchg
(bad)  
not
dec
xorl
add
scas
pop
sub
(bad)  
out
jp
mov
cltd   
mov
cmp
(bad)  
adc
mov
(bad)  
cld    
std    
pop
xchg
dec
xor
and
fwait
ljmp
jecxz
jae
mov
in
mov
imull
pop
call
gs es out
pop
dec
icebp  
sub
int
idivl
mov
pop
mov
xlat
pop
inc
and
adc
mov
fstp
in
ja
adc
mov
mov
xor
(bad)  
xor
test
iret   
in
inc
std    
dec
shl
ret
jnp
cmpsl
mov
ja
mov
mov
test
(bad)  
fsts
mov
out
rorl
pop
mov
inc
xchg
(bad)  
sub
pop
out
in
movl
out
and
xor
jmp
rclb
mov
jae
mov
lock add
mov
data16 xor
fildll
stc    
mov
mov
stos
adc
outsl
push
dec
cmp
xchg
(bad)  
aad
mov
mov
je
mov
imul
subl
popa   
push
fldenv
mov
mov
xchg
or
add
lods
movsb
mov
inc
(bad)  
and
mov
xchg
mov
xor
inc
inc
fucomi
enter
mov
jo
xor
stos
int3   
xchg
std    
aas    
sti    
push
stos
cli    
stos
lret
jmp
repz lret 
outsl
mov
xor
leave  
fsubrs
lret
mov
dec
inc
dec
jmp
xor
mov
mov
dec
push
repz lret
inc
inc
mov
push
push
fidivrl
(bad)  
pop
jecxz
enter
insl
xchg
test
sti    
ja
(bad)  
shr
adc
mov
push
xchg
cld    
(bad)  
aad
lods
rolb
adc
xchg
and
sbb
push
sbb
shrb
jp
mov
outsl
jb
lcall
inc
insl
jl
stos
adc
pushf  
pop
pop
sub
stos
push
(bad)  
jo
add
mov
adc
push
lds
cmp
lock xlat
fsubr
fnstenv
repnz cmc 
inc
lret
cwtl   
jno
xchg
ficompl
xchg
fwait
cwtl   
std    
inc
test
adc
pop
inc
lock lret 
adc
std    
mov
xchg
lea
fwait
insb
sti    
ret
push
sub
hlt    
pop
pop
push
jge
enter
in
loopne
mov
ljmp
or
loopne
pop
test
orl
(bad)  
pop
movsl
lahf   
dec
lock enter
(bad)
jno
lret
push
decl
adc
adc
inc
lret
add
fmuls
in
mov
outsl
neg
jg
into   
push
(bad)  
decl
jg
sbb
jg
sti    
in
pop
repnz add
add
sub
dec
xor
cmp
stc    
lcall
xlat
cmpsl
jbe
cmpsb
call
push
sti    
fdivrl
rclw
jne
sbb
(bad)
push
(bad)  
pop
xor
lods
ret    
jne
les
and
adc
cmp
mov
enter
hlt    
xor
aam
sub
mov
jbe
jns
xchg
divl
test
pop
leavew 
or
movsl
insb
adc
test
jmp
rcrb
pop
pop
ret
dec
or
into   
out
add
out
psrlw
cmp
lods
xorl
and
pop
and
adc
sub
fptan  
cbtw   
jmp
mov
push
xchg
mov
sub
sub
fldt
xchg
mov
cmp
cmp
fldcw
mov
mov
add
scas
xchg
ret    
or
dec
repnz decl
jb
std    
mov
ljmp
or
aam
or
imul
mov
ret    
pop
sub
xchg
insb
pop
inc
mov
sbbl
out
or
sub
push
std    
jmp
mov
(bad)  
into   
subb
(bad)  
lea
mov
mov
cli    
xorb
sub
pusha  
icebp  
fistpll
or
jmp
mov
loope
fbstp
xor
add
mov
xchg
jl
xchg
sub
sub
(bad)  
movsl
mov
pushf  
(bad)  
mov
std    
jns
add
lret
dec
push
cmpsb
andb
je
insl
rolb
stc    
mov
cwtl   
cmp
iret   
xchg
int
sbb
push
inc
jp
popa   
jge
push
inc
(bad)  
in
ror
fdivp
mov
out
add
leave  
sbb
or
imul
inc
push
xchg
mov
inc
sub
fcoml
push
insb
(bad)  
test
mov
push
stc    
popa   
cmp
xchg
cmp
out
push
imul
add
jae
enter
aad
adc
fimull
xchg
sub
push
sub
call
push
mov
sub
dec
pop
xchg
test
loopne
mov
push
jp
xchg
jecxz
addr16 adc
cwtl   
and
adc
mov
lret   
insl
das    
ja
divb
mov
out
fbld
scas
inc
and
cmc    
in
xchg
push
imul
add
pop
ja
sub
mov
(bad)  
sahf   
inc
stos
jb
pop
fwait
and
sub
shrb
aaa    
dec
xchg
sub
mov
repz xlat
pop
lret   
pop
mov
jl
popf   
cwtl   
stc    
mov
mov
mov
and
ja
cmpl
das    
and
xchg
or
pop
movsb
mov
lds
push
push
lds
cmp
test
dec
adc
push
insl
pop
(bad)  
cld    
(bad)  
jg
aaa    
jl
xchg
sub
fsts
xchg
or
mov
pop
in
add
mov
nop
and
fsubr
pop
adc
mov
mov
ret
shl
sbb
push
loopne
(bad)  
dec
je
pop
mov
or
and
mov
mov
sbb
mov
cmp
(bad)
adc
fidivl
jns
sub
scas
cmpl
jb
inc
mov
jge
push
in
repnz adc
xlat
out
dec
and
(bad)  
and
add
enter
sarb
in
aam
imul
aaa    
sbb
mov
mov
aas    
loop
mov
push
inc
dec
insb
pop
mov
out
(bad)  
xor
test
dec
fwait
add
and
push
inc
mov
jbe
int
pop
in
fldt
addl
ja
divb
mov
mov
mov
xlat
fstl
clc    
xchg
push
clc    
push
sub
push
mull
sbb
outsb
push
adc
add
clc    
pop
ret
data16 xor
les
sub
adc
adc
xor
insb
jbe
lods
clc    
not
jbe
mov
pop
xlat
js
ss xor
mov
repnz mov
mov
sub
mov
jle
dec
xchg
loope
aas    
shrl
add
cmp
mov
(bad)  
lock inc
pop
lea
push
adc
xor
jg
add
js
inc
fdivs
fnsave
loop
jbe
scas
les
sub
shr
incl
jmp
inc
out
mov
das    
inc
inc
push
stos
clc    
dec
scas
or
push
mov
push
xchg
int
cmp
stc    
(bad)  
ljmp
fs jae
jmp
bound
out
(bad)  
jnp
push
mov
sub
jae
mov
or
movsb
test
sub
or
or
das    
movsl
in
orl
sbb
bound
imul
das    
dec
stos
dec
(bad)  
iret   
pop
xor
mov
lea
jne
add
and
adc
icebp  
mov
stc    
mov
popa   
test
iret   
add
mov
test
loopne
addl
cmp
gs lock inc
sbb
sub
ja
add
lret
fadds
sub
cmp
in
test
adc
dec
mov
jl
enter
or
hlt    
mov
fidivl
mov
addr16 pop
aam
hlt    
imul
inc
sbb
sub
lret   
out
call
mov
cmp
insl
(bad)  
fist
insl
mov
xor
pop
jecxz
call
mov
pop
dec
jge
or
hlt    
xor
(bad)  
rcll
cmp
movsl
or
mov
rcrl
out
cmc    
xor
std    
cmp
rcll
incb
loop
outsl
(bad)  
jecxz
(bad)  
aam
out
fwait
cwtl   
inc
xchg
(bad)  
test
cmpsl
lods
rolb
push
in
mov
(bad)  
(bad)  
icebp  
pop
ret
subl
movl
std    
xor
sti    
push
fcomps
jbe
scas
dec
js
sbb
stc    
test
cmc    
pusha  
mov
push
daa    
stos
insb
in
fwait
add
lods
(bad)  
sub
std    
(bad)  
lods
out
negb
and
arpl
mov
cmpsl
xor
mov
adc
hlt    
dec
rcl
pop
(bad)  
fidivr
shll
pop
mov
and
ret
and
cmp
aam
hlt    
imul
icebp  
rdtsc  
ljmp
in
jb
push
cmp
scas
add
inc
mov
xor
pop
jecxz
call
mov
jbe
inc
and
dec
mov
mov
add
scas
lds
std    
mov
add
dec
push
cli    
bound
push
dec
incl
mov
inc
lret   
inc
lret
das    
bound
je
out
adc
jge
(bad)  
pop
iret   
pop
mov
xor
dec
jne
or
adcb
pop
sub
cmp
jae
mov
add
add
out
mov
and
or
ja
xor
movsl
loop
mov
push
inc
adc
sub
out
sub
imul
in
fildll
mov
fbld
lret
adc
ret
ljmp
mov
push
and
sti    
jo
pop
adc
(bad)  
sbb
adc
mov
inc
imul
push
push
xchg
arpl
lods
out
sahf   
mov
adc
and
hlt    
cmp
jo
bound
mov
aam
inc
inc
or
and
frstor
arpl
xor
fisub
or
inc
pop
cmpsl
(bad)  
clc    
pop
mov
cmpsb
adc
adc
js
mov
dec
pusha  
jno
aam
stos
mov
adc
push
xchg
mov
aaa    
(bad)  
mov
jle
ljmp
mov
stc    
enter
testb
call
lcall
jg
(bad)  
dec
mov
imul
pop
ja
daa    
(bad)  
dec
rclb
jnp
icebp  
push
pop
push
and
insl
lahf   
inc
inc
mov
mov
mov
add
dec
sti    
mov
and
lods
cmp
adc
negb
loope
fs xchg
stos
adc
sub
pushf  
scas
gs xchg
xor
sub
xor
test
lods
ret    
jne
add
mov
arpl
mov
mov
inc
sub
cmp
aas    
test
push
or
out
nop
les
jg
js
pop
(bad)  
jnp
out
xchg
neg
lcall
cmp
lock lcall
ljmp
(bad)  
int
dec
dec
cwtl   
rcrl
(bad)  
or
xchg
(bad)  
xchg
xchg
sub
pusha  
es sub
mov
loopne
or
loope
push
out
mul
test
ljmp
add
add
push
insb
shrl
xchg
daa    
adc
repz daa 
scas
(bad)  
sub
sbb
popa   
das    
jno
fcoml
cmpsl
add
in
mov
or
xchg
sbb
mov
ja
ja
mov
fs aam
sub
push
jns
jnp
xchg
sub
jnp
testb
hlt    
enter
inc
push
add
mov
cld    
inc
sub
(bad)  
in
rclb
xchg
dec
pop
clc    
mov
jo
lahf   
rolb
mov
adc
fwait
dec
ljmp
clc    
test
imul
or
les
jecxz
repnz push
sbb
or
out
idiv
arpl
push
pusha  
es sub
dec
mov
adc
cmp
jno
jg
adc
lahf   
sub
mov
iret   
inc
icebp  
mov
cli    
cmp
push
lock push
xor
jp
add
mov
lods
or
or
sbb
fimul
push
andl
movsb
push
imul
jns
mov
xor
out
add
stc    
lods
pushl
les
jge
push
out
jge
fnstsw
icebp  
scas
je
jp
fs
enter
in
out
mov
stc    
rorl
gs test
jg
adc
mov
iret   
shll
je
int3   
cmp
cmc    
dec
sbb
jge
or
loopne
fnstenv
je
jb
and
divl
loope
mov
dec
inc
(bad)  
out
xlat
iret   
fdiv
mov
scas
push
(bad)  
fdiv
mov
sub
and
jecxz
xor
jno
xor
add
or
cmpsb
xlat
pusha  
mov
mov
out
shll
pop
int
das    
mov
fnop   
jnp
dec
fisubrl
xlat
iret   
inc
jns
xchg
daa    
inc
mov
pop
rolb
mov
in
movsl
cwtl   
cmpsl
mov
mov
rorb
push
adc
sbb
lea
adc
(bad)
enter
insb
or
mov
add
dec
add
mov
and
pop
jecxz
ljmp
ds in
pop
sbb
test
daa    
daa    
pop
xor
xchg
daa    
inc
es data16 cmp
add
mov
ljmp
(bad)  
mov
and
pop
jns
rorb
pop
(bad)  
and
mov
push
les
add
addl
mov
popa   
test
movsb
into   
(bad)  
cli    
xor
cmp
mov
(bad)  {%k1}{z}
fiadd
sbb
mov
in
dec
nop
mov
addr16 out
outsb
jmp
push
and
xor
gs push
pop
inc
add
addr16 push
push
popf   
push
add
sti    
or
clc    
pop
aam
hlt    
popa   
test
add
scas
pop
and
add
jle
nop
push
rolb
push
ja
push
xchg
push
call
jns
sub
mov
mov
lock ficompl
enter
and
pop
cld    
sbb
ljmp
(bad)  
int
out
fwait
cwtl   
test
paddusw
test
nop
daa    
inc
es data16 cmp
loopne
push
and
pop
sub
addr16 iret 
mov
cmp
cmc    
popf   
jmp
inc
imul
jmp
pop
ljmp
inc
imul
stc    
cs mov
dec
incl
(bad)  
mov
xchg
adc
adc
jns
mov
xor
mov
test
lcall
pusha  
jns
rorb
dec
mov
pop
imul
and
sbb
cwtl   
clc    
adc
inc
sub
icebp  
mov
jecxz
lret   
adc
int3   
negb
(bad)  
dec
inc
(bad)  
add
fwait
out
dec
jbe
iret   
pop
iret   
fwait
cwtl   
cli    
mov
movsl
outsb
mov
es data16 cmp
loopne
(bad)  
lods
fistp
pop
ret    
mov
xchg
sbb
movsl
adc
inc
in
sti    
daa    
inc
inc
in
inc
iret   
cwtl   
test
xor
mov
xlat
cmp
push
lods
jle
out
sbb
jns
std    
cmp
ret
inc
push
testl
fwait
test
daa    
ds mov
rolb
mov
in
xchg
fwait
cwtl   
cmp
jmp
adc
aam
adc
fdivr
mov
lods
mov
or
lret
lcall
inc
cs sub
sbb
aas    
in
mov
and
or
cmpsb
push
mov
jecxz
xor
getsec 
xchg
xor
jp
dec
nop
fdivp
data16 jno
in
stos
lret
out
dec
fdivrl
dec
ja
pop
adc
sti    
pop
or
test
or
lods
or
ret
cld    
lods
jb
inc
arpl
jne
dec
icebp  
dec
and
movsb
xor
pop
mov
sub
or
adc
rcr
nop
xchg
sub
lods
mov
xor
xlat
sbb
adc
scas
sar
mov
decb
adc
sbb
mov
and
cmc    
ss jbe
cmp
mov
jecxz
sbb
dec
push
repnz lret
xchg
insl
sti    
mov
cmc    
xchg
jo
sti    
int
pop
data16 sbb
ds pop
out
adc
xchg
cmc    
pop
int3   
xor
inc
sub
push
les
push
fimull
sbb
(bad)  
stos
ds fs adc
fcomps
cmpsl
push
pop
jmp
push
sub
pop
data16 stc 
out
sub
mov
inc
mov
(bad)
jne
push
rorb
jbe
arpl
push
or
jge
xlat
cmpsl
push
int
xor
dec
pcmpgtd
dec
adc
loop
push
push
sbb
push
mov
fstpl
lods
aaa    
pop
pop
aaa    
repz hlt 
push
sbb
(bad)  
cs sub
cmp
pushf  
iret   
xor
jnp
pop
sbb
mov
mov
pop
ljmp
dec
xor
jns
pop
push
push
mov
loopne
popf   
das    
or
stos
bound
pop
jb
cmc    
pop
dec
ljmp
(bad)  
int
and
xchg
mov
inc
sub
out
lods
add
mov
and
jno
xchg
ficompl
xorb
cwtl   
popa   
outsl
and
adc
and
pusha  
cli    
adc
orb
mov
in
rolb
mov
subb
bound
push
insb
int3   
inc
xchg
dec
bound
insb
xchg
sub
pop
dec
ljmp
(bad)  
int
out
outsl
nop
and
push
cs pop
mov
fwait
daa    
inc
es data16 cmp
ljmp
mov
jl
inc
cmp
test
and
stos
ds pop
outsb
in
or
nop
sbb
push
dec
les
xchg
inc
imul
jmp
mov
or
sbb
bound
adc
movsb
or
push
add
jae
fistpll
lock es iret 
and
inc
aam
dec
jmp
out
mov
mov
add
scas
ljmp
pusha  
push
pop
or
add
lret
dec
push
mov
leave  
psrad
adc
mov
or
inc
inc
and
jge
fnsave
icebp  
(bad)  
loope
mov
or
fwait
or
mov
push
push
(bad)  
ficompl
xchg
daa    
inc
es data16 cmp
ljmp
push
stc    
and
popa   
gs lret
hlt    
adc
pop
jns
mov
mov
(bad)  
sbb
movsl
lds
insl
rclb
jge
jmp
jl
dec
adc
bound
xchg
in
mov
repz dec
out
xchg
jmp
xchg
xchg
or
les
jecxz
call
add
pop
mov
movsl
lods
push
mov
mov
xor
(bad)  
push
cli    
jae
movsb
daa    
lock mov
and
lret
dec
push
add
xchg
push
dec
cmp
push
jbe
repnz pop
jo
and
mov
mov
pop
popa   
push
imul
jecxz
push
push
mov
lahf   
arpl
lods
cli    
cmpsl
outsl
fldl
sub
dec
lret   
mov
cmc    
pusha  
and
xor
jno
dec
movsb
shrl
lahf   
mov
(bad)  
dec
fimull
adcb
mov
daa    
loop
mov
jnp
or
dec
lods
and
push
adc
aaa    
in
inc
into   
cmp
leave  
test
xchg
jge
cmpsl
movsl
incb
(bad)  
inc
sub
lcallw
cld    
fdivs
fsubl
mov
mov
add
scas
stos
jb
popf   
dec
repnz lahf 
mov
xchg
and
dec
cmp
cmovl
and
xlat
jnp
int3   
xchg
loop
push
push
in
inc
les
sub
cmpl
imulb
pop
jo
cmp
sub
movsb
jb
pop
sub
addr16 iret 
mov
sub
mov
xor
jbe
jb
pop
shll
ljmp
cmp
shrb
int3   
and
aas    
aaa    
xlat
(bad)  
mov
inc
andb
cmp
mov
loop
cmpsb
adc
jae
dec
lods
xchg
mov
scas
jo
cmp
mov
inc
loopne
mov
in
rolb
mov
js
fcompl
dec
cmc    
lahf   
repz dec
out
popf   
test
je
xor
pop
dec
ljmp
(bad)  
int
inc
cmp
or
les
daa    
dec
xchg
dec
data16 loope
mov
lcall
cmp
inc
inc
mov
sarl
inc
xchg
jo
xchg
out
fisttpll
test
mov
test
adc
popa   
aam
dec
add
pop
xchg
jns
outsl
sarl
in
ds
out
sub
out
fldl2e 
jbe
sbb
es mov
fimul
inc
adc
lidtl
cltd   
idivb
ss add
int
ja
or
dec
mov
mov
add
scas
jno
xor
mov
(bad)  
mov
pop
arpl
fucom
rcl
popa   
imul
and
aad
push
fwait
movsb
dec
(bad)  
pop
xor
jno
and
(bad)  
ljmp
inc
or
or
xchg
fisub
jns
outsl
mov
jo
adc
push
imul
aas    
mov
adc
std    
js
push
mov
sub
fwait
ljmp
or
out
popf   
mov
sahf   
or
pop
popl
mov
xchg
mov
imul
and
(bad)  
adc
fs sbb
push
mov
jns
loope
ds sub
sub
int
xchg
jns
or
jmp
(bad)  
movsl
push
jo
mov
mov
mov
loop
stc    
mov
popf   
stos
sub
aad
dec
shll
dec
mov
jae
mov
aam
mov
(bad)  
(bad)  
cwtl   
dec
fsubl
clc    
add
insb
adc
rol
inc
mov
mov
push
jnp
je
fnop   
push
xchg
jns
or
jmp
lods
push
push
and
hlt    
stc    
xchg
adc
call
js
ret
push
fistl
popf   
push
add
xchg
popl
and
pop
and
scas
arpl
mov
adc
push
dec
shlb
scas
jno
sarb
jnp
mov
mov
add
scas
iret   
lea
mov
(bad)  
daa    
jb
or
xor
jmp
xchg
pop
sbb
jb
inc
arpl
jecxz
in
mov
jne
fsubl
mov
repnz insb
adc
mov
push
test
jae
dec
mov
mov
push
lds
cmp
or
shll
jo
frstor
cltd   
jmp
test
jae
daa    
jns
(bad)  
xchg
inc
aam
dec
jmp
mov
mov
add
scas
js
lret
(bad)  
test
jae
add
fmuls
andl
je
jno
xlat
jae
mov
ljmp
dec
sbb
(bad)  
jl
stc    
(bad)  
ljmp
or
inc
outsb
inc
ja
push
stc    
cs mov
leave  
mov
daa    
cmpsl
test
leave  
push
push
or
xchg
push
iret   
jbe
xor
dec
shl
aaa    
test
xor
dec
jae
in
mov
sti    
int
pop
xchg
adcb
out
rol
inc
mov
jbe
les
test
jl
bound
jl
mov
pop
dec
ljmp
(bad)  
int
out
fwait
test
daa    
daa    
mov
enter
xchg
pop
rcll
push
stc    
mov
inc
movsb
imul
popa   
arpl
mov
adc
sti    
mov
daa    
cmp
fstpl
dec
mov
xor
hlt    
fist
psrad
sbb
jae
dec
lods
pop
push
pop
loope
int
xor
push
dec
sbb
mov
(bad)  
lret   
adc
(bad)  
xor
jp
movsb
(bad)  
mov
xor
mov
jge
int3   
add
scas
add
xor
or
les
jecxz
call
cmp
sbb
cs lret
mov
jnp
xchg
test
or
fisttp
repnz cltd 
mov
test
mov
bnd je
ret
add
lock fwait
lcall
repnz adc
jle
je
jmp
xchg
icebp  
sbb
rcl
popl
or
or
nop
dec
mov
mov
add
scas
sbb
repz
dec
repnz decl
jb
push
jno
sub
jmp
or
ret
cli    
shl
cmp
(bad)  
xor
sub
sub
iret   
minps
mov
rcpps
les
jp
stos
pop
add
jmp
push
cmp
mov
inc
mov
cmp
lock ret
cld    
lods
cmp
pop
nop
pop
mov
or
pop
insb
pop
out
push
rcrl
jae
or
sub
adc
xchg
scas
push
sbb
rcrl
popl
inc
daa    
add
rcrb
ficompl
xorb
cwtl   
jl
sub
call
adc
xchg
sbb
jp
push
and
std    
repz dec
sub
pop
ror
cmpsb
loopne
orl
daa    
lret   
mov
shl
push
dec
or
hlt    
rclb
data16 mov
sbb
adc
and
adc
inc
or
test
(bad)  
imul
nop
xor
std    
data16 jge
sti    
daa    
pushf  
(bad)  
ja
popa   
cmp
adc
out
movsb
aad
mov
iret   
and
fucomp
or
nop
add
enter
push
push
lret
sbb
popl
and
pop
and
rcrb
push
sti    
sbb
pop
push
popa   
aad
je
sarb
jnp
add
es
mov
xor
jge
outsb
xor
sub
(bad)  
popaw  
and
mov
nop
mov
sbb
jg
(bad)  {%k1}{z}
lret
lret
pop
sbb
les
(bad)  
xor
lea
dec
movsb
out
(bad)  
cmc    
xor
mov
and
mov
sbb
sti    
sbb
aad
repnz mov
mov
mov
addl
andl
es mov
sbb
jo
mov
or
sub
clc    
stc    
lret   
std    
xchg
mov
or
in
add
mov
jno
xchg
ficompl
xorb
nop
in
cmp
fucom
insb
jne
imul
dec
clc    
cmp
adc
fs mov
rcll
sbb
inc
xchg
loop
push
push
imul
testl
pop
cld    
lods
jb
inc
imul
sbb
movl
scas
add
cmp
les
jecxz
call
xchg
cmp
mov
push
les
pop
dec
xor
sub
push
call
movsl
fwait
test
rolb
data16 stc 
ficomp
imul
mov
test
enter
adc
into   
xorb
pop
fstpt
jb
adc
(bad)  
jns
rorl
icebp  
nop
push
inc
fsubl
lds
movsl
lahf   
(bad)  {%k1}{z}
(bad)  
mov
mov
mov
fbstp
popf   
cmp
sub
mov
push
sub
jno
aad
push
xor
cmp
push
pop
sbb
xor
cmpl
cmp
mov
xor
repnz lods
sti    
test
jnp
test
gs push
imul
cwtl   
nop
lcall
xchg
decl
(bad)  
mov
fsts
pushf  
jg
rcrl
inc
outsl
xor
rcrb
mov
stos
adc
inc
cmpsl
fsubl
mov
int
mov
jmp
adc
pop
pop
lea
or
mov
add
fdivrl
sbb
mov
pop
stos
(bad)  
jns
sub
mov
lea
inc
cmp
mov
adc
jge
mov
and
mov
in
pop
add
test
sbb
lret   
mov
aas    
mov
nop
aad
addr16 and
inc
push
xchg
pop
and
mov
loop
xchg
inc
mov
rcll
sbb
xchg
lret
adc
or
pop
mov
dec
decl
out
mov
inc
dec
out
aaa    
push
push
xchg
or
inc
jmp
jne
jg
add
pop
jle
jl
pusha  
mov
mov
insb
jno
inc
aam
shr
inc
push
push
shr
add
add
add
mov
out
fmull
jnp
xchg
addr16 dec
jnp
xor
xlat
outsb
fiaddl
mov
lret
(bad)
dec
test
in
addr16 jle
adc
jecxz
add
bound
lret
(bad)
dec
test
int
addr16 jle
adc
mov
jmp
loop
pop
inc
lret
adc
bound
mov
jb
inc
or
imul
fldt
ds mov
nop
test
push
and
dec
jb
pop
and
lods
jb
pop
push
adc
out
sbb
gs cld 
sub
(bad)  
xor
sub
dec
pop
xchg
test
loopne
mov
push
cmp
xchg
ja
jbe
cmp
sub
pop
and
mov
push
xchg
data16 mov
adc
jno
stc    
or
sub
mov
das    
ja
insb
mov
jns
cmpsl
mov
cmp
scas
and
pop
pop
hlt    
cld    
fs sub
loopne
popf   
das    
or
jae
scas
dec
nop
(bad)  
imull
stos
mov
cltd   
repnz lret
idivb
stos
stos
mov
shl
pop
add
test
push
inc
push
hlt    
xor
or
arpl
inc
lea
push
add
pop
pop
hlt    
std    
pop
xchg
dec
(bad)  
mov
adc
lret   
cmp
(bad)  
cld    
in
shr
iret   
cmp
jnp
xchg
jle
cmc    
mov
xor
cmp
mov
mov
insb
sbb
jmp
mov
pushf  
push
leave  
and
cli    
pop
or
ds sub
daa    
cli    
mov
scas
movsl
hlt    
pop
cmc    
xchg
insl
cmp
jo
push
push
mov
sub
ret    
push
mov
jo
(bad)  
jns
mov
jne
add
mov
mov
xchg
pop
fcmovnbe
jle
ds pop
jle
add
(bad)  
and
mov
sbb
mov
or
ljmp
sub
dec
pop
xchg
test
loopne
mov
push
cmp
mov
aad
iret   
or
fidiv
xor
rcl
in
sti    
mov
sub
pop
and
mov
mov
push
inc
cmpsl
push
and
stos
call
or
ja
add
stos
mov
add
out
push
fimul
subl
xor
xlat
cmpsb
pop
daa    
or
xchg
pop
daa    
ds pop
push
sub
fucompp 
mov
adc
test
cmp
int3   
popa   
mov
sbb
cmp
push
inc
pop
pusha  
mov
mov
enter
enter
xor
pop
cmc    
dec
(bad)  
adc
loop
(bad)  
jo
mov
adc
lds
push
lds
xor
sub
fldenv
imul
mov
add
stos
fstl
(bad)  
test
xchg
test
loopne
mov
push
cmp
or
push
xchg
inc
popf   
push
inc
add
ja
xor
sahf   
arpl
(bad)  
leave  
adc
xor
sub
cmp
push
(bad)  
addr16 adc
js
inc
xchg
scas
mov
inc
adc
xor
add
add
mov
into   
outsl
aad
mov
adc
hlt    
add
les
and
mov
pop
std    
dec
popf   
flds
mov
aad
jae
aam
stos
push
cmp
pop
into   
rorl
cs stos
xorb
and
push
iret   
adc
pusha  
mov
daa    
push
mov
push
inc
dec
out
aaa    
push
imul
sub
sbb
xor
fldt
pop
add
test
xor
and
inc
push
hlt    
xor
inc
outsb
dec
sbb
jbe
mov
or
cmp
or
mov
repnz adc
adc
xor
insb
(bad)  
mov
cmp
lahf   
out
jmp
daa    
xor
cmp
dec
jb
js
cmp
(bad)  
mov
mov
mov
outsb
xlat
cmp
push
lds
jge
fcoml
jo
test
xchg
pop
inc
add
movsl
(bad)  
push
jno
xchg
xchg
sub
push
cmp
xchg
incl
mov
add
addl
cmp
fstp
stc    
shlb
fwait
inc
gs mov
mov
mov
mov
(bad)  
or
clc    
pop
add
or
rorb
(bad)  
shrl
in
cmpsl
cmc    
bound
loop
push
int
jns
pop
icebp  
nop
push
inc
inc
push
add
mov
(bad)  
pop
out
xchg
mov
ret    
fnstsw
icebp  
cwtl   
jle
adc
test
dec
arpl
cmp
jl
daa    
ljmp
pop
mov
pop
or
dec
jb
mov
mov
cmp
mov
inc
ret
fcmovnu
test
stc    
lret
(bad)  
mov
jno
inc
sbb
xchg
dec
pop
inc
push
ret
lds
daa    
cmp
xchg
std    
aas    
sti    
push
pop
mov
or
mov
aam
and
leave  
inc
orl
jle
jb
js
cmc    
jecxz
loopne
jne
out
jbe
xchg
int
aaa    
scas
sub
xlat
cmp
divl
mov
xchg
rcl
or
andl
xor
imul
cwtl   
nop
lcall
xchg
decl
or
cmp
push
xor
test
(bad)  
xchg
mov
xor
rcrb
mov
mov
mov
dec
or
cmp
loopne
lea
out
in
mov
fistl
xchg
push
xchg
xchg
cwtl   
jb
lret   
cltd   
sti    
(bad)  
mov
lea
ffree
pop
cltd   
insl
pop
add
ret
pop
and
rcll
roll
roll
call
mov
mov
sub
daa    
les
ja
adc
mov
or
str
loop
sub
mov
or
fisttp
int3   
aas    
str
out
sub
or
jmp
pop
mov
insl
das    
mov
cmp
addr16 push
cmp
jne
in
out
nop
(bad)  
movsl
adc
test
(bad)
mov
inc
adc
(bad)  
daa    
daa    
addr16 push
add
cmc    
cmp
cmp
inc
pusha  
sbb
cld    
mov
sbb
ljmp
jl
dec
aaa    
imul
jge
aam
jmp
jbe
loop
mov
fisttpl
cmc    
in
setae
adc
(bad)  
mov
mov
daa    
jnp,pt
push
xchg
test
mov
test
std    
cmp
in
or
or
aam
ret
pop
or
adc
cmp
cs cmp
xor
aas    
mov
cli    
mov
adc
adc
(bad)  
and
dec
inc
mov
scas
cmp
les
inc
mov
inc
adc
and
std    
jecxz
out
in
out
mov
leave  
add
arpl
scas
in
xchg
out
flds
push
in
enter
clc    
notb
repnz rcrl
stc    
cmp
bound
pop
add
and
jp
loopne
out
push
mov
mov
jle
cmp
pop
ficomp
mov
mov
jbe
(bad)  
hlt    
fcomps
inc
inc
rorl
or
jb
inc
arpl
cwtl   
jle
dec
fldcw
dec
xor
leave  
out
and
fdivl
jno
cmpsb
mov
sbb
jae
mov
fwait
sub
fcmovnu
loop
xchg
mov
mov
(bad)  
roll
fwait
mov
ret
ret
int
cmp
push
inc
sbb
inc
js
adc
sub
xlat
push
sti    
inc
mov
and
aas    
push
scas
pop
and
sub
or
or
daa    
lret   
add
xchg
mov
rcrb
(bad)  
mov
(bad)
daa    
(bad)  
scas
clc    
pop
aad
ret    
mov
sarb
scas
pop
and
sub
or
or
daa    
lret   
nop
add
sti    
mov
xorl
inc
movsl
inc
out
daa    
(bad)  
scas
clc    
pop
aad
or
jb
push
add
(bad)  
fcmovnu
mov
sti    
cmp
lcall
ret
bt
mov
dec
or
int
sbb
movsl
push
(bad)  
mov
push
(bad)  
dec
mov
cs dec
aaa    
imul
adc
aam
lret   
pop
xchg
mov
jle
iret   
mov
adc
dec
loopne
leave  
sub
sbbl
add
mov
push
sbb
and
sbb
dec
push
lahf   
jge
bound
sub
out
mov
sbb
inc
outsl
xor
outsb
jp
je
add
add
push
cmp
cmp
xchg
popa   
ljmp
pop
jge
(bad)  
int
cvtdq2ps
add
dec
mov
loop
mov
aam
jns
testb
xchg
xchg
add
jecxz
add
rcrb
scas
loopne
mov
xor
cmpsb
cmp
add
data16 in
mov
mov
xor
aam
inc
iret   
gs ljmp
pop
cld    
negb
ljmp
(bad)  
int
push
cmp
test
lods
ds sub
push
rorb
std    
mov
cmpsl
nop
int
push
aam
mov
mov
mov
out
stc    
repnz and
(bad)  
mov
or
pushf  
das    
or
sub
ds push
mov
ret
jecxz
(bad)  
mov
lahf   
(bad)  
inc
push
into   
test
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
dec
pop
(bad)  
jecxz
(bad)  
insb
aad
lret   
test
jae
mov
pop
xchg
jne
dec
xchg
scas
ss
push
hlt    
cmpsb
les
js
xor
push
push
rcll
jge
xor
sbb
xlat
push
sti    
inc
les
pop
loop
jmp
daa    
imul
clc    
imul
ds ja,pt
push
stc    
cs mov
clc    
outsl
and
imul
jae
jno
xchg
cmpsb
ljmp
pushf  
sbb
arpl
pusha  
sbb
push
sbb
lock jo
fidivr
and
ds push
mov
mov
jp
xlat
leave  
bound
add
inc
stos
rcll
nop
mov
mov
test
or
ljmp
jecxz
adc
enter
push
pop
add
mov
gs cli 
fbstp
lcall
fistpll
adc
and
push
push
lds
cmp
adc
fldenv
xchg
dec
call
mov
insb
das    
xor
pusha  
je
(bad)  
xlat
(bad)  
(bad)
jge
aad
das    
(bad)  
sbb
stos
cli    
jp
add
dec
sbb
push
stos
sub
jg
push
sbb
inc
cmp
or
cltd   
add
dec
pop
and
pop
cmp
cwtl   
mov
fimul
mov
(bad)  
movsl
jmp
fisub
or
scas
rclb
xchg
mov
jle
pop
mov
cmp
jnp,pt
pop
sahf   
jecxz
add
and
jbe
out
jns
push
stos
sub
xchg
xor
inc
std    
add
sbb
dec
and
pop
or
jp
and
cmp
xor
lods
xor
jnp
mov
aam
cs
jo
and
bound
in
ss dec
frstor
or
or
add
test
mov
jnp
xchg
sub
mov
sub
iret   
movsb
gs add
das    
inc
and
jge
xchg
or
mov
xchg
(bad)  
sub
lods
mov
out
push
(bad)  
jecxz
inc
out
jnp
lret
call
jle
xlat
jecxz
cmp
push
xchg
xlat
cmpsl
dec
les
and
fldl
jne
icebp  
pop
jle
out
or
loop
xchg
and
inc
sub
inc
push
mov
(bad)  
add
and
inc
iret   
sub
jmp
push
mov
sti    
sbb
or
daa    
mov
xor
mov
movsb
enter
dec
mov
lods
sub
test
ljmp
addl
pop
add
jl
add
mov
sbb
fs in
fsts
stc    
mov
divl
adc
push
in
and
pop
dec
fstpl
(bad)  
mov
jne
xor
inc
mov
ljmp
ja
cmp
xor
sbbl
jnp
jns
rorb
mov
cwtl   
dec
imull
dec
(bad)  
sub
xchg
enter
and
or
movsl
jle
inc
xor
call
pop
js
xor
xchg
xor
in
js
dec
fimull
and
lods
or
cmp
lods
scas
push
xlat
sahf   
jo
mov
sbb
add
test
add
add
outsb
add
mov
aam
inc
inc
daa    
out
lods
inc
dec
adc
push
stc    
cmp
cli    
into   
mov
jp
dec
sub
fsubrl
mov
or
mov
(bad)  
std    
mov
enter
push
cmp
insb
pop
mov
jae
or
sub
push
popf   
mov
lahf   
dec
pop
jns
mov
cmp
gs sbb
push
inc
and
jge
fnstenv
ljmp
jg
push
push
jg
add
psubd
or
movsl
sub
xor
repnz adc
jno
mov
fbstp
aaa    
xor
std    
jnp
adc
js
lds
pop
push
cmp
(bad)  
fcomip
push
cltd   
inc
iret   
mov
hlt    
mov
cli    
in
xchg
mov
(bad)  
pop
nop
lret   
inc
sbb
cmp
mov
mov
loope
aaa    
(bad)  
or
into   
or
mov
inc
mov
mov
xchg
cli    
or
lods
(bad)  
gs std 
inc
xchg
int3   
popa   
mov
scas
adc
jne
add
stc    
loopne
jmp
push
xor
pushf  
(bad)  
mov
adc
(bad)  
and
dec
and
sub
stc    
(bad)  
ljmp
add
fdiv
lea
adc
inc
in
jbe
inc
dec
mov
(bad)  
in
scas
pushf  
push
imul
jnp
(bad)  
iret   
ret
dec
mov
imul
fisttpl
fs or
mov
and
(bad)  
mov
sbb
sbb
sub
ds push
mov
lds
pushf  
mov
xor
aaa    
add
roll
outsl
xchg
(bad)  
cmp
dec
xor
cmp
add
scas
push
adc
les
rcrl
add
sbb
addl
ds
sbb
jb
movsb
jp
mov
sub
mov
sbb
mov
jb
aas    
mov
sbb
cltd   
jbe
sub
repz addl
ds
mov
jns
mov
sub
add
pop
push
lock daa 
xchg
dec
pop
inc
lret
repz aad
cmp
push
add
pop
or
jnp
(bad)  
xchg
dec
test
cmp
and
cmp
jmp
test
sbb
xchg
dec
add
push
or
dec
mov
clc    
mov
jmp
scas
jp
sub
push
xchg
mov
test
cmp
jge
xchg
outsb
mov
sub
push
or
push
and
xor
adc
pop
pop
test
lret
pop
pop
add
mov
add
push
adc
add
clc    
pop
lcall
mov
mov
sbb
jp
ljmp
fsubrl
mov
xchg
cmp
mov
xchg
adc
or
fildl
js
cld    
inc
xchg
ja
cmc    
adc
stc    
stc    
pop
lods
push
inc
std    
(bad)  
repz loop
mov
in
jp
add
shrd
mov
or
dec
mov
sub
cli    
or
hlt    
mov
fidivl
mov
jge
(bad)  
je
mov
mov
and
jecxz
fstpl
movsl
outsb
ds insl
pop
xor
inc
es data16 cmp
loopne
ret
daa    
inc
adc
and
or
push
dec
jg
xor
mov
ret
(bad)  
out
pop
push
sbb
out
mov
lahf   
mov
lock pop
jmp
pop
lods
add
xchg
lds
jno
loop
push
test
popa   
sti    
shrl
test
pop
push
loope
xchg
dec
pop
jns
mov
adc
add
fisubrl
sub
loope
fstpl
add
shlb
cmp
nop
pop
cmp
fidiv
icebp  
cpuid  
(bad)  
fldcw
orl
pop
fadds
(bad)  {%k1}{z}
(bad)
xchg
imul
dec
add
fidiv
mov
sub
mov
jns
mov
jg
or
cmpsb
test
sub
lock push
cmpsl
lods
push
stc    
push
push
jmp
xor
out
loopne
xchg
add
jmp
or
pop
xchg
(bad)  
mov
mov
clc    
nop
pop
xor
add
fwait
das    
cmp
mov
(bad)  {%k1}{z}
lret
ja
add
(bad)  
mov
lret
xchg
std    
nop
mov
mov
adc
gs xor
push
push
xchg
scas
lret   
rclb
or
inc
or
sti    
lret   
and
dec
mov
pop
dec
dec
ljmp
jbe
leave  
pop
adc
mov
addr16 sahf 
(bad)  
sbb
aad
sbb
xchg
push
pop
jp
xlat
add
hlt    
sbb
inc
stos
rcll
dec
imul
adc
xor
fiaddl
rorl
or
adcb
pop
sub
inc
mov
hlt    
mov
out
xlat
iret   
add
xchg
sti    
das    
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
rcr
or
mov
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
loop
(bad)  
mov
call
mov
in
hlt    
ss scas
bound
and
mov
jno
adc
xor
cmp
mov
xor
or
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
cwtl   
and
sti    
aaa    
xlat
(bad)  
fcoml
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
or
in
and
mov
cltd   
dec
mov
and
mov
jle
test
sbb
fnstsw
add
test
mov
sbb
and
clc    
and
mov
sub
sub
jl
mov
(bad)  
stos
(bad)  
loope
repz xlat
iret   
push
mov
add
fdivs
rol
in
and
icebp  
sbb
jne
or
push
cmp
mov
add
mov
push
int3   
and
mov
daa    
sbb
jmp
arpl
hlt    
xchg
xor
in
daa    
fimul
adc
mov
mov
stc    
or
mov
orl
test
mov
je
popf   
mov
push
sbb
cmpsl
rol
sbb
xor
sbb
test
mov
or
(bad)  
in
(bad)  
jnp
cmpsl
je
lock cld 
xor
inc
pop
xor
lods
dec
inc
fistl
fcmovnu
in
mov
lock mov
xchg
lods
xlat
pop
mov
ficompl
xorb
cwtl   
je
sbb
call
adc
xchg
sbb
jp
push
mov
lock ficompl
aas    
je
jns
pop
in
loop
insb
adc
test
decl
dec
loopne
rclb
aam
sahf   
loop
(bad)  
xor
sub
xor
inc
jmp
lods
pusha  
pushf  
(bad)  
xchg
test
pop
iret   
(bad)  
cwtl   
stos
inc
jg
nop
jge
pop
xchg
dec
cmp
test
add
addps
or
ret
sbb
test
sub
enter
and
or
int3   
mov
(bad)  
fwait
pop
xor
jo
xor
push
jo
fsts
adc
out
test
clc    
jno
mov
mov
jp
push
mov
sbb
in
into   
hlt    
imull
jb
ret
pop
or
push
mov
aam
lret
mov
(bad)  
addr16 jno
xor
lahf   
jge
jp
test
cmp
and
(bad)  
jb
ret
pop
or
imul
les
repz pop
lret
addr16 gs and
dec
aaa    
(bad)  
mov
sub
ficom
cld    
jle
pop
stc    
and
or
sbb
adc
lahf   
rolb
mov
subb
test
pop
sub
xchg
insb
pop
dec
(bad)  
mov
sbb
or
sub
xchg
jle
loop
lea
int
pop
lock js
bound
jb
jns
pop
dec
ljmp
(bad)  
int
adc
xor
pop
push
fnsave
mov
mov
pushf  
neg
mov
(bad)  
scas
add
pop
push
or
les
jecxz
loope
cwtl   
mov
std    
stc    
mov
popa   
pop
movntdq
pop
out
test
cmp
sub
daa    
jg
mov
add
inc
faddl
inc
xor
and
xor
inc
ret    
ret
repz subb
jle
sahf   
pusha  
mov
fcom
inc
mov
adc
repnz mov
aad
lods
jnp
jl
fcoml
or
mov
adc
fcmovnb
sub
insl
cs in
lods
jl
fisttpll
leavew 
adc
jmp
jbe
outsb
jp
mov
aam
xor
stos
jnp
aad
dec
clc    
out
cmpsb
cmc    
adc
mov
out
and
lret
or
movsl
or
(bad)  
mov
mov
push
mov
xor
mov
negl
fisub
ja
outsl
mov
out
(bad)
insb
cmp
fcomi
jnp
cwtl   
mov
inc
not
popf   
pop
lahf   
mov
mov
push
cmp
leave  
push
xchg
xchg
sub
and
pop
xchg
test
or
and
stc    
std    
add
mov
jno
xchg
ficompl
mov
mov
jns
jg,pn
and
inc
adc
cmpsb
andl
pop
int
pop
aas    
xchg
stc    
mov
cwtl   
cmp
xchg
nop
sbb
sbb
sahf   
clc    
adc
inc
sub
gs cli 
push
pop
xchg
mov
and
xchg
lahf   
repz mov
hlt    
sub
stos
loop
es fdivr
gs pop
lock js
bound
add
dec
sbb
ljmp
(bad)  
int
and
push
idivl
test
pop
mov
stos
sub
fisub
iret   
sub
or
jge
xchg
stc    
fs sub
ret    
arpl
and
push
popa   
dec
pop
out
es pop
cli    
lods
or
outsb
jecxz
inc
jle
jge
popf   
pop
cld    
lods
fwait
mov
mov
int3   
push
push
xchg
sub
or
sbb
iret   
and
and
fstl
inc
lret   
cmpsb
stos
mov
xchg
pop
pop
stc    
sarb
push
push
jmp
pop
repnz movsl
repz mov
cmp
cmp
ja
xor
sub
insb
pop
subl
sbb
or
sub
add
addr16 aam
test
xchg
xchg
pop
cld    
and
inc
mov
cmpsb
test
pop
mov
cmp
mov
popf   
xlat
xchg
adc
cltd   
insl
in
cmp
stos
loop
outsb
push
out
add
jge
fnstsw
(bad)  
(bad)  
jb
adc
insl
aad
pushf  
inc
cli    
movl
xchg
sub
xchg
push
sub
pop
cmp
ret
mov
mov
lcall
fwait
mov
call
shrb
enter
push
in
or
aam
mov
popl
adc
push
adc
cltd   
pop
and
fisttpll
popf   
fildll
adc
lea
xlat
movsl
movsl
xchg
sbb
or
fldln2 
push
arpl
es insb
or
push
repz push
pop
mov
test
in
dec
nop
mov
xorl
flds
jle
repnz das 
cmp
cmp
fiaddl
idivb
cmpsw
pop
jge
xor
pushf  
adc
lods
or
mov
and
(bad)  
bnd je
push
hlt    
outsl
je
cmp
daa    
test
(bad)  
jge
sbb
cmpsb
jmp
sbb
orps
shrb
iret   
movsb
or
mov
sub
ja
daa    
inc
mov
mov
mov
lods
sbb
lcall
lea
sub
dec
iret   
cmp
xchg
cmp
mov
(bad)  
addr16 push
fdivr
push
int3   
call
arpl
imul
sarl
std    
(bad)  
repz sbb
in
dec
hlt    
stos
lret   
jns
mov
pushf  
cmpsb
xorl
xchg
push
movsb
cmp
xor
pop
jecxz
repnz adc
test
and
fxch
cmpsl
insl
stos
inc
daa    
popf   
inc
loop
dec
stc    
insb
lret   
pop
add
inc
ljmp
das    
shrl
(bad)  
and
ja
cmc    
pavgw
shrl
mov
psrad
push
lock jns
inc
inc
dec
push
scas
mov
insl
(bad)  
dec
sbb
mov
fmuls
push
int
cmpl
inc
pop
jbe
dec
add
cmp
outsl
xor
decl
das    
inc
popa   
cli    
jmp
xor
jb
aas    
add
fdivrl
mov
bound
lea
mov
imul
inc
push
jo
and
push
ret
mov
mov
xor
sub
(bad)  
sbb
xchg
sub
xor
scas
push
xchg
fcompl
jp
add
pop
and
mov
out
pop
push
lods
fnstenv
push
in
add
test
cs in
pop
lahf   
test
cmp
fstpt
mov
imul
movsl
jmp
stos
mov
je
subb
lds
mov
hlt    
nop
stos
(bad)  
xchg
xor
adc
pop
sub
test
sti    
lock enter
fstl
fcompl
cmp
enter
sub
or
test
push
rclb
dec
es cmc 
sub
and
dec
pushf  
iret   
push
xlat
jmp
loope
xor
adc
xchg
shl
pop
loopne
ja
jl
stos
cs aam
sbb
enter
in
mov
adc
gs cli 
push
and
test
vmulps
mov
arpl
daa    
inc
cmp
ret
ret
xchg
sub
sub
pop
pop
cmp
daa    
push
jp
adcl
in
and
(bad)  
sbb
mov
add
in
(bad)  
xchg
push
cmp
push
rorb
cmp
add
lods
movsb
aad
jmp
sub
neg
fs mov
pop
orb
pop
hlt    
lods
cmc    
inc
sbb
cmpsb
ljmp
daa    
test
inc
mov
outsl
negl
ja
cmp
loope
imul
xchg
mov
cmp
dec
or
pop
ds
addr16 shl
mov
mov
mov
scas
movsl
andl
and
fisttpll
and
adc
xchg
stc    
sbb
sbb
addl
jns
sbb
mov
(bad)  
sbb
or
mov
out
add
test
cmp
mov
pop
push
fadds
and
test
sahf   
(bad)  {%k1}{z}
aam
push
jnp
xor
sub
(bad)  
mov
dec
je
or
mov
lods
sbb
sahf   
(bad)  {%k1}{z}
out
sub
jp
mov
lds
fldt
and
mov
mov
imul
test
stos
sarl
dec
aas    
dec
in
add
mov
sub
dec
in
out
pop
mov
iret   
xchg
add
cmpsb
jle
add
mov
jno
xchg
ficompl
xorb
cwtl   
push
xor
aaa    
adc
mov
adc
push
push
aam
in
cmpsl
in
and
jmp
or
mov
nop
test
pusha  
loop
mov
icebp  
mov
nop
stos
cli    
xchg
jb
sahf   
dec
lahf   
rcrb
aaa    
(bad)  
xor
loope
jo
sbb
pop
push
adc
jp
push
mov
cmpsb
out
mov
scas
and
pop
inc
mov
xchg
repz leave 
sarl
xchg
dec
xor
cmp
mov
cmpsb
scas
movups
jle
in
xor
mov
sub
cmp
cwtl   
in
std    
cmc    
in
imul
inc
or
ss pop
ss push
or
cmp
das    
in
out
lods
lods
test
sub
repz int
mov
and
xchg
lret
jecxz
imul
jno
jne
cmc    
das    
jae
jns
int3   
and
xor
xchg
divb
in
repnz repnz out
int3   
test
fs test
and
bnd jnp
jne
lock pop
(bad)  
clc    
pop
aad
adc
jb
ret
jae
ja
imul
adc
das    
lret
xchg
sbb
mov
pop
ficomp
divl
mov
lods
outsb
lock xchg
cmp
xor
in
and
inc
movsb
daa    
test
sub
fildl
xor
dec
cltd   
por
divb
sar
pusha  
movsl
mov
aas    
mov
enter
xor
push
jmp
or
popa   
les
and
flds
jle
call
(bad)  
mov
(bad)  
inc
adc
movsl
cs mov
lods
test
scas
cli    
scas
dec
jl
jae
mov
inc
je
xchg
insl
insb
jl
or
adc
jne
push
or
test
sbb
loopne
mov
rolb
mov
in
inc
pop
lretw  
push
(bad)  
loopne
adc
stos
cli    
addl
jg
(bad)  
scas
imul
push
cltd   
mov
xor
xor
fwait
stc    
mov
int3   
mov
rorb
int
arpl
loope
pop
cwtl   
pop
repz push
test
fcoml
ljmp
aaa    
test
dec
jnp
popf   
cmpsl
sbb
jmp
ja
cmp
test
pop
test
idiv
iret   
fstl
pop
push
cmp
cld    
(bad)  
and
mov
lock loopne
sub
fisttpll
add
dec
aam
jae
daa    
jmp
test
sub
(bad)  
lret   
adc
lods
adc
daa    
pop
xor
shlb
es data16 cmp
loopne
dec
pop
out
sub
inc
into   
bound
out
fldcw
in
add
mov
das    
insl
mov
dec
lahf   
inc
in
icebp  
pop
iret   
fwait
cwtl   
int3   
dec
in
jg
mov
jbe
outsb
inc
mov
bsf
lahf   
inc
out
sti    
pop
movsl
lahf   
outsl
hlt    
ja
iret   
mov
lods
lahf   
out
leave  
addr16 xchg
lods
shrb
cmp
push
mov
or
cwtl   
jno
xchg
ficompl
xchg
fwait
test
daa    
daa    
sbb
lea
adc
xchg
subl
repnz xlat
iret   
fdiv
mov
aaa    
(bad)  
cmc    
xadd
lods
jne,pn
dec
push
outsl
test
or
or
addr16 pop
xorb
xchg
adc
sub
jge
adc
inc
stc    
pop
xchg
insl
ret
pop
or
fsts
aas    
ja
jne
js
lock sub
or
ret
cld    
lods
ret
xor
jb
lret   
movb
xchg
fwait
adc
and
adc
frstor
rcr
mov
sub
outsb
and
dec
stc    
xchg
mov
test
js
xlat
inc
out
sbb
jb
adc
lods
mov
outsb
lock add
mov
stc    
lea
mov
int3   
and
xchg
jbe
addl
xor
mov
push
clc    
les
and
adc
(bad)  
outsb
cmpl
adc
adcl
push
add
jmp
cwtl   
sbb
mov
(bad)  
dec
fmull
jmp
rcr
fimul
push
popa   
stos
push
adc
stos
sub
(bad)  
jbe
shrb
pop
scas
sbb
push
subl
xor
fild
ret
mov
(bad)  
jb
(bad)  
mov
xor
loop
or
gs int
shl
aaa    
test
jecxz
les
push
cmp
in
test
fdivl
adc
jl
jl
push
std    
cli    
adc
int3   
aad
xor
sar
iret   
(bad)  
dec
fnstenv
xor
loop
int
push
test
fldl
imulb
data16 data16 loopne
stc    
ss push
dec
or
jl
push
or
repz jl
xchg
lret   
je
mov
or
jmp
aaa    
icebp  
data16 sti 
test
fcoml
mov
push
aam
lods
out
mov
out
rorl
in
test
adc
aam
mov
aam
cmp
test
mov
cmp
jno
adc
es jnp
cltd   
push
xor
mov
push
in
std    
or
push
test
(bad)  
mov
mov
and
stos
lret
xlat
jno
aaa    
jge
ret
scas
lret
mov
je
jle,pt
sbb
sbb
or
in
inc
sti    
scas
rorl
push
shll
pop
sub
cwtl   
jno
xchg
ficompl
mov
test
stc    
stc    
in
sub
or
jecxz
and
icebp  
or
add
add
sub
fisttpll
aam
xchg
xor
lods
out
cmc    
int3   
aad
xor
cmpsb
jo
xor
mov
pop
les
inc
mov
sub
cmc    
in
adc
rol
rorl
daa    
sbb
jns
lahf   
jge
dec
leave  
lret
dec
sbb
ret
mov
ret
xchg
icebp  
or
sub
mov
jmp
push
movsb
out
push
roll
(bad)  
repz or
push
cmp
or
add
jecxz
mov
loop
mov
test
and
jns
dec
stc    
xchg
mov
aam
lods
fwait
cs in
jmp
sbb
andl
stc    
(bad)  
mov
jmp
(bad)  
ljmp
or
les
jecxz
call
xchg
or
(bad)  
int3   
push
rcrl
(bad)  
stc    
lea
inc
aaa    
rol
sti    
pop
or
push
add
mov
repz inc
ret
lret
lret
sbb
enter
push
cmpsl
lahf   
jge
pushaw 
cmp
fstps
stc    
outsl
push
or
mov
mov
push
xchg
mov
mov
pushf  
jns
rorb
jle
cmp
(bad)  
pop
aam
mov
xchg
cs stos
mov
and
repz mov
adc
xchg
aam
shl
mov
jae
jne
lock ficompl
fs cmp
(bad)  
xorb
add
sub
xchg
add
or
jmp
xor
cmp
movsb
push
iret   
or
mov
out
pusha  
push
adc
cwtl   
ret    
mov
ficompl
outsl
jge
mov
addl
test
adc
imul
or
les
jecxz
call
orl
imul
ss
jo
fnsave
fdivrs
push
aad
stos
aam
jo
sub
sbb
push
sbb
imul
mov
outsb
ret    
add
shll
stos
push
lret   
loopne
out
loopne
jno
inc
lods
and
stos
dec
int3   
xor
into   
push
or
in
arpl
mov
jp
fmull
or
(bad)  
jg
xchg
pop
fnop   
pop
iret   
imul
xchg
sti    
test
shrb
out
pop
mov
aaa    
push
rcrl
lods
cmp
lock js
lea
jbe
push
push
stc    
sub
test
out
jb
icebp  
push
xchg
inc
lcall
fucom
mov
push
in
pop
push
icebp  
jp
pushf  
nop
int3   
mov
es mov
lds
sti    
jae
mov
fdivrs
jp
mov
pop
inc
mov
(bad)  
lock pop
lods
sti    
outsl
jge
mov
sbb
mov
pop
pop
jns
mov
sub
lock sub
and
insl
xchg
xor
adc
ljmp
int3   
cmp
xchg
dec
loop
jmp
lahf   
dec
pop
jns
mov
in
mov
loopne
mov
cmc    
int3   
aad
xor
xchg
scas
or
arpl
test
cld    
push
mov
xchg
sub
rcl
xor
xchg
mov
xchg
mov
push
and
inc
fsubrs
mov
inc
jns
sbb
es sar
jae
pop
add
or
jno
jmp
call
adc
add
and
mov
jbe
mov
icebp  
scas
lahf   
hlt    
mov
out
xlat
int
(bad)  
mov
jecxz
lret   
adc
fdivl
cmp
lea
addb
cmp
push
std    
jecxz
mov
push
call
out
rcrl
fwait
cwtl   
pop
mov
(bad)  
shll
sbb
mov
(bad)  
stos
sub
mov
test
mov
fnstenv
repnz xlat
ss inc
sahf   
pop
iret   
cmpsb
les
js
jge
repnz adc
add
mov
fwait
cwtl   
inc
mov
(bad)  
rcll
sub
out
add
xchg
test
pop
iret   
fwait
test
mov
lahf   
es idiv
xchg
add
int3   
pop
xorl
lahf   
fucomi
(bad)  
inc
in
in
jae
bound
pop
bound
pop
dec
ljmp
(bad)  
int
inc
sbb
je
add
fstp
leave  
das    
test
dec
mov
push
std    
xchg
add
inc
in
call
ds rcr
stc    
and
push
sysret 
and
f2xm1  
xor
sub
and
mov
sbb
adc
dec
fnstsw
cmpsb
mov
xorl
mov
fisub
call
or
pushf  
mov
stos
dec
lret
add
in
fdiv
roll
hlt    
xchg
sbbl
mov
addr16 xchg
lods
push
pushf  
mov
jle
mov
lea
(bad)  
sbb
jne
std    
test
aas    
loop
lret
add
sbb
fdiv
loope
int3   
hlt    
xchg
sbbl
mov
addr16 xchg
lods
fisubr
jle
cmc    
pop
jno
xchg
lea
sti    
shr
add
jmp
jnp
jb
dec
dec
scas
inc
add
push
stc    
or
push
cmpsl
or
pushl
xchg
push
(bad)  
int
or
dec
lods
cli    
out
mov
movsb
leave  
inc
sub
pop
adc
in
fsubs
sbb
pop
push
jecxz
add
fisubl
inc
pop
inc
pop
jbe
mov
fwait
and
icebp  
ljmp
pop
movsl
lahf   
jns
rorl
jns
pushf  
cmpsl
lock adc
sub
repz pop
push
loopne
xorl
mov
pushf  
dec
xor
jne
sbbl
ret    
fwait
dec
dec
sub
gs test
sbb
test
cld    
mov
scas
jbe
xorl
push
inc
inc
data16 test
dec
fnstsw
cwtl   
xor
sbb
js
lods
popf   
jp
insb
cmp
add
xlat
fstpt
add
cmpsl
insl
push
sub
int
cmp
jno
mov
aaa    
(bad)  
lea
jecxz
(bad)  
imulb
(bad)  
call
xchg
popa   
add
xchg
or
call
decl
(bad)
xor
pushf  
mov
inc
lea
cmpsl
cltd   
jnp
dec
fs
movsl
or
test
sbb
xchg
sbb
jnp
lods
pop
push
sbb
jle
scas
xlat
inc
les
pop
and
inc
hlt    
sbb
inc
xor
dec
inc
in
and
mov
inc
xlat
mov
jecxz
test
dec
adc
sbb
or
adc
pop
enter
(bad)
dec
sti    
mov
ret
or
jl
and
retw
sub
sub
dec
sti    
mov
and
imul
(bad)  
out
add
jecxz
movsl
arpl
lods
mov
cmpps
out
cmp
dec
inc
and
fs pop
mov
jns
js
xlat
inc
lea
cmpsl
andl
adc
loope
movsb
sub
in
pop
aas    
bound
daa    
es push
mov
push
inc
(bad)  
das    
stos
iret   
pop
movsl
lahf   
lret   
out
or
pop
cld    
mov
and
push
aad
aas    
loop
lret
test
addr16 iret 
or
jns
aam
lods
ret    
inc
mov
xchg
mov
addr16 xchg
lods
dec
jnp
aas    
jle
das    
pushf  
test
jbe
pop
cmp
mov
insl
ljmp
mov
add
dec
xor
or
inc
and
sub
mov
push
inc
(bad)  
adc
mov
in
int3   
lcall
sahf   
hlt    
in
xor
ficom
les
push
jp
and
pop
xchg
test
test
sub
sub
imull
out
push
ds mov
jb
test
pop
data16 fcoms
in
insb
adc
stos
lret
aas    
mov
cmpsl
and
icebp  
or
xor
(bad)  
lret   
cmc    
loop
out
es pop
(bad)  
cmp
inc
ficompl
(bad)  
mov
xchg
inc
adc
jbe
and
into   
lahf   
jge
jp
faddl
loopne
(bad)  
xlat
and
adc
sub
fsts
je
and
test
sbb
outsb
das    
pop
mov
cltd   
or
mov
jnp
int
pop
loopne
in
pop
ss or
push
(bad)  
jg
mov
xor
inc
adc
xor
inc
lret   
jb
gs ds pop
dec
pop
(bad)
ss or
inc
(bad)  
ucomiss
jae
loopne
mov
subb
enter
cs push
cmpps
test
xchg
mov
loop
inc
or
in
sbb
inc
mov
int
pushw
in
sbb
pop
stc    
sarb
inc
(bad)  
lea
mov
lods
cltd   
je
push
iret   
pop
push
sbb
les
inc
mov
inc
sbb
mov
mulb
sub
aaa    
insb
adc
test
inc
xorl
adc
xlat
hlt    
in
cmc    
pop
jae
and
(bad)  
fprem1 
rclb
push
add
leave  
and
fsubrl
aam
pop
iret   
outsl
ljmp
cld    
les
rcrl
mov
repz xchg
mov
ja
cmc    
xor
pop
jle
push
or
pop
fmuls
leave  
mulb
pop
xchg
cmp
(bad)  
pop
dec
add
pop
hlt    
cli    
mov
(bad)  
fstp
push
(bad)  
movsb
imul
cld    
or
xlat
inc
pop
mov
scas
or
mov
and
movl
inc
sahf   
push
inc
pop
dec
add
pop
hlt    
xor
mov
sub
dec
push
mov
cmp
xlat
inc
daa    
popf   
inc
loop
adc
add
cmp
(bad)  
inc
sub
dec
fdiv
push
scas
call
mov
outsb
xlat
inc
pop
mov
and
sub
aam
jno
xchg
ficoml
jb
enter
mov
mov
(bad)  
scas
dec
shrl
add
xchg
es xchg
add
inc
fldl
fwait
sub
mov
and
repz xchg
fidivr
aam
data16 int3 
lahf   
sub
adc
mov
call
cmpsl
fsubl
rcr
push
mov
je
dec
push
loope
fs test
(bad)  
notb
das    
insb
lock inc
jbe
iret   
pop
pop
rcll
push
stc    
cmp
lock inc
jbe
enter
or
hlt    
mov
gs aam
inc
les
into   
jle
iret   
pop
iret   
xchg
cwtl   
dec
mov
cwtl   
jno
xchg
ficompl
mov
les
addr16
out
xlat
pop
jmp
(bad)  
sub
test
add
movsb
cmp
jns
mov
lock mov
insl
les
cmp
jge
ljmp
psllq
outsl
ja
hlt    
push
mov
pop
clc    
test
xchg
add
imul
shr
push
xlat
or
lahf   
inc
mov
ficompl
xorb
nop
sbbl
inc
push
mov
xchg
loop
push
push
in
inc
les
sub
popf   
mov
stos
cli    
cmp
addl
mov
xchg
(bad)  
out
lcall
dec
mov
xor
arpl
bndldx
les
mov
jae
add
xor
mov
mov
xchg
pop
pop
stc    
sarb
or
repnz adc
push
aam
lret
es
jg
fcmovbe
pop
(bad)  
push
sbb
cmp
sti    
das    
fiadd
or
outsb
jne
out
inc
mov
pop
fidiv
adc
mov
xchg
and
sbb
or
sub
add
fmull
les
mov
xchg
rorl
pop
repnz aam
lret
mov
mov
ficompl
xorb
nop
sbb
jo
sub
imul
sbb
sub
jg
xor
str
test
shlb
inc
es data16 cmp
loopne
ret
pop
push
cld    
je
add
sbb
lea
mov
faddl
cmpsl
jle
ljmp
mov
or
jmp
add
add
add
inc
sti    
pop
or
movsl
aaa    
lahf   
pop
aam
lret
xchg
arpl
stc    
lea
mov
push
and
mov
stos
xor
in
cmp
seto
cmp
xor
stc    
lea
mov
dec
jl
(bad)  
mov
arpl
mov
pop
cltd   
mov
ljmp
mov
mov
add
cltd   
and
clc    
data16 mov
in
rolb
mov
repz xlat
and
popf   
jnp
sub
ss scas
sbb
sti    
int
pop
data16 jmp
adc
pop
out
rol
inc
fdiv
data16 loop,pt
ss jo
add
in
jne
dec
vmovntdq
dec
(bad)  
xchg
ret
test
fstpl
sub
movsb
sub
add
jmp
cmp
repz cmp
cmc    
(bad)  
iret   
rorb
test
stc    
movsl
adc
cltd   
sbb
push
aas    
sti    
xor
xchg
out
mov
dec
js
jns
leave  
mov
cltd   
xor
rorl
pusha  
(bad)
insl
xchg
in
mov
sbb
xchg
add
mov
int3   
pop
mov
jmp
leave  
mov
jecxz
lret   
xchg
pushf  
shrl
out
fnstenv
jo
dec
enter
xor
jp
or
outsl
add
mov
xor
out
sub
out
fsts
jbe
and
repnz movsb
imul
cmp
in
lahf   
arpl
sub
sahf   
pop
out
adc
fisttpll
data16 cmc 
xor
std    
mov
(bad)  
das    
push
(bad)  
popf   
inc
loop
pusha  
pop
negb
push
(bad)  
mov
push
hlt    
insl
fmull
pop
rcll
pop
scas
xor
aam
inc
fxch
add
xchg
ficoml
lods
cmp
out
sub
out
fldcw
mov
sub
pushf  
or
inc
loop
pusha  
insl
xlat
mov
push
inc
sbb
frstor
je
out
fdivr
push
cmc    
in
sub
mov
repnz movsb
imul
dec
hlt    
orl
aam
int
aaa    
imul
xchg
dec
lcall
sub
aas    
(bad)  
sarb
inc
fxch
add
adc
adc
sub
out
fstps
push
inc
pop
sahf   
cmpl
mov
popa   
fisttpll
out
rcll
mov
call
dec
add
iret   
fwait
cwtl   
inc
xor
sarl
ficomp
imul
cwtl   
dec
ret
jp
lods
or
cmp
jo
or
clc    
in
fiadd
movsb
(bad)  
not
adc
fcmove
inc
lods
sub
ja
cmp
cmpsb
in
xchg
jne
aaa    
dec
add
rcll
cli    
inc
sbb
rcll
imul
gs push
flds
mov
xor
arpl
xlat
mov
std    
xchg
in
or
and
mov
sub
push
rcll
cs sub
adc
and
xchg
mov
or
imul
add
test
and
repz add
mov
or
mov
xchg
ficompl
xorb
dec
loopne
leave  
fcompl
sub
mov
dec
lret
dec
mov
movsb
int
(bad)  
cmp
dec
dec
clc    
jno
jmp
arpl
(bad)  
inc
movsl
inc
rcll
subl
leave  
lods
setl
fcomps
lea
mov
xchg
dec
ss sub
fistpl
(bad)  
(bad)  
jmp
hlt    
(bad)  
jno
(bad)  
arpl
into   
push
in
(bad)  
or
out
es sbb
and
icebp  
scas
lahf   
xchg
jnp
adc
inc
shl
les
les
js
cmp
lcall
jecxz
or
fwait
adc
cmp
ret
mov
inc
mov
inc
xchg
push
lds
cmp
loope
in
leave  
in
(bad)  
fist
jnp
mov
std    
pop
dec
popf   
pop
data16 jb
je
insb
adc
test
(bad)  
cmp
pop
out
stos
ret
vandpd
fcomps
arpl
lret   
or
ficoml
inc
fistpll
outsb
push
push
mov
cmp
add
dec
cs insl
int3   
fst
(bad)  
negl
(bad)  
divl
out
inc
std    
(bad)  
inc
les
adc
push
push
sub
pop
je
mov
popf   
cmpsb
in
push
jmp
(bad)  
addr16 push
mov
push
stos
(bad)  
enter
std    
mov
xor
pop
pop
pand
movsl
popa   
aad
inc
sub
fstl
orl
push
mov
lea
mov
in
jle
shlb
push
cltd   
(bad)  
mov
fisub
clc    
cmpsb
cltd   
xchg
rep movsl
mov
inc
or
(bad)  
cmp
outsb
xor
aaa    
adc
popf   
pop
std    
add
out
mov
aas    
loop
insb
adc
rol
out
mov
fisub
cld    
and
shrl
sbb
fs mov
gs ljmp
and
test
mov
xchg
je
mov
pushf  
sbb
(bad)  
fucomi
(bad)  
inc
in
test
xchg
dec
rcrl
pop
dec
ljmp
(bad)  
int
out
fwait
test
xchg
test
in
(bad)  
add
mov
data16 faddp
fwait
test
xchg
test
in
pusha  
push
mov
aaa    
shlb
popf   
jnp
loope
in
lods
out
cli    
or
pop
mov
mov
mov
movsb
outsl
jecxz
add
fildll
pop
and
add
xchg
add
cmc    
or
sbb
mov
fst
out
mov
xchg
dec
out
mov
xchg
mov
lret
mov
xlat
inc
pop
test
in
(bad)  
sti    
icebp  
loop
mov
and
jbe
xor
mov
mov
add
scas
mov
fimul
adc
(bad)  
lods
out
xchg
fisttp
cmc    
sbb
out
sbb
in
mov
(bad)  
xlat
(bad)  
dec
adc
cmp
mov
sub
sahf   
aas    
jmp
inc
aas    
cmc    
das    
jae
pushf  
outsb
int
mov
xchg
sbb
hlt    
cmp
movsb
mov
sub
dec
ljmp
(bad)  
int
mov
jb
dec
pop
jns
mov
sub
cwtl   
jno
xchg
ficoml
jne
mov
push
jmp
ficomp
cmp
mov
(bad)  
lods
(bad)  
pop
and
(bad)  
and
mov
or
xor
cmc    
dec
or
dec
mov
loop
push
decb
add
stc    
xchg
(bad)  
adc
outsl
nop
in
fwait
add
add
mov
or
xchg
cwtl   
ret    
pop
mov
inc
mov
cpuid  
mov
cmpsb
push
xchg
mov
loop
icebp  
and
addr16 pop
aas    
xchg
stc    
mov
cwtl   
cmp
enter
sbb
(bad)  
xor
test
pop
add
movsb
mov
leave  
xchg
cmp
adc
loop
push
push
in
inc
les
sub
popf   
mov
stos
xchg
cmp
xor
lahf   
into   
jnp
pop
push
jae
in
sbb
or
sub
(bad)  
and
sbb
or
sub
push
test
test
dec
mov
je
mov
pushf  
daa    
loope
pop
or
mov
mov
inc
stc    
push
dec
lods
pop
push
hlt    
or
test
dec
sti    
loope
mov
jle
out
aad
pop
mov
cwtl   
lods
xchg
sub
arpl
jg
cmp
dec
insl
sub
xchg
outsb
mov
jmp
in
hlt    
xchg
dec
pop
jns
mov
ucomiss
stos
add
stc    
jecxz
les
jge
jge
jmp
fwait
aad
and
aas    
stc    
dec
test
cld    
adc
or
and
cmp
(bad)  
inc
addr16 mov
in
pop
shrl
sti    
cltd   
sbb
aaa    
in
je
push
xor
mov
addr16 xchg
lods
movsb
js
bound
lahf   
push
addr16 pop
pushf  
loope
inc
push
or
in
mov
pop
cwtl   
lea
ja
lea
inc
int3   
jg
jp
pop
mov
aam
mov
ret
je
ret
add
dec
dec
rorb
xor
pop
jecxz
call
xor
mov
fdiv
push
mov
lods
mov
fdivrl
(bad)  
mov
mov
jge
outsl
(bad)  
test
int3   
lods
pusha  
lods
pop
std    
aam
lret
and
lret
lock mov
test
fdivrl
data16 xchg
and
loopne
movsb
adc
lods
test
add
jle
adc
loope
sbb
mov
movsl
mov
add
mov
std    
popf   
mov
lahf   
dec
pop
jns
mov
push
dec
sub
mov
mov
aad
pop
mov
or
adc
verr
imul
pushf  
movsl
outsb
jne
jle
daa    
inc
es data16 cmp
loopne
sbb
push
mov
sti    
or
(bad)  
sti    
push
lods
add
jge
adc
shl
push
push
bound
mov
jnp
jnp
fptan  
mov
dec
mov
fadd
call
call
pop
out
(bad)  
and
xor
pop
js
mov
mov
in
aam
out
inc
imulb
xor
unpckhps
dec
int3   
inc
mov
xchg
lods
xor
cmp
or
mov
fucomi
(bad)  
mov
lahf   
stos
xchg
call
aam
mov
mov
sbb
cmpsb
loop
(bad)  
mov
mov
add
scas
jmp
repnz cmpsl
mov
and
sub
mov
mov
(bad)  
decl
movsb
push
rorl
negb
dec
cmpsb
adc
jg
mov
divb
sub
add
(bad)  
mov
or
les
jecxz
repnz adc
popa   
pop
xor
popf   
aas    
repz pusha 
jns
rorb
popf   
fisubl
loope
xchg
inc
xchg
shrl
clc    
jb
lock cmp
rclb
or
ret
stc    
lea
imulb
in
mov
out
(bad)  
or
adc
lods
inc
sub
pop
ljmp
cmpsb
(bad)  
lret   
adc
loopne
and
or
mov
jl
adc
in
(bad)  
xor
xchg
(bad)  
lahf   
jge
jp
(bad)  
jp
mov
out
cmp
xchg
mov
pop
sbb
icebp  
rol
lret   
das    
push
aam
mov
(bad)  
jns
xlat
cmpsl
inc
fadd
mov
add
inc
int
stc    
dec
lahf   
or
sub
sub
ja
test
aaa    
out
divb
lods
lcall
(bad)  
inc
and
sbb
dec
in
xor
ret
mov
inc
mov
int3   
in
or
adc
in
in
rolb
out
adc
and
lea
cmc    
popf   
lahf   
pusha  
enter
ds dec
adc
adc
(bad)  
lahf   
popf   
cmp
mov
sub
jl
pop
ret    
adc
cmp
pop
or
sub
adc
mulb
scas
cmp
pop
inc
cs
push
mov
adc
movsb
jae
adc
stc    
(bad)  
cmp
fidivr
fdivrl
push
or
mov
jns
add
bound
aam
pop
iret   
fwait
cwtl   
xchg
xor
fistp
adc
addr16 push
fdivr
dec
out
adc
dec
in
mov
repz fdivrl
(bad)  
rcll
(bad)  
dec
iret   
jbe
je
out
sub
out
fstps
xor
repnz out
(bad)  
fwait
cwtl   
dec
fistl
jp
mov
xlat
cmp
pop
cmp
out
dec
cwtl   
jp
jns
add
pop
push
hlt    
xor
std    
mov
pop
add
cmc    
in
jo
mov
xchg
push
jns
push
aam
repnz lods
and
imul
fldenv
and
pop
jns
xlat
inc
pop
test
mov
(bad)  
pop
iret   
fwait
cwtl   
fbstp
pop
jbe
addr16 fdivp
xchg
xor
ss
jo
insb
or
neg
jg
(bad)  
(bad)  
xor
lods
sbb
sbb
and
add
sub
hlt    
xor
std    
mov
dec
mov
mov
add
scas
mov
repnz stos
pusha  
repz adc
jecxz
add
rcr
out
dec
push
clc    
outsb
mov
lods
bound
in
pop
insb
pop
or
data16 adc
jae
or
sub
add
jmp
cmpsl
sub
pop
jns
mov
jb
sub
xchg
mov
gs js
lahf   
jge
fnstenv
les
js
jge
mov
cltd   
cld    
cmpsl
cmp
cmpl
jecxz
(bad)  
iret   
pop
dec
ljmp
(bad)  
int
outsb
sbb
or
pushf  
sbb
lea
push
cmpb
xor
and
fwait
inc
je
(bad)  
xlat
add
dec
cmp
jg
dec
outsl
in
ficom
sbb
push
loop
and
push
je
cld    
xchg
(bad)  
mov
mov
rcll
pop
mov
and
jo
mov
enter
jecxz
sarb
arpl
mov
shrb
lds
hlt    
xchg
dec
lea
mov
add
je
test
cld    
inc
sub
icebp  
mov
jecxz
sbb
jge
repnz lret
inc
popf   
icebp  
scas
pop
sub
in
pop
insb
pop
jno
ljmp
sub
adc
xchg
scas
push
es or
std    
xchg
dec
imul
test
sbb
es out
mov
mov
and
sub
mov
push
stos
sbb
outsl
cmc    
dec
pusha  
adc
adc
test
imul
pop
daa    
xchg
dec
or
dec
(bad)  
mov
mov
pushf  
jo
add
aad
jp
jns
rorb
xchg
fisub
loope
push
mov
push
repz push
paddsb
sbb
stos
lret
in
insl
or
jo
mov
push
ds inc
adc
sub
jb
fs pop
inc
lret
xor
(bad)  
xor
stos
add
ljmp
mov
mov
les
insl
jle
xchg
dec
decl
sub
mov
mov
stos
insb
add
mov
shl
or
roll
push
mov
mov
subb
insb
outsb
pop
gs push
in
push
add
(bad)  
and
inc
fmul
js
jmp
fldl
jb
dec
lret   
pusha  
pop
xor
enter
fwait
cmp
xor
pop
cmc    
dec
(bad)  
adc
icebp  
mov
nop
sub
cmp
jl
sub
dec
mov
test
adc
cld    
mov
enter
inc
xchg
xchg
push
imul
(bad)  
out
dec
cmp
dec
xor
adc
stc    
sahf   
sbb
aad
cs or
add
sub
sub
or
sub
mov
outsb
push
(bad)  
loopne
inc
es data16 cmp
loopne
ret
pop
push
(bad)  
xor
movsl
enter
mov
mov
mov
add
test
fs je
pusha  
add
cmp
or
jmp
roll
loopne
sub
pushf  
jecxz
dec
in
mov
sub
iret   
movsb
sub
or
pop
and
pop
mov
pop
pop
and
fadd
mov
xorl
lcall
mov
fcmovnu
clc    
xor
test
mov
mov
sti    
xor
je
adc
jnp
push
sbb
push
ljmp
sub
add
addr16 push
test
repnz or
jno
and
pop
lods
pop
call
and
aam
mov
imul
adc
cmp
fdivr
je
push
orl
int3   
pop
fstps
stos
pusha  
(bad)
sub
jecxz
lods
idivb
pop
lods
cmpsl
fnop   
inc
in
(bad)  
jne
faddl
xchg
fildl
push
mov
js
sub
shrl
rcrb
imul
int3   
(bad)  
movsb
or
push
add
lret   
jne
jns
mov
(bad)  
xor
pop
ds pop
pop
ljmp
jge
mov
mov
fisttpll
cmp
fsubrs
pop
popa   
sti    
push
roll
sub
in
add
inc
mov
or
cwtl   
jno
xchg
ficompl
xorb
nop
mov
in
rol
std    
repnz icebp 
and
mov
ror
lds
push
inc
(bad)  
int3   
mov
insl
and
movsb
sbb
dec
pcmpgtb
mov
pop
insb
or
in
xor
adc
imul
lds
cmp
dec
jbe
adc
mov
mov
sub
out
adc
and
push
cmc    
popf   
lahf   
pusha  
leave  
sbb
sbb
enter
mov
inc
sub
and
in
push
pop
pop
xor
test
push
sbb
sahf   
call
sub
sti    
xor
or
shl
push
loope
test
push
sbb
inc
clc    
sar
fidivrl
inc
addr16 fcmovnb
xor
loop
sbb
in
sbb
fimull
dec
aas    
(bad)  
or
jg
data16 scas
rcrb
aam
pop
test
xor
mov
lret   
bound
pop
adc
adc
shr
sub
out
fxch
inc
out
push
and
or
cmp
divps
cmpb
jnp
mov
aas    
out
or
push
mov
cwtl   
jb
push
mov
xchg
jp
and
xlat
inc
pop
test
xor
lahf   
jge
movsl
mov
out
sub
out
fnstcw
jg
and
sbb
addr16 push
fdivr
cld    
dec
les
mov
dec
into   
aad
and
cmp
cmpsb
in
rclb
lods
stos
in
cmpsb
jl
pop
push
hlt    
psrad
aaa    
mov
and
xorl
(bad)  
dec
shr
sub
jp
fwait
cwtl   
mov
daa    
aam
ficomp
push
repnz int
jle
jmp
out
packuswb
out
pop
xor
rorl
sub
push
mov
movsb
add
ret    
popa   
test
cli    
mov
add
jno
ja
(bad)  
jbe
movsb
lods
sub
push
lods
jle
outsl
testb
mov
mov
inc
inc
arpl
mov
cwtl   
jno
xchg
ficompl
xorb
cwtl   
repz xchg
adc
in
jae
dec
mov
jmp
stos
pusha  
push
js
aad
add
pop
ret    
out
bound
in
inc
(bad)  
adc
push
sub
ss in
insb
test
mov
mov
xor
mov
push
and
cmp
push
xchg
loope
addr16 dec
fldl
sub
daa    
and
aam
int
mov
xchg
add
xchg
sbb
(bad)  
popa   
addr16 jp
jnp
test
mov
or
sbb
fsubl
xchg
inc
or
scas
test
lret   
pop
push
mov
lods
imul
push
int
or
(bad)  
mov
outsl
and
out
sub
out
sub
hlt    
push
pop
adcl
xchg
mov
or
int3   
insl
loopne
imull
enter
xchg
and
iret   
pop
movsl
lahf   
push
mull
adc
dec
rcrb
scas
les
cmp
mov
addr16 xchg
lods
lea
gs inc
(bad)  
xor
fprem1 
dec
adc
xor
cmpsl
(bad)  
mov
lea
sub
inc
push
push
push
je
add
ficompl
mov
outsl
mov
mov
out
mov
mov
iret   
pop
mov
(bad)  
das    
stos
iret   
pop
movsl
lahf   
rcl
ss xor
dec
xchg
insl
cmp
cmpsl
xchg
lods
notb
daa    
arpl
add
loop
mov
stos
insb
add
xchg
mov
iret   
xor
jb
pop
jl
(bad)  
xchg
mov
addr16 xchg
lods
dec
inc
add
jle
(bad)  
cmp
fdivrl
mov
inc
repz fdivrl
fs sbb
aam
inc
pop
or
mov
cs in
pop
cwtl   
lock mov
or
mov
clc    
aas    
add
inc
pop
data16 cmpb
pop
out
stos
cli    
addl
fnsetpm(287 only) 
(bad)  
mov
or
push
movsb
mov
push
rorb
jb
arpl
loope
mov
mov
iret   
test
in
cmp
fstpl
aam
add
inc
sahf   
fstpt
sbb
js
sar
dec
das    
hlt    
or
xchg
inc
test
aaa    
pop
jp
outsl
push
push
mov
rcrl
loop
out
mov
cmp
(bad)  
lahf   
repz lret
push
(bad)
iret   
fdiv
mov
ds out
stc    
lds
push
mov
mov
divb
push
adc
fadds
iret   
movsb
lock push
sbb
arpl
fdivs
pusha  
(bad)  
leave  
sbb
int3   
ret    
shll
test
lret
jg
(bad)  
lahf   
and
adc
push
mov
sub
inc
clc    
xchg
ret
jb
test
and
lret   
pop
popf   
aam
fidiv
imul
push
xor
hlt    
pop
or
jno
in
mov
mov
jb
mov
popa   
in
(bad)  
loopne
jl
sub
sbb
lret   
in
pop
adc
mov
test
add
jno
and
sub
test
push
repz lret 
fadds
adc
pop
lret
leave  
pop
dec
ljmp
(bad)  
int
out
xchg
xor
(bad)
sub
lret   
adcl
ja
cmp
or
mov
test
jl
mov
xor
out
xor
push
scas
(bad)  
stc    
stos
push
inc
xchg
test
sahf   
iret   
andl
sub
and
mov
jae
sar
sub
loop
fsubp
in
mov
adc
xchg
dec
pop
pushfw 
scas
dec
(bad)  
adc
test
sub
(bad)  
adc
rol
inc
sub
ret    
(bad)  
stos
or
arpl
mov
(bad)  
xor
scas
sub
inc
int3   
lods
mov
into   
addr16 clc 
gs mov
ret
test
mov
mov
or
pop
pop
in
(bad)  
arpl
mov
fidiv
pop
sub
icebp  
enter
push
mov
hlt    
test
inc
leave  
cli    
mov
(bad)
and
jg
mov
jo
outsl
jge
mov
pop
sbb
(bad)  {%k1}{z}
lret
cli    
xlat
inc
pop
mov
inc
xor
xchg
or
jns
dec
mov
push
rorb
jecxz
imul
arpl
jmp
sbb
xchg
sub
lret
or
xor
cmc    
adc
test
sbb
cmp
adc
inc
sub
in
mov
and
mov
sub
add
scas
add
and
pop
jecxz
call
pushl
jb,pn
test
jg
jns
or
jmp
aaa    
test
jle
jb
push
xchg
sub
jge
test
push
push
insl
and
movsl
push
std    
fucomi
roll
stos
(bad)  
dec
mov
mov
add
scas
mov
(bad)  
std    
jmp
or
xchg
aad
div
(bad)  
lods
fistp
add
(bad)  
jmp
hlt    
sub
inc
lods
leave  
cmpsb
in
mov
jno
fisttpll
lcall
dec
(bad)  
mov
enter
nop
and
mov
jae
inc
cwtl   
aam
sbb
add
inc
fdivrs
push
adc
jns
popaw  
lods
scas
or
pop
out
test
enter
push
outsl
cmpsl
push
push
cli    
mov
rcrb
or
sbb
mulb
ja
jge
fnstsw
lcall
cltd   
push
lret   
mov
fwait
les
ret
or
mov
lock pop
jmp
pop
mov
jae
mov
popa   
in
(bad)  
loopne
lahf   
dec
sbb
cs out
push
mov
arpl
mov
fldcw
imul
jmp
dec
cmpb
xor
lcall
mov
in
ds int3 
fdiv
or
jno
mov
icebp  
orl
dec
fsubrs
inc
xor
loop
dec
sub
ljmp
je
aaa    
insb
out
pop
push
jge
fistl
pop
mov
inc
dec
leave  
leave  
dec
mov
scas
xchg
aam
push
(bad)  
jne
daa    
in
sbb
push
cmpsl
and
popa   
ficom
mov
(bad)  
sub
(bad)  
lds
loopne
or
pusha  
add
loop
xchg
push
inc
sub
push
cmpsb
add
add
xlat
jae
lret
bound
sbb
mov
movb
shll
inc
es data16 cmp
loop
pop
xchg
ss adc
and
loopne
add
cld    
data16 rcl
dec
aas    
sub
(bad)  
inc
adc
scas
shrl
mov
mov
mov
dec
adc
sub
pop
jns
mov
mov
pop
scas
inc
mov
inc
and
jge
fxam   
mov
loope
push
and
xchg
fmull
repnz push
mov
test
sub
mov
ds inc
sarb
jo
pushf  
push
adc
stos
pop
rcrl
and
(bad)
es xchg
incl
xchg
call
or
jbe
lea
and
arpl
and
(bad)  
bound
imul
lea
mov
adc
gs cli 
push
and
pop
xor
mov
lds
jae
sub
jne
es jns
or
jmp
aas    
(bad)
push
or
scas
imul
inc
(bad)  
xor
mov
pop
icebp  
xor
lds
hlt    
mull
mov
loop
xor
popf   
cmp
pop
pushl
jb
adc
iret   
jg
jb
insl
mov
call
mov
jl
(bad)  
jg
fistpl
pusha  
je
xor
lds
inc
scas
iret   
movsb
insb
lock jmp
loopne
cmp
(bad)  
out
mov
aad
cli    
inc
and
mov
xor
icebp  
enter
pop
mov
xor
dec
pop
mov
xchg
test
cld    
lods
jb
push
add
int3   
jecxz
mov
add
dec
lods
adc
add
cmp
dec
repz mov
mov
aam
xchg
mov
cs
fdiv
xchg
sub
ja
xor
mov
xor
daa    
addr16 dec
mov
xchg
dec
inc
push
or
hlt    
add
cmp
pushf  
rolb
test
cmp
test
mov
data16 jae
sbb
or
sub
pop
cmp
and
xchg
dec
pop
pushw
test
ds pop
out
rol
inc
test
jge
pusha  
xor
dec
leave  
sahf   
adc
fs add
mov
pushf  
test
mov
push
inc
(bad)  
pop
mov
cmc    
out
das    
(bad)  
jae
rcll
jnp
mov
lods
pop
push
inc
(bad)  
mov
push
aaa    
sti    
cmpsb
jmp
sar
loopne
cmp
aad
or
nop
mov
cmp
ja
mov
lods
sub
pop
out
imulb
sahf   
(bad)  
jg
or
jns
mov
fdivrs
cmp
lahf   
fcmovne
sti    
scas
lea
add
jno
mov
(bad)  
fwait
rcl
cmp
gs xor
into   
xchg
add
dec
mov
dec
push
cmpsb
andl
jb
test
test
mov
adc
or
in
or
jo
mov
add
jmp
mov
ret    
fwait
or
pop
xchg
add
cld    
dec
fbstp
xchg
hlt    
mov
loope
dec
mov
cmp
lret   
adc
out
call
lret
enter
mov
mov
mov
pushf  
mov
stc    
rorl
in
xor
stos
fisttpl
mov
cmp
xor
sub
nop
and
cmp
fidivrl
aam
pop
jle
test
into   
mov
in
int3   
test
mov
or
mov
incb
jno
lahf   
je
shr
adc
and
inc
push
and
test
xor
cwtl   
push
fistp
jp
lret
loopne
add
mov
xor
xchg
dec
outsl
xlat
mov
xchg
nop
xor
nop
rorl
loop
sbb
ss cwtl 
pop
jmp
inc
negl
out
lds
out
sbb
roll
xchg
bnd jge
(bad)  
mov
dec
push
xchg
lea
lret
sbb
arpl
out
fcomps
pop
sub
inc
movsl
outsb
imul
mov
dec
xor
inc
lgdtl
inc
test
out
bswap
(bad)  
cli    
or
hlt    
mov
fidivl
mov
jge
sub
mov
nop
fnsave
pop
mov
mov
(bad)  
adc
pop
frstor
or
loope
xlat
pop
add
std    
lcall
xchg
mov
outsl
xchg
jmp
gs dec
insl
sub
(bad)  
jmp
in
xchg
xor
insl
mov
ret    
xchg
jg
push
andl
jo
repnz adc
cs sti 
jle
jmp
dec
mov
jbe
mov
sub
mov
cs push
xor
nop
mov
add
in
mov
mov
sbb
insl
iret   
sar
sar
push
fistl
mov
jmp
xchg
xchg
shrb
push
push
mov
out
popf   
clc    
(bad)  
and
enter
push
fbstp
les
movsb
push
or
ds clc 
aas    
add
sbb
mov
jl
(bad)  
jbe
bnd je
push
mov
(bad)  
mov
pop
push
daa    
add
mov
adc
mov
pop
dec
clc    
cmpb
mov
aad
fisubl
fbld
mov
mov
fldcw
xor
xorl
call
or
mov
in
inc
mul
(bad)  
jb
into   
loop
cmp
rcr
pop
in
cmp
aas    
sub
mov
dec
(bad)  
mov
repz leave 
repz cmp
aam
hlt    
popa   
test
add
das    
push
rclb
and
wbinvd 
in
test
and
jb
daa    
in
push
movsb
movsl
dec
sub
xlat
inc
or
(bad)  
dec
pusha  
sbb
pop
jle
push
outsl
push
cmp
movsb
adc
imul
cmpl
lahf   
push
and
addl
inc
es iret 
xor
lea
fnsave
or
xor
int3   
mov
cmp
pop
sarl
out
cltd   
ja
push
lcall
or
lahf   
sbb
jg
cmp
push
xor
sarl
mov
adc
gs cld 
sub
adc
lea
and
lret
enter
and
dec
and
or
dec
ja
fistpl
cli    
movsl
pop
jno
mov
mov
ja
aaa    
adc
ljmp
jo
fcmovnbe
imulb
xor
push
fadds
test
test
nop
stos
cli    
xchg
popf   
mov
sub
adc
push
push
int3   
sub
ljmp
mov
add
and
iret   
in
sub
mov
and
leave  
pop
jp
inc
in
bound
hlt    
popa   
popf   
cmpsl
inc
xchg
xchg
and
fcom
divb
adc
std    
hlt    
lret
mov
repz sarb
and
cli    
das    
or
jo
push
(bad)  
int
jle
out
ja
pop
mov
mov
adc
loop
mov
js
loope
jge
pusha  
mov
out
pop
ret    
fldl
xchg
jne
pusha  
mov
fimul
repnz mov
sbb
in
mov
xchg
mov
pusha  
addl
pop
dec
cmp
push
push
gs jge
jne
pop
jnp
mov
loope
test
(bad)  
push
jmp
inc
inc
xor
scas
mov
stc    
sarb
push
push
jmp
inc
sbb
cli    
stos
mov
sar
ret
add
inc
xchg
imul
out
mov
(bad)  
xchg
pop
arpl
mov
dec
add
sahf   
or
test
sub
pop
xchg
push
and
mov
mov
cmp
shrl
push
adc
add
clc    
rclb
cmp
sub
sbb
call
aaa    
and
out
sbb
push
jecxz
sbb
call
mov
cmc    
mov
hlt    
jae
push
aam
pop
jle
cli    
das    
or
and
lea
fbstp
mov
daa    
test
mov
cmp
pop
test
sti    
dec
sub
in
inc
push
mov
insl
or
xor
sub
aas    
mov
cs push
stc    
or
jecxz
(bad)
sbb
xchg
mov
xorl
dec
push
xchg
mov
clc    
test
ss aam
in
jle
mov
and
in
lret
dec
inc
mov
outsb
inc
lods
stos
inc
out
(bad)  
jno
rcrb
sub
mov
lock pop
jmp
pop
mov
jns
mov
fnsave
and
or
jae
ficomp
fdiv
adc
stc    
inc
(bad)  
mov
pmulhuw
dec
scas
push
adc
and
clc    
adc
inc
xor
mov
mov
adc
and
cmpsl
and
push
shrl
xchg
enter
mov
lock mov
jnp
dec
dec
(bad)  {%k7}
ja
inc
shll
adc
inc
lret   
mov
xchg
mov
loop
rol
inc
dec
je
(bad)
(bad)  
bound
xchg
addr16 mov
stc    
ljmp
fidivl
and
adc
icebp  
mov
nop
stos
ret
movsl
dec
push
sub
jno
jno
scas
jecxz
aad
scas
sbb
loope
sbb
cmp
(bad)  
pop
mov
lahf   
mov
icebp  
iret   
in
cmp
xchg
lea
mov
pushf  
cli    
gs int
jo
push
inc
mov
inc
adc
mov
popl
adcl
and
cmp
mov
repz or
or
mov
fnstsw
inc
add
mov
mov
mov
cmp
mov
push
push
cmpsb
mov
pop
aam
hlt    
popa   
test
mov
(bad)  
jl
mov
sar
(bad)  
pop
sub
clc    
aas    
add
in
aaa    
movntq
sbb
mov
js
fs gs cmp
aam
inc
test
loop
pop
pop
(bad)  
mov
adc
fidivl
imul
sub
sarb
xchg
push
inc
inc
xchg
xchg
into   
xchg
ret
adc
cltd   
inc
arpl
cmp
push
ret    
xchg
or
movsl
pop
xchg
jae
mov
jns
mov
stc    
arpl
arpl
(bad)
mov
nop
stos
mov
ror
sbb
xor
add
pop
and
je
mov
out
arpl
in
arpl
mov
or
pop
int3   
mov
sub
and
daa    
jge
sti    
insb
aaa    
cli    
xchg
mov
in
or
inc
xchg
mov
ljmp
aam
aas    
dec
rorl
push
mov
mov
fstl
adc
fcompl
lahf   
or
bound
repz aad
int3   
and
mov
add
mov
jbe
inc
lods
mov
cmc    
std    
pop
xchg
dec
pop
inc
lret
xor
pop
inc
sbb
insb
lret   
inc
or
jb
push
pop
xchg
push
dec
mov
stc    
xchg
aam
adc
sarb
ljmp
jbe
inc
dec
daa    
ds xchg
cmp
test
pop
and
lea
ret
jg
fs iret 
insb
xor
xchg
pop
cli    
push
add
inc
sub
adc
push
lret
lods
cmc    
insl
cmp
mov
sub
lret
fistpl
mov
push
jecxz
loope
aam
push
cld    
mov
test
push
push
pop
xchg
cmp
rorb
push
popf   
inc
and
cmp
adc
xchg
aam
xchg
scas
jecxz
subl
shll
mov
nop
add
adc
fldt
in
inc
jns
xchg
daa    
inc
mov
xchg
fxch
insb
aaa    
xor
cmc    
jge
ljmp
movsb
sub
mov
mov
popa   
test
adc
mov
add
fildl
js
cld    
inc
xchg
add
cmp
in
push
push
mov
push
mov
jae
(bad)  
loope
repz xlat
iret   
push
mov
add
(bad)  
cmp
sar
shl
cmp
mov
jbe
or
in
push
inc
mov
movsl
mov
inc
popf   
sbb
mov
in
dec
nop
mov
push
sahf   
adc
cwtl   
pop
aad
repz fdivl
cmp
pop
inc
jb
mov
leave  
xor
xlat
sbb
psubsb
out
ljmp
mov
inc
or
out
cmp
adc
aas    
loop
psubd
or
popf   
cmpsl
dec
or
scas
sti    
pop
sbb
jae
lods
xchg
lea
gs clc 
sub
mov
ja
xchg
lods
cmpsb
or
cmp
notl
sbb
mov
insl
cmp
mov
mov
pop
sbb
stc    
sarb
xlat
mov
test
adc
movsl
jle
sbb
stc    
or
mov
mov
sti    
adc
add
(bad)  
dec
mov
ror
mov
inc
(bad)  
hlt    
mov
fidivl
mov
addr16 pop
lcall
push
sbb
push
test
fwait
sub
mov
and
xor
cmpsl
jns
cld    
lret
mov
int3   
jo
mov
nop
js
loop
bound
add
adc
dec
clc    
mov
jae
jge
jnp
aam
pop
xchg
xor
mov
add
stos
dec
pop
cmp
enter
stos
adc
faddl
orl
mov
nop
stos
cli    
lcall
jo
inc
push
xchg
inc
and
rorl
jbe
xlat
mov
lea
aas    
adc
fdivl
mov
jb
inc
call
lea
in
imul
aaa    
jp
or
arpl
jo
mov
jb
inc
(bad)  
ljmp
jmp
or
mov
xor
ss or
movsl
dec
pop
xlat
mov
(bad)  
xchg
lcall
add
xor
pop
int3   
stos
pusha  
loop
pop
mov
aad
(bad)
aaa    
stc    
daa    
daa    
(bad)  
inc
adc
mov
or
dec
enter
repz repz sub
stos
mov
sarb
ss push
add
dec
or
pop
stc    
bnd jmp
push
movsl
sahf   
adc
mov
mov
add
(bad)  {%k7}
cmc    
insl
lea
sub
out
cmp
lahf   
or
mov
xchg
mov
repz lret 
divl
int
int3   
inc
aam
test
inc
fidivl
sub
inc
ret
nop
push
inc
inc
xchg
mov
pop
lahf   
add
or
push
mov
ret    
xchg
jg
mov
pop
sub
or
repnz and
(bad)  
mov
mov
sbb
sub
ds push
mov
int
jnp
pop
dec
push
cld    
jmp
add
jle
ret    
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
aam
test
inc
mov
arpl
push
sbb
or
mov
mov
(bad)  
in
push
cld    
int
mov
nop
aad
mov
loop
mov
jo
push
or
adcb
pop
sub
dec
mov
fistpl
add
inc
dec
push
cli    
sbb
cmp
sbb
leave  
push
leave  
pop
jns
mov
insb
in
mov
ljmp
sbb
xor
cmpb
mov
loop
or
lea
or
mov
hlt    
leave  
lock
jnp
mov
sub
push
push
jp
or
jl
ss and
sub
mov
outsb
or
mov
ficoml
mov
loop
scas
or
mov
lds
xor
js
cmp
lods
push
scas
pop
shrb
movsl
mov
mov
add
sub
das    
xchg
push
jg
xlat
imul
das    
xchg
xor
mov
les
js
insl
popa   
repnz adc
xchg
jl
ret
scas
add
push
cmpsl
jbe
xor
pop
jecxz
cli    
push
mov
adc
sbb
pop
mov
sub
lahf   
fs mov
sbb
xor
je
daa    
inc
repnz and
xchg
icebp  
out
das    
fisttpl
call
xchg
ficompl
inc
or
hlt    
mov
(bad)
ja
enter
cmp
clc    
rorb
and
mov
dec
ret
scas
add
adc
les
jecxz
sbb
mov
cmp
ljmp
mov
xchg
xor
mov
xchg
scas
dec
(bad)  
push
xchg
mov
movsl
ds or
or
aaa    
cmp
lret   
pushf  
or
sbb
mov
insl
hlt    
rolb
mov
push
cmpsl
jl
fs mov
push
bound
pop
add
outsl
pop
dec
ljmp
(bad)  
int
repnz mov
out
test
mov
xchg
mov
mov
mov
mov
dec
pop
xchg
movsl
lods
and
ds pop
out
fldcw
sbb
test
stc    
and
mov
sbb
test
mov
mov
aaa    
or
inc
lds
mov
mov
xor
sub
push
and
cmp
push
inc
and
dec
pop
add
lds
push
cmp
ss div
and
dec
in
mov
jg
out
dec
mov
xchg
aas    
mov
jl
push
(bad)
icebp  
or
addb
les
sub
push
inc
cld    
out
inc
add
mov
add
jbe,pn
dec
hlt    
xor
frstor
loopne
dec
mov
mov
xchg
mov
mov
imul
dec
test
pinsrw
loope
insl
(bad)  
sbb
enter
push
sbb
repz jb
rcll
jne
je
cs jmp
pushf  
ja
into   
xchg
xlat
movsl
int3   
pop
rcr
push
xchg
dec
pop
jns
mov
push
aaa    
mov
test
push
lcall
out
jge
rolb
xor
or
jle
lods
addr16 in
pop
pop
adc
mov
mov
mov
jb
mov
and
fdivs
(bad)  
mov
push
cmpsl
iret   
aaa    
dec
add
fwait
jo
jecxz
pop
int3   
sbb
xor
lods
add
aaa    
xchg
push
rcrl
push
jg
or
es jns
rorb
xchg
(bad)  
adc
ja
(bad)  
mov
sub
movsb
sub
push
xchg
dec
pop
jns
mov
aaa    
sbb
add
cltd   
push
ret
inc
and
jge
jmp
xchg
loop
push
int
cmpl
outsl
fs test
rolb
mov
jae
mov
mov
mov
lock add
push
xchg
mov
jmp
iret   
push
int3   
jp
dec
adc
lods
ret
xor
prefetch
or
pop
nop
andl
adc
rorl
push
mov
hlt    
xor
mov
or
mov
sub
subb
leave  
sti    
add
nop
test
push
out
mov
imul
sarl
cmc    
mov
addl
push
or
scas
mulb
rcll
xor
daa    
xchg
aam
xchg
scas
es ljmp
mov
jecxz
mov
jbe
sbb
jp
test
cmp
mov
out
lods
movsb
jle
ret
mov
inc
mov
xchg
inc
and
ja
cmp
sub
sbb
inc
cmp
push
xchg
xchg
xlat
push
adc
and
hlt    
dec
(bad)
xchg
leave  
psrad
sbb
pusha  
scas
jg
stc    
lds
and
sbb
pushf  
pop
mov
xorb
out
sub
fwait
mov
cld    
aas    
std    
mov
fstl
pop
dec
cs dec
pusha  
sbb
in
in
mov
js
mov
mov
mov
(bad)  
dec
inc
repz pop
test
mov
and
out
xchg
dec
push
rorl
xchg
lcall
jp
pop
sub
cli    
xlat
sar
cmpsb
mov
sbb
lods
je
inc
push
sahf   
shll
hlt    
xchg
mov
pop
push
loopne
cld    
pop
jp
sub
les
shrb
or
out
push
outsb
mov
enter
stc    
(bad)  
adc
test
test
repnz xchg
in
xchg
mov
stos
(bad)  
cmc    
repz push
movzbl
or
mov
cli    
testb
loopne
movsb
and
mov
scas
arpl
sti    
fs mov
cmp
out
inc
daa    
lahf   
je
lcall
cli    
lcall
push
bound
aaa    
stos
fst
iret   
sub
cmc    
inc
sbb
loop
jns
enter
lds
jp
or
xchg
sarl
or
xor
inc
mov
scas
lret
jle
fstl
lcall
mov
xchg
es dec
inc
lret   
(bad)  
ret
push
fs in
push
cmp
push
and
or
ljmp
push
(bad)  
mov
pusha  
inc
mov
xlat
push
add
(bad)  
lds
or
xchg
jl
(bad)  
in
push
fs push
pop
jge
mov
adc
in
test
das    
cltd   
(bad)  
lahf   
or
ss es ret
scas
sbb
test
iret   
fdiv
mov
out
add
push
iret   
and
xchg
in
cmpsl
repnz push
scas
jmp
mov
xor
or
mov
inc
adc
lods
or
aas    
std    
mov
sub
pusha  
aad
jp
or
jmp
xlat
mov
mov
or
in
pusha  
dec
sar
sbb
mov
mov
push
(bad)  
icebp  
inc
iret   
jecxz
pop
out
(bad)  
popf   
int
iret   
jo
popa   
jne
pushf  
jbe
mov
insl
cmp
cli    
xlat
cmpsl
roll
adc
push
cmp
mov
scas
xchg
sbb
add
addr16 ret 
and
iret   
sub
leave  
jne
or
(bad)  
xor
stos
imul
mov
rcrb
arpl
mov
xchg
stc    
vorps
jp
jns
rorb
sarb
ss adc
shl
rcl
xchg
(bad)  
push
dec
mov
jg
sti    
std    
pop
cmp
mov
adc
mov
lods
(bad)  
daa    
or
scas
push
and
jle
divl
pop
jge
gs jg
sti    
std    
inc
cmp
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
cmp
adcb
xchg
scas
adc
repnz shlb
mov
movsb
xchg
(bad)  
pop
dec
scas
gs jg
sti    
std    
das    
inc
testb
ja
cmpsb
mov
sarl
lods
(bad)  
cmp
aam
scas
push
xor
insb
gs in
xchg
movsb
xchg
movl
sti    
std    
pop
inc
std    
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
or
sahf   
push
(bad)  
aam
scas
adc
stc    
popa   
dec
xor
push
jae
mov
movsb
xchg
(bad)  
push
or
and
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
inc
jo
push
(bad)  
aam
scas
push
loopne
dec
xor
push
sbb
mov
movsb
xchg
(bad)  
jne
xchg
gs jg
sti    
std    
and
repz
push
popf   
xorl
sti    
sarl
lods
(bad)  
pop
jb
push
(bad)  
aam
scas
jge
out
popa   
dec
xor
pop
pminub
je
lcall
int3   
push
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
pop
dec
notl
aam
scas
je
out
popa   
dec
xor
inc
jge
mov
movsb
xchg
(bad)  
arpl
sti    
std    
push
cmp
(bad)  
push
popf   
xorl
sti    
sarl
lods
(bad)  
push
dec
cli    
push
(bad)  
aam
scas
dec
inc
aad
dec
xor
dec
imul
xchg
movsb
xchg
(bad)  
push
mov
(bad)  
sti    
std    
xor
popf   
xorl
sti    
sarl
lods
(bad)  
out
mov
(bad)  
aam
scas
(bad)  
mov
popa   
dec
xor
ss xchg
(bad)  
mov
movsb
xchg
(bad)  
adc
jg
jg
sti    
std    
sbb
mov
xchg
popa   
cmpsb
mov
sarl
lods
(bad)  
in
js
(bad)  
aam
scas
fldcw
repnz sarb
mov
xchg
movsb
xchg
(bad)  
adc
xchg
xor
or
out
xlat
lahf   
mov
sub
dec
cmc    
mov
fst
clc    
fmul
mov
add
scas
push
jg
xor
pop
jecxz
sbb
push
cmp
lods
adc
inc
adc
leave  
fdivrl
mov
rclb
mul
xchg
dec
pop
jns
mov
out
sub
imul
dec
jno
cmp
icebp  
mov
loope
pop
push
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
or
mov
fdivrl
dec
icebp  
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
cmp
and
gs add
ret
sub
sub
inc
or
hlt    
mov
out
xlat
decl
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
mov
int3   
push
clc    
mov
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
cmp
inc
add
mov
out
xlat
enter
sub
mov
(bad)  
in
scas
mov
sub
jbe
inc
stos
jae
pop
pop
shlb
test
int
dec
add
add
pop
push
xchg
push
dec
enter
mov
in
fs gs pop
push
loop
insb
les
add
mov
xor
xchg
cs aam
xchg
je
mov
hlt    
dec
mov
repz fdivl
iret   
xchg
gs dec
xor
test
cwtl   
mov
incb
xchg
sub
and
int
or
pop
mov
lock xor
jl
or
pushf  
sbb
arpl
pop
dec
sbb
or
mov
aam
pop
enter
dec
iret   
popf   
mov
icebp  
cltd   
cmpsb
in
ja
push
pop
jp
xlat
leave  
inc
popf   
arpl
fdivl
stos
rcll
mov
stos
ret    
in
pop
mov
jle
shll
aaa    
pop
jle
sbb
ficom
add
dec
jle
mov
jmp
pop
dec
lods
mov
out
push
(bad)  
jecxz
dec
idivl
adc
push
gs inc
and
sub
mov
lods
ret    
jne
xor
or
loop
xchg
imul
xchg
inc
sub
fstpt
xor
add
sahf   
(bad)  
sub
shlb
movsl
xor
xchg
dec
imul
mov
iret   
shl
test
xchg
test
psubd
or
popf   
mov
aam
loopne
and
into   
mov
test
fild
enter
cmpsl
test
cmc    
adc
lods
or
aas    
sti    
push
stos
cli    
cmp
cmpl
push
cmpsl
mov
ret    
mov
dec
je
iret   
cltd   
test
lahf   
shlb
clc    
pop
lea
push
clc    
(bad)  
out
aam
test
(bad)  
stos
lods
cmc    
inc
sbb
adc
fst
mov
(bad)  
(bad)  
clc    
test
subl
xor
sti    
pusha  
mov
lret   
lahf   
cmp
call
push
dec
sbb
out
fldcw
test
and
(bad)  
xor
stos
cmc    
js
xlat
adc
xchg
std    
cmpsl
add
jnp
out
push
mov
mov
push
verr
(bad)  
std    
mov
(bad)  
aam
jge
mov
test
loopne
addb
add
(bad)  
push
xchg
dec
push
jb
push
pop
xchg
add
or
cwtl   
jge
adc
mov
es mov
inc
mov
mov
adc
push
rcrb
inc
xlat
dec
jnp
xchg
sub
and
xchg
or
and
pop
insl
add
daa    
out
jnp
lret
in
cmpsb
les
js
jge
mov
fstps
popf   
push
sbb
sbb
insb
pop
push
das    
leave  
add
sub
adc
xchg
mov
push
sbb
out
fnstenv
mov
(bad)  
xor
stos
cmc    
js
xlat
adc
xchg
(bad)  
nop
stos
pop
loope
inc
xchg
sub
(bad)  
push
movsl
dec
test
(bad)  
rcr
icebp  
mov
sub
mov
rcll
fcmovu
jnp
jecxz
out
outsb
iret   
cmp
xchg
xchg
pop
or
pop
jmp
pop
push
inc
(bad)  
mov
sbbl
push
fdivr
mov
push
push
fscale 
in
or
bound
xchg
das    
cltd   
or
pop
push
xor
jne
lods
xor
inc
les
jp
es gs cmp
pop
lods
and
popa   
jge
ds into 
add
cltd   
sub
and
iret   
movsb
pop
std    
fistl
cmp
mov
mov
push
xchg
mov
loop
outsl
pop
xor
jl
mov
jnp
int
mov
mov
aaa    
imul
sbb
lds
push
inc
dec
adc
aaa    
dec
cmc    
mov
cmp
or
leave  
mov
mov
lock ficompl
aas    
je
jns
inc
mov
pop
out
stos
lret
arpl
cld    
mov
rorl
push
sub
repnz not
mov
inc
ret
iret   
movsb
push
adc
push
xchg
dec
imul
mov
jecxz
ret    
jmp
movsl
enter
xlat
lock hlt 
pop
mov
shlb
outsl
out
test
dec
xchg
movsl
jl
push
stos
lret
fwait
(bad)  
aad
mov
cmp
or
pop
in
mov
ljmp
insb
mov
dec
mov
rorl
mov
jl
(bad)  
jp
or
mov
stc    
sti    
outsl
fnsetpm(287 only) 
(bad)  
mov
loopne
cmp
add
sub
out
and
pop
shll
(bad)  
lock hlt 
pop
mov
inc
popa   
mov
aam
cmp
cmp
push
stos
lret
imul
rorb
inc
xchg
jo
pop
pushf  
dec
into   
ljmp
insb
mov
dec
mov
rorl
mov
jl
(bad)  
jp
or
mov
(bad)  
jge
fnsetpm(287 only) 
(bad)  
mov
loopne
cmp
je
in
adc
stos
pusha  
cmpsl
add
stc    
or
roll
cwtl   
sbb
outsl
cwtl   
test
adc
bound
inc
mov
(bad)  
xor
mov
lds
xchg
(bad)  
xor
decl
or
ss inc
insl
je
jg
leave  
cmpsb
dec
enter
mov
rcrb
xchg
jns
aas    
dec
xor
mov
xchg
inc
stos
mov
jnp
jns
rorb
lds
into   
jbe
popa   
push
psubsw
dec
cmp
or
inc
(bad)  
jo
(bad)  
rorl
xor
or
out
xlat
cmp
ljmp
dec
sbb
repz mov
mov
xchg
xchg
dec
fsubl
int
adc
xor
data16 clc 
push
je
(bad)  
(bad)  
rcrl
icebp  
scas
lock mov
cli    
sbb
dec
cmpl
cmc    
mov
cltd   
adc
cld    
pop
int3   
(bad)  
testb
cmc    
inc
imul
mov
sbb
dec
push
xchg
enter
ds pop
out
(bad)  
repnz push
xor
pop
jae
cld    
ret
in
pop
sbb
stos
call
xchg
xor
xchg
fisttpll
xor
pop
mov
adcl
ja
icebp  
jg
scas
add
pusha  
jp
push
scas
sub
inc
pop
leave  
test
pushl
aad
iret   
sub
xchg
ljmp
mov
mov
push
in
inc
imul
fdivr
int
popf   
cmp
jns
mov
out
negl
(bad)  
je
mov
cwtl   
jo
cmpsb
sub
cld    
outsb
mov
jb
and
shl
fdivr
xor
popa   
(bad)  
mov
lods
push
push
push
cmp
(bad)  
xor
mov
cwtl   
jno
xchg
ficompl
test
pop
sbb
test
adc
xchg
xor
(bad)  
lock xchg
cwtl   
add
jmp
lds
stos
and
cli    
das    
or
and
mov
dec
(bad)  
testb
add
rorb
aad
(bad)  
pop
pop
aad
ret    
(bad)  
cli    
inc
sub
(bad)  
divl
xlat
cmpsl
cld    
mov
repnz lss
repz add
pop
cmpsb
mov
lea
push
bt
cmpl
lcall
lahf   
jg
jno
mov
in
or
pop
mov
mov
mov
cltd   
stc    
and
jmp
rolb
mov
push
fsubrl
mov
fs stos
xchg
cmp
(bad)  
xorb
(bad)  
ljmp
mov
insl
adc
rol
inc
sub
push
les
bt
push
xchg
mov
xchg
or
jp
(bad)  
jp
xchg
rorb
add
xchg
pusha  
and
mov
xchg
fisub
xchg
add
inc
xchg
xchg
imul
pusha  
jp
push
add
rcl
xchg
inc
dec
stos
pusha  
xor
push
and
push
test
xor
sbb
lea
adc
sti    
mov
nop
mov
dec
mov
loop
mov
dec
sub
insb
fsubrl
out
(bad)  
sar
dec
inc
and
jge
fnsave
icebp  
sub
jg
jp
mov
jl
ficompl
int3   
mov
sub
insb
pop
and
add
and
sub
push
test
inc
add
insb
sti    
add
and
sub
sub
jle
cmpsl
or
fstpl
mov
or
enter
lds
dec
sub
push
jp
push
str
pop
jmp
jb
fnstcw
insl
fisubr
mov
ret    
xor
sti    
scas
sub
cmpsb
in
aad
mov
fldl
push
inc
scas
dec
xor
mov
xchg
inc
imul
stc    
mov
gs cwtl 
jno
xchg
ficompl
test
dec
sbb
(bad)  
in
(bad)  {%k7}
fucom
rcl
dec
mov
push
pop
jnp
xlat
cwtl   
stos
lret
in
insl
or
in
lock add
das    
mov
out
sub
mov
pushf  
push
stos
jmp
testl
xor
lods
push
inc
arpl
jge
imul
xlat
cmpsl
xchg
add
lret   
mov
sub
mov
stos
adc
loop
pop
test
mov
inc
inc
push
sub
add
iret   
mov
out
int3   
stos
jnp
movsl
fcomip
pop
lahf   
sti    
pop
ret
jbe
sahf   
inc
stos
jge
sub
cmp
cmpsl
pop
push
mov
ret
adc
mov
ret
jg
lea
das    
or
jno
cmp
and
mov
dec
outsb
mov
arpl
push
sbb
adc
mov
pop
stos
mov
fmuls
adc
pop
pop
test
lret
pop
addb
jg
inc
push
dec
xor
outsb
mov
test
mov
lods
mov
push
sub
bound
dec
and
xchg
dec
imul
cwtl   
or
sbbb
xchg
cmpl
push
mov
fimul
sbb
jge
aad
enter
cli    
(bad)  
and
pop
mov
loope
and
adc
sbb
mov
adc
cmp
rcrb
jge
or
xchg
mov
or
insl
mov
stc    
inc
sbb
jb
jp
imul
(bad)  
mov
mov
fdivl
sbb
ret    
xor
test
push
fwait
out
push
fucomi
jl
lret   
push
mov
dec
or
int3   
arpl
mov
sub
mov
jae
inc
cwtl   
lock add
mov
xchg
je
sub
and
iret   
jnp
mov
fadds
push
loopne
fldcw
mov
pop
inc
xchg
xchg
stos
pop
inc
bound
movsb
inc
std    
popf   
lods
adc
xchg
iret   
mov
out
in
dec
inc
dec
mov
lods
sub
lds
mov
out
jecxz
sbb
jge
repnz adc
in
mov
adc
xchg
movl
xchg
je
lea
repnz test
popa   
int3   
mov
cmp
aam
mov
sub
pop
inc
out
jle
inc
cld    
sub
int
es mov
cli    
out
ret    
iret   
mov
cs push
rolb
leave  
inc
pop
stos
mov
(bad)  
scas
clc    
adc
inc
xor
cmpsb
ljmp
push
xchg
mov
push
inc
sbb
loope
or
add
mov
dec
fscale 
pop
loope
roll
imul
sub
roll
mov
mov
cltd   
fldl
out
lds
test
cs in
cli    
std    
mov
dec
aaa    
adc
mov
jmp
out
jnp
lret
call
movsl
ja
in
aas    
add
aam
or
mov
aam
mov
(bad)  
(bad)  
cwtl   
inc
sub
mov
(bad)  
or
xor
pop
jecxz
repnz and
lcall
xor
fwait
cwtl   
fisttpl
pop
push
(bad)  
call
dec
enter
jns
xlat
cmpsl
int
lea
xchg
repz lret 
lahf   
cmp
stos
sbb
subw
mov
jle
cwtl   
addr16 out
test
dec
xchg
pop
movsb
dec
push
stos
lret
adc
jno
xchg
ficompl
test
xchg
cwtl   
pop
(bad)  
adc
sbb
aam
test
(bad)  
push
les
inc
mov
mov
pop
jecxz
ljmp
push
test
outsb
or
jecxz
call
scas
ret    
jmp
mov
cmp
push
std    
mov
mov
aaa    
xchg
jge
gs push
push
loope
mov
mov
dec
xchg
sub
ret
dec
adcb
inc
fiaddl
loope
inc
pop
jl
adc
push
into   
popa   
orb
imul
inc
sbb
adc
incl
faddl
adcl
mov
dec
inc
mov
mul
dec
cs and
sub
push
stc    
lea
mov
sbb
aam
dec
imul
addr16 xchg
lods
shlb
dec
jecxz
dec
mov
jmp
je
dec
ljmp
(bad)  
int
xchg
(bad)  
mov
rorl
das    
adc
sub
(bad)  
stc    
lea
mov
out
pop
ljmp
xor
or
pop
nop
xchg
add
pop
dec
ljmp
(bad)  
int
add
addr16 icebp 
or
pop
bound
adc
jno
xchg
ficompl
fwait
iret   
lahf   
jge
jp
xor
or
cmpsl
xchg
jne
xchg
cwtl   
jno
xchg
ficompl
fwait
iret   
addr16 nop
aad
jb
adc
xchg
push
sbb
adc
cmp
in
xchg
je
std    
ret
pop
or
scas
mov
sub
xor
in
adc
xchg
lds
lods
bound
lock ficompl
int3   
mov
sbb
insb
pop
or
das    
and
sub
push
stc    
lea
mov
out
dec
cli    
mov
outsb
mov
das    
mov
je
dec
outsl
insb
jp
or
jmp
fstpt
adc
and
sub
movsb
inc
mov
test
popf   
mov
adc
jmp
cltd   
lock xchg
push
mov
jle
cltd   
and
mov
mov
fsubrs
mov
mov
push
verr
inc
push
add
rcl
jecxz
inc
stos
arpl
pop
arpl
jmp
rcrl
stc    
(bad)  
mov
push
inc
adc
push
pop
pop
fnsetpm(287 only) 
jp
mov
lcall
(bad)  
lods
fcoms
mov
pop
jns
mov
mov
aam
lret
or
hlt    
xor
int
icebp  
lret   
mov
pop
jns
mov
mov
mov
mov
aas    
inc
sbb
loope
(bad)  
jo
lahf   
push
or
add
nop
clc    
adc
inc
sub
icebp  
mov
jecxz
sbb
frstor
mov
push
arpl
jns
or
cmpl
mov
mov
jmp
and
cmp
loopne
ret
pop
or
mov
dec
jmp
icebp  
or
pop
xor
jnp
je
mov
lock push
jp
or
jmp
(bad)
stos
stc    
lea
mov
and
out
cmp
inc
ret    
movsl
dec
fisubl
addb
mov
into   
pop
mov
push
sbb
dec
mov
pop
fdiv
xor
inc
test
dec
xchg
adc
add
movsb
lds
pop
fwait
cwtl   
pushf  
insb
adc
lods
mov
xlat
(bad)  
dec
push
adc
mov
cmpl
cmc    
xor
std    
mov
fmull
add
cwtl   
and
inc
divb
mov
sub
cmp
cmp
(bad)  
dec
pop
pop
test
jle
adc
rol
rorl
das    
out
testb
stos
sub
xchg
mov
imul
push
lds
cmp
loope
in
add
jb
(bad)  
dec
sti    
jg
dec
ret
xor
xchg
xchg
jne
stos
sub
and
fwait
cwtl   
shr
arpl
imul
and
pop
(bad)  
push
jg
jge
jp
arpl
les
adc
pop
in
adc
sub
int
out
lahf   
sub
ja
cmc    
pop
jmp
stc    
pop
into   
ja
push
lret
clc    
jp
jns
inc
in
mov
loop
test
mov
test
inc
and
jge
cmpsl
arpl
rorb
xchg
adc
rorl
das    
lret
(bad)  
or
add
sub
or
pop
jns
rorb
mov
mov
(bad)  
test
inc
cli    
and
lret
fcomps
or
jnp,pn
jns
rorb
out
adc
rorl
das    
lret
dec
mov
(bad)  
mov
mov
push
rorb
adc
repz mov
pop
leave  
push
jne
or
jmp
ficomp
sub
in
cmpsb
les
js
jge
ss
aaa    
pop
je
int3   
lods
nop
ja
test
iret   
mov
mov
jg
inc
lahf   
cmpsb
in
jecxz
pop
cmp
push
pop
arpl
out
sub
(bad)
int3   
push
fdivrl
and
adcl
js
dec
ljmp
(bad)  
int
mov
movsl
cmp
push
xchg
push
cwtl   
out
flds
jg
cmp
sbb
add
sbb
inc
es data16 cmp
mov
inc
test
and
push
in
mov
repnz movsb
imul
(bad)  
aaa    
rorl
mov
pusha  
(bad)  
fwait
cwtl   
jnp
inc
and
mov
ficompl
fwait
iret   
xchg
xor
lcall
imul
mov
mov
add
scas
es into 
ret    
sbb
test
fisttpll
fistpll
rorl
dec
or
fnstsw
adc
movsl
fcomip
mov
or
fs
enter
hlt    
out
sbb
lods
loop
movsl
outsb
sbb
scas
sbb
inc
es data16 cmp
adc
inc
cli    
(bad)  
loop
push
icebp  
dec
das    
inc
fs mov
sub
(bad)  
xor
(bad)  
arpl
mov
add
mov
jbe
jns
call
jge
push
cmc    
adc
fisubl
(bad)  
hlt    
or
mov
lods
mov
mov
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
lods
jge
push
cmp
dec
icebp  
lahf   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
ret
cmp
or
xlat
jle
xor
cmpb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fadd
add
adc
neg
hlt    
repnz mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
out
das    
push
aaa    
jle
mov
jnp
test
sbb
inc
push
sub
mov
push
jmp
jp
adc
mov
(bad)  
mov
ljmp
daa    
cmc    
mov
icebp  
sbb
add
xchg
add
jns
cmp
cs mov
icebp  
xor
mov
mov
push
cmp
xor
xlat
pusha  
xchg
adc
loopne
dec
test
and
js
mov
adc
pop
mov
pop
push
mov
cmp
sub
(bad)  
out
jl
dec
hlt    
cmp
cld    
jmp
jg
cs inc
and
shr
iret   
je
enter
pushf  
rcrb
leave  
(bad)  
in
inc
push
xor
sub
cmp
pop
or
push
loope
jns
dec
adc
out
pushf  
cmp
sbb
into   
dec
xor
sub
test
and
add
sbb
jb
ret    
cmp
jae
pop
stos
rcl
iret   
fdivr
mov
push
(bad)  
lret   
(bad)  
je
imul
push
cmpsb
std    
scas
in
xor
mov
cli    
cmp
loope
cmp
pop
lods
(bad)  
(bad)  
or
fisubrl
repnz pop
popf   
in
icebp  
add
(bad)  
xor
ds dec
notl
dec
push
mov
test
cmp
sbb
ja
pop
movsb
pop
stos
(bad)  
xchg
and
pop
dec
imul
push
lock push
inc
addr16 jno
xchg
fstl
ljmp
dec
aad
enter
mov
les
and
daa    
or
jmp
pop
adc
adc
sbb
das    
jmp
push
rcl
std    
sub
xchg
lret   
shrl
add
lret   
in
sub
rclb
sbb
mov
xor
sub
es add
lret
and
in
mov
or
(bad)  
ljmp
ret    
cwtl   
out
add
sbb
jns
cmp
lret
push
lods
xor
in
adc
mov
and
test
push
jg
mov
xchg
adc
pop
push
push
pusha  
scas
out
or
adc
jmp
lock clc 
push
jno
clc    
adc
loop
cmc    
mov
rep stos
into   
fdivl
dec
gs push
push
daa    
lock femms 
sub
xchg
push
xchg
jmp
test
fstl
inc
xor
aaa    
mov
xchg
add
negb
sbb
xor
lret   
sbb
dec
rcrb
ss fsubrp
and
xor
sub
ret
test
(bad)  
clc    
or
repz sbb
fidivr
clc    
push
cmp
xor
imul
adc
fdiv
mov
out
xlat
iret   
fdiv
mov
popa   
and
(bad)  
out
xlat
iret   
fsub
out
sub
stc    
les
sbb
out
or
jns
movzwl
getsec 
test
(bad)  
sub
sarb
push
jmp
push
(bad)  
cmp
out
mov
pushl
cmp
jl
xchg
add
push
sub
sub
push
jbe
rcr
sub
or
push
pop
push
loopne
push
sub
sub
push
jbe
rcr
sub
ret    
jae
pop
test
lret   
(bad)  
out
pop
(bad)  
adc
dec
jnp
in
iret   
jg
(bad)  
or
pop
stc    
clc    
mov
xor
jne
mov
imul
pop
xlat
loopne
sbb
fs mov
push
cmp
aas    
xchg
mov
sbb
cmp
or
mov
hlt    
mov
out
xlat
iret   
fdivr
faddl
sbb
leave  
adc
(bad)  
(bad)  
out
xlat
iret   
fdiv
mov
ds inc
jno
scas
xchg
fmull
push
cltd   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
xor
sbb
and
pop
stos
les
mov
out
xlat
enter
lret   
inc
insl
adc
hlt    
stos
(bad)  
in
xlat
push
sub
adc
scas
jecxz
xor
xchg
insl
push
xor
sub
loop
icebp  
pop
sub
sbb
pop
(bad)  
adc
dec
jnp
in
js
xchg
adc
dec
outsb
mov
or
cmc    
mov
out
xlat
dec
fdivl
out
push
repnz sbb
jo
jne
pushw
(bad)  
mov
mov
(bad)  
mov
out
push
iret   
pop
hlt    
or
outsb
stos
add
stc    
xor
and
jecxz
mov
enter
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
dec
fidiv
repz xchg
push
gs push
jg
adc
or
movsl
lods
jne
adc
mov
out
xlat
iret   
pop
hlt    
or
outsb
rorb
lret
push
shlb
xor
out
aam
fdiv
mov
push
iret   
fdivr
mov
cmp
dec
imul
dec
adc
int
mov
or
cmc    
mov
out
xlat
dec
fdivl
icebp  
scas
icebp  
sub
adc
repnz scas
push
popf   
jne
xchg
xlat
iret   
fdiv
mov
push
iret   
pop
cli    
or
fsubs
or
mov
or
cmc    
mov
out
xlat
dec
fdivl
repz sub
sub
cs inc
and
push
movsl
in
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
sbb
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
jecxz
jle
mov
jl
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
mov
push
jg
out
movsb
push
negb
aam
add
jp
rcrb
imulb
fidivl
and
jge
mov
sbb
and
inc
pushf  
mov
mov
leave  
(bad)  
mov
out
push
iret   
pop
hlt    
mov
out
stos
add
stc    
xor
pop
jp
jnp
mov
es mov
iret   
fdiv
or
testb
mov
and
adc
(bad)  
mov
out
push
iret   
pop
hlt    
mov
ljmp
push
subb
outsl
gs mov
jl
mov
iret   
fdiv
or
outsb
aam
(bad)  
repnz
in
and
mov
push
hlt    
mov
out
xlat
iret   
fdiv
mov
out
daa    
fildll
xlat
iret   
fdiv
mov
out
xlat
iret   
js
lods
jae
xlat
(bad)  
fmull
push
cltd   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
inc
mov
inc
loopne
dec
mulb
add
cltd   
(bad)  
and
shrd
pop
movsb
or
(bad)  
test
cmp
imul
add
cmp
sbb
and
lret   
cmp
xchg
das    
xlat
enter
(bad)  
outsb
jl
and
popa   
(bad)  
icebp  
loopne
fildl
ds push
sub
sbb
mov
add
xlat
iret   
fdivl
out
xlat
enter
fmull
sbb
inc
insl
js
hlt    
mov
out
xlat
iret   
fdiv
mov
out
push
cwtl   
jle
(bad)  
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
enter
jo
pop
(bad)  
push
sahf   
arpl
rcrb
push
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
mov
movsb
dec
mulb
sub
jno
hlt    
fwait
inc
pushl
inc
push
xor
daa    
cs adc
push
cmp
jmp
mov
(bad)  
sub
dec
and
test
loopne
push
lock push
inc
addr16 jno
lcall
mov
scas
inc
add
aam
fdiv
mov
push
iret   
pop
hlt    
or
pop
stc    
xchg
or
das    
pushf  
xchg
popf   
fwait
in
pop
dec
cmc    
mov
out
xlat
iret   
pop
aam
xchg
jbe
leave  
lds
sbbl
jb
fisttpll
hlt    
jle
inc
add
sbb
test
(bad)  
mov
out
xlat
iret   
pop
hlt    
or
outsb
rorl
and
xchg
hlt    
(bad)  
(bad)  
jl
sbb
iret   
fdiv
mov
push
iret   
pop
testl
nop
jno
jbe
addr16 mov
mov
(bad)  
outsl
mov
inc
adc
hlt    
not
out
inc
cltd   
mov
lret   
cmp
xchg
jg
int3   
xchg
cs lahf 
insb
pop
in
test
mov
movsl
ja
mov
pop
push
dec
jne
gs inc
add
sbb
sbb
cmc    
sub
(bad)  
xlat
outsb
stos
loopne
or
push
int
mov
push
pop
push
gs sbb
mov
hlt    
mov
out
xlat
scas
dec
cmp
hlt    
mov
out
xlat
iret   
fcoml
gs sbb
mov
out
xlat
pop
jno
cmp
es in
(bad)  
(bad)  
and
pop
mov
sarb
xchg
xchg
call
lahf   
stos
aam
jb
es aaa 
mov
test
mov
test
push
jg
aas    
lret
dec
rorb
(bad)  
or
pop
jmp
test
ja
pushf  
pop
and
cmpl
push
pop
andl
mov
scas
int3   
out
mov
jg
mov
dec
orl
movsl
mov
sub
addr16 dec
mov
cmpl
push
pop
(bad)  
xchg
outsl
arpl
xchg
push
das    
xlat
push
sub
jmp
inc
pop
pop
push
or
mov
pop
jne
pop
loop
test
cmp
sbb
popa   
stos
jb
mov
xlat
(bad)  
or
pop
push
push
cmc    
cmc    
aaa    
dec
cmp
int
out
std    
adc
nop
dec
ret    
cld    
push
(bad)  
or
roll
bound
push
lret   
bound
and
(bad)  
iret   
mov
les
ja
in
mov
sti    
cmp
xchg
jmp
js
aaa    
test
out
xor
xor
cmpsl
mov
push
insb
push
in
sub
push
xlat
xchg
fdiv
mov
out
sub
loop
mov
out
out
add
and
mov
or
hlt    
mov
out
xlat
iret   
push
mov
ja
mov
jecxz
movl
lahf   
xchg
xor
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
pop
or
dec
cmpsb
inc
cltd   
repnz mov
bsf
and
fcomip
mov
and
jge
mov
mov
jge
ret
inc
incb
mov
out
push
pop
add
andl
sbb
jl
icebp  
cmpsl
inc
arpl
xlat
(bad)  
or
pop
push
push
cmc    
cmc    
aaa    
mov
flds
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcompl
(bad)  
hlt    
dec
aaa    
mov
mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
add
test
or
and
jne
push
add
or
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
jnp
aas    
in
lret   
iret   
push
cmp
ja
iret   
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
push
pop
mov
pop
ret
out
fistl
in
inc
add
imul
and
jge
scas
je
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
ljmp
out
pop
add
(bad)  
lahf   
xchg
xor
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
sub
xor
mov
ror
push
and
push
pop
mov
std    
js
test
shrb
jno
(bad)  
inc
push
pop
les
(bad)  
in
test
iret   
(bad)  {%k7}
in
push
ret    
in
scas
repz rcrl
jmp
addr16 jl
mov
and
rol
add
xchg
dec
xchg
inc
add
imul
stos
xchg
or
mov
jae
or
bound
cmp
dec
push
sbb
mov
or
push
jbe
movsw
dec
jbe
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
mov
and
or
inc
mov
fdivl
or
mov
cmp
dec
fs mov
ja
sbb
add
xchg
scas
faddl
push
ds int
insb
sub
jne
rclb
hlt    
mov
out
xlat
iret   
fdiv
mov
push
movsb
scas
ja
mov
out
xlat
iret   
fdiv
mov
out
xlat
cmp
ret    
iret   
push
iret   
daa    
test
in
out
dec
out
mov
scas
(bad)  
les
mov
mov
and
jb
jns
sbb
lea
sub
sub
sbb
cld    
dec
(bad)  
rcr
andb
dec
and
repnz dec
sub
xchg
dec
js
xlat
in
mov
mov
out
ret
adc
cltd   
(bad)  
std    
pop
inc
(bad)  
lods
out
ret
mov
dec
dec
sub
mov
and
movsb
xlat
in
mov
repnz fdivs
gs ljmp
movsl
in
add
add
and
jmp
mov
aam
push
or
test
or
cld    
cmc    
push
lock push
inc
addr16 jno
cmpsb
fldcw
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
fbstp
mov
mulb
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
pop
inc
loop
sti    
ds push
mov
sub
xor
adc
fdiv
mov
out
xlat
iret   
fdiv
mov
fidiv
(bad)  
out
xlat
iret   
fdiv
mov
out
pop
aaa    
xchg
adc
out
cmp
es movzwl
frstpm(287 only) 
out
getsec 
test
(bad)  
sub
sarb
push
jecxz
sub
cmp
out
mov
dec
cltd   
and
lret   
pushf  
mov
pop
sub
push
mov
adc
xor
or
mov
xchg
js
mov
inc
loop
stos
data16 mov
and
inc
or
add
popf   
mov
or
sbb
lods
cmp
(bad)  
mov
stos
or
adc
push
sub
sbb
xchg
fdivrl
cmpsb
cmp
fldl
roll
or
push
sbb
mov
or
push
jbe
ss jno
rolb
xor
add
loop
add
fnstsw
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cmp
xchg
fdivl
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
mov
(bad)  
xchg
sub
imul
leave  
xor
jb
imul
or
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
xor
rorb
pop
shlb
in
lret   
iret   
test
or
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
(bad)  
sahf   
(bad)  
or
test
dec
mov
sub
jecxz
mov
sbb
sbb
in
or
(bad)  
or
push
jle
jno
inc
mov
lds
stos
movsb
pop
pop
jge
sarb
in
pop
mov
jle
jmp
dec
fnstsw
cmp
lret   
aad
sbb
dec
add
add
dec
test
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
sbb
sub
imul
jp
arpl
test
dec
cmp
in
dec
mov
adc
gs or
loope
das    
sbb
mov
pop
jb
mov
jl
gs dec
and
lods
jb
inc
arpl
cwtl   
je
int3   
lods
sbb
push
mov
lods
cmpsb
or
or
aas    
aaa    
jl
stos
and
pop
or
icebp  
sub
fwait
test
rorb
ljmp
cmpsl
adc
sahf   
fbld
movsb
iret   
xchg
repnz push
xchg
sbb
mov
push
int3   
dec
cli    
add
push
hlt    
cmc    
or
or
mov
(bad)  
and
cwtd   
mov
out
add
sub
(bad)  
mov
inc
add
stc    
mov
popl
ljmp
por
pop
add
jmp
test
push
(bad)  
je
push
rorb
adc
push
out
fsts
and
push
pushf  
test
outsl
es stos
(bad)  
mov
or
jg
xor
dec
outsb
mov
(bad)
mov
addr16 push
movsb
or
popf   
std    
mov
in
jno
push
ds push
insl
push
add
imul
and
dec
repz mov
cmp
xchg
cmc    
lock data16 jae
xchg
lods
rolb
fsub
in
(bad)  
inc
in
hlt    
sti    
jbe
xchg
jbe
cltd   
xchg
mov
cmp
icebp  
in
mov
sbb
and
cmpsb
in
mov
int
aaa    
aad
dec
sbb
pushf  
repz xor
cld    
leave  
add
mov
xorl
iret   
inc
mov
push
pop
xor
outsl
nop
mov
test
sbb
(bad)  
loope
test
xor
mov
xchg
mov
xchg
dec
fdivr
xchg
ds out
fsts
jae
sub
lcall
sbb
movsb
decb
xchg
test
add
cmp
loope
daa    
popa   
inc
in
pop
into   
sub
call
cmpsb
fwait
cwtl   
and
cwtl   
jno
xchg
ficompl
fwait
iret   
fwait
cwtl   
push
xor
sub
in
ret
adc
orb
mov
or
inc
or
icebp  
cpuid  
(bad)  
fcmovnu
mov
(bad)  
negb
sahf   
(bad)  
cs pop
mov
sub
inc
es data16 cmp
loopne
mov
jne
lods
push
dec
xlat
pop
inc
jnp
push
rcl
dec
dec
fldl
lds
ss jl
xchg
sub
add
dec
adcb
cmpsl
(bad)  
jne
xor
cmpsl
jns
jae
xchg
icebp  
mov
adc
dec
lds
add
jmp
jb
test
adc
mov
(bad)  
(bad)  
mov
arpl
mov
insb
pop
nop
pop
sbb
and
sub
push
std    
xchg
sub
dec
pushf  
jl
fisttpl
in
or
inc
sub
sub
push
xchg
dec
mul
mov
or
into   
arpl
mov
sahf   
xor
jbe
es add
jl
jnp
xlat
mov
sbb
sti    
pop
cld    
lods
jb
inc
arpl
ss test
int3   
mov
fistl
je
xchg
xor
test
inc
mov
mov
sbb
lds
cmp
aaa    
lock popl
dec
mov
add
out
push
dec
lods
adc
(bad)  
dec
lcall
pop
iret   
outsl
jge
(bad)  
jbe
mov
insb
fs mov
nop
rep outsl
aaa    
ljmp
cmc    
mov
adc
jg
(bad)  
sub
decb
adc
pop
enter
ret
sbb
mov
cwtl   
(bad)
add
xchg
idivb
(bad)  
jne
rorb
adc
scas
sar
mov
xchg
mov
xor
push
mov
out
lock in
sti    
pop
xor
mov
aaa    
dec
stc    
mov
bswap
lds
fidivl
and
bound
push
hlt    
sub
or
outsl
scas
int
pop
test
std    
and
in
popf   
cmp
sub
xchg
sub
pop
inc
loop
iret   
fcoml
not
hlt    
jmp
pop
int
dec
adc
aaa    
dec
decl
cmpsb
clc    
xor
or
not
cs in
cmc    
es pop
jp
xchg
out
(bad)  
fwait
sub
and
mov
and
and
jp
icebp  
aad
xor
(bad)  
xor
mov
jmp
gs pop
aas    
stos
fst
iret   
mov
jp
outsl
scas
int
pop
test
repnz sbb
cmc    
fstps
iret   
std    
mov
xchg
or
and
jl
sub
xchg
jnp
adc
fist
ret
jmp
dec
adc
aaa    
dec
stc    
mov
bswap
jne
cld    
or
ljmp
cli    
xlat
cs in
negl
adc
inc
aaa    
cld    
pop
cmp
cmp
cmp
test
(bad)  
fbld
test
in
cmc    
xor
or
mov
jp
push
into   
fcoml
test
mov
inc
pop
iret   
ljmp
mov
xchg
mov
add
sub
mov
fcoml
neg
hlt    
jmp
data16 or
(bad)  
cld    
out
insl
or
xor
mov
cs in
xor
push
cmp
sub
xchg
or
scas
cmc    
fcoml
test
mov
adc
pop
fsubp
inc
pop
pop
shr
adc
aaa    
mov
mov
bswap
rcrb
(bad)  
adc
xlat
pop
and
jp
in
fmul
xor
xchg
pusha  
scas
sbb
jl
and
gs mov
or
pop
ds aam
push
ja
cmp
lahf   
rclb
(bad)  
hlt    
jmp
jno
out
jl
mov
pop
(bad)  
lock fcoml
test
mov
outsl
leave  
ljmp
or
cmc    
ror
xor
sbb
add
(bad)  
hlt    
popf   
cmp
sub
xchg
nop
jle,pn
xor
(bad)
fcoml
lock jecxz
jmp
push
cmp
pop
add
roll
inc
sbb
fmull
adc
xor
or
in
into   
sub
outsl
popa   
cmp
ficoml
data16 or
idiv
cmp
aaa    
scas
aam
pop
and
jp
jmp
add
ljmp
or
icebp  
xlat
cs in
iret   
and
inc
jo
jae
cmpsl
(bad)  
aaa    
and
ret
in
cltd   
jmp
or
dec
push
jg
(bad)  
repnz sbb
mov
(bad)  
icebp  
fcoml
test
xchg
out
lret   
stc    
sbb
and
jp
test
mov
or
(bad)  
cld    
out
insl
or
xor
xlat
pop
and
jp
lea
ficoml
data16 or
idiv
cmp
aaa    
scas
aam
pop
and
jp
xchg
mov
mov
or
idiv
cmp
aaa    
push
pop
or
call
aaa    
dec
jecxz
(bad)  
bswap
lret   
mov
xchg
rcr
hlt    
popf   
cmp
sub
xchg
mov
sbb
scas
rclb
(bad)  
hlt    
jmp
add
mov
mov
bswap
fbld
and
into   
hlt    
popf   
cmp
sub
xchg
mov
bound
ret    
out
cmp
jg
sbb
and
imul
adc
and
fxch
pop
loop
fwait
sub
and
(bad)  
in
mov
or
jmp
add
negl
pop
outsl
sbb
adc
scas
xor
or
cli    
xlat
cs in
insb
mov
bound
xor
sbb
fcoml
enter
ffreep
jae
fwait
stc    
sbb
mov
jp
imul
jae
sti    
sub
xlat
pop
and
jp
cmc    
ror
xor
dec
or
dec
(bad)  
xor
popf   
cmp
sub
pop
dec
insl
adc
sub
out
sub
mov
imul
movsl
push
jmp
mov
fs in
pusha  
sarb
jecxz
stc    
shl
push
xchg
daa    
(bad)  
xchg
popl
fistl
fadds
jg
fstps
jmp
mov
icebp  
pop
and
pop
or
(bad)  
push
mov
fisub
inc
and
repz push
dec
dec
push
jno
cmpsl
adc
and
jp
pop
stos
sti    
fdivl
mov
loopne
mov
(bad)  
mov
hlt    
mov
aaa    
mov
mov
xor
les
loopne
mov
and
jp
icebp  
(bad)  
and
stc    
cltd   
cltd   
mov
fdiv
enter
cmp
sub
mov
xchg
nop
cltd   
mov
fdiv
enter
cmp
lcall
mov
lods
cli    
lret
in
(bad)  
pop
sti    
iret   
fcoml
lock fcomi
repnz xchg
rcr
out
repnz enter
mov
aaa    
and
shr
mov
jmp
mov
or
scas
cmc    
fdivrl
jb
add
rol
addb
adc
aaa    
pop
xchg
xchg
(bad)  
das    
imul
xchg
(bad)  
(bad)  
mov
(bad)  
leave  
decl
sub
mov
popf   
sti    
in
mov
mov
pop
and
jp
icebp  
ror
sub
repnz hlt 
cmc    
rol
addb
adc
mov
mov
loop
xchg
xlat
adc
add
xor
or
hlt    
xlat
or
mov
mov
(bad)  
mov
xchg
jnp
adc
(bad)  
in
xchg
ffree
lret
leave  
decl
sub
and
ret
mov
in
mov
fwait
(bad)  
mov
or
pop
stos
sti    
fmul
jb
jmp
mov
and
mov
aaa    
pop
xchg
xchg
(bad)  
xor
subl
addb
adc
aaa    
mov
(bad)  
(bad)  
sub
roll
xor
fisttpl
sub
or
lahf   
rolb
xchg
and
iret   
or
cmc    
fbld
mov
sarb
ljmp
or
movsb
int
stos
mov
push
push
ljmp
mov
daa    
bound
push
push
out
sbb
shrl
mov
dec
fdivrl
sbb
(bad)  
sahf   
push
pop
sub
imul
mov
add
push
das    
mov
movsl
adc
std    
lret   
pop
mov
cli    
daa    
or
adc
sarb
test
addr16 ds leave 
xchg
in
jb
push
fsubl
add
out
dec
and
das    
sbb
pop
out
mov
jle
jp
int
test
mov
in
mov
popf   
jae
js
push
lea
mov
xor
out
dec
stc    
mov
lcall
fidivr
lea
fnsave
pop
dec
dec
ljmp
jbe
shll
dec
lods
inc
pop
dec
xchg
adcl
fistpl
cmp
sub
in
popf   
adc
mulb
cmpsb
imulb
jo
mov
hlt    
sbb
inc
stos
rcll
sub
dec
cmc    
imul
xchg
sti    
mov
in
call
mov
mov
adcb
pop
sub
cmpsl
inc
pop
jbe
cld    
xor
(bad)  {%k7}
call
imul
sti    
dec
adc
mov
and
cmpsb
int
jecxz
fidivr
jmp
loopne
push
and
pop
iret   
fwait
cwtl   
sbbl
add
data16 cmp
loopne
sarb
inc
push
xchg
scas
add
in
mov
xor
pop
jecxz
call
(bad)
pop
or
lds
sbb
mov
std    
mov
les
shll
xor
add
repz pop
mov
into   
std    
mov
inc
lock mov
addl
fcmovbe
out
mov
stos
cld    
dec
ja
add
test
mov
leave  
psrad
iret   
jo
shll
es int
(bad)  {%k7}
fcompl
mov
pop
adc
fisubr
xlat
sbb
xor
out
test
push
loope
push
mulb
cmpsl
lods
rolb
push
in
mov
(bad)  
(bad)  
xor
insb
pop
lods
ret
and
sub
pushf  
adc
inc
xorb
mov
mov
add
scas
das    
stc    
jb
jae
std    
mov
add
adc
push
cli    
bound
mov
xor
mov
and
adc
xchg
push
sbb
inc
inc
add
mov
push
nop
sbb
fwait
cs cli 
je
mov
dec
xorb
xor
por
mov
mov
lcall
mov
and
sub
or
or
jmp
sub
xchg
ds out
insb
clc    
ds data16 aam
scas
hlt    
inc
les
adc
or
and
dec
icebp  
sub
fwait
or
ja
iret   
jmp
inc
pop
test
test
cltd   
movsb
inc
jmp
test
stc    
dec
sub
stos
fmuls
daa    
xchg
nop
cmc    
add
sub
mov
cmpsb
pop
fnstsw
(bad)  
fsts
mov
mov
dec
add
icebp  
lcall
movl
cmp
stos
push
cs out
mov
jnp
adc
clc    
xchg
push
scas
ljmp
movl
leave  
sub
(bad)  
out
push
jg
inc
mov
inc
lcall
test
out
(bad)  
(bad)  
jns
cmp
mov
inc
incb
ljmp
and
sahf   
in
stc    
imul
jmp
rorb
mov
mov
adc
dec
push
movsb
jle
ret    
mov
(bad)  
mov
idivl
push
jle
and
out
jbe
popaw  
inc
mov
xchg
lods
(bad)  
nop
mov
dec
mov
mov
adc
(bad)  
mov
out
movsb
or
jl
xor
sub
icebp  
test
mov
leave  
aam
cmc    
mov
mov
or
dec
lahf   
cmc    
jns
scas
jbe
daa    
mov
icebp  
xor
insb
stos
fistp
out
sub
setb
orl
adc
popf   
sbb
or
or
(bad)  
cltd   
xchg
or
imul
sub
int
cltd   
and
out
mov
(bad)  
aaa    
fwait
mov
loop
ljmp
lcall
movsb
iret   
lcall
jnp
fwait
sbb
mov
mov
and
bound
rorb
arpl
test
fldl
outsl
sub
inc
dec
adc
cmp
cmp
xchg
test
stos
test
sub
sbb
mov
xchg
mov
fisubr
pop
push
jno
test
das    
imul
sub
call
mov
mov
popa   
test
mov
push
lea
jo
jp
iret   
lods
or
aas    
sti    
push
sub
fisub
sub
push
dec
adc
pusha  
jns
ja
lret   
or
xor
sub
imul
stos
push
pop
leave  
add
xlat
cmpsl
jmp
repnz mov
movsl
adc
jne
push
add
xchg
jbe
or
mov
cmp
lret
insb
in
popf   
stos
cs mov
jns
fildll
loopne
push
xor
mov
icebp  
nop
push
inc
pusha  
lcall
cs lret
fldt
jl
outsb
cmpsl
sub
or
mov
cmp
and
or
pop
je
lods
je,pt
cmpsl
aas    
jns
push
fwait
mov
rolb
outsb
int
or
imull
push
jbe
lods
mov
push
cmp
xchg
mov
or
jp
cli    
sub
push
sub
fcomps
dec
sub
sti    
out
push
jl
aam
hlt    
cltd   
and
lea
pop
test
inc
sub
mov
(bad)  
xor
test
pop
mov
out
(bad)  
fistl
stc    
rolb
stc    
(bad)  
icebp  
cmpb
fldl
outsl
sub
inc
dec
adc
lods
lods
inc
loope
fdivr
sub
adc
add
jns
jbe
lods
mov
ret
mov
pushf  
sbb
arpl
push
or
iret   
or
data16 movsb
and
xorb
(bad)  
notl
jl,pt
mov
push
lods
(bad)  
loope
repz xlat
iret   
push
mov
add
fdivs
cmp
sti    
push
pop
cli    
dec
adc
fwait
das    
cmp
mov
je
push
or
(bad)  
jmp
and
add
stos
dec
push
push
ljmp
inc
int3   
jg
jp
pop
mov
cmp
mov
outsl
jge
xchg
aaa    
es daa 
lods
bound
int
mov
jno
jae
jg
(bad)  
rorl
lret   
ss pop
mov
insb
pop
mov
out
or
sub
push
test
jle
or
arpl
ds pop
out
rol
incl
(bad)  
dec
fistpll
pop
cwtl   
fildl
jo
mov
fdivr
sti    
jns
out
mov
mov
xchg
mov
mov
in
or
not
sub
jge
mov
mov
fisttpll
push
(bad)
xorl
xchg
fcoml
cmp
orb
jle
add
or
mov
adc
inc
adc
imull
mov
(bad)
stc    
sarb
push
push
fadds
ljmp
(bad)  
mov
sbb
sbb
ja
cmp
addr16 sub
popl
inc
insl
leave  
call
push
xchg
mov
loop
sti    
cwtl   
jp
jp
cmpsb
in
fdiv
or
es int
call
mov
movb
mov
daa    
lret   
dec
inc
jb
add
adc
jg
aaa    
xor
pop
aaa    
adc
lods
sbb
sub
sbb
mov
jae
jge
mov
and
les
call
push
xchg
scas
add
inc
movzwl
sti    
call
std    
aas    
sub
outsl
test
lea
and
ret
sub
sbb
arpl
scas
in
xchg
out
mov
mov
out
and
sbb
and
inc
es or
mov
fdivrs
push
rorb
push
mov
lds
jne
movsb
iret   
xlat
sub
ja
xor
pop
aam
std    
xchg
add
or
cld    
ret
fwait
cli    
fisttpl
cld    
jp
sub
and
daa    
dec
fisubr
add
xlat
ret    
pop
push
test
mov
dec
sub
cmp
xchg
out
jns
adc
pop
sbb
loopne
fimull
out
adcl
mov
add
mov
jb
jae
fistpll
and
es pop
inc
sub
mov
mov
(bad)  
test
popa   
test
iret   
add
mov
sti    
mov
xor
push
fistpl
divl
jecxz
addr16 jo
jg
xor
pop
dec
dec
jge
mov
cwtl   
xlat
adc
out
push
(bad)  
jecxz
dec
call
lret
pop
xor
sub
imul
dec
add
jno
call
in
dec
nop
mov
add
subl
cwtl   
pop
ret
inc
mov
test
outsb
pushl
sti    
xchg
ds inc
sub
xchg
jg
dec
stc    
xchg
or
int3   
mov
jbe
mov
xor
(bad)  
mov
jns
dec
xchg
dec
push
lds
cmp
sub
addl
jnp
je
lods
and
jnp
push
sbb
je
popf   
arpl
pop
jns
movsb
out
dec
fwait
push
pop
mov
ficompl
fwait
iret   
outsl
nop
enter
sub
push
jne
push
adc
jl
arpl
mov
dec
inc
scas
mov
cmp
sbb
fstp
pop
imul
dec
mov
test
test
cld    
fldenv
push
mov
mov
sbb
iret   
rcrl
lds
inc
mov
push
fadds
ljmp
(bad)  
mov
shrb
lds
cmp
addr16 sub
popl
dec
jno
call
push
xchg
mov
loop
mov
aam
jp
cmpsb
in
add
dec
aas    
es int
push
jmp
push
sbb
sub
scas
inc
xchg
enter
xchg
cmc    
repnz pop
cmp
mov
pop
push
mov
and
inc
scas
fistp
js
into   
xchg
repz mov
fucompp 
(bad)  
scas
mov
push
sub
data16 jg
out
and
pop
sbb
fucomip
add
(bad)  
push
ret
int3   
mov
cmpsl
pop
and
(bad)  
test
imul
inc
sbb
lock
jae
sti    
xchg
ds out
insb
clc    
ds data16 aam
mov
pop
push
sbb
and
and
dec
icebp  
sub
fwait
or
lcall
dec
pop
int3   
sub
test
push
je
out
and
std    
cmp
out
mov
mov
sti    
pop
sub
dec
fmuls
cmp
cmp
test
push
outsb
sti    
mov
add
mov
xchg
in
imul
jbe
jae
test
outsl
jae
sub
js
das    
test
test
xor
mov
in
fucomi
(bad)  
inc
in
enter
sub
or
or
in
(bad)  
fxch
in
inc
cld    
jp
fstl
mov
cmpsl
mov
mov
out
data16 sbb
fidivr
mov
cld    
dec
ds jmp
test
adc
inc
sub
jl
jp
pop
mov
jmp
call
cli    
(bad)  
cmp
push
and
call
pop
mov
idivb
lea
popf   
sbb
arpl
lahf   
syscall 
push
sbb
sub
ds push
mov
or
out
out
mov
sub
subl
gs jp
fisub
xor
or
inc
insb
sub
out
(bad)  
jbe
imul
or
ljmp
iret   
call
out
cmc    
sahf   
(bad)  
sti    
in
mov
jp
or
xchg
jbe
lds
leave  
pop
(bad)  
movsb
inc
ja
mov
cld    
jecxz
adc
xorl
push
xor
sub
jge
movsb
aas    
dec
add
aam
dec
jle
mov
pop
push
shrd
push
(bad)  
jecxz
dec
idivl
adc
pop
and
jl
sub
pop
xor
lds
lea
xor
mov
sarl
(bad)  
in
fbld
add
clc    
lea
xor
call
in
push
push
add
cmp
leave  
test
in
dec
nop
mov
mov
shlb
or
rolb
adc
in
mov
and
pop
cmp
pop
cmp
mov
adc
jecxz
cmp
mov
stos
push
stc    
xor
cmc    
push
out
icebp  
xor
lret
adc
inc
sti    
push
sbb
popl
adc
outsb
push
mov
daa    
inc
push
ja
and
outsl
and
mov
and
jl
mov
mov
loop
(bad)  
in
lock fmul
mov
and
mov
inc
leave  
repnz mov
outsb
push
iret   
pop
dec
add
jle
jp
pop
sbb
jbe
ss aad
dec
ljmp
lret
mov
xor
dec
popf   
mov
clc    
outsl
and
jmp
(bad)  
jmp
and
outsl
and
sti    
adc
jb
les
fsubs
jge
scas
adc
add
jle
push
jbe
cmp
jg
dec
fisttpll
cmp
jl
inc
adc
addb
std    
add
clc    
jno
pusha  
mov
cmc    
test
out
add
push
ja
jbe
ss aad
dec
cs cmp
mov
jecxz
addr16 adc
xchg
pop
aad
mov
sub
xchg
pop
sub
jo,pn
jns
(bad)  
imul
je
push
ja
jbe
ss aad
dec
data16 insb
push
mov
mov
arpl
xor
pop
(bad)
mov
mov
fxtract 
stc    
mov
pop
scas
movsb
pop
xchg
out
(bad)  
jb
negl
push
xchg
xor
mov
(bad)  
mov
dec
fldl
aam
hlt    
popa   
test
add
scas
pop
sub
rcrb
lock pop
inc
jae
lea
adc
notl
inc
and
xor
pop
scas
xchg
mov
hlt    
stc    
imul
test
xor
cmp
pop
cmp
mov
sbb
jg
inc
push
sub
mov
addb
std    
add
jbe
cmc    
xlat
ds mov
sahf   
inc
stos
jnp
in
outsl
gs aam
cmp
roll
adc
sub
jl
in
cmp
xchg
js
jnp
mov
mov
jp
pop
mov
lock add
lea
adcl
push
je
dec
cmp
or
push
into   
mov
dec
(bad)  
into   
lret
lahf   
fcmovu
sbb
test
mov
dec
pcmpgtb
maxps
test
jge
adc
pop
mov
aaa    
cmp
pop
hlt    
adc
cltd   
jmp
xor
rcrl
fwait
xor
insb
jnp
nop
and
pop
aam
jg
lret   
sbbl
lea
pop
pmaxsw
add
jne
(bad)  
mov
and
repnz xlat
mov
mov
nop
stos
mov
fmuls
jbe
into   
pop
cmp
adcb
sahf   
jo
arpl
push
fchs   
jmp
dec
pop
mov
xchg
(bad)  
jg
dec
push
push
(bad)  
(bad)  
push
into   
add
loopne
adc
lea
mov
(bad)  
out
add
xchg
das    
or
es add
outsb
inc
lods
jmp
aas    
cmp
(bad)  
outsb
fistpl
sub
popf   
cld    
xchg
das    
or
es add
outsb
inc
lods
push
imul
ficom
out
int3   
fsts
shl
aaa    
test
loope
ss in
and
in
ja
aam
xchg
dec
pop
xchg
fs insl
adc
fxtract 
ja
(bad)
shlb
(bad)  
or
sub
lahf   
dec
pop
jns
mov
das    
dec
xchg
inc
cmpsl
sbb
mov
ja
add
cmp
push
or
or
mov
mov
cmp
pop
push
lock adcl
ret    
js
adc
mov
xorb
sbb
test
xchg
adc
add
mov
sub
xchg
push
stc    
ds clc 
into   
aam
mov
pop
and
jle
ds clc 
aas    
add
adc
leave  
stc    
inc
push
cmpsl
stos
xchg
cmp
add
shll
adc
inc
xchg
iret   
fcomip
mov
cmp
ret
movsl
dec
adc
nop
out
sbb
in
call
shrb
sti    
add
or
flds
jle
xor
inc
(bad)  
adc
jp
jbe
xchg
scas
mov
cwtl   
adc
movhps
dec
jns
scas
clc    
pop
inc
xchg
enter
ljmp
and
jb
cmp
pop
cmp
mov
int3   
fnstsw
ret
mov
arpl
adc
movlhps
xor
jp
movsb
cmp
or
les
pusha  
mov
stc    
test
jb
cmp
pop
cmp
mov
mov
jg
ret
test
xlat
ds mov
lret
(bad)  
mov
jno
mov
rolb
and
jp
push
jae
sub
add
jecxz
stos
bound
push
jns,pt
loope
push
orb
xor
push
xor
into   
xor
pusha  
stc    
jne
sub
add
aas    
ds dec
xlat
imul
xchg
iret   
mov
mov
mov
scas
(bad)  
aam
pop
jle
test
mov
inc
inc
xchg
fsts
imul
xor
(bad)  
(bad)  
loope
pmaxsw
dec
sub
aad
call
sarl
jmp
cli    
out
inc
xchg
and
enter
in
push
and
jg
cmp
in
scas
mov
andb
aam
adc
fnstcw
pop
test
pop
mov
jg
cld    
test
in
loop
push
jb
les
inc
bound
into   
pop
mov
mov
jno
(bad)  
iret   
ss inc
adc
pusha  
in
daa    
ret
add
cld    
add
gs
xor
jns
dec
push
dec
or
mov
add
mov
adc
pop
lds
inc
xchg
iret   
fdiv
stc    
pop
ds inc
fsubrs
fidivl
pushf  
push
adc
ret    
pop
jmp
rcrl
pop
js
pop
rolb
insl
jne
jnp
(bad)  
cmp
popa   
mov
cmpsl
inc
xchg
mov
push
enter
xor
jae
movb
gs sti 
xor
movhps
les
out
incl
aam
mov
sub
xor
out
mov
mov
adc
xchg
outsl
and
stc    
ds xchg
xchg
sub
jb
push
call
or
fcompp 
push
aaa    
data16 fstl
call
or
std    
pop
loope
rcrl
in
push
fcomi
mov
push
loopne
add
jp
inc
jecxz
icebp  
lods
(bad)  
pop
in
sub
dec
dec
jl
std    
pop
loope
rcll
pop
push
cli    
ja
xor
(bad)  {%k7}
fcomps
add
adc
mov
daa    
jno
aas    
pop
push
aas    
add
sub
xchg
insl
(bad)  
push
scas
push
loope
shll
ljmp
sarb
in
scas
push
fcoms
lret   
inc
xchg
mov
cmp
outsl
and
jp
popf   
xchg
sub
aas    
sti    
inc
mov
mov
icebp  
lret   
imul
cwtl   
fidivrl
stos
icebp  
adc
push
lahf   
pop
ret
mov
into   
sti    
dec
sub
fsubl
mov
sti    
out
flds
test
fisttpl
push
jecxz
(bad)  
ja
(bad)  
lret
insb
in
and
inc
sbb
add
sub
cmc    
xor
inc
cmpsl
inc
pop
add
jnp
test
mov
mov
pop
sbb
stos
div
cmc    
pop
ljmp
imul
adcb
js
fdivrp
sub
js
lea
or
mov
sub
insb
pop
es pop
xor
out
or
sub
add
pop
movsb
add
dec
fnsetpm(287 only) 
(bad)  
(bad)  
into   
cwtl   
in
sub
jecxz
inc
(bad)  
(bad)  {%k7}
into   
add
push
xchg
sub
scas
dec
cmp
sub
or
add
lock popf 
push
xchg
dec
mov
adc
fwait
lods
and
push
das    
pop
mov
mov
inc
es data16 cmp
add
and
icebp  
inc
push
fs adc
out
and
adc
mov
mov
movsb
jp
or
mov
xchg
pop
outsl
scas
jecxz
daa    
and
sbb
add
sbb
(bad)  
popa   
fdiv
xchg
clc    
fidivr
(bad)  
adc
idivb
lcall
dec
inc
ja
dec
cmp
lock pop
or
movsl
or
inc
stos
mov
sub
arpl
dec
and
jl
(bad)  
mov
loope
arpl
jb
pop
sbb
out
xchg
stos
int
mov
sub
mov
stc    
cmp
call
inc
xchg
adc
mov
and
cmp
popl
(bad)  
mov
add
sbb
outsl
insl
adc
stos
lret
pop
sti    
leave  
fadds
push
xchg
jp
int
push
or
bound
addr16 mov
decb
hlt    
push
movsl
lock loop
adc
or
test
sti    
sub
je
scas
jnp
mov
or
jmp
aaa    
mov
and
pop
imul
out
add
icebp  
(bad)  
xor
mov
arpl
mov
cmp
mov
mov
sarl
sub
int3   
add
mov
popa   
lods
dec
cltd   
fmuls
fnstsw
(bad)  
mov
movsb
mov
sbb
mov
xchg
jbe
and
cwtl   
xor
rcll
pop
outsl
sub
pop
mov
push
and
pushl
cwtl   
sub
mov
cli    
outsl
xor
xor
(bad)  
sbb
and
xchg
sub
fild
outsl
adcb
out
(bad)  
ljmp
mov
jb
lods
inc
cld    
jle
pop
out
hlt    
lods
ss cwtl 
clc    
adc
inc
sub
(bad)  
in
mov
mov
jmp
pop
mov
ret    
jg
xlat
mov
fiaddl
jmp
loopne
sbb
or
aaa    
hlt    
loopne
(bad)  
hlt    
xor
cmp
ret
shl
aaa    
test
xor
mov
jp
cmp
nop
xor
inc
hlt    
jmp
pusha  
into   
icebp  
mov
mov
add
fsubr
push
(bad)  
pop
jb
jne
mov
add
dec
out
leave  
or
bound
les
or
push
mov
call
pop
sbbl
jecxz
inc
(bad)  
mov
(bad)  
lods
pop
dec
ljmp
(bad)  
int
lea
inc
dec
into   
sarl
dec
lea
repnz addr16 mov
movsb
adc
sub
or
lahf   
add
dec
test
punpcklbw
into   
cmp
cmp
inc
fmull
mov
mov
addl
inc
and
jl
cmpsl
push
test
insb
int
mov
fwait
pop
or
jl
push
call
pop
data16 fadd
jmp
pop
out
(bad)  
push
cmp
mov
mov
mov
add
pop
sub
lea
ja
xchg
mov
xchg
in
jg
push
jb
dec
fxtract 
insb
int
test
movsl
iret   
xchg
adc
mov
mov
mov
movsl
iret   
xchg
adc
xor
jb
mov
xor
pushf  
xchg
in
lods
cmp
pop
lods
shrl
bound
or
xlat
jbe
push
pop
mov
insb
fstpl
push
xchg
sti    
imul
pushl
xchg
xchg
rcrl
aad
push
popa   
or
add
pop
mov
cmpsl
pop
lock adc
stos
mov
sub
call
ret    
or
dec
xchg
sub
sub
icebp  
jp
mov
xchg
sub
and
inc
lock movl
adc
inc
in
xchg
xchg
pop
hlt    
adc
jb
fldcw
sub
repnz popa 
mov
dec
mov
fildl
pusha  
fwait
(bad)  
mov
mulb
outsl
loopne
mov
test
outsl
sub
pop
fadds
jl
pop
sub
into   
arpl
out
sub
pop
mov
lahf   
dec
sub
divl
stc    
cltd   
dec
mov
xlat
inc
dec
mov
mov
dec
jp
jns
rorb
rorl
pop
mov
mov
es test
movsl
iret   
xchg
adc
xor
xor
jmp
push
or
fnstsw
inc
sub
xor
jno
inc
dec
imul
xor
xchg
lea
mov
les
les
cmp
inc
popa   
cmp
sbb
xchg
std    
xor
sub
int3   
call
ljmp
mov
popa   
test
or
inc
ja
stos
sub
or
lcall
xchg
das    
sbb
hlt    
xor
int
add
icebp  
and
pop
(bad)  
ds pop
jecxz
jbe
arpl
repnz rcll
addr16
mov
push
into   
xchg
(bad)  
mov
enter
or
add
dec
mov
dec
leave  
fstp
in
ljmp
in
ret    
pushf  
(bad)  
xor
nop
push
adc
push
adc
dec
fs mov
push
cmpsb
mov
pop
aad
or
jb
inc
push
into   
ret
mov
xchg
popa   
mov
fwait
ljmp
mov
jno
stos
cmp
sbbl
icebp  
push
pop
sti    
xchg
inc
xlat
pop
daa    
fnstsw
aaa    
jbe
xor
xchg
dec
test
push
jnp
insl
decb
or
jo
inc
fldt
xor
add
pusha  
fnstenv
or
cmpsb
add
test
sbb
xor
inc
int3   
push
loopne
hlt    
xchg
xlat
push
mov
sbb
xchg
push
xor
mov
inc
mov
xor
(bad)  
mov
adc
push
popa   
push
push
pop
push
scas
xor
dec
gs or
(bad)  
imul
lahf   
fwait
movaps
(bad)  
imul
das    
dec
xchg
xor
pop
add
pushf  
orb
cmp
dec
or
xchg
mov
mov
ret    
fidivrl
pop
loope
jne
loopne
shll
lods
pop
inc
mov
out
mov
inc
sbb
mov
push
inc
pusha  
pminub
jle
enter
mov
sbb
clc    
cwtl   
and
jno,pt
out
pushf  
or
repz xchg
mov
(bad)  
into   
loope
add
movsb
mov
arpl
mov
push
(bad)  
mov
std    
(bad)  
imul
lock orb
and
jl
in
fsubs
idivb
push
fcmovu
pushf  
fdivr
lods
(bad)  
mov
sti    
pop
cld    
lods
jb
inc
arpl
in
jne
and
push
add
lods
or
mov
or
into   
in
rclb
or
adc
and
std    
imul
or
xlat
movsb
std    
xor
outsl
mov
xchg
in
lods
cmp
sbb
jno
imul
fwait
wrmsr  
dec
rol
enter
jo
mov
mov
cmp
test
mov
push
jb
mov
pop
mov
pop
test
inc
and
jl
adc
mov
and
aas    
sti    
push
stos
(bad)  
stc    
push
cmp
pop
lock js
pop
out
dec
jbe
cmc    
jg
push
mov
inc
mov
push
les
pop
loop
scas
xor
(bad)  
jmp
pop
lret   
pop
mov
(bad)  
out
leave  
ud2    
cmp
gs dec
mov
inc
cmp
push
fs mov
shrl
aam
jbe
adc
mov
xchg
xchg
xor
jbe
das    
les
or
scas
aad
fnsave
sbb
inc
xlat
add
and
ds sub
add
lods
imul
push
jmp
dec
ret
bound
push
add
mov
(bad)  
repz adc
push
and
decl
into   
scas
pop
sub
in
pop
nop
imul
mov
nop
or
lahf   
sub
repz in
jg
sbb
sti    
mov
jge
mov
or
test
dec
pop
or
loop
jne
and
pusha  
mov
dec
add
or
mov
sub
mov
push
enter
in
inc
ljmp
(bad)  
xor
lods
out
divb
dec
popf   
jae
je
adc
out
scas
pop
imul
jnp
aad
icebp  
(bad)  
and
inc
push
and
cmp
push
and
cltd   
jne
loopne
jmp
js
int
push
and
cmp
in
(bad)  
test
fbld
xchg
xchg
push
jno
push
adc
out
insb
rorb
std    
(bad)  
js
sbb
jl
push
add
inc
sti    
or
dec
xchg
outsb
push
cltd   
add
cmp
hlt    
push
test
push
dec
xor
sti    
call
sarb
out
xor
jns
mov
arpl
push
mov
xchg
inc
push
sub
pop
cmpb
das    
sub
(bad)  
ss lret
in
je
push
and
xchg
out
mov
ret
mov
xchg
or
(bad)
movsl
push
std    
xchg
out
lock inc
fisubrl
repz leave 
fdivrl
(bad)  
call
test
addr16 push
fdivs
lods
rol
sbb
add
sub
xchg
pusha  
fwait
out
and
inc
mov
stos
dec
mov
xlat
sahf   
ror
push
or
mov
mov
xor
lds
out
(bad)  
repnz rep stos
icebp  
in
lret
cmp
xor
fdivrp
in
clc    
pop
test
mov
stos
adc
cmpl
outsb
jb
dec
mov
dec
push
mov
leave  
psrad
jp
jp
dec
cmp
mov
mov
in
push
or
inc
ret    
lahf   
push
add
mov
mov
ss rorb
loopne
mov
pop
mov
mov
lea
or
dec
fadd
inc
mov
push
pop
lret
inc
mov
mov
adc
xchg
jbe
(bad)  
cli    
loope
mov
incb
stos
rcl
pop
dec
(bad)  
cmpsl
dec
xchg
inc
inc
jbe
mov
insl
aaa    
xor
add
insl
vminss
inc
jbe
imul
arpl
sbb
popw
movsl
aad
ja
inc
arpl
mov
vaddps
iret   
lds
jg
jp
bound
movsb
adc
sti    
xchg
es
insb
leave  
pop
sbb
add
sbb
loop
dec
mov
das    
sub
(bad)  
repz mov
cmpsl
or
test
jle
bound
cmp
jns
push
jmp
into   
leave  
bound
scas
xor
fild
movsl
jo
mov
(bad)  
repz inc
ret
pop
das    
and
mov
iret   
sub
adc
mov
xor
mov
popf   
push
mov
(bad)  
jo
(bad)  
insl
adc
lret
fisttpll
(bad)  
stc    
pop
sub
in
push
daa    
push
xor
mov
mov
jbe
ja
and
sub
adc
xchg
aad
enter
mov
push
rorb
rcll
and
xor
push
test
inc
jg
fptan  
mov
inc
add
cs cmp
and
lods
sbbl
fdivrl
iret   
jo
xchg
sti    
shlb
push
imul
jp
addr16 dec
sub
mov
ficomp
cmpsl
pop
dec
cmp
jmp
(bad)  
lods
in
(bad)  {%k7}
rcl
or
jns
stos
mov
es in
mov
mov
in
stos
popf   
mov
pop
jp
(bad)  
int
idivb
lods
in
ret
iret   
sub
inc
popa   
les
bound
stos
cmp
(bad)  
out
push
inc
lods
pop
pop
data16 fdivrl
ds pop
out
rol
stos
cmp
mov
mov
fisttpll
call
std    
xchg
in
or
aaa    
adc
or
xchg
dec
out
inc
or
test
daa    
lret   
add
ret
jb
fidivr
xchg
out
inc
inc
loopne
dec
add
mov
mov
sub
cmp
leave  
es mov
call
and
jne
mov
data16
xor
icebp  
add
(bad)  
jge
(bad)  
fisttpll
sub
fmull
jae
cmc    
mov
mov
add
movsw
ret    
ret
adc
shrl
je
cli    
cld    
xor
mov
mov
loop
xchg
out
fs nop
roll
xchg
xchg
sub
xchg
les
sbb
xchg
stc    
fiaddl
xchg
mov
push
push
mov
arpl
ret
jb
dec
pushf  
jle
bt
std    
and
jne
cld    
inc
fucomi
sarb
orl
or
lahf   
dec
pop
jns
mov
out
stos
mov
inc
adc
jo
je
call
adc
bound
cmp
inc
scas
mov
mov
lret
jae
loop
sub
adc
in
hlt    
xor
arpl
mov
das    
sarl
lret
adc
push
push
dec
and
jl
ret    
mov
push
orb
lahf   
jge
adc
outsl
pop
xchg
mov
and
divl
or
jo
popa   
dec
sub
or
inc
pop
(bad)  
sbb
imul
shl
mov
inc
pop
ret    
push
adc
lret
jle
mov
lods
xchg
(bad)
bound
inc
push
sub
and
xor
scas
pusha  
pop
and
mov
xchg
fdivrl
lcall
lcall
dec
dec
shrb
xchg
mov
loope
push
std    
movhps
nop
inc
push
lret
mov
enter
leave  
cmp
clc    
int
dec
cmp
sbb
jb
adc
xor
pop
cmpsb
adc
icebp  
push
mov
notb
das    
mov
pop
pop
out
sahf   
push
xor
ss xor
in
(bad)  
cmp
stos
movl
int3   
cmpsb
roll
arpl
jnp
xchg
pushf  
clc    
pop
mov
sub
jge
push
dec
les
pop
movsb
cwtl   
sub
rol
and
push
loope
mov
xchg
fsubrl
test
insb
aaa    
fsub
pop
push
dec
movsb
lds
out
subb
adc
ljmp
bnd jo
push
jb
ret    
push
loopne
out
loopne
rclb
jno
pusha  
mov
cs mov
push
mov
mov
mov
test
mov
mov
mov
fptan  
mov
jb
stc    
mov
push
test
repnz push
xor
sti    
cli    
int3   
inc
mov
xchg
pop
fbld
xor
jbe
pusha  
dec
cmp
lahf   
mulb
sub
(bad)  
push
add
add
pop
cmpsb
mov
mov
jno
sub
in
pop
jns
mov
data16 xor
cmpb
mov
inc
fldcw
out
xor
xor
cli    
sbb
inc
push
dec
cmp
inc
bnd js
(bad)  
rorl
dec
or
aaa    
test
jecxz
jb
inc
gs mov
jp
test
mov
push
int3   
ret    
rcll
aaa    
or
aas    
std    
mov
int
repnz cmp
stos
cmpl
lock xchg
xchg
int
pushf  
fwait
pop
sbb
sub
push
jmp
mov
add
xor
pop
push
rcll
mov
and
js
jmp
pop
and
cmp
mov
stos
xorl
and
mov
inc
mov
pop
repnz mov
sbb
dec
imul
xchg
aad
fptan  
movsl
lods
push
push
test
insb
test
xchg
push
ss jo
push
xor
add
fldt
pop
sbb
mov
mov
jecxz
out
add
imul
or
in
cmc    
pop
sub
repz subl
inc
mov
add
jb
fimul
mov
cmp
ljmp
(bad)  
psubq
out
add
inc
cld    
mov
loop
sti    
mov
mov
inc
popf   
jne
mov
scas
sub
cmp
aas    
int3   
loopne
dec
in
xchg
fmuls
push
mov
test
sbb
rcrl
mov
dec
in
push
loop
jb
dec
out
push
dec
jecxz
sub
and
inc
mov
out
xor
movsl
adc
sbb
mov
(bad)  
imul
xlat
out
sub
mov
push
(bad)  
sub
iret   
dec
push
(bad)  
test
adc
and
shll
ja
jbe
cs push
into   
jo
fwait
xchg
add
aad
arpl
mov
mov
add
scas
mov
out
test
jmp
xchg
push
ficompl
xor
das    
xchg
xchg
xchg
cltd   
repnz xor
cmpsl
or
sahf   
mov
pop
lea
jecxz
pop
jns
mov
xchg
and
call
and
mov
cmpsl
mov
or
imul
xchg
loop
push
push
in
inc
ret
in
pop
mov
jle
cs hlt 
jmp
sub
mov
lahf   
insb
sub
inc
jl,pt
mov
insb
lods
(bad)  
loope
repz xlat
iret   
push
mov
add
fdivs
ret
jg
lret
push
mov
push
insl
jne
jnp
(bad)  
enter
fsub
lods
cmc    
repz jae
aam
lret
mov
addr16 call
lea
mov
mov
mov
mov
fidivl
sub
std    
out
jge
sub
rorl
daa    
ret    
pop
and
xchg
es jecxz
je
and
adcb
mov
or
sub
test
adc
sub
std    
sub
test
test
inc
cmp
xor
mov
or
mov
and
push
outsb
pop
jae
std    
xchg
in
or
xor
mov
pop
cmp
mov
(bad)  
hlt    
(bad)  
pop
out
std    
cmp
les
js
jge
repnz adc
jnp
loop
test
fcomi
jbe
pop
clc    
push
add
repz add
sbb
call
jmp
lcall
pop
pop
sbb
xchg
dec
cmpsb
jbe
and
cmp
iretw  
iret   
mov
jl
add
push
popf   
push
iret   
ret
xor
(bad)  
lret
mov
test
insb
push
sahf   
sub
mov
mov
sub
subl
mov
pusha  
mov
sbb
jbe
jb
pop
and
push
sti    
cmp
mov
sub
fnstsw
dec
mov
push
lds
cmp
xor
add
push
dec
push
cmp
es stos
jle
cmp
jmp
pop
ljmp
ljmp
imul
outsl
jge
daa    
out
pop
add
movsl
adc
push
and
mul
(bad)  
push
or
xchg
adc
les
mov
loop
lock mov
dec
lods
cltd   
or
pop
and
sbb
sbb
pop
jns
mov
jbe
mov
push
movsb
imul
pop
jl
insl
jbe
mov
mov
rcr
jo
je
enter
test
rolb
mov
sub
mov
(bad)  
std    
mov
enter
movsb
cmp
insb
pop
mov
xchg
jns
jae
or
sub
push
popf   
gs mov
mov
lret   
mov
xor
stc    
or
outsb
dec
and
jl
fmull
pop
adc
sub
repz sub
mov
push
std    
inc
cli    
dec
xchg
add
ret
in
popf   
stos
pop
rcrl
and
ja
ja
and
mov
xchg
pop
and
mov
sub
and
jge
in
ds xchg
push
shll
call
pop
data16 jp
mov
pop
out
(bad)  
repnz popl
dec
daa    
ds mov
sbb
jno
xchg
ficompl
fwait
iret   
fwait
cwtl   
in
popa   
into   
add
call
adc
xchg
and
ret
mov
icebp  
jp
push
ja
push
stc    
xchg
mov
push
cmp
lock ret
jg
jp
scas
sarb
cmp
loop
xor
insb
lret   
arpl
jo
inc
fsubs
ss pushf 
scas
lock ficompl
int3   
mov
sub
ljmp
sbb
pop
int3   
loop
mov
mov
sarb
gs pop
dec
fimul
adc
cmp
sub
dec
inc
cmpsl
in
daa    
fmull
movsb
or
fldt
orl
mov
nop
out
mov
loop
cmp
jnp
jl
dec
inc
test
int
cld    
inc
push
push
sbb
adc
inc
sub
orl
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
pushf  
mov
std    
not
iret   
pushf  
add
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
mov
lock mov
and
pop
or
fbld
pusha  
push
cld    
sub
iret   
add
mov
(bad)  
mov
sub
test
dec
gs popa 
out
add
outsl
mov
mov
hlt    
das    
sub
test
out
insb
push
pop
aaa    
int
sub
jns
scas
jno
hlt    
xor
push
or
pop
and
out
sub
(bad)  
out
lods
jns
adc
bound
pop
xor
jg
dec
jge
mov
pop
fimull
or
(bad)  
jecxz
dec
call
loope
imul
insb
jbe
or
pop
fs xor
popf   
popf   
fnstcw
add
js
dec
fimull
outsl
into   
lods
or
lahf   
rolb
mov
mov
int3   
lods
sbb
lcall
xchg
inc
mov
push
xchg
mov
sbb
data16 int
xchg
add
cmp
rorb
test
into   
fwait
test
rorb
push
add
aaa    
negb
jae
movsl
(bad)  
dec
push
fnstenv
pop
aad
stos
cli    
cmp
mov
(bad)  
negl
loop
mov
mov
fwait
mov
gs enter
imul
inc
mov
adc
(bad)  
ljmp
nop
(bad)  
lret
dec
xor
push
mov
neg
pop
imul
sti    
mov
sub
lret   
ss in
xor
xor
leave  
repz push
push
leave  
mov
ret
jl
sub
scas
(bad)  
in
(bad)  
pushf  
cmp
in
ja
add
stos
sub
dec
cmp
cmpsl
daa    
pop
mov
adc
icebp  
mov
nop
pop
mov
or
push
xchg
scas
daa    
mov
movsb
lock testl
add
push
adc
add
push
inc
add
cmpsl
fdivs
xor
xchg
mov
push
je
sbb
adc
push
and
movsb
pop
add
jmp
xchg
xlat
jmp
idivl
mov
push
pop
xchg
jo
loop
call
dec
hlt    
mov
fstpl
test
push
sub
loope
cli    
cmove
fcomps
dec
pop
inc
lret
push
mov
scas
jbe
dec
adc
sbb
ret
add
mov
ficompl
jno
and
push
mov
inc
add
sbb
lea
inc
cmpsb
xlat
fwait
jnp
mov
int3   
add
push
(bad)  
lcall
mov
xor
mov
fstpl
(bad)  
pop
xor
outsb
mov
test
or
jmp
sub
stos
add
into   
fwait
jnp
test
mov
pop
into   
sub
dec
pop
jns
mov
mulb
push
test
sub
dec
mov
fnstenv
sbb
sti    
pop
cld    
lods
jb
inc
arpl
fldcw
orl
add
jl
xor
pop
pop
and
aaa    
mov
fistpl
icebp  
lock cmp
(bad)  
mov
aad
mov
fidiv
mov
push
lds
cmp
loope
gs cmp
inc
aam
hlt    
mov
fstpl
and
mov
mov
test
icebp  
das    
rorb
mov
and
sbb
arpl
mov
roll
sub
test
or
lahf   
lahf   
mov
inc
sbb
lock push
and
xchg
in
dec
cld    
jle
or
pop
lock mov
sub
sahf   
inc
hlt    
mov
movl
sub
and
lods
push
icebp  
pusha  
fcomps
(bad)  
mov
and
add
or
rolb
adc
in
mov
loop
stos
jnp
xlat
mov
loope
mov
aad
mov
and
insl
out
hlt    
popa   
popf   
mov
cs aam
data16 int3 
mov
cs
dec
mov
mov
sti    
push
pop
mov
or
pop
lea
push
pmaxsw
mov
mov
and
mov
int
dec
adc
push
adc
ljmp
stc    
ss stos
xor
sbb
push
mov
jge
push
jge
subl
push
out
les
jp
pop
loop
mov
or
adc
dec
cltd   
outsb
popf   
ja
std    
in
mov
arpl
dec
pop
inc
cmp
xor
dec
cmp
xchg
fadds
fwait
nop
xchg
inc
sub
mov
mov
push
jnp
xor
pop
movsl
or
inc
cmp
pop
adc
or
inc
les
clc    
add
xor
or
mov
push
std    
inc
cli    
dec
xchg
add
ret
in
popf   
roll
(bad)
add
ja
ja
daa    
inc
mov
add
mov
xor
inc
sbb
mov
dec
push
lds
cmp
das    
mov
mov
cmpsb
jmp
shrb
(bad)  
rcll
cmpsb
jmp
push
push
data16 hlt 
fistl
push
(bad)  
xchg
ret
pop
sbb
hlt    
cmc    
rdtsc  
jl
out
fwait
addr16
int
push
add
in
mov
inc
mov
aad
or
dec
push
lds
cmp
mov
cwtl   
out
mov
push
cmp
push
rorb
das    
xchg
fs xor
fwait
cwtl   
das    
loopne
jl
stos
lret   
ja
push
into   
mov
adc
pop
lock mul
xor
add
mov
test
xor
jb
push
mov
movl
mov
mov
mov
test
xorl
fisttpll
repz xor
xchg
(bad)  
jo
aad
mov
cmp
xorl
jle
mov
ficompl
test
sub
sbb
mov
adc
sbb
orb
mov
repnz cmp
popf   
(bad)  
xor
sub
cmp
mov
lods
or
and
or
dec
pop
pop
aam
jo
(bad)  
push
ja
jl
insb
inc
xchg
sarb
test
dec
stc    
cmp
sub
pop
insb
lret   
inc
psadbw
or
cmc    
std    
pop
xchg
dec
int
mov
lret
push
ds cld 
push
fildl
dec
inc
inc
lahf   
jbe
(bad)  
sub
mov
aam
test
fdivr
lea
mov
xor
mov
mov
dec
sbb
out
in
mov
mov
push
pop
xchg
sub
or
sti    
iret   
jmp
mov
and
or
mov
cmp
dec
mov
std    
sub
test
test
inc
cmp
push
and
mov
es loop
repnz sub
lock stos
pop
jmp
mov
fwait
iret   
fwait
test
addr16 or
push
lds
jnp
adc
pop
out
std    
cmp
pop
pop
(bad)  
fadds
das    
cmp
mov
leave  
add
cmp
lahf   
rcl
ss push
lock xor
aaa    
xor
pop
ss pop
or
bound
into   
dec
pop
fistpl
sti    
dec
cwtl   
inc
lahf   
sarb
in
pop
mov
jle
jb
xor
sub
mov
lock inc
dec
jo
in
(bad)  
cmpsb
cmpsl
adc
fidivr
js
dec
push
cmp
daa    
dec
mov
push
inc
sbb
or
hlt    
mov
fidivl
mov
addr16 pop
ret
jbe
in
pop
cmp
movsl
jle
inc
mov
lds
mov
xlat
test
lods
ret    
jne
sub
ret
outsl
or
loop
xchg
push
fninit 
cmp
inc
sub
ret
mov
and
aas    
add
adc
inc
mov
lods
nop
aas    
cltd   
adc
xor
inc
iret   
outsl
call
test
iret   
pop
add
iret   
jnp
xchg
in
jns
push
pop
aam
jl
aad
jmp
cmc    
dec
outsl
fdivl
mov
pop
pop
push
rclb
dec
out
cmp
or
mull
sbb
pop
movsl
cmp
or
sub
ja
jbe
sbb
mov
sub
mov
and
inc
dec
adc
pop
fnstenv
fsubrl
sti    
gs dec
ficompl
dec
decl
jp
pop
jns
loope
jne
(bad)  
int
repz cli 
inc
loopne
mov
std    
insl
jb
call
stos
shrl
jb
outsb
stos
lret
sbb
fildl
pop
icebp  
pop
ljmp
(bad)  
dec
add
mov
push
inc
or
popl
aam
add
push
mov
push
fdivs
cli    
mov
fwait
and
ja
stos
cwtl   
pop
sbb
pop
ljmp
xchg
mov
adc
out
pop
in
pop
xchg
xchg
jg
(bad)  
jae
or
out
add
add
pop
gs cmc 
xor
int
cs sbb
or
(bad)  
movsb
dec
iret   
lds
push
fistpl
leave  
cmp
dec
inc
je
ret    
jmp
out
adc
push
test
mull
roll
inc
mov
std    
pusha  
int3   
dec
stos
sahf   
iret   
cwtl   
and
or
add
jnp
or
ljmp
aam
sbb
pop
xor
movsb
insb
int3   
insl
sbb
aaa    
jl
fsubs
ds push
cmp
bt
mov
js,pn
jge
in
push
adc
sbb
mov
push
mov
push
cmpsb
fdivrl
cmpsb
inc
sbb
test
shll
in
aad
rcll
xlat
pop
lret   
dec
cmp
pop
and
and
jae
(bad)  
aaa    
(bad)  
dec
in
fs push
xor
mov
int3   
mov
lds
popa   
mov
cli    
stos
cmp
push
or
mov
add
jnp
out
jg
xor
jg
ljmp
lds
gs cs add
pop
stos
sarb
inc
xor
xor
jbe
jnp
push
xchg
movsl
mov
pop
lret   
bound
sub
sub
pop
(bad)  
push
sahf   
pop
fsubrl
xchg
out
pop
test
ret    
jg
dec
(bad)  
and
xor
sbb
psubd
or
jo
push
lea
jg
loopne
inc
jbe
test
mov
bound
pop
mov
lret
subl
test
fnstsw
cmp
push
rcr
mov
cmp
push
stc    
ss test
aas    
loop
psubsb
out
cli    
lcall
sub
inc
loope
scas
inc
push
fsubl
test
mov
sub
cld    
fs sub
decl
cmc    
das    
or
cs inc
(bad)  
das    
stos
iret   
pop
dec
add
sahf   
or
cmp
or
inc
daa    
ds addr16 clc 
imul
push
push
sti    
push
xchg
repnz sub
outsb
inc
lods
je
rol
xchg
out
push
jbe
or
add
pop
movsl
cmp
or
out
xor
loop
mov
add
movsb
insb
lret   
cmp
mov
mov
xorl
push
(bad)
mov
add
bound
and
adc
stos
jecxz
xor
xor
fsts
push
pusha  
mov
roll
outsb
out
stc    
mov
and
cmp
stos
insb
pop
je
shlb
jae
or
sub
push
popf   
jg
gs
enter
cmpsl
pop
xchg
pop
lock faddl
mov
dec
pop
cltd   
jne
imul
fcoml
out
stc    
std    
and
addr16 mov
cmpsl
out
add
(bad)
lds
push
(bad)  
or
cmp
(bad)  
pop
iret   
das    
pop
stc    
stos
inc
mov
jne
cmpsl
dec
imul
cwtl   
jno
xchg
ficompl
fwait
pop
lahf   
or
adc
out
and
fstpt
mov
jno
or
inc
push
(bad)  
(bad)  
test
adc
loope
std    
int3   
mov
mov
cmp
add
iret   
pop
iret   
fwait
test
addr16 or
mov
(bad)  
dec
ret    
xor
call
or
mov
lret
fadds
pushl
sbb
or
xchg
pop
data16 or
ds pop
out
(bad)  
repnz out
(bad)  
lods
push
fcomps
cmpsl
psllq
jnp
cmp
jb
fs aam
into   
mov
mov
add
xor
pusha  
int3   
jmp
mov
jmp
jmp
out
sub
or
call
and
mov
(bad)  
stos
push
mov
aam
push
xor
movsl
(bad)  
mov
mov
mov
mov
mov
sub
mov
mov
pop
outsl
sub
fbstp
cli    
or
lret
jb
in
cmp
fs in
xchg
aad
and
int3   
pop
and
scas
lods
sub
repz inc
(bad)  
not
inc
pop
jae
mov
hlt    
jno
inc
jbe
imul
in
inc
das    
fldl
aas    
out
mov
mov
pop
outsl
sub
mov
es paddsw
call
lcall
cmp
jo
push
rorb
sub
shl
mov
outsl
mov
cmc    
stos
jl
inc
lret   
movsl
stos
lret
in
stc    
sarb
pop
arpl
xchg
pop
imulb
sti    
int
pop
enterw
insl
adc
rol
out
cmp
clc    
xchg
flds
cmpsl
movsl
outsb
sar
mull
inc
es data16 cmp
ljmp
mov
fisttpll
lods
in
lods
test
sub
jge
mov
lods
(bad)  
sbb
push
add
add
(bad)  
mov
sub
je
fstp
stc    
in
roll
dec
pop
jns
mov
(bad)  
call
push
mov
xchg
xchg
das    
(bad)  
fisubrl
mov
(bad)  
fwait
(bad)  
jecxz
into   
test
popa   
inc
cld    
dec
leave  
fcompl
and
or
fdivr
jno
mov
fcoml
into   
(bad)  
hlt    
lods
inc
aaa    
fs cld 
xor
mov
out
pop
shrb
fxch
daa    
out
cmp
shll
ret
out
icebp  
mov
nop
daa    
lret   
jae
ds aas 
add
in
out
jg
xor
jg
popa   
hlt    
lahf   
inc
ficom
in
lods
or
push
repnz inc
xchg
jmp
mov
adc
sbb
dec
lret   
push
xor
jbe
pop
in
xor
popf   
inc
js
movl
pop
cmpsl
add
fsubr
dec
push
or
inc
std    
pusha  
int3   
cmp
sbbl
cmpsl
enter
push
lea
pop
sbb
popa   
test
mov
int
repnz bsr
push
pop
xor
adc
in
mov
xlat
(bad)  
lods
jbe
lods
les
in
push
fsubp
test
sub
dec
adc
pop
and
ret
jg
icebp  
nop
push
inc
dec
out
out
add
add
adc
add
pop
int
pop
sub
stos
(bad)  
fildll
in
push
fdivrl
cmpsb
inc
out
mov
cmp
mov
gs dec
je
sbb
ret
mov
mov
add
das    
or
in
ds leave 
and
xchg
test
mov
xchg
in
ds inc
ret    
dec
cld    
and
jp
pusha  
insl
data16 aam
push
in
std    
ljmp
in
push
int
inc
xor
test
loopne
mov
add
xchg
ja
aaa    
adc
inc
fstpl
outsb
sahf   
pop
fsubl
fadds
pusha  
jne
xor
mov
test
loope
imul
push
aas    
or
mov
or
(bad)  
loop
dec
xchg
lret
movsl
sbbl
addr16 xchg
ja
cmpsb
jmp
jnp
insb
or
jle
sub
mov
push
iret   
push
inc
loop
lret
popl
iret   
jae
sbb
stos
inc
inc
popf   
ret
cli    
je
xor
(bad)  
fdivs
sub
lock add
push
in
movsb
insb
iret   
leave  
mov
cmpsl
inc
sub
je
sbb
enter
mov
add
bound
std    
lds
push
dec
inc
and
jbe
xor
sub
(bad)  
cmpsb
inc
sbb
xchg
xor
inc
imul
dec
fstp
jnp
fisubrl
int
xor
mov
in
aaa    
das    
fwait
dec
in
sub
leave  
or
(bad)  
xor
(bad)  
ljmp
loopne
cmp
test
sbb
cmp
mov
addr16 xchg
ja
cmpsb
jmp
push
lods
ja
adc
dec
mov
out
pop
inc
cmp
or
adc
fcmovb
movl
mov
out
out
or
mov
adc
outsl
push
test
sbb
cmp
mov
addr16 xchg
ja
jbe
add
insl
or
mov
add
push
or
aaa    
xor
lea
mov
jp
pop
mov
or
push
sub
cmpsl
daa    
jg
lock pusha 
jp
sub
jg
or
or
sbb
mov
std    
lret
std    
jns
outsl
nop
call
pop
fnop   
hlt    
int3   
add
scas
add
adc
in
xor
sti    
call
or
out
cld    
(bad)  
jle
imul
out
sub
dec
jno
les
inc
mov
arpl
mov
xor
(bad)  
mov
fdivr
popf   
lock daa 
ret    
dec
and
jl
fidivr
daa    
aam
or
add
sub
in
mov
clc    
cmc    
pslld
inc
aad
dec
cmp
sahf   
xor
ret    
jb
mov
(bad)
xor
cltd   
inc
adc
std    
pusha  
int3   
jmp
sbb
popf   
push
icebp  
pop
rcll
inc
xor
mov
sahf   
pop
fmul
cltd   
push
mov
jae
in
int3   
push
xchg
fwait
repz scas
inc
lods
cwtl   
in
and
sub
(bad)  
xor
test
add
xor
sti    
call
mov
jb
bt
push
inc
or
add
mov
clc    
sbb
or
out
jg
pop
pop
jne
lea
sub
push
movsl
add
jno
(bad)  
imul
inc
fldcw
mov
dec
adc
ja
add
mov
fdivrl
bound
in
(bad)  
mov
jge
cmp
xchg
sub
pop
sub
stos
andb
jbe
std    
mov
sbb
jge
ds
aaa    
push
dec
push
cmpsb
andb
je
inc
enter
dec
and
mov
insl
jg
aaa    
or
jmp
leave  
xor
jle
xchg
cld    
inc
sub
lods
cmc    
inc
sbb
mov
ljmp
jl
cmp
ficoml
lods
jno
aam
dec
stos
lds
mov
and
and
jb
xchg
dec
sub
test
xor
cmc    
fimul
pop
sarl
mov
cmp
xor
pop
gs std 
scas
dec
mov
dec
mov
jb
xchg
pop
lret
stos
cmc    
rep insl
scas
cmp
or
out
xor
loop
mov
add
movsb
insb
lret   
cmp
call
mov
fwait
inc
lods
in
test
dec
mov
push
mov
inc
iret   
lahf   
aad
sbb
stc    
cmc    
inc
das    
jo
jmp
loop
mov
dec
imul
cmp
jae
and
or
pop
ds leave 
and
xchg
test
xor
and
inc
ret    
movsb
ds inc
mov
pusha  
push
nop
(bad)  
mov
push
ja
rcrb
sbb
cmp
test
jecxz
mov
sbb
inc
inc
ss and
imul
int
test
aaa    
sub
sarb
mov
jg
and
cmp
mulb
or
lock sub
jb
arpl
and
add
sub
mov
pusha  
stos
mov
fisubl
xor
(bad)  
dec
pop
test
add
mov
popl
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubrl
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
leave  
int3   
jp
out
(bad)  
(bad)  
out
add
pop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
icebp  
cmc    
push
jg
out
movsb
push
(bad)  
dec
rorb
(bad)  
add
loopne
pusha  
iret   
push
fsubs
adc
jae
lret
push
jg
scas
push
dec
int
pop
(bad)  
decl
jae
lret
push
jg
loop
out
cmp
mov
adc
dec
jnp
in
iret   
leave  
mov
adcl
cmp
outsl
jae
nop
xor
je
pop
lock fwait
cmc    
jp
or
jmp
aaa    
mov
(bad)  
lock xchg
out
dec
negb
inc
inc
inc
ror
push
fcoml
cwtl   
mov
inc
iret   
pop
push
cltd   
mov
pop
out
rol
inc
imul
jns
rorb
xchg
lock push
inc
imul
pop
and
adc
out
sub
or
ret
or
jno
call
es int
pop
sub
pop
mov
push
push
sbb
sti    
pop
cld    
lods
rolb
cmp
jb
add
jecxz
pop
iret   
test
sub
push
add
xor
cmp
cli    
in
ljmp
insl
mov
fwait
mov
inc
aam
mul
roll
repz repnz lcall
daa    
add
out
mov
pop
arpl
mov
xor
xchg
or
jno
call
es int
push
mov
pop
mov
stos
ret    
in
pop
mov
jle
fwait
cmpb
gs aaa 
pop
jle
sbb
out
pop
add
dec
jle
mov
xchg
adc
shrl
out
push
(bad)  
jecxz
dec
idivl
adc
push
gs jl
ja
xor
mov
test
lods
ret    
jne
lods
jae
out
or
loop
xchg
push
gs xor
nop
inc
sub
xor
mov
cmp
loop
push
cmp
hlt    
xor
std    
mov
sbb
inc
(bad)  
mov
xor
dec
push
sti    
sbb
ds
mov
cmp
(bad)
pop
mov
pop
fwait
test
shlb
mov
and
mov
out
xor
rolb
fcomps
mov
add
stc    
std    
xchg
sub
fwait
cmpsb
in
mov
lret
lret
adc
test
jecxz
pop
iret   
gs sahf 
xlat
mov
mov
xor
mov
ljmp
xchg
jb
dec
shll
dec
mov
and
cmp
test
mov
push
push
lods
hlt    
xor
std    
mov
dec
mov
(bad)  
shl
enter
ja
cmp
loope
mov
aaa    
inc
mov
iret   
fwait
test
push
es js
mov
lcall
sbb
inc
pop
ljmp
jle
add
cltd   
inc
(bad)  
std    
xchg
add
inc
jmp
mov
arpl
mov
mov
test
out
fidiv
or
sbb
in
mov
incb
test
cmp
popa   
out
dec
or
orl
lcall
adc
popf   
sbb
sti    
cmp
adc
jp
and
cmpsb
sub
int3   
mov
aaa    
in
cli    
test
xor
(bad)
(bad)  
xor
fstl
jns
rorb
das    
repz push
out
fsts
and
and
mov
fstpl
xchg
jo
mov
mov
or
jg
xor
std    
into   
pop
flds
or
fadd
repnz clc 
lods
pop
xor
cmp
mov
inc
sub
mov
push
push
out
clc    
orl
lret
lea
imul
repz sar
adc
into   
daa    
cmp
jmp
push
sub
pushf  
(bad)
pop
decl
mov
call
stos
dec
push
loop
es cmp
mov
pop
inc
lret
push
int3   
mov
and
push
out
pop
in
pop
adc
mov
outsl
and
cmp
icebp  
lea
push
pop
or
and
xor
(bad)  
nop
test
test
cmpsl
sahf   
fldcw
fistp
repz aam
js
mov
push
and
mov
inc
push
jl
adc
push
scas
dec
cmp
jb
in
pop
(bad)  
jno
or
adc
iret   
inc
inc
and
jnp
int
lret   
popa   
(bad)  
addr16 push
fdivr
(bad)  
pop
mov
push
sub
jnp
jl
loop
inc
or
outsl
sub
mul
pusha  
add
add
mov
shlb
hlt    
push
cld    
subl
xor
sti    
repnz bound
stos
jno
ljmp
xor
dec
lret   
lret   
add
or
lret   
fidivrl
jb
roll
(bad)  
add
into   
xchg
xor
(bad)  
inc
add
stc    
test
mov
dec
and
sbb
dec
add
and
cmp
push
sbb
out
insb
push
jnp
fdivl
fstpl
mov
xchg
push
cmpsl
popf   
mov
into   
popf   
mov
iret   
mov
or
cmp
scas
pop
pop
and
inc
ds mov
xor
inc
xor
mov
sti    
pop
cld    
lods
jo
aam
(bad)  
aaa    
pushf  
scas
lock add
adc
sti    
int
imul
popf   
std    
mov
fwait
xor
xor
pop
mov
decl
push
mov
lds
enter
aas    
mov
outsb
lock mov
rcl
xor
xor
pop
mov
decl
out
mov
lds
enter
aas    
repz dec
mov
shll
push
xchg
repz lret 
ja
(bad)  
adc
inc
pop
cwtl   
mov
sbb
cli    
add
or
fcoml
jns
shrb
push
call
es out
fmuls
shufps
pop
call
(bad)  
jo
adc
mov
loopne
aad
decl
mov
mov
inc
cmp
mov
push
push
xchg
mov
mov
jnp
push
sub
push
rol
(bad)  
jb
push
rol
ret    
aam
fsubs
je
jo
hlt    
push
push
adc
divb
decb
mov
ret    
or
dec
cltd   
fmuls
pcmpeqd
pop
call
xchg
xchg
test
lret
rcrb
or
cmp
adc
leave  
and
adc
adc
out
sub
pushl
loope
out
in
inc
iret   
mov
testl
test
cli    
push
cmp
or
mov
test
sub
sub
mov
xchg
jl
mov
(bad)  
mov
inc
sbb
jecxz
out
(bad)  
loop
leave  
out
pusha  
and
mov
cmc    
nop
or
push
shrb
mov
test
sub
rcl
test
and
sub
jo
imul
out
cwtl   
sub
add
jle
cmp
sub
fdivrp
push
(bad)  
outsl
push
fdivrs
inc
sar
ret    
in
roll
cwtl   
aam
lcall
dec
pop
sub
xor
xor
std    
and
lods
pushl
fdiv
pop
xor
les
xchg
mov
scas
dec
mov
mov
out
mov
es pusha 
fwait
(bad)  
xchg
rorb
stc    
mov
lret   
sbb
jnp
jl
test
xchg
inc
psrlw
xchg
bound
pop
test
mov
pop
movsb
mov
add
dec
xchg
rorb
xchg
scas
push
xchg
repnz pushf 
popa   
mov
inc
popf   
mov
lahf   
pop
fnsave
(bad)  
mov
fdivrp
into   
aam
mov
mov
js
rolb
jmp
mov
lods
cmp
cmpsl
inc
push
out
adcl
jecxz
pop
mov
pop
mov
test
pop
push
push
fwait
dec
or
adc
mov
and
out
shrb
(bad)  
mov
sti    
xor
lods
stc    
mov
xchg
sub
inc
sahf   
xor
repz ss or
sub
cmp
dec
loope
dec
dec
cwtl   
pop
addr16 xchg
inc
psrlw
xchg
bound
pop
test
mov
pop
movsb
mov
and
ret    
xor
pop
push
in
js
mov
jns
rorb
pop
clc    
push
dec
pop
jmp
push
int3   
imul
and
nop
aad
sti    
jge
cld    
pop
jecxz
jb
icebp  
negb
outsb
cmpsb
and
repnz inc
fistpl
xor
nop
movsl
outsb
jns
cmp
cmp
push
(bad)  
and
and
cmp
push
stos
mov
rcl
scas
mov
movsl
add
lods
pushl
fdiv
jl
stos
mov
xorb
je
cmp
in
jp
or
jmp
jg
aaa    
les
or
stc    
lea
shl
dec
outsb
push
mov
inc
jns
sti    
sub
aam
mov
mov
sahf   
push
jnp
jb
frstor
clc    
(bad)  
aaa    
repz
or
repz sub
mov
sub
popa   
psubw
pop
loope
push
ljmp
xor
pop
and
icebp  
or
cmp
lds
xchg
rorb
or
pop
(bad)  
and
sbb
push
sbb
xchg
push
push
stc    
lea
lret   
mov
mov
add
ret    
call
rorl
out
mov
leave  
inc
or
sub
cltd   
xchg
cld    
push
mov
mov
addb
(bad)  
pop
add
sub
jmp
inc
pmaddwd
push
pusha  
jp
rcrl
pop
jae
push
or
aas    
scas
xlat
mov
adc
fwait
and
mov
hlt    
pusha  
pushf  
jae
add
shrb
pop
jecxz
call
or
adc
jo
jl
mov
cli    
test
push
movsb
xor
or
push
popa   
xor
mov
pop
call
pop
xor
jns
fyl2x  
or
adcb
loop
aam
ja
xchg
stc    
stc    
lea
shl
fnsetpm(287 only) 
or
or
sub
jb
mov
gs call
push
xchg
jbe
verr
(bad)  
mov
inc
psubsw
addr16 xchg
inc
pmaddwd
push
pusha  
jp
rcrl
pop
sub
or
stos
pushf  
cmp
in
ja
xchg
imul
cmp
jge
mov
inc
(bad)  
mov
mov
add
scas
ss add
xorb
fadds
and
add
sbb
pop
jns
mov
pop
ret    
shrl
jge
jle
and
rorb
int
or
xor
subl
test
inc
in
mov
or
pop
pushaw 
jge
sub
pop
dec
jle
sbb
mov
leave  
add
push
out
adc
xchg
int3   
and
dec
mov
mov
add
scas
ret
xorl
push
lret
or
test
rorb
mov
lods
xlat
sarb
dec
inc
push
pop
sbb
call
adc
lcall
clc    
jno
mov
mov
nop
sub
inc
fidivr
out
xor
lahf   
nop
mov
stos
pop
(bad)  
dec
jnp
fdivl
or
pop
mov
jo
mov
jmp
bound
fwait
aad
push
into   
jns
sub
leave  
cmp
pushf  
repz xor
test
out
hlt    
cmp
xor
popa   
push
xor
adc
mov
(bad)  
stos
cmp
lock ret
cld    
lods
jb
jecxz,pn
(bad)  
fcmovnu
mov
sub
int3   
scas
je
lret   
test
sub
and
mov
pop
shll
mov
les
lods
(bad)  
mov
cmp
xchg
repz lret 
lahf   
into   
jnp
stos
dec
mov
or
jecxz
dec
ljmp
(bad)  
int
xor
addr16 inc
daa    
sub
in
pop
add
push
jecxz
mov
mov
push
adc
(bad)  
or
hlt    
push
in
lsl
lcall
xor
out
add
mov
cmp
fnstsw
(bad)  
imul
pop
jmp
cmp
sub
and
mov
add
push
adc
fs ljmp
shrl
mov
jns
addr16 push
movsb
xor
cmp
push
mov
jl
fcoml
pop
cmp
mov
pop
dec
ljmp
(bad)  
int
pop
stos
cmp
cmp
push
fptan  
popa   
mov
inc
arpl
pop
mov
inc
lods
jge
mov
fs add
les
inc
pop
and
sbb
hlt    
pop
ss inc
sbb
mov
jb
and
mov
ficompl
stc    
jns
jecxz
lods
shrl
push
pop
and
mov
lds
cmpsb
mov
mov
bound
pop
outsb
aas    
int3   
push
sldt
pop
jmp
jb
pop
dec
dec
add
jp
rorl
dec
jp
jns
std    
or
aam
sbb
add
jmp
mov
outsl
pop
mov
stc    
pop
mov
std    
stc    
mov
jo
ret    
push
mov
sbb
mov
inc
popf   
jp
dec
and
cli    
loopne
jns
and
jl
xchg
into   
adc
aaa    
mov
xchg
dec
mov
xlat
mov
xchg
mov
loop
int
scas
popf   
(bad)  
imul
sti    
mov
xlat
gs sbb
es in
fdivrl
inc
cmp
mov
lods
ljmp
sub
add
aad
jo
(bad)  
rorl
lea
popf   
sbb
arpl
dec
les
in
ds push
mov
lods
leave  
adc
arpl
jecxz
mov
jecxz
jns
pop
outsl
cmp
in
push
or
pushf  
jo
pusha  
std    
jne
mov
inc
xor
add
dec
mov
stc    
(bad)  
push
clc    
push
pop
jp
xlat
frstor
loop
hlt    
sbb
inc
stos
rcll
pop
pop
push
repz in
xor
cmp
ja
into   
pop
enter
das    
add
aam
cmpsb
in
xchg
add
ds in
ja
add
leave  
jbe
iret   
dec
cmp
mov
adc
lods
cmc    
inc
sbb
mov
xchg
mov
sub
imull
shl
out
setge
mov
cmp
cmpsb
in
fildll
mov
cwtl   
fldt
push
bound
std    
jno,pn
pop
dec
ljmp
(bad)  
int
mov
aaa    
popf   
roll
(bad)  
mov
xor
fwait
test
mov
das    
(bad)  {%k7}
(bad)  
cmp
or
outsl
(bad)  
fisttpl
push
(bad)  
jbe
out
sbb
mov
loope
(bad)  
(bad)  
sbb
and
jmp
inc
and
outsb
int
cld    
or
dec
sbb
sarl
das    
les
out
mov
inc
shll
ss mov
rcr
test
std    
flds
or
js
pop
xchg
xchg
cmp
call
and
popf   
mov
mov
out
mov
push
les
push
mov
mov
jbe
out
and
js
sbb
jbe
fstp
stc    
int
mov
cmp
fidiv
inc
sbb
stos
ljmp
stc    
dec
xchg
iret   
inc
call
(bad)  
das    
test
xchg
inc
pop
(bad)  
jmp
or
flds
dec
mov
pop
data16 mov
shrb
out
mov
fsubrs
mov
imulb
sti    
lea
inc
fcoml
xor
and
pop
stos
xor
shrd
mov
dec
(bad)  
push
inc
push
lds
test
mov
(bad)  
mov
repz xor
jno
xchg
ficompl
test
ret
test
cmp
movsb
add
ret    
or
cmc    
daa    
por
lds
and
leave  
mov
xor
mov
or
add
lds
shll
icebp  
je
shrl
frstor
aam
leave  
push
rclb
in
imul
dec
stc    
push
lcall
repnz cmp
add
sbb
andl
xchg
push
(bad)  
mov
push
push
dec
adc
xchg
sbb
and
adcl
fidiv
js
jb
loope
(bad)  
cmpsl
in
pop
js
repz enter
inc
jbe
inc
or
lret
mov
into   
jbe
int3   
pop
sar
sbb
ds lods
sub
mov
pushf  
clc    
pop
ret
inc
mov
dec
pop
mov
loopne
faddl
jbe
dec
(bad)  
cli    
fsubs
loop
roll
mov
jb
adc
mov
ds sbb
test
cld    
adc
adc
rorl
fadd
adc
hlt    
dec
and
fcomps
dec
enter
jge
imul
out
imulb
cmp
mov
fwait
or
xchg
add
adc
xor
and
jnp
sub
je
push
inc
into   
shll
in
popf   
mov
lret
jmp
lcall
daa    
or
outsb
pop
fcomps
or
jae
cmp
fcomps
dec
lock je,pt
std    
lods
mov
stos
adc
inc
pop
fwait
test
shlb
rorl
cltd   
jle
pop
jo
lahf   
(bad)  
hlt    
inc
leave  
pop
mov
push
sub
div
sbb
inc
jecxz
jns
je
mul
xadd
or
jmp
lods
push
pop
movsb
sub
test
jbe
push
test
xchg
adc
fmuls
cltd   
sub
cmpsl
loopne
jbe
mov
xchg
mov
sbb
data16 hlt 
flds
mov
mov
pop
adc
stos
insl
adc
imulb
je
push
fistpl
sub
jmp
xchg
or
adc
lods
and
and
into   
shrb
sbb
std    
cmc    
lahf   
xor
and
add
mov
in
mov
rorl
fmuls
cmp
xchg
std    
lock adc
lods
out
mul
lods
fmuls
jns
mov
lock fldt
jg
(bad)  
pop
movsb
pop
pop
jg
mov
mov
jae
inc
adc
bound
js
add
mov
into   
in
lcall
and
pop
add
test
xor
cmc    
pop
lret
loopne
adc
jns
add
in
scas
jo
jae
or
jb
mov
ret
xlat
push
fnstsw
dec
mov
mov
add
scas
lcall
test
dec
xchg
dec
cmpsb
rolb
pop
fwait
test
shlb
outsl
add
(bad)  
mov
lock jl
pop
mov
xchg
jecxz
lock nop
pop
mov
lock in
sahf   
aas    
stos
sub
mov
mov
(bad)  
or
jge
or
ret    
mov
das    
or
out
pop
out
imul
jo
mov
in
mov
pop
shl
xchg
inc
mov
fildl
ljmp
xor
jg
mov
lret
loop
rcrl
dec
fcompp 
int3   
loope
lds
jmp
out
cmpsl
and
data16 loop
ret
aaa    
xor
repnz aaa 
pop
call
sub
pop
movsb
leave  
es call
xchg
fisttpll
ja
adc
test
sti    
jl
lcall
xor
jbe
divl
mov
leave  
mov
aaa    
jbe
cmp
lds
mov
popa   
popf   
cmpsl
inc
pop
jbe
xor
test
scas
jbe
ret
cmp
mov
sysret 
xor
dec
cld    
(bad)  
push
cmp
inc
bound
mov
or
push
loop
inc
rolb
adc
push
ljmp
pushf  
rcl
pop
mov
lcall
inc
push
(bad)  
jecxz
cld    
scas
mov
or
in
jbe
or
fisttpll
jg
cmpsb
inc
sbb
jns
lret
shr
inc
pop
mov
push
cmp
inc
cmp
dec
clc    
dec
add
jmp
in
sbb
leave  
pop
and
jbe
cmp
sti    
push
pop
mov
mov
or
mov
push
(bad)
or
out
mov
cmpsl
les
pushf  
scas
mov
leave  
xor
pushf  
mov
popa   
sbb
inc
jecxz
push
jl
cmp
imul
add
fdivs
je
int3   
push
mov
xor
faddl
mov
bswap
adc
aas    
xor
jae
mov
xor
repnz lods
sti    
cmp
outsb
inc
pop
sub
lret
push
pop
xor
mov
shld
aam
mov
lds
into   
cmp
divb
lahf   
adcb
movsb
stc    
jb
jno
and
scas
dec
(bad)  
and
aam
mov
fdiv
or
out
sub
xlat
lret
pop
cmp
ss push
jl
inc
add
xchg
dec
pop
inc
lret
push
mov
ret
into   
jp
stos
push
lahf   
mov
cmp
iret   
mov
enter
mov
jbe
es jo
push
fldl
jnp
fsubr
mov
push
pop
ror
sbb
mov
sbb
cmp
mov
sub
iret   
fucompp 
icebp  
push
xlat
(bad)  
hlt    
in
lret   
fwait
push
sub
into   
nop
loope
and
sysret 
jnp
dec
(bad)  
jg
negb
add
jp
add
stc    
stos
pushf  
dec
jp
jb
cmp
out
sub
xlat
scas
loopne
mov
repnz mov
mov
loop
xorb
fdivs
pop
sti    
pop
int
pop
sbbl
push
popa   
sbb
mov
pop
(bad)  
mov
push
lcall
pop
push
lods
pop
sbb
mov
js
mov
sti    
xchg
ds out
mov
cmpsb
scas
add
inc
adc
xor
sbb
lea
cmpsl
das    
xchg
inc
push
or
push
dec
adc
test
loope
xor
insb
aam
pop
out
fisub
inc
bound
push
dec
ljmp
(bad)  
int
out
fstpl
hlt    
mov
adc
lcall
adc
mov
mov
ss scas
adcb
inc
ficoml
std    
fisub
in
pop
aas    
push
sbb
jb
scas
(bad)  
lods
out
ljmp
push
roll
push
push
aam
rcll
xorl
jo
sub
lock mov
clc    
mov
jl
and
add
pop
sahf   
out
jp
mov
cmpsl
add
cmpsl
add
popa   
adc
ret    
(bad)  
cli    
jg
outsb
xor
fsubrs
leave  
push
(bad)  
add
sub
dec
mov
adc
push
lock mov
std    
mov
push
insl
dec
addr16 out
push
dec
inc
jno
or
ja
adc
(bad)  
addr16 push
rcrb
prefetch
mov
cmp
out
subb
sub
mov
pop
cs mov
scas
movsb
and
jnp
cmp
lahf   
out
rolb
pop
daa    
orl
add
sub
adc
cltd   
sub
or
sub
imul
ret
push
leave  
cmc    
gs popa 
ror
adc
jnp
mov
aad
push
rorb
dec
rcrb
imul
pop
loop
ljmp
adc
or
add
in
mov
sub
add
cmp
sub
xchg
aam
dec
stos
lds
push
xchg
sub
ja
push
jmp
sub
hlt    
xchg
sbb
and
sub
pop
cmp
dec
repz push
xlat
xor
cwtl   
repz lret 
stos
cld    
(bad)  
outsl
and
outsl
orl
popa   
xchg
xor
or
addb
push
mov
jbe
sbb
pop
(bad)  
jne
es add
jle
js
mov
mov
das    
cmp
adc
ds mov
lahf   
sahf   
mov
sbb
mov
lods
addr16 in
sbb
cmp
xchg
mov
je
int3   
test
cwtl   
xor
(bad)  
pop
(bad)  
xor
add
lretw  
or
imulb
ds pop
out
rol
inc
adc
les
movsb
or
jecxz
shrl
dec
or
jl
jae
enter
add
outsl
icebp  
mov
rorl
add
xor
mov
les
inc
sub
movb
cwtl   
cmp
popl
mov
mov
jl
and
add
mov
sarl
rolb
cmp
loop
shrb
cmp
push
iret   
xchg
out
pop
fcoms
xorb
mov
jge
cmpsb
out
push
sti    
sbb
ds
mov
movl
xor
fistl
rcrl
fsubl
jl
xchg
sub
adc
xlat
mulb
out
fxch
xchg
xchg
lods
imul
cmpsb
into   
pushf  
and
push
mov
mov
xchg
push
mov
decl
cmc    
das    
or
cs inc
(bad)  
das    
stos
iret   
pop
dec
add
sahf   
or
sub
push
push
pop
cmp
mov
fsubrl
mov
out
fwait
dec
ljmp
and
test
cwtl   
ret    
dec
test
js
lcall
sub
inc
sub
push
iret   
sbbl
movsb
leave  
call
cld    
mov
xlat
cmpsl
xchg
xlat
inc
pop
test
fstp
cld    
mov
lods
nop
cmp
hlt    
pop
(bad)  
divb
mov
pop
stos
pmulhuw
sbb
ds popf 
(bad)  
mov
dec
push
shl
push
sti    
sbb
ds enter
xchg
daa    
fist
loopne
not
inc
pop
mov
inc
mov
mov
out
out
dec
subb
in
xor
icebp  
shlb
repz shrb
cmc    
mov
xchg
cmpsb
mov
mov
adc
and
adc
or
mov
inc
fmuls
xchg
sub
(bad)  
mov
(bad)  
jno
iret   
sub
pop
push
out
and
imul
jns
rolb
sbb
insl
sub
stos
mov
xchg
out
es ret 
not
(bad)  
testl
mov
inc
shr
and
and
xchg
xchg
xor
mov
sbb
lds
mov
addr16 push
xchg
sub
sub
(bad)  
je
xlat
inc
pop
mov
jae
adc
dec
(bad)  
addr16 or
mov
insl
icebp  
loop
xchg
int3   
je
iret   
add
(bad)  
js
insb
cmp
mov
(bad)  
cmp
fcoms
jb
inc
es iret 
ss pop
adc
sahf   
sub
test
mov
xchg
repz lea
jnp
xor
and
out
xor
jns
sub
icebp  
ljmp
adc
aaa    
or
stos
aam
jo
ss jae
out
sub
inc
mov
mov
inc
sub
test
xor
cmp
or
movsl
and
cltd   
repnz xor
aad
out
int
movsb
jmp
mov
add
dec
push
shrb
xchg
aaa    
cs mov
mov
push
jmp
sbb
add
fisttpll
pop
jp
jg
mov
jl
xlat
cmpsl
test
je
fimul
adc
xor
and
adc
sbb
aaa    
pop
mov
xchg
mov
pop
xlat
arpl
sti    
jns
or
add
or
mov
or
leave  
and
adc
push
int3   
leave  
test
xchg
out
adc
lea
mov
flds
cmp
out
sbb
fisttpll
mov
sbb
lds
testb
push
mov
dec
fiaddl
cmpsl
out
stc    
movsl
add
sbb
loope
shr
scas
add
bound
jge
notb
cmpsl
(bad)  
jb
jmp
insb
xor
imul
aam
mov
xchg
pop
pop
sbb
mov
(bad)  
dec
scas
xor
sbb
enter
(bad)  
fbld
pop
lods
shrl
jle
and
mov
mov
test
xchg
push
rorb
cmp
add
xchg
out
mov
mov
cmp
rcrl
fwait
imul
ljmp
fldcw
mov
(bad)  
inc
jbe
adc
pop
xor
push
xchg
sub
hlt    
test
mov
mov
arpl
scas
into   
dec
mov
pop
lods
shrl
mov
and
pop
mov
xor
sbb
mov
outsl
int
push
cmp
pop
jns
mov
in
and
test
jae
rorb
xor
jo
imul
and
insl
lds
inc
push
add
rcll
pop
xchg
xor
je
cmp
add
subl
add
dec
add
dec
iret   
iret   
mov
push
add
popl
lret   
(bad)  
dec
mov
repz cmp
out
push
lds
cmp
xor
add
push
mov
dec
cmpsl
in
cmpsb
mov
arpl
mov
rcrl
mov
xor
cmp
ljmp
push
imul
inc
mov
ficompl
fwait
iret   
xchg
xor
pop
and
push
sbb
xor
pop
das    
inc
flds
mov
sub
scas
or
in
push
movsb
or
cmpsl
or
push
adc
and
jge
imull
jnp
rorl
icebp  
ret
loopne
jmp
out
mov
lea
lahf   
xlat
sarb
scas
mov
jp
push
(bad)  
mov
cli    
mov
sub
sti    
arpl
pop
dec
pop
xchg
and
scas
movsl
or
pop
imul
mov
das    
inc
pop
and
mov
rcrl
(bad)  
jb
push
xor
(bad)
sub
cltd   
aaa    
inc
insl
dec
out
cli    
jp
xchg
sub
dec
jp
hlt    
adcb
xchg
add
jae
adc
repz jp
or
mov
orb
xor
mov
mov
shlb
mov
push
scas
popf   
js
loop
aaa    
(bad)  
mov
adc
pop
sub
jno
pusha  
mov
cs mov
nop
stos
ret
add
mov
das    
data16 int3 
inc
pop
daa    
(bad)  
test
mov
sub
sub
hlt    
xchg
into   
lds
cmp
mov
add
jb
xchg
pop
test
mov
add
pusha  
cmc    
fdivrl
outsb
mov
loope
push
test
out
(bad)  
je
and
lahf   
sahf   
mov
mov
data16 and
rclb
lea
cmp
std    
mov
in
adc
adc
fcoml
repz or
xor
jno
pop
movsl
lahf   
sahf   
add
push
xor
push
insl
or
push
enter
and
ret
push
pop
fidiv
jne
cmp
std    
inc
mov
outsl
push
dec
iret   
fs mov
fstpl
jmp
inc
add
sub
in
lods
xchg
xchg
mov
jecxz
jg
pop
das    
sahf   
adc
aaa    
sub
adc
int
pusha  
jp
cmp
dec
pop
cltd   
cmp
jno
xchg
ficompl
mov
xor
stc    
std    
mov
jmp
push
out
adc
aad
aas    
addl
pushf  
or
cmp
ds
cmpsb
mov
ret
push
stos
mov
repz pop
add
das    
cmp
cmp
or
pop
test
rcr
ss and
js
pop
adc
or
dec
fistpll
arpl
mov
sub
test
mov
adc
js
inc
test
adc
inc
pop
int3   
int
mov
xor
jl
imul
jge
or
pusha  
fimul
xor
jge
push
aaa    
add
jo
inc
and
aam
sbb
xor
xchg
loop
push
jecxz
outsl
pop
in
test
mov
xchg
(bad)  
clc    
faddl
dec
mov
pop
iret   
inc
xor
int3   
movsb
sub
xchg
push
push
xor
xor
leave  
dec
lea
push
int
sbb
out
add
sahf   
adc
pop
rclb
mov
test
and
cwtl   
xor
imul
push
(bad)  
lea
dec
(bad)  
in
dec
jbe
out
pop
lds
inc
mov
mov
dec
ficomp
xchg
jp
stos
les
scas
xchg
dec
xor
dec
xchg
daa    
mov
and
mov
daa    
punpcklbw
jne
mov
sub
inc
ret
fcmovnu
test
stc    
cli    
outsl
cli    
mov
jl
push
add
pop
xlat
mov
sbb
shrb
(bad)  
jno
mov
jo
sub
add
and
je
xor
(bad)  
nop
adc
and
xchg
inc
cmp
frstor
xor
stos
loope
cltd   
push
or
xchg
fisubr
push
mov
mov
(bad)  
ja
das    
or
popa   
lods
enter
or
adc
mov
push
jg
xchg
pop
and
or
xchg
xor
mov
addr16 sti 
push
mov
jb
cmpsb
jb
repnz pop
push
sub
mov
jnp
push
roll
sbb
imul
dec
mul
mov
cmpsl
xchg
scas
stc    
push
pop
mov
std    
stc    
push
push
lock mov
add
lahf   
(bad)  
lahf   
push
dec
ja
inc
sub
adc
sbb
mov
mov
mov
push
cmp
insb
pop
push
lods
sbb
and
sub
adc
xchg
(bad)  
push
xor
add
in
push
xor
mov
loop
mov
xor
inc
(bad)  
sub
std    
stos
xor
pop
mov
mov
fsubr
mov
test
push
fbstp
and
test
xor
imul
stc    
ss fs cltd 
(bad)  
rorl
mov
xor
int3   
lods
sbb
stc    
mov
mov
xchg
dec
out
mov
leave  
mov
add
mov
insb
add
test
jle
fcom
cmp
in
ss aad
mov
test
mov
outsb
pop
adc
sub
and
xchg
shr
sbb
xor
fwait
test
mov
in
scas
push
(bad)  
xor
cli    
mov
inc
sub
inc
mov
xor
cmpl
dec
pop
pop
jle
fs xchg
sbb
push
(bad)  
xchg
dec
xchg
in
add
ljmp
fdivrs
jg
scas
cmp
je
sub
mov
notl
in
lods
xchg
mov
add
xchg
jp
in
and
lock imul
test
sbb
(bad)  
rcll
aad
jp
addr16 inc
ret    
cltd   
lahf   
(bad)  
mov
bound
mov
mov
mov
lds
cmp
pop
fwait
test
daa    
daa    
inc
fldcw
test
int3   
jbe
mov
ss inc
push
fisttpl
jns
rorb
jl
xchg
aam
lahf   
lds
jg
movsb
xor
enter
and
cmp
xchg
cmp
stc    
ss fs cltd 
(bad)  
rorl
hlt    
popa   
test
add
scas
pop
and
dec
pop
jo
inc
cwtl   
addr16 or
out
mov
push
sbb
xchg
inc
and
cmp
fidivr
mov
pushf  
jmp
shl
(bad)  
lods
(bad)  
movsb
pop
push
fisubl
cmpsb
leave  
loop
ds and
dec
add
jno
sbb
mov
inc
daa    
out
hlt    
pop
inc
arpl
mov
inc
inc
(bad)  
das    
stos
iret   
pop
dec
jg
insb
sbb
iret   
mov
mov
push
test
mov
inc
push
mov
inc
or
test
es adc
add
mov
adc
popl
aam
daa    
cmp
push
or
xlat
ja
jecxz
push
lahf   
mov
push
(bad)  
xor
lcall
lea
lock std 
int3   
push
mov
in
cmp
out
subb
push
push
cmp
repz or
fwait
les
pushf  
jmp
shl
(bad)  
lods
(bad)  
movsb
xchg
and
cmpsb
leave  
loop
ds and
cmp
fwait
mov
xchg
mov
iret   
daa    
aaa    
shrb
(bad)  
shlb
test
push
and
inc
sub
fisub
daa    
(bad)  
mov
push
and
ret    
sahf   
repnz mov
sub
mov
insl
sub
(bad)  
ljmp
push
ret    
dec
add
xor
das    
cmp
cmp
aad
jle
rcll
sbb
jle
cmp
jmp
scas
into   
mov
out
(bad)  
jecxz
lods
sbb
dec
xor
sti    
loope
jmp
leave  
cmp
out
mov
mov
mov
inc
push
push
sti    
sub
std    
das    
stc    
out
enter
leave  
icebp  
in
fisubrl
jnp
mov
mov
fisub
mov
xor
imul
aas    
stos
mov
mov
outsl
out
lds
fwait
int3   
arpl
and
out
ror
cmp
and
lcall
dec
mov
mov
and
pop
icebp  
in
loop
scas
jle
cmp
pusha  
out
lret   
in
fdiv
lea
sbb
jge
lcall
inc
lea
adc
cltd   
imul
ficoml
cmp
fs pop
or
gs out
or
out
sub
lahf   
daa    
jnp
pop
jecxz
pop
pop
mov
hlt    
xor
mov
in
rol
xor
mov
inc
pop
push
js
xchg
ljmp
fimull
or
mov
test
mov
inc
pop
cmp
and
xchg
sbbl
outsb
cmp
je
out
out
jmp
int3   
cmpsl
outsb
shlb
rolb
dec
fcomi
adc
mov
(bad)  
mov
fbld
adc
mov
es cltd 
cmpsl
lods
jb
push
and
fldcw
orl
jbe
xchg
xor
lods
test
movsl
lock add
lahf   
(bad)  
lahf   
push
inc
outsb
xor
imul
jno
sbbl
mov
jb
inc
cmp
push
fimull
pop
rorl
mov
dec
lods
or
dec
push
lds
cmp
iret   
mov
enter
jae
cmp
fild
jns
mov
hlt    
mov
push
test
inc
iret   
or
add
cmc    
int
orl
push
mov
pop
lea
out
aaa    
dec
incb
insl
mov
in
cld    
in
xchg
jb
lods
jg
addr16 aas 
mov
add
pop
and
or
iret   
mov
or
or
cmpsl
xchg
pop
sub
insb
roll
xchg
or
pop
inc
(bad)  {%k7}
leave  
sub
sub
insl
inc
push
push
(bad)  
insb
lret   
cmp
(bad)  
clc    
pop
ret
jbe
xor
movsl
jle
inc
mov
in
out
insl
dec
xlat
faddl
jne
hlt    
sbb
and
outsl
or
loop
xchg
push
adc
lret   
nop
inc
sub
ret
les
xchg
sar
adc
add
mov
aas    
loop
mov
pop
dec
dec
ljmp
jbe
popa   
loop
xor
out
pop
dec
fdivs
inc
mov
mov
lret   
adc
(bad)  
bound
mov
dec
jle
mov
int3   
mov
or
(bad)  
jecxz
dec
idivl
adc
loop
sub
int
fisubrl
je
xchg
repz shrb
adc
and
mov
in
dec
nop
mov
mov
cwtl   
pop
aam
hlt    
popa   
test
add
das    
cmp
or
mov
mov
lods
lcall
lahf   
dec
sub
and
add
iret   
mov
or
loop
inc
sbb
jns
xchg
js
stos
movsl
add
inc
cmpsb
jbe
inc
dec
daa    
js,pt
jbe
popf   
mov
add
lock ret
mov
and
mov
sbb
mov
(bad)  
fwait
dec
jge
push
fprem  
xchg
push
cmp
verr
mov
test
testl
(bad)  
push
and
pop
in
xchg
inc
mov
test
mov
sub
rolb
fbstp
add
rcll
stos
stc    
sarb
in
inc
pop
lea
mov
xor
pop
or
leave  
out
dec
cld    
mov
arpl
in
inc
mov
adc
imul
enter
pop
jge
add
cld    
aas    
sti    
push
daa    
lret   
dec
dec
js
clc    
xor
fucomp
or
ret    
dec
push
int3   
pop
push
ljmp
pop
xor
inc
mov
aad
pop
and
xchg
jb
stc    
sbb
mov
jg
sar
push
jecxz
sub
sti    
dec
popf   
jo
ja
mov
addr16 pop
shrb
jecxz
xor
lock
int3   
mov
adc
or
sub
repz xchg
mov
out
movsl
pop
mov
sub
cmpl
sub
cmp
push
sub
sahf   
lods
scas
sbb
fcmovnbe
cwtl   
leave  
cmp
mov
mov
add
data16 lock
adc
insl
adc
roll
das    
xchg
inc
adc
fldcw
dec
mov
mov
hlt    
xchg
imul
shll
inc
int
jg
(bad)  
rcrl
aaa    
repnz pushf 
mov
fiadd
(bad)  
(bad)  
mulb
adc
mov
arpl
mov
roll
shlb
paddusw
je
inc
push
loope
sub
das    
test
pop
mov
shl
aaa    
test
xor
dec
push
xchg
mov
pop
ret    
rcl
stc    
xchg
in
and
and
jecxz
jg
pop
dec
pop
into   
mov
aaa    
sub
cltd   
push
imul
mov
xchg
adc
repnz out
mov
push
cmp
inc
scas
jle
inc
mov
pop
imulb
add
add
addr16
inc
int
jg
(bad)  
rol
adc
nop
push
pop
outsb
(bad)  
cmc    
loopne
mov
pop
and
cmp
sbb
fsub
test
ficompl
mov
es in
stc    
std    
mov
fsubrp
push
adc
mov
cmc    
and
ds
cmpsb
mov
in
rolb
mov
xor
inc
cwtl   
loope
add
inc
and
fdiv
int3   
add
scas
add
jo
pushf  
xor
sti    
call
sti    
test
cmpsb
lea
inc
(bad)  
arpl
mov
shrl
pop
adc
fldl
push
sub
bound
xor
fwait
cwtl   
in
aas    
pop
aam
cmpsb
loope
stos
xchg
stc    
std    
imul
pop
fidivr
in
mov
jae
add
fsubrl
pop
movsb
xor
xchg
cmpsb
in
hlt    
arpl
cmp
dec
push
gs sub
jne
fisttpll
out
outsb
(bad)  
mov
or
js
add
stos
and
cmp
out
test
pop
out
out
sub
xor
pop
loop
daa    
pop
cli    
cmp
fiaddl
mov
cmp
adc
xchg
sbb
(bad)
mov
push
fmull
movsb
xor
loope
imul
and
xchg
cmp
stc    
ss pusha 
fdivrl
jmp
pop
xor
add
mov
(bad)  
cmp
out
xchg
in
les
int3   
cwtl   
pop
or
mov
cld    
bound
xchg
in
mov
sub
divl
adc
jbe
rolb
jmp
call
push
addr16 pop
movsb
mov
not
sub
sub
(bad)  
xor
jb
data16 and
cmpsb
inc
jecxz
inc
mov
jbe
int
mov
lea
mov
adc
lods
cmc    
mov
lds
xchg
xchg
and
jl
mov
insb
jb
in
jg
mov
mov
cld    
lods
sarb
(bad)  
sarb
gs pop
data16 mov
adc
divb
and
push
or
(bad)  
fwait
into   
jecxz
push
xchg
sub
push
jo
adcb
andnps
dec
jge
test
mov
jl
pop
sbb
xor
cmc    
aas    
out
xchg
out
lods
aaa    
mov
fiadd
fs jbe
popa   
hlt    
push
cs add
xor
sbb
(bad)  
xor
pop
inc
aas    
or
rorb
aaa    
cmpsl
dec
sbb
dec
int3   
leave  
xor
xor
paddusb
pushf  
sub
sub
fsubs
ss jl
mov
pop
data16 add
les
ds pop
out
testb
dec
movsl
js
(bad)
cmp
mov
push
test
xchg
mov
pop
fidiv
aaa    
or
sub
sbb
dec
push
cmp
mov
add
pop
cltd   
and
dec
cld    
mov
lahf   
xor
sti    
fprem1 
imul
pusha  
fist
std    
add
push
fwait
test
mov
mul
jp
push
cwtl   
lret   
negl
fwait
iret   
outsl
nop
inc
sub
pushf  
aam
push
dec
test
insb
repz mov
arpl
mov
push
or
dec
mov
in
push
and
test
dec
stos
fsin   
mov
or
aam
(bad)  
mov
repnz dec
hlt    
xchg
mov
dec
sarb
sub
ucomiss
dec
lods
nop
push
cmpsb
xor
cld    
pop
lret
xchg
mov
loop
adcl
in
lret
fbld
push
sbb
xchg
mov
out
sbb
or
dec
(bad)
and
jp
(bad)  
ret    
iret   
and
idiv
in
mov
inc
jge
jo
xor
lock cmp
or
sub
cs push
je
push
(bad)  
negb
sbb
or
jg
cmp
jo
inc
inc
testl
cmp
cwtl   
neg
hlt    
iret   
pusha  
mov
xor
sahf   
fwait
cs sub
ljmp
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivrl
inc
mov
dec
aaa    
mov
mov
fdivl
or
mov
cmp
dec
fs mov
mov
push
push
fcoms
dec
pop
sbb
cmp
arpl
aam
add
in
testl
fmull
xlat
push
fs fadd
repz hlt 
sbb
inc
stos
rcll
ret
mov
aas    
cmovg
add
imul
das    
arpl
sbb
jmp
dec
nop
mov
lret
shrb
xchg
mov
mov
cwtl   
je
push
and
insl
pop
dec
(bad)  
hlt    
sbb
aas    
std    
mov
insl
popa   
repnz adc
sti    
xchg
ds out
fldenv
xor
sub
je
pop
cmpsl
lcall
jmp
aaa    
test
cmc    
data16 ss mov
je
leave  
inc
imul
cmc    
dec
int3   
push
fdivrl
inc
mov
js
movsb
mov
sbb
or
in
hlt    
xchg
repnz addr16 aas 
(bad)  
xor
test
loop
das    
test
cmc    
data16 in
pop
xor
adc
fdivr
mov
and
movsb
pop
int3   
pop
and
in
fistpl
adc
jmp
movsl
or
inc
idivl
fiaddl
out
ret    
jp
mov
mov
lds
jg
jp
stos
adc
mov
sarb
loope
fidiv
or
daa    
nop
movsl
mov
aaa    
sub
pop
mov
outsl
jge
daa    
ds mov
xlat
inc
pop
mov
pushf  
mul
outsl
nop
pslld
adc
mov
cmp
adc
jo
lods
fldl
and
stc    
test
sub
push
mov
addr16 or
sub
cmpsl
loop
icebp  
inc
iret   
dec
shrl
ss pusha 
xchg
sub
mov
out
lret
call
shrb
jae
fldl
cmp
aaa    
mov
mov
mov
inc
sti    
mov
or
push
inc
xor
repz mov
add
mov
xor
xor
mov
sub
xchg
mov
loop
mov
and
xchg
dec
in
mov
and
paddsb
and
stc    
test
clc    
jno
jmp
imul
jecxz
fnop   
push
(bad)  
mov
fs repz fwait
test
jl
bound
push
pop
ret
dec
ljmp
(bad)  
int
out
xchg
add
dec
(bad)  
int3   
and
psrad
and
je
dec
cmp
int
les
xchg
inc
(bad)  
clc    
ret
sbb
jns
bound
xor
dec
mov
sub
std    
xchg
sub
aaa    
(bad)  {%k7}
(bad)  
rorl
hlt    
popa   
test
mov
leave  
in
push
sbbb
xlat
andb
fidivrl
cltd   
test
lea
sub
sbb
jb
scas
and
shrl
aam
ret
adc
outsl
and
sti    
dec
adc
imul
lds
cmp
scas
jp
cwtl   
divb
arpl
push
cmp
jns
call
lret
pop
sbb
insb
(bad)  
mov
call
mov
push
dec
ljmp
call
lret
pop
cwtl   
fildl
dec
xchg
fsubr
cmp
fisttpll
pop
adc
push
or
lds
sbb
clc    
lret   
out
(bad)  
fxch
cmp
ret
loop
cmp
outsl
add
mov
data16 shlb
cmp
in
or
mov
out
push
push
ret
fdivrl
push
and
int3   
in
xor
(bad)
push
fmuls
push
and
int3   
in
push
ret    
xor
lret   
mov
xchg
inc
std    
jmp
out
push
jno
cmp
test
popa   
dec
xor
cmp
xchg
(bad)  
sbb
jns
jg
sti    
std    
push
mov
xorl
mov
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cwtd   
xchg
mov
mov
push
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
add
mov
sub
into   
ret
js
xchg
stc    
sub
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
in
hlt    
fiadd
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
(bad)  
cmp
ret
jle
sti    
repz jle
xchg
(bad)  
(bad)  
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
hlt    
add
ret
mov
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
cmc    
fdiv
mov
ljmp
xlat
(bad)  
or
loopne
(bad)  
repnz dec
mov
aaa    
sti    
push
push
or
popa   
or
std    
mov
sahf   
aaa    
dec
or
lds
fcoml
into   
(bad)  
hlt    
les
cmp
xor
mov
aaa    
dec
sti    
mov
sub
jae
adc
out
jl
and
bound
stc    
and
or
pop
or
push
bound
mov
xchg
push
in
push
fimull
daa    
jb
fldcw
aam
(bad)  
(bad)  
pop
or
mov
jbe
push
or
out
outsb
fidiv
pop
les
stos
stos
sarb
or
aas    
std    
mov
dec
push
repnz lret
(bad)  
fsts
mov
subb
sub
(bad)  
sbb
(bad)  
int3   
adc
dec
jb
bound
sbb
dec
ljmp
(bad)  
int
rcll
fildll
cmp
mov
es lahf 
gs mov
lods
add
mov
xchg
std    
ja
cmp
xchg
in
sbb
mov
add
fdivrl
in
pusha  
into   
(bad)  
(bad)  
mov
and
jns
inc
std    
cmc    
fwait
adc
lahf   
pop
mov
stc    
sti    
push
mov
mov
add
scas
ds cmp
cmpsl
mov
les
aam
int
mov
mov
pop
in
inc
xchg
test
cmp
rcl
mov
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
loop
push
int
addl
es pop
nop
stos
ret    
in
pop
mov
jle
mov
push
enter
pop
jle
sbb
imul
cmp
loope
lea
lahf   
sub
jge
rclb
ss xor
mov
cwtl   
pop
jp
leave  
sub
adc
das    
icebp  
pop
std    
mov
and
es lahf 
mov
jae
push
rorb
dec
cmpsl
insb
sub
flds
test
imul
and
aaa    
add
enter
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
(bad)  
mov
pop
inc
add
and
fwait
cwtl   
sub
xlat
and
in
(bad)  
(bad)  
neg
jle
iret   
pop
sub
lret   
sbb
sub
ret
mov
xlat
fstpt
add
ds sub
push
push
outsb
jp
inc
push
mov
cwtl   
and
iret   
dec
ds repz in
scas
rep stos
fwait
(bad)  
sub
cmc    
pop
push
push
(bad)  
bnd je
ret
add
mov
sub
sti    
inc
cmpsb
sbb
mov
xchg
jg
int
cld    
(bad)  
rcll
ja
sub
outsl
repz jo
movsb
and
jnp
jns
rorb
lea
insb
sub
fsts
and
sahf   
xchg
es and
mov
pop
jle
(bad)
das    
addr16 xchg
xchg
outsb
jo
and
sub
test
aam
xchg
in
(bad)  
dec
add
sub
lods
jns
je
or
aas    
std    
mov
jge
repnz lret
xchg
xchg
jnp
je
push
je
int3   
add
scas
add
adc
les
jecxz
pusha  
mov
add
(bad)  
adc
xor
sti    
call
insb
jmp
pusha  
leave  
sbb
or
iret   
fwait
xor
sbb
dec
inc
push
push
pop
ss jl
xchg
sub
roll
mov
out
pop
popf   
(bad)  
xchg
xchg
(bad)  
aam
(bad)  
mov
mov
xor
jmp
xchg
xchg
ds or
mov
(bad)  
lock xor
fimul
mov
(bad)  
popf   
ds adc
mov
fsubrl
lock push
loope
lcall
mov
xor
mov
inc
mov
dec
mov
push
scas
mov
cmp
rolb
adc
cwtl   
gs in
ret    
fsub
pop
dec
pop
ret    
andb
(bad)  
(bad)  
(bad)  
cmp
xlat
cwtl   
stos
lret
in
test
mov
out
xlat
(bad)  
pop
mov
(bad)  
out
xlat
xor
jp
bound
les
inc
jne,pn
loope
jle
push
mov
gs jecxz
sbb
in
adc
lret
(bad)  
xchg
xchg
inc
mov
arpl
rclb
cmpl
lret   
fsubrl
jae
sub
mov
or
jmp
aas    
or
fdivl
mov
and
repnz in
mov
mov
and
cld    
or
les
(bad)  
repz jns
xlat
cmpsl
mov
stos
mov
enter
adc
lea
insb
jb
inc
pop
inc
push
scas
xchg
xor
imul
imul
mov
stos
jbe
data16 jg
aaa    
mov
and
push
and
mov
nop
push
jl
(bad)  
imul
sbb
cmpsl
sub
arpl
mov
mov
hlt    
dec
lcall
in
inc
in
fs inc
sbb
mov
or
jb
jge
jbe
gs pop
adc
jno
mov
(bad)  
xor
and
inc
mov
inc
cs add
push
push
shl
aas    
pop
sub
jp
enter
out
dec
pop
xchg
xor
xor
and
cmpsl
fs pop
push
gs out
mov
mov
cmp
loopne
mov
or
lret   
enter
mov
pop
inc
xchg
test
mov
dec
and
mov
decl
ss xchg
mov
dec
pop
jns
sahf   
add
cli    
lods
ret
shlb
fimul
test
mov
faddl
cwtl   
jno
xchg
ficompl
test
cmp
mov
repz fcompl
sub
and
inc
iret   
imul
and
adc
inc
sub
xlat
iret   
fdiv
dec
inc
scas
xlat
iret   
fdiv
les
les
js
sub
lcall
fstpl
movsl
outsb
mov
xor
inc
es data16 cmp
push
out
adc
and
cmp
ljmp
xchg
sysret 
mov
scas
dec
jne
fcomps
sahf   
inc
add
dec
in
mov
push
jle
push
sub
rolb
jo
out
mov
xlat
arpl
loope
cltd   
test
push
push
dec
in
xorl
adc
xchg
pop
jmp
pop
pop
sbb
inc
or
cmp
data16 mov
cltd   
cmp
pusha  
sbb
in
and
(bad)  
std    
(bad)  
mov
push
or
out
fsubrl
add
sbb
dec
pop
jns
mov
dec
and
stos
add
sub
leave  
cld    
imul
(bad)  {%k7}
fnstsw
icebp  
scas
lahf   
clc    
mov
call
or
cmp
jmp
mov
cmpsb
and
add
pop
bound
stc    
pop
sbb
sub
ljmp
mov
stos
ss
int3   
xor
pop
decl
outsb
insl
and
inc
sub
and
inc
xchg
les
divl
and
ja
in
mov
outsl
mov
cmp
(bad)
xchg
dec
push
jns
repnz or
xor
inc
xchg
call
iret   
cmp
iret   
in
pop
aad
push
xor
outsb
in
sbb
jb
mov
(bad)  
das    
pusha  
(bad)  
mov
fisubrl
add
sub
fwait
test
dec
jae
arpl
js
adc
mov
fstl
and
and
jno
sbb
fs
cmp
aaa    
fwait
xor
out
cmp
jno
pop
inc
dec
push
pop
push
pushl
das    
pusha  
cmp
jecxz
dec
sbb
mov
jne
addr16 pop
adc
jae
mov
xlat
iret   
adc
pop
jb
divl
daa    
(bad)  
cmp
popa   
movsb
out
ljmp
ret    
ljmp
ss
xor
ficompl
xor
inc
es data16 cmp
push
roll
cld    
icebp  
xchg
mov
sub
xchg
insl
aad
iret   
or
dec
inc
mov
mov
out
pop
fwait
xor
lahf   
add
in
call
sti    
(bad)  
xlat
mov
xchg
mov
(bad)  
or
cmp
pop
(bad)  
fnsave
inc
pop
fwait
xor
mov
popa   
mov
xchg
rcr
bound
icebp  
(bad)  
cmp
xchg
shrb
inc
lret   
xchg
sub
ss addr16 push
jmp
movsb
cltd   
or
daa    
sahf   
dec
idivb
jns
rorb
lods
cs insb
sub
sarl
xlat
cmpsl
push
jns
leave  
out
scas
sub
es
out
dec
inc
scas
(bad)  
in
das    
les
jmp
int
lods
mov
add
mov
loope
mov
imul
inc
push
cmp
fisttpll
(bad)  
push
xor
inc
lahf   
jl
imull
cmp
fsub
or
lret   
jns
je
cmp
jnp
push
sbb
mov
cld    
jb
add
cmp
out
cmp
cli    
add
push
adc
loop
popf   
fdiv
mov
mov
mov
lret
push
xor
aaa    
aam
xor
xor
lea
lods
aam
lret   
jno
and
or
xor
push
lods
mov
fldt
inc
mov
aas    
loopne
in
fwait
stos
adc
(bad)  
cmp
jmp
ja
mov
and
xlat
icebp  
push
lahf   
pop
and
aam
pop
(bad)  
ret
pop
(bad)  
loopne
pop
xchg
cs
test
push
(bad)  
sub
in
xchg
jg
rolb
or
iret   
and
insl
rolb
mov
push
sti    
repz lds
xchg
lret
jle
sti    
push
lock leave 
jmp
lods
adc
dec
add
lds
xor
in
mov
repnz mov
mov
addr16 push
nop
or
xlat
sarl
dec
hlt    
push
jg
and
test
mov
mov
sbb
test
loop
inc
xchg
xchg
xor
cmpsl
aaa    
add
xorb
mov
inc
(bad)  
xor
enter
pop
out
push
dec
das    
in
fdivrl
lahf   
inc
and
dec
ss or
add
sub
or
push
(bad)  
iret   
jmp
adc
in
mov
repnz mov
mov
addr16 push
pushf  
sbb
xlat
sarl
add
jg
push
mov
pop
mov
xchg
jo
mov
pop
lret
dec
sti    
adc
ljmp
jle
cmp
or
pop
std    
fldcw
mov
jg
daa    
push
lock leave 
jmp
jb
sahf   
fdivl
int
mov
xor
mov
(bad)  
mov
(bad)  
les
inc
add
jns
add
adc
outsl
insl
push
mov
out
push
push
xor
andl
les
(bad)  
pop
icebp  
cmp
sub
push
push
xchg
in
push
xchg
and
cld    
mov
cmp
adc
cmp
psubusw
and
xor
ret
(bad)  
dec
push
lret   
cmp
jnp
xlat
and
mov
inc
jae
imul
sbb
mov
sbb
shl
std    
je
cltd   
imul
divl
out
daa    
jl
mov
ret
aad
cmp
ret
dec
movsb
pushf  
push
pop
xor
push
or
into   
arpl
mov
dec
movb
adc
cltd   
mov
(bad)  
adc
xchg
fisttpll
stos
lret
mov
pop
adcl
push
rorb
out
insb
sub
lea
mov
sbb
dec
and
jl
aad
mov
mov
cmp
cmc    
ret
pop
ja
test
sbb
imul
aad
push
mov
push
xor
push
pop
sbb
xor
nop
(bad)  
jl
cmpsl
lods
jb
push
or
add
ss mov
or
popf   
cmp
adcl
lods
jecxz
pop
ret
dec
jbe
mov
pop
xor
pusha  
pop
insb
(bad)  
jp
add
mov
mov
addl
jbe
mov
rol
add
popf   
lcall
mov
int3   
fstl
sti    
insb
aad
rorb
mov
pop
mov
jb
stos
mov
cmp
lret   
add
out
fcoml
sub
xchg
pop
sbb
mov
icebp  
movsb
icebp  
das    
out
add
movsl
add
addr16 mov
mov
shrb
and
jo
mov
enter
jp
or
xor
jmp
adc
inc
xor
mov
cli    
fwait
lods
mov
xor
mov
test
(bad)  
or
mov
ja
jbe
jns
xchg
pop
add
cmp
mov
icebp  
jb
rcrb
mov
mov
mov
xchg
mov
outsb
ss int
pop
jb
jecxz
mov
xor
mov
sbb
jno
std    
lret
mov
sti    
mov
adc
gs enter
popa   
das    
jno
mov
ss xorl
or
fdivr
hlt    
xchg
fcoml
add
jno
adcb
stc    
test
jne
imul
shll
es and
lds
ret
mov
jp
push
ud2    
test
inc
sti    
popf   
push
and
stos
and
sbbb
dec
icebp  
sub
icebp  
into   
push
js
sbb
movsl
push
cmpsb
or
mov
movsb
mov
cmp
cld    
push
jecxz
jp
(bad)  
fstpt
sbb
stc    
movsl
add
pop
lea
lea
fidiv
ss xchg
push
stc    
mov
cltd   
pop
andb
mov
pop
inc
xor
sahf   
jb
mov
jb
lahf   
bound
lds
fidiv
mov
add
orl
cmc    
into   
xchg
xlat
mov
mov
pop
push
add
mov
popf   
dec
pop
jns
mov
xchg
stos
add
out
dec
fwait
icebp  
ret    
push
jge
or
movsl
adc
addr16 lret
call
inc
aaa    
imul
aas    
fwait
add
mov
xchg
adc
jb
outsb
arpl
(bad)  
fstpt
jmp
sbb
mov
cmpps
jecxz
negl
bound
and
lahf   
cmpxchg
je
lahf   
(bad)  
xchg
add
adc
push
je
loope
mov
imul
or
ret    
cmp
(bad)  
xor
and
(bad)  
jne
dec
sbb
add
(bad)  
out
jbe
pop
xor
in
out
subl
xchg
(bad)  
int
insl
dec
gs dec
sub
xor
mov
mull
ds sbb
aad
test
cmp
(bad)  
inc
or
push
stc    
pop
mov
xor
and
icebp  
aaa    
mov
popf   
mov
sahf   
sti    
daa    
icebp  
das    
sarb
loope
pop
pop
int3   
sbb
and
fldenv
mov
hlt    
stos
movsb
clc    
adc
inc
xor
inc
iret   
test
jecxz
jb
push
xchg
outsl
pop
(bad)  
pushf  
in
movsb
cld    
imul
pop
inc
xlat
push
jo
stos
and
and
punpckhdq
loope
cmpsl
pusha  
fisubrl
and
xor
inc
cmp
adc
pop
pop
or
mov
clc    
xor
dec
jl
adc
or
aam
push
add
int3   
imul
jb
and
mov
xor
inc
cmp
dec
out
sti    
dec
(bad)  
aad
cmp
cmp
out
subl
xor
push
int
add
push
mov
sub
mov
ret
cmp
loope
pop
fcomps
insb
and
(bad)  
mov
int3   
fldln2 
(bad)  
dec
sub
adc
(bad)  
cwtl   
sub
sti    
sub
repnz test
fcos   
xor
(bad)  
mov
sti    
int
adc
int
sbb
aaa    
sti    
or
leave  
mov
sub
add
xor
add
stos
cld    
jp
nop
xchg
std    
mov
cmpsl
mov
addr16 out
jl
pop
jecxz
mov
mov
insb
xchg
out
xchg
test
jp
push
sub
pushl
out
les
fisttpll
enter
xor
sbb
xchg
(bad)  
out
push
sub
mov
in
jl
pop
jecxz
mov
mov
mov
cmpsb
les
pop
je
ds push
dec
cmp
or
jmp
xlat
sbb
push
andb
scas
dec
stos
mov
sbb
adc
int3   
adc
jle
sub
xor
sbb
mov
inc
mov
(bad)  
jb
out
push
xor
xor
lcall
sub
(bad)  
cmpsl
mov
and
or
adc
jmp
adc
call
cmp
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
ret
sbb
int3   
cld    
mov
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
dec
inc
adc
cld    
lds
in
out
(bad)  
enter
bound
add
daa    
stos
sub
push
dec
rolb
sbb
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
aaa    
jmp
repz adc
mov
fdivl
or
mov
cmp
dec
fs mov
xor
cmc    
sbb
sbb
stc    
cs xor
jle
pop
inc
inc
push
xchg
inc
jle
jb
loope
sti    
inc
xorb
or
std    
and
sti    
inc
mov
pushf  
sbb
arpl
in
xchg
add
in
push
mov
(bad)  
cwtl   
mov
sahf   
cmp
out
add
xchg
cmpsl
push
jne
(bad)  
push
jecxz
push
mov
mov
ds int3 
fdiv
or
jno
ret    
pop
pop
dec
cmp
cmp
mov
dec
movsl
fisubl
pop
decl
mov
movsb
sub
fnstsw
neg
mov
xor
xchg
jo
repz pop
xchg
jbe
lods
sub
aam
pop
jle
call
add
add
jae
(bad)  
jne
mov
push
jno
or
leave  
ret    
les
out
xor
icebp  
mov
dec
adc
fwait
lret   
jp
sahf   
es loopne
negl
subl
pop
pop
and
mov
popl
cmpsb
mov
mov
ss xor
lret   
jp
sahf   
es aam
fistpl
subl
pop
pop
jmp
mov
popl
mov
mov
out
and
or
jecxz
jp
sahf   
es mov
stos
or
and
xchg
pop
pop
lea
ja
xchg
pop
mov
outsb
mov
add
(bad)  
dec
mov
std    
add
or
or
pop
cmp
ljmp
call
inc
test
jo
add
or
mov
fnstsw
xor
std    
mov
ret
ljmp
adc
lods
pusha  
add
xchg
sahf   
mov
lods
xor
idivl
rorb
ficoml
inc
adc
mov
shlb
fsubl
inc
cmp
add
add
jle
pop
cmp
cmpsl
enter
lds
inc
test
jo
add
or
mov
loope
xor
dec
mov
rorb
(bad)  
jp
jno
xor
cmc    
and
jmp
push
push
insb
(bad)  
int3   
flds
or
and
incb
inc
in
dec
jp
push
outsb
xchg
add
xor
fmull
pop
scas
cs lahf 
sub
sub
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
(bad)  
aad
add
mov
es enter
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
sbb
into   
add
or
pop
sbb
jecxz
xor
cmp
xor
dec
mov
inc
fstp
lcall
leave  
xlat
outsl
xchg
mov
xchg
add
sti    
and
pop
lea
xchg
cs lahf 
insb
shr
out
fsub
push
out
mov
ror
mov
push
adc
inc
outsb
lds
xor
cli    
or
lods
mov
sahf   
add
jecxz
ret    
outsl
xchg
mov
sub
mov
push
mov
rorb
dec
ret    
outsb
nop
hlt    
push
roll
bound
inc
sbb
sbb
jno
or
cmp
sub
pop
cmpsb
jno
inc
cs
iret   
mov
iret   
sub
ret    
cmp
sub
push
lds
pop
lret   
(bad)  
cmpsl
ss inc
cmp
dec
add
cmp
popa   
sub
jecxz
cmp
fisubl
lret
ds aad
loope
jo
mov
dec
cmp
and
jecxz
pusha  
icebp  
ficompl
cmp
inc
mov
pusha  
and
hlt    
inc
cmp
ja
jecxz
jo
fiaddl
xchg
sbb
ss push
adc
repz fdivr
outsl
inc
(bad)  
sub
(bad)  
outsb
in
les
loope
jmp
(bad)  
out
xlat
iret   
faddl
mov
popa   
mov
sbb
test
sbb
in
mov
sbb
in
(bad)  
out
xlat
iret   
fadd
mov
rcr
inc
jmp
cmp
(bad)  
mov
in
(bad)  
out
xlat
iret   
fdivrl
mov
stos
jnp
int
mov
cwtl   
jne
sbb
in
(bad)  
(bad)  
out
xlat
iret   
fdivrl
mov
shll
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
repnz mov
(bad)  
fcompl
daa    
and
dec
iret   
fiaddl
push
into   
adc
xchg
dec
cmp
(bad)  
lods
mov
mov
(bad)  
mov
out
(bad)
cli    
xlat
arpl
iret   
rolb
scas
ljmp
jb
pushf  
out
sbb
hlt    
mov
out
pop
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
inc
test
and
mov
cld    
add
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
or
loop
(bad)  
out
(bad)  
leave  
(bad)  
or
or
push
mov
enter
jecxz
ja
or
sub
mov
jp
lods
(bad)  
decb
xchg
scas
xlat
xchg
dec
popa   
dec
xor
and
mov
movl
or
adc
xor
fldt
imul
out
sub
arpl
cs push
fsubrs
mov
or
hlt    
imul
repz jae
pop
or
dec
or
(bad)
pop
mov
(bad)  
sarl
xchg
leave  
pop
in
js
or
mov
(bad)  
or
push
pop
dec
xchg
ds
rcl
inc
add
fs lahf 
cmp
push
push
rcr
(bad)  
inc
jbe
dec
dec
ljmp
push
xor
pop
pushf  
jb
in
into   
mov
cmpl
dec
mov
dec
and
fdivr
or
hlt    
mov
fidivl
mov
jge
sub
mov
test
pop
lods
and
pop
jne
pop
mov
mov
mov
(bad)  
shl
sub
rol
xor
pop
pop
aad
loop
cld    
dec
loopne
sbb
push
dec
out
shrl
dec
jge
mov
adc
fisttpl
(bad)  
jecxz
dec
call
lret
negl
outsb
mov
xor
mov
jge
push
mov
lahf   
jmp
pop
mov
ret
int
mov
pop
and
daa    
add
bound
mov
sahf   
mov
jb
int
in
cmc    
inc
sbb
or
mov
push
addl
pushf  
sbb
mov
repz and
mov
(bad)  
mov
dec
xor
xorl
mov
xchg
mov
xchg
pop
out
xchg
pop
insb
pop
dec
xchg
push
or
sub
nop
inc
mov
adc
pmaxsw
(bad)  
cld    
mov
mov
out
dec
popa   
cmc    
xor
sbb
mov
jns
decl
xor
js
jp
pop
dec
inc
jnp
cmp
stos
inc
rorb
pop
cmpsb
pop
mov
or
inc
add
ret
push
out
lds
push
xchg
sub
jne
outsl
in
sub
sub
add
mov
testb
push
inc
in
add
xchg
movb
mov
inc
sbb
sub
in
cmpsb
cmp
stc    
shrb
mov
add
sarl
lcall
(bad)  
pop
(bad)  
decl
jg
lcall
bound
sti    
ret
pop
sub
pushf  
aas    
fcompl
mov
stc    
sarb
pop
arpl
out
mov
out
std    
dec
icebp  
dec
cld    
mov
(bad)  
xor
sti    
loope
cwtl   
int
out
mov
std    
out
add
add
jmp
out
rol
inc
sub
mov
xchg
lods
dec
inc
lds
(bad)  
mov
xlat
inc
pop
mov
and
icebp  
in
xor
mov
(bad)  
pop
sub
xchg
es push
cwtl   
rcll
in
lret   
jno
sbb
xor
cmpsb
movsb
dec
clc    
mov
mov
sub
pop
mov
xchg
add
mov
pop
sub
xchg
push
mov
pop
mov
xor
add
data16 add
jg
push
and
into   
test
daa    
ds movd
push
les
add
mov
(bad)  
and
pop
jns
mov
lods
icebp  
sbb
arpl
xchg
scas
(bad)  
(bad)  
mov
bound
or
push
les
fcom
mov
pop
mov
fstpl
gs pushf 
dec
or
(bad)  
arpl
mov
and
pusha  
jae
cltd   
mov
mov
jmp
jge
jl
pop
test
jl
mov
or
dec
arpl
jecxz
in
mov
push
fxch
mov
popa   
push
add
push
sbb
mov
imul
add
outsl
repnz out
mov
sub
lret
fwait
lock test
jo
mov
(bad)  
cmp
in
add
pop
enter
fidivl
xchg
push
push
or
test
sub
xchg
popa   
mov
xlat
insb
rcl
push
fcomps
decb
sub
inc
in
dec
jae
sub
fnop   
lret   
out
xchg
xchg
or
xchg
ds or
cmpsb
mov
fs mov
fidivr
cmp
inc
(bad)  
pop
inc
push
pop
dec
cwtl   
mov
xorl
scas
imul
push
fstps
insl
push
adc
push
fmull
jp
or
jmp
push
add
(bad)  
inc
repz or
xor
in
stc    
test
in
ds data16 aam
mov
mov
mov
cmpsl
jno
sti    
out
add
jo
int
in
insl
adc
aad
inc
sub
mov
icebp  
mov
adc
dec
orl
push
(bad)  
test
std    
(bad)  
xlat
xlat
and
in
push
int3   
clc    
cwtl   
add
adc
push
(bad)  
sbb
mov
ja
pop
sbb
into   
mov
and
mov
dec
iret   
push
fst
inc
imul
cld    
outsb
xor
pop
mov
inc
push
fcoml
mov
cltd   
cmc    
push
and
jo
xor
fs inc
es jp
mov
cld    
shlb
sub
rorb
jle
push
out
and
data16 mov
sub
sbbl
fwait
stc    
(bad)  
add
or
jmp
aaa    
test
aam
loopne
aas    
push
cs iret 
sbb
xor
jno
mov
addr16
in
or
inc
in
fistl
cmp
jl
aas    
cltd   
or
mov
mov
xchg
ret    
and
sub
push
xchg
adc
(bad)  
scas
adc
cwtl   
sbb
push
inc
mov
imul
adc
cmpsb
jmp
pop
fimull
or
cltd   
or
sbb
cli    
xchg
int3   
bound
mov
jle
sub
lea
stc    
and
inc
lods
mov
jp
aaa    
cltd   
(bad)  
pop
out
or
and
cld    
push
int3   
shll
inc
adc
sub
push
jmp
jbe
sbb
iret   
pop
iret   
outsl
jge
stos
scas
ret    
mov
mov
cmpsb
pop
xor
mov
(bad)  {%k7}
les
imul
(bad)  
mov
int
or
or
mov
movsl
push
mov
sbb
out
or
(bad)  
mov
jb
ljmp
in
pop
hlt    
mov
xchg
push
iret   
cs mov
popf   
gs std 
insb
lret   
sub
mov
mov
add
scas
das    
cwtl   
cmpsb
leave  
jae
cltd   
mov
jge
and
sub
andl
je
sahf   
pop
les
pop
movsb
mov
int
mov
into   
push
sbb
pop
jns
mov
sub
sbb
adc
sub
(bad)
sbb
loop
and
adc
inc
sub
icebp  
mov
jecxz
adc
jp
nop
pop
mov
or
pop
insb
pop
add
add
and
sub
push
stc    
lea
fistpll
pop
or
mov
out
fucomi
ret
(bad)  
(bad)  
dec
push
sub
(bad)  
mov
out
jb
lods
add
and
mov
jb
lods
push
add
dec
movsl
pop
jns
mov
sub
sbb
cltd   
frstor
and
sub
fldenv
and
xor
and
lds
in
fmull
out
outsb
dec
and
repnz mov
pop
stos
xchg
dec
push
enter
dec
xor
mov
fwait
stos
sub
(bad)  
cmp
(bad)  {%k7}
(bad)  
mulb
dec
bound
xchg
cmp
sub
int
repnz mov
cmp
(bad)  
mov
sbb
jb
movsl
clc    
xor
mov
or
lcall
test
cmp
ret
and
mov
mov
setg
loope
jl
test
and
hlt    
std    
xchg
add
xor
ljmp
dec
adc
sub
sub
jnp
mov
lods
jmp
scas
and
into   
dec
std    
xchg
jb
scas
xchg
push
negl
sbb
jmp
and
inc
out
cmp
pop
mov
popf   
or
lcall
rorb
cmovb
out
mov
jbe
mov
je
or
jbe
lods
sub
and
mov
shll
push
pushf  
or
cmc    
pslld
(bad)  
mov
int
fnclex 
ds and
jbe
mov
dec
fdivs
mov
mov
pushf  
push
sub
pusha  
pushf  
movsl
xchg
push
data16 subb
xor
cmp
add
ds mov
jmp
push
mov
fwait
(bad)  
lds
dec
mov
out
jae
cmp
orl
adc
(bad)  
fdivs
push
and
std    
inc
adc
fwait
mov
loope
jmp
rcr
or
stc    
testb
cmpsb
jmp
loope
(bad)  
adc
xor
mov
daa    
arpl
jp
(bad)  
mov
xchg
addr16
mov
mov
inc
popf   
jb
int3   
fstpl
mov
xchg
pop
pop
cmp
add
and
subl
test
fs rcr
or
loopne
sbb
fld
mov
rclb
lea
and
ss out
mov
psubq
inc
in
mov
loop
setnp
jp
pop
movsb
enter
and
ret
jmp
sbb
out
mov
or
or
jecxz
cmp
mov
test
mov
xlat
lret
pop
sub
movsb
daa    
sub
jb
stc    
arpl
scas
cli    
js
xlat
cmpsl
les
cmp
pop
sbb
pop
imul
and
loope
jne
adc
inc
sub
flds
dec
cmp
(bad)  
mov
je
xor
cltd   
mov
negb
jecxz
jmp
out
daa    
inc
mov
das    
push
verw
jle
xor
inc
mov
clc    
dec
mov
pop
jecxz
cli    
push
test
movsb
lods
mov
or
movsb
ds std 
aas    
sub
adc
int3   
jp
(bad)  
je
sub
inc
dec
mov
mov
es
push
jmp
push
into   
sub
(bad)  
mov
movsb
xchg
fwait
dec
mov
sub
rorb
fld
cmp
imul
fsubs
rclb
and
push
cmp
aas    
lods
es into 
add
sbb
addr16 pop
das    
jns
rorb
ret    
enter
mov
xchg
inc
stc    
daa    
sub
rorl
xlat
inc
or
add
xchg
ds push
inc
(bad)  
or
and
incb
inc
in
dec
jp
push
cmp
imulb
mov
dec
mov
sbb
and
ja
cmp
movsl
mov
rorl
push
xchg
sub
sbb
xor
in
push
rorl
dec
xor
cltd   
mov
rolb
adc
in
mov
sub
leave  
(bad)  
shrl
mov
xchg
bnd jmp
aaa    
sub
adc
cmp
mov
push
cwtl   
mov
or
test
inc
sub
(bad)  
xchg
pop
int
leave  
pop
sub
(bad)
std    
popf   
cs repz pop
pop
out
cmp
sub
sbbl
xchg
jbe
(bad)  
out
clc    
add
cmpsl
push
mov
mov
mov
add
(bad)  
lret
pop
into   
outsl
cmc    
dec
fs push
lods
push
outsl
sbb
(bad)  
aad
jne
push
rorb
fcmove
insb
sub
fldenv
and
sbb
(bad)  
mov
mov
aas    
and
mov
pop
and
sahf   
xchg
pop
fisub
popf   
add
sub
(bad)  
adc
jp
or
jmp
mov
mov
cltd   
sub
loop
movsl
clc    
pop
jbe
mov
enter
repz hlt 
(bad)  
jno
jmp
call
sbb
xor
inc
pop
mov
addr16 push
mov
and
lock fldl
divb
scas
adc
inc
mov
shlb
inc
es data16 cmp
ljmp
sbb
cmpl
(bad)  {%k7}
jmp
outsb
cmp
in
jge
daa    
daa    
mov
lods
cmp
mov
mov
inc
cmpsl
or
push
stc    
bound
jne
inc
xchg
push
ds inc
or
mov
(bad)  
cmp
test
jle
inc
insl
sahf   
cli    
mov
jge
daa    
ds mov
mov
fmull
sbb
jl
xchg
sub
test
xor
repz ss
cmp
xchg
cwtl   
ljmp
push
fs mov
push
xchg
cmp
mov
loope
xchg
iret   
(bad)  
jne
jmp
jnp
(bad)  
lcall
std    
test
or
push
sbb
cs dec
inc
int3   
mov
add
in
ss stos
push
sub
(bad)  
jmp
icebp  
sahf   
out
ja
lahf   
shlb
or
pusha  
xorl
jnp
out
mov
fmuls
lahf   
mov
cmp
lea
sub
and
push
add
push
sub
sti    
loop
std    
js
and
fldl
sub
jp
add
mov
loop
movsl
outsb
xor
cmp
and
cmp
adc
into   
aad
jecxz
add
in
aad
ja
popf   
dec
pop
jns
mov
popf   
cli    
and
ret
jmp
push
jno
cmp
gs cli 
push
ljmp
xchg
inc
(bad)  
std    
mov
inc
repz lea
imul
cmp
sub
add
pop
pop
addr16 cwtl 
repz lret 
mov
stc    
mov
lret
cmp
out
fidivl
cltd   
add
lods
movb
mov
and
jae
test
lods
mov
data16 int
rcrl
stc    
std    
mov
cmc    
pslld
in
mov
cmpsb
es xchg
(bad)  
fimull
fiadd
inc
xor
sub
fs dec
pop
lds
inc
stos
fnstenv
les
push
add
lea
ficompl
test
xchg
cwtl   
push
or
les
and
mov
sub
mov
mov
xor
push
adc
inc
or
xor
cwtl   
pop
shlb
sbb
pop
ret
js
and
and
xlat
jl,pt
adc
adc
mov
pop
imul
les
lock
in
loop
lock lods
mov
(bad)  
lods
test
daa    
movq
xlat
cmpsb
pop
lods
(bad)
lds
cwtl   
push
ret    
sub
iret   
push
stos
enter
das    
(bad)  
in
fildll
cmp
sub
mov
dec
inc
dec
jno
adc
mov
push
inc
dec
or
test
jecxz
mov
insb
inc
test
mov
fstps
pop
dec
leave  
xor
popa   
idivb
cmc    
rcrb
leave  
inc
mov
cs lret 
adc
inc
cmp
pop
subb
jnp
loopne
and
or
lret   
or
mov
and
or
fistpl
mov
mov
xor
sbb
mov
(bad)  
je
mov
mov
aaa    
mov
mov
sub
add
inc
aaa    
xlat
(bad)  
jno
int3   
and
mov
orl
popf   
jge
mov
sbbb
fsub
adc
add
aam
cmp
stc    
movsl
scas
cmp
jg
enter
pusha  
das    
ret    
into   
outsb
(bad)  
std    
inc
aas    
sti    
sbb
lcall
xlat
xor
sbb
push
(bad)  
icebp  
jle
jno
jb
adc
add
sbb
adc
std    
stc    
push
mov
xor
scas
cwtl   
adc
inc
xor
cmpsb
mov
fwait
sub
and
aam
loop
iret   
add
cmp
adc
cmp
push
dec
or
cwtl   
mov
inc
sub
xorl
popf   
sbbb
adc
out
xor
call
out
or
lods
scas
cmp
adc
andl
imul
dec
push
shrl
pop
repnz mov
mov
pop
push
jae
fstps
mov
jae,pt
movsl
mov
inc
mov
mov
or
adc
mov
sti    
fs inc
imul
adc
mov
cmpsl
push
jg
insb
inc
in
mov
adc
mov
dec
pop
lds
fdiv
imull
imul
mov
ljmp
outsl
cwtl   
repz lret
mov
(bad)  
repnz push
cwtl   
cmpl
push
cmp
xchg
jecxz
xchg
cmp
mov
push
mov
inc
sbb
mov
push
ljmp
roll
sub
adcb
mov
out
outsb
shlb
jmp
test
mov
jne
jb
xchg
xor
je
cs
ss push
cwtl   
je
mov
mov
mov
movsl
mov
div
cmc    
mov
ljmp
xor
sub
push
(bad)  
mov
mov
mov
scas
cmc    
fdivrl
insl
or
lock shlb
es inc
xor
sarb
adc
lods
fsubr
repz std 
lods
sbbb
mov
subb
jns
pushf  
jmp
sbb
cli    
movsb
sub
lods
shrb
lahf   
jnp
fldenv
push
inc
(bad)  
cs mov
imul
adcl
(bad)  
mov
test
push
ljmp
cmpxchg
test
sub
repz lds
or
cmc    
insl
inc
add
cmpsl
daa    
jne
jecxz
jae
fldcw
insb
cmp
jbe
dec
mov
inc
xor
(bad)  
out
push
or
in
mov
mov
in
mov
mov
jae
adc
inc
xor
cmpsb
test
adc
cmpsl
ret    
jecxz
add
cmp
in
xor
fs push
mull
mov
rcr
into   
std    
nop
jne
mov
test
cld    
xor
push
out
leave  
xor
popa   
neg
cmp
(bad)  
ffreep
xor
jle
or
mov
add
jne
adcb
shlb
sub
jp
pop
mov
int
push
inc
ret    
xchg
repnz mov
push
push
pusha  
mov
cltd   
daa    
lret   
aam
int3   
push
xchg
mov
in
fimul
repz shrl
ss push
cwtl   
je
xchg
adc
mov
xor
cmp
inc
dec
cli    
jg
xchg
(bad)  
push
xor
xchg
push
xor
(bad)  
mov
adc
cmp
and
push
sub
loop
push
int
andl
stos
xor
pop
push
sbb
imul
enter
loopne
movsl
stos
mov
add
jne
lock add
jmp
adc
iret   
lret
cmp
pop
xchg
jae
in
je
lods
lds
imul
mov
(bad)  
pop
popf   
aas    
int3   
adc
cld    
pop
sub
insb
loope
cmp
les
fs aad
push
dec
sbb
sahf   
jo
mov
movsb
ja
lret   
popl
imul
pandn
mov
popf   
incl
lcall
fldenv
add
sub
popa   
das    
mov
add
loop
daa    
jl
scas
test
outsl
lea
pop
popa   
push
mov
addb
daa    
sub
xchg
jge
mov
jle
jecxz
shrl
xchg
gs xor
pop
fs in
aaa    
mov
repnz sbb
mov
xor
sub
push
icebp  
divb
sub
fistp
call
jp
icebp  
pop
mov
lret   
(bad)  
cs push
dec
or
jns
vhsubpd
pop
inc
xlat
fwait
sub
and
out
ljmp
or
pop
jnp
(bad)  
cmc    
push
dec
or
mov
and
fsubrs
or
dec
jmp
jnp
jg
test
cmc    
or
jne
repnz sbb
cmp
scas
lods
or
fbld
sub
out
(bad)  
imul
fistl
int3   
inc
xor
xor
xchg
int
jo
gs adc
rcl
dec
adc
fld
lods
jecxz
icebp  
jge
sahf   
fadd
mov
jnp
sub
cmc    
adc
xchg
sub
ja
cmp
push
sbb
add
or
push
cmp
jmp
adc
call
aam
add
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cld    
mov
scas
inc
iret   
insb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
jnp
add
pushf  
shrl
or
js
xor
and
push
rclb
adc
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
or
(bad)  {%k7}
fxtract 
(bad)  
(bad)  
xlat
cmpsl
je
adc
movzwl
getsec 
test
(bad)  
sub
sarb
push
pop
mov
dec
mov
mov
test
fsts
cmp
push
sub
sarl
cmp
add
(bad)  
pop
mov
sub
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
ljmp
out
jecxz
stos
fnstcw
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
pop
mov
and
into   
mov
mov
jnp
sub
(bad)  
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
adc
cmp
pop
es pop
xlat
xchg
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
cmp
test
adc
scas
fdivl
clc    
push
inc
push
cmp
inc
sbb
aaa    
or
dec
imul
pop
lea
mov
adc
sti    
mov
das    
sarl
(bad)  
ds iret 
lea
adc
mov
inc
inc
jnp
mov
jnp
(bad)  
out
sahf   
test
rorl
lret
cmp
imul
adc
shlb
xor
push
sub
in
hlt    
xchg
and
pop
ret    
xor
pop
(bad)  
xlat
cmpsl
and
lret   
in
mov
and
sbb
and
or
out
pop
daa    
(bad)  
add
xchg
push
iret   
dec
fcmovbe
fisubl
and
or
out
sbb
mov
addr16 rcr
mov
jg,pt
shll
add
cwtl   
enter
push
iret   
sub
cmc    
inc
sbb
push
ljmp
insb
cmpsl
mov
hlt    
int3   
push
add
test
and
or
xor
lea
repnz addr16 popf 
aas    
jns
fs fchs 
and
fwait
cs int3 
mov
add
(bad)  
std    
and
jnp
(bad)  
mov
aam
int3   
loope
(bad)  
dec
mov
push
fstps
cmp
jno
xchg
lret   
add
dec
or
(bad)  
mov
sub
inc
pop
enter
xor
inc
fwait
pop
fisubrl
popa   
cmpsl
pop
or
sahf   
push
ror
jp
or
or
jns
outsl
dec
icebp  
push
dec
mov
and
push
cmpsl
xor
aad
pop
push
mov
ljmp
je
mov
jge
outsb
xlat
inc
daa    
loope
rorl
jmp
clc    
adc
inc
xor
pop
add
fadds
push
cltd   
sbb
dec
imul
cmpsb
in
(bad)  
inc
and
mov
lret
js
cwtl   
jb
inc
repnz in
out
pop
xor
enter
imul
xchg
out
and
das    
jecxz
hlt    
leave  
push
fdivrp
cmp
xor
push
adc
cmp
rorl
pop
mov
test
jecxz
mov
loopne
popf   
das    
or
(bad)  
push
loop
leave  
xor
add
mov
into   
lahf   
sub
into   
mov
aad
xor
mov
inc
stos
fwait
mov
stc    
sarb
push
push
jmp
insl
(bad)  
mov
xlat
xor
mov
sbb
mov
add
pushf  
insl
dec
dec
fildll
xchg
xor
lods
(bad)  
loope
repz xlat
iret   
push
mov
add
fdivs
sahf   
pop
adc
jmp
movsl
fdivrl
add
js
pop
xor
xor
or
sbb
fimull
repz into 
lods
or
aas    
sti    
push
fstp
test
int3   
aaa    
insb
out
aaa    
or
int3   
rol
push
daa    
aam
adcl
pop
ret
outsl
clc    
daa    
in
jecxz
adc
loope
outsl
sti    
les
mov
mov
int
push
arpl
and
sbb
jb
add
inc
(bad)  
lret
mov
inc
jp
mov
ret    
daa    
movl
xchg
and
push
add
jb
cs cld 
fist
cs adc
cmp
cmc    
mov
nop
jp
jae
adc
icebp  
mov
jecxz
leave  
adc
push
int3   
add
mov
jnp
xchg
xor
dec
sahf   
mov
frstor
sbb
pop
and
stc    
push
les
jmp
in
lods
mov
cmpsl
push
das    
and
dec
lods
mov
mov
cmp
loop
scas
mov
jp
xlat
ret    
jl
mov
hlt    
sbb
inc
stos
rcll
push
xchg
push
or
jno
cmc    
pop
sub
scas
dec
inc
loop
das    
sub
insl
or
pushf  
sbb
arpl
pusha  
repnz add
in
push
mov
out
rclb
sbb
(bad)  
dec
mov
idivl
or
hlt    
mov
fidivl
mov
addr16 pop
ret
jbe
and
stos
mov
movsl
jle
inc
mov
fdivrs
jg
ficom
mov
sarb
push
test
push
jge
sbb
(bad)  
insl
pop
dec
fisttpl
or
aas    
dec
push
out
xchg
sub
inc
bound
imul
loope
mov
or
std    
mov
lock add
mov
cltd   
(bad)  
sbb
repz lret 
pop
mov
dec
lea
repnz test
pusha  
call
jne
test
jmp
test
adc
in
cmp
mov
mov
sub
or
cmp
(bad)  
aaa    
sti    
mov
(bad)  
pop
enter
(bad)  
imul
fisttpll
inc
mov
das    
out
jnp
mov
and
xor
push
cmp
sbb
rclb
(bad)  
lock nop
stos
cli    
cmp
repnz adc
jo
mov
or
xchg
data16 ja
(bad)  
dec
pushf  
ja
rorb
in
sub
iret   
xchg
push
leave  
xchg
ret
ljmp
xchg
xlat
mov
repnz adc
sub
mov
or
jb
out
jnp
adc
outsl
jmp
orl
dec
sub
sub
xlat
ds mov
sti    
add
das    
push
fsubrl
sti    
cmp
mov
(bad)  
mov
jne
mov
ja
rorb
in
sub
rclb
les
or
xchg
xlat
mov
push
mov
cmovs
or
in
stos
inc
data16 sbb
mov
and
cmp
je
mov
or
aad
fnstsw
push
(bad)  
xor
sub
cmc    
mov
vmovapd
sub
in
cmp
or
jmp
aas    
and
fnstenv
jbe
xchg
out
gs xchg
ret
push
stc    
mov
and
lret
ficom
out
ss sbb
adc
es jb
add
mov
cli    
and
mov
arpl
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
cwtl   
add
addl
aaa    
addl
fildl
mov
cli    
adcl
xchg
cli    
fwait
mov
addl
out
addl
roll
(bad)  
addl
jnp
add
addl
arpl
pop
addl
or
jns
addl
jae
add
addl
sbb
cmp
addl
add
sbb
addl
sub
cmp
addl
adc
pop
pop
addl
mov
cmp
js
ja
xchg
pop
leave  
popf   
ret
aam
inc
es int
mov
mov
icebp  
cmovno
loopne
xlat
outsl
push
fnstcw
aas    
push
jnp
je
pop
popa   
inc
cmp
jnp
push
sbb
out
mov
jecxz
ss lret
dec
inc
fisttp
sub
rcrl
xchg
loope
and
outsl
pop
fildll
scas
aas    
inc
cmpsl
mov
leave  
inc
or
(bad)
cld    
inc
in
les
bound
add
inc
inc
stos
inc
add
int
in
cli    
mulb
fsubr
imul
mov
mov
rol
or
les
scas
movsl
and
in
mov
xor
leave  
push
mov
movsb
sbb
in
dec
or
scas
and
sub
jle
rclb
adc
jecxz
mov
leave  
loopne
int3   
scas
aas    
shll
iret   
(bad)
jmp
inc
into   
nop
sbb
add
inc
(bad)  
mov
or
repnz mov
into   
xorb
push
loopne
out
mov
pop
into   
mov
les
pop
add
and
outsl
mov
xor
mov
les
cmp
(bad)
mov
ss mov
push
scas
adc
out
scas
jecxz
add
aas    
pop
pushf  
mov
leave  
sti    
stc    
jmp
dec
sub
inc
into   
push
adc
add
inc
data16 xor
push
or
in
jle
dec
fucomip
mov
push
push
loopne
jp
mov
(bad)  
or
(bad)  
out
aas    
cwtl   
pop
mov
es fwait
in
fdivp
mov
xor
ret    
enter
dec
jnp
mov
fldt
and
xlat
aaa    
mov
test
adc
ret
in
mov
scas
aas    
fstpl
xchg
std    
rorb
mov
out
jae
inc
into   
xchg
sbb
fcmovne
sti    
inc
loop
int3   
push
or
in
clc    
dec
cmc    
fucomip
std    
int3   
decb
loope
out
mov
addr16 cmc 
xchg
mov
pop
pop
or
fidiv
stos
xor
test
arpl
mov
fisubr
lret   
xlat
and
mov
mov
stos
xchg
adc
lcall
loope
int3   
scas
aas    
dec
lods
scas
repnz leave 
xor
sbb
dec
jnp
pop
out
jae
inc
into   
sbb
and
sbb
inc
bound
rorb
or
in
jb
jae
ljmp
pop
out
jp
mov
stc    
lock sbb
les
jns
sbbl
in
faddp
frstor
push
ret
je
cmp
(bad)  
sub
inc
xlat
and
xchg
enter
and
or
sbb
insl
mov
scas
aas    
leave  
mov
add
shr
jae
inc
into   
call
sub
sti    
inc
imulb
dec
in
cld    
push
cmc    
(bad)  
ljmp
cmp
loop
out
mov
arpl
xchg
ret
xor
sbbl
in
fiadd
int
xor
inc
jno
push
mov
mov
sub
and
(bad)  
movsl
enter
and
adc
jp
in
adc
jno
push
scas
aas    
inc
lcall
rorb
cmp
jmp
outsb
ucomiss
sbb
inc
outsb
cs in
or
in
jbe
ja
ljmp
das    
pushf  
jecxz
out
mov
in
sbb
les
pop
sbbl
in
fmulp
or
xor
(bad)  
ret
add
(bad)  
jae
push
rorb
inc
fbstp
out
xlat
movsb
jl
pop
sub
push
jg
call
push
ret
sahf   
pop
mov
sbb
xor
adc
ds sbb
pop
mov
jmp
or
mov
push
mov
xor
pop
out
push
push
das    
enter
sub
scas
out
jg,pt
and
test
outsb
inc
inc
sbb
push
sbb
hlt    
sbb
and
cmp
jg
and
test
outsb
inc
inc
sbb
mov
pop
ja
lret   
jae
sub
adc
xor
cs add
aaa    
pop
sbb
adc
xor
pop
sbb
xor
enter
das    
mov
mov
add
cmp
frstor
jge
sbb
gs jle
push
cmc    
xor
and
aas    
jae
imul
or
pop
cmp
jae
(bad)  
mov
es aas 
adc
pop
ljmp
in
dec
iret   
mul
xor
sub
jnp
mov
jmp
xlat
pop
or
in
dec
enter
fisttpll
iret   
sbb
and
(bad)  
mov
hlt    
repz dec
out
mulb
imul
mov
(bad)  
xor
push
cmp
push
push
and
inc
je
dec
push
sub
das    
or
add
add
dec
jl
cmp
(bad)
lret   
in
dec
mov
inc
pusha  
(bad)  
cmp
cmp
jg
and
ljmp
in
mov
pop
cmp
and
nopl
test
jne
cs add
aas    
stos
fcmovbe
iret   
sbb
push
push
sub
adc
pop
stos
xor
cs add
dec
bound
adc
xor
pop
sbb
xor
hlt    
(bad)  
in
adc
aas    
adc
out
hlt    
mov
cmp
frstor
or
stos
xor
cs add
cmp
sbb
push
push
xor
push
add
xorb
loope
ret    
aas    
jae
out
mov
imul
inc
fcompl
jmp
or
and
push
cmp
insb
inc
or
and
dec
jae
push
lret
dec
(bad)  
fld
push
loope
ret    
aas    
jae
ljmp
aas    
jecxz
iret   
fdivrl
insl
or
and
in
sub
mov
add
mov
xlat
iret   
sbb
push
push
ds out
enter
push
push
(bad)  
fmull
cmp
and
xlat
lcall
jne
cs add
push
ror
jmp
xchg
push
and
push
ds out
rcl
or
ret    
aas    
jae
(bad)  
nopl
inc
dec
adc
or
and
in
sub
mov
mov
or
lock cmp
push
mov
movsb
cltd   
sbb
push
push
imul
cmp
or
inc
pop
dec
fidivr
jae
mov
ljmp
test
imul
mov
cmp
cmp
call
pop
leave  
pop
jmp
or
lea
imul
and
dec
dec
pop
lret
jge
dec
fisttpl
xor
cs add
sub
jge
jle
pop
dec
jl
cmp
(bad)  
insl
es jg
and
divb
push
cmp
inc
push
push
(bad)  
xor
ret
ds daa 
push
js
sbb
xor
repnz xchg
and
pop
mov
pop
cmp
and
data16 outsb
pop
inc
pop
fs jno
or
fsubp
xor
data16 sbb
xor
out
jg,pt
and
loope
call
fistp
push
dec
push
fmull
iret   
sbb
test
sub
xor
or
or
sti    
cmp
add
push
xlat
xorl
mov
xor
lcall
jns
adc
xchg
cmp
ja
cmp
cli    
and
or
jb
xlat
or
cltd   
int
adc
out
fdivs
xlat
or
pop
scas
cbtw   
jno
iret   
aad
jmp
cmp
sub
scas
leave  
icebp  
jmp
adc
call
test
add
scas
pop
cmp
xor
push
pusha  
sbb
push
inc
add
xor
insl
cltd   
jbe
stc    
sub
cmp
cwtl   
mov
dec
pushf  
ja
ds xchg
outsb
in
sub
lret
(bad)  
mov
pusha  
les
and
in
cmp
and
xor
mov
cmp
jb
out
jnp
adc
push
mov
xor
jmp
ror
leave  
or
pop
dec
enter
push
fildll
call
into   
daa    
add
fnstenv
popl
ret    
cmp
cld    
pop
push
jp
mov
pop
inc
pushf  
test
aaa    
cli    
mov
in
je
dec
hlt    
sbb
nop
icebp  
mov
xchg
dec
lahf   
jge
jle
sbb
pop
clc    
xchg
mov
or
rolb
iret   
popf   
mov
mov
sti    
mov
in
sub
sbb
je
cmpsl
xlat
adcl
mov
mov
test
fwait
loop
cmpsb
xchg
sbb
or
mov
(bad)  
jbe
sbb
pop
sbb
mov
xchg
sub
dec
pop
imul
lret   
mov
and
je
mov
dec
mov
loope
cmc    
adc
and
dec
push
lds
cmp
sbb
pop
mov
mov
in
loopne
rolb
iret   
stos
(bad)  
fs icebp 
lea
adc
cmc    
xchg
loopne
mov
popa   
scas
(bad)  
(bad)  
jp
aad
mov
or
and
xchg
pop
pop
sub
mov
popl
into   
mov
shlb
dec
mov
lret   
jp
sahf   
es insb
pushf  
add
subl
pop
pop
jns
repnz rcll
adc
stos
xor
ja
cmp
push
sbb
pop
xor
fcmovnbe
mov
lcall
(bad)  
xor
enter
sub
and
inc
sahf   
call
int3   
out
lock in
adc
leave  
loop
outsb
mov
sub
mov
lcall
adc
jl
sub
hlt    
mov
aaa    
pop
xchg
xchg
(bad)  
bswap
jne
xlat
adc
(bad)  
fdivrp
sbb
jno
adc
aaa    
mov
mov
bswap
jne
xlat
sbb
pusha  
scas
sbb
xlat
pop
and
jp
jmp
xor
out
iret   
mov
out
xor
or
xlat
cs in
sbb
adc
ficompl
lahf   
rcr
xchg
jnp
adc
jbe
cs aas 
call
cmp
or
je
fcomp
pop
test
adc
pop
cmp
sub
ljmp
arpl
icebp  
fcoml
test
adc
xor
negl
pop
and
jp
icebp  
(bad)  
xor
xchg
push
cmc    
fstps
ret    
jecxz
loopne
pop
(bad)  
leave  
sbb
adc
gs cmp
or
ljmp
sti    
xlat
cs in
sbb
or
dec
add
cmp
xchg
jnp
adc
fbstp
cs into 
cmp
fcoms
(bad)  
fwait
sub
and
xlat
out
lock in
adc
rorb
or
push
mov
sub
and
ret
in
adc
aam
aaa    
dec
add
(bad)  
hlt    
das    
nop
movsl
or
popa   
ret
pop
test
adc
add
js
fcomp
add
mov
xlat
iret   
mov
jp
pusha  
scas
hlt    
fcoml
test
adc
push
cmp
daa    
jle
ret
adc
aaa    
mov
mov
bswap
jne
xlat
in
ret
and
inc
dec
fisttpll
pop
and
jp
jmp
xor
out
divl
sarl
or
hlt    
xlat
cs in
sbb
or
rolb
and
adc
fbstp
cs cmp
sub
out
(bad)  
fwait
sub
and
leave  
out
lock in
adc
rorb
adc
aaa    
pop
xchg
fwait
(bad)  
bswap
jne
xlat
adc
push
dec
jno
dec
inc
mov
aaa    
pop
xchg
xchg
(bad)  
bswap
jne
xlat
in
xlat
sub
fs cmp
out
cmp
mov
adc
aaa    
mov
(bad)  
(bad)  
bswap
jne
xlat
in
fldl
xor
adc
mov
xchg
leave  
and
fidivl
or
mov
or
not
cs in
sbb
and
(bad)  
fwait
sub
and
out
lock in
adc
iret   
(bad)  
cmp
popa   
insl
sti    
mov
sub
mov
mov
bswap
jne
xlat
jmp
fsubrl
xor
mov
in
iret   
xor
mov
shr
out
jl
and
outsl
mov
jle
xor
test
bound
repnz sub
xchg
jnp
adc
fbstp
cs cmp
pop
xor
jp
scas
cmc    
fcoml
test
adc
sbb
insl
push
ret
out
dec
adc
aaa    
mov
(bad)  
(bad)  
bswap
jne
xlat
push
mov
fucomip
cmp
sub
xchg
leave  
sbb
adc
cmp
cmp
test
(bad)  
fbstp
cs cmp
pop
dec
loop
iret   
mov
jp
pop
(bad)  
repnz fcoml
test
adc
or
pop
scas
mov
in
ror
xor
mov
sbb
cmp
sub
xchg
leave  
pop
cli    
or
mov
xchg
jnp
adc
fbstp
cs ds cld 
sbb
pop
push
add
and
ret
in
adc
leave  
xchg
adc
leave  
or
mov
ret
pop
test
adc
sbb
push
or
scas
aam
iret   
mov
jp
bound
dec
adc
sbb
push
or
test
sub
mov
(bad)  
(bad)  
bswap
jne
xlat
sbb
js
imul
cmp
sub
xchg
leave  
and
xor
pop
leave  
lcall
or
hlt    
xlat
cs in
sbb
add
xor
daa    
xchg
jnp
adc
fbstp
cs into 
popf   
sti    
xor
push
and
cmp
cmp
xchg
(bad)  
hlt    
jmp
into   
test
ds add
jp
pop
(bad)  
lock fcoml
test
adc
xor
jecxz
pop
and
jp
icebp  
ror
xor
mov
sbb
rcr
dec
outsl
fucomip
cmp
sub
xchg
leave  
das    
jmp
fs add
jecxz
inc
mov
jl
and
xchg
xabort
cs in
sbb
pop
(bad)  
xor
adc
pcmpeqw
sarb
or
in
sbb
or
sub
jg
int3   
in
push
push
addr16 dec
push
and
(bad)  
gs pop
aas    
stos
fst
pop
and
jp
jmp
xor
out
in
ret
mov
or
(bad)  
xlat
cs in
sbb
add
cmp
imul
(bad)  
out
jl
and
imul
sbb
add
fldt
adc
sti    
sub
jne
stc    
(bad)  
out
jl
and
push
cmc    
xlat
cs in
sbb
adc
dec
pop
add
repz lock jnp
adc
fbstp
cs cmp
out
dec
add
mov
or
aaa    
and
ret
in
adc
out
out
push
push
call
scas
hlt    
fcoml
test
adc
adc
ret
adc
aaa    
mov
mov
bswap
jne
xlat
adc
pop
or
fisttpll
pop
and
jp
jmp
xor
out
shrl
jl
and
gs mov
jle
xor
xlat
pushw
out
in
and
ds xchg
jnp
adc
jbe
cs cmp
out
dec
add
popa   
ret
pop
test
adc
xor
adc
aam
iret   
mov
jp
scas
cmc    
fcoml
test
adc
aas    
out
mov
dec
adc
aaa    
mov
mov
bswap
jne
xlat
pop
rcr
xor
cld    
pop
cmp
cmp
mov
sahf   
xor
out
ret    
movsb
leave  
push
aas    
es iret 
ret    
add
add
mov
mov
aaa    
pop
xchg
xchg
(bad)  
bswap
jne
xlat
in
mov
push
add
or
pop
xchg
xchg
(bad)  
bswap
jne
xlat
jmp
fsubrl
dec
add
dec
outsb
jmp
dec
adc
aaa    
mov
mov
bswap
jne
xlat
jmp
fsubrl
aaa    
fnstcw
and
jp
mov
ret
mov
sbb
ret
dec
cmp
out
dec
add
icebp  
(bad)  
xor
mov
sbb
cmp
pusha  
cmc    
ret
adc
mov
xchg
leave  
add
push
push
fnstsw
jl
and
push
in
sbb
or
(bad)  
je
out
(bad)  
fwait
sub
and
xlat
out
lock in
adc
leave  
fdivl
adc
mov
cmp
cmc    
ret
fwait
sub
and
aad
lock in
adc
roll
and
dec
jp
jle
jmp
cmp
enter
fbstp
cs xor
push
cmp
cmc    
out
dec
add
adc
jbe
cs cmp
out
dec
add
(bad)  
xor
jmp
ja
hlt    
cmp
into   
out
hlt    
jmp
lds
sbb
in
xchg
jnp
adc
fbstp
cs cmp
out
dec
add
mov
jne
sub
pop
mov
pop
adc
rorb
ret
mov
(bad)  
fcomp
pop
test
adc
sbb
in
cmc    
xor
or
mov
jp
jbe
fcmovu
pop
test
adc
dec
jmp
or
in
cmp
xchg
or
pusha  
scas
hlt    
fcoml
test
adc
or
icebp  
sbb
cmc    
(bad)
mov
(bad)  
(bad)  
bswap
jne
xlat
adc
shl
cmp
sub
mov
xchg
leave  
add
sub
imul
inc
outsl
sub
push
xlat
pop
and
jp
icebp  
(bad)  
xor
bound
cmp
sub
fstps
iret   
std    
mov
xchg
leave  
sbb
and
xchg
jnp
adc
fbstp
lds
rclb
sub
and
ret    
out
lock in
adc
leave  
mov
cli    
popf   
and
rcl
iret   
mov
jp
scas
cmc    
fcoml
test
adc
dec
push
adc
dec
adc
aaa    
mov
mov
bswap
jne
xlat
in
mov
cmp
mov
lea
out
ret    
test
jae
cmp
(bad)
xlat
pop
and
jp
mov
ret
mov
sbb
xor
adc
cmp
or
or
icebp  
(bad)  
xor
mov
bound
cli    
sbb
cmc    
fstps
iret   
loope
loopne
pop
(bad)  
leave  
sbb
adc
jne
sub
or
not
cs in
sbb
and
fwait
sub
and
xlat
out
lock in
adc
fsubr
data16 add
push
cmc    
(bad)
and
ret
in
adc
fdivr
xor
ja
sarl
out
or
pop
(bad)  
lock fcoml
test
adc
inc
mov
or
in
fmul
xor
lcall
xor
or
cmc    
xlat
cs in
sbb
adc
sbb
pop
inc
addl
fbstp
cs xor
push
cmp
or
movsb
ljmp
aaa    
and
ret    
out
lock in
adc
(bad)  
repz xor
stos
iret   
xlat
iret   
mov
jp
popa   
ret
pop
test
adc
or
cld    
xor
stos
iret   
xlat
iret   
mov
jp
jne
ret    
fcoml
test
adc
xor
data16 jb
ret    
pop
push
aas    
add
mov
fwait
sub
and
shr
lock in
adc
aam
adc
xchg
inc
adc
dec
ret    
in
scas
sbb
mov
pop
adc
fsubrp
sbb
ret    
xchg
inc
adc
xchg
mov
(bad)  
fcomp
pop
test
adc
xor
sbb
or
inc
fisttp
iret   
mov
jp
je
fcomp
pop
test
adc
xor
data16 sbb
jle
pop
inc
loop
iret   
mov
jp
pop
(bad)  
repnz fcoml
test
adc
dec
dec
sbb
test
sahf   
xor
out
enter
pop
into   
hlt    
sub
cmp
sub
xchg
leave  
add
sbb
dec
lret   
cld    
xor
or
icebp  
xlat
cs in
sbb
adc
or
(bad)  
aaa    
and
out
lock in
adc
aad
pop
pop
push
jb
mov
in
(bad)  
bswap
jne
xlat
pop
mov
hlt    
popf   
cmp
sub
pop
(bad)  
leave  
sub
and
add
pminsw
(bad)  
out
jl
and
outsl
mov
jle
xor
into   
fnstsw
out
cmp
xchg
jnp
adc
fbstp
lds
iret   
mov
jp
jbe
fcmovu
pop
test
adc
sbb
pop
paddw
or
jne
ret    
fcoml
test
adc
xor
data16 jno
jbe,pt
std    
jmp
push
cmc    
(bad)
and
out
lock in
adc
rorb
sbb
push
and
clc    
xor
pop
mov
pop
adc
int
cmp
dec
adc
aaa    
mov
mov
bswap
jne
xlat
adc
add
xor
or
and
jp
in
fmul
xor
mov
out
jl
and
gs mov
jle
xor
sbb
paddw
xchg
jnp
adc
fbstp
cs into 
and
or
mov
das    
mov
and
int
lock in
adc
leave  
mov
imul
and
stos
neg
pop
test
adc
or
das    
(bad)  
bound
mov
adc
aaa    
mov
(bad)  
(bad)  
bswap
jne
xlat
push
mov
sbb
fs cmc 
iret   
cmp
sub
pop
(bad)  
leave  
sbb
push
xor
(bad)  
out
jl
and
gs mov
jle
xor
shrb
pusha  
pop
dec
dec
jns
xor
into   
out
hlt    
jmp
xor
push
cmp
add
mov
jle
xor
into   
out
hlt    
jmp
xor
push
cmp
add
sub
sub
xor
cwtl   
neg
hlt    
jmp
cmp
sbb
pop
jnp
or
into   
and
mov
pop
adc
fdiv
and
cmp
or
mov
jp
arpl
icebp  
fcoml
test
adc
xor
int
cmp
mov
outsl
insb
pop
aad
adc
aaa    
sub
push
inc
inc
sti    
push
lcall
repz lret 
pop
int3   
push
push
movsb
cltd   
(bad)  
aaa    
sti    
push
pop
inc
add
clc    
jno
ffreep
shrl
pop
iret   
pop
fistp
test
stos
xchg
push
xchg
mov
loop
out
(bad)  
sbb
dec
rorl
fsubrs
inc
mov
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
fsubl
add
aas    
xor
pop
iret   
jg
xor
cmp
(bad)  
scas
mov
mov
(bad)  
sub
sarb
push
scas
pusha  
int3   
jnp
pop
and
push
jbe
cmp
cmp
push
aad
or
dec
fs inc
inc
push
jp
dec
outsb
and
or
mov
pushf  
jnp
add
jne
int3   
fs stos
stc    
push
dec
movsl
or
clc    
je
lret   
adc
lods
dec
jmp
lret   
sbb
mov
cmpsb
cld    
out
mov
inc
cmp
push
lret
sbb
pop
pop
mov
leave  
dec
sub
enter
(bad)  
outsb
(bad)  
dec
(bad)  
mov
in
out
xor
(bad)  
jbe
sub
jl
dec
xor
out
aam
fdiv
mov
rclb
testl
cmp
cmpsb
jl
lahf   
fbstp
add
aam
fdiv
mov
push
iret   
pop
clc    
or
out
inc
add
fsubp
or
jle
push
mov
jp
jl
sub
mov
(bad)  
mov
ja
push
mov
test
lret
mov
lea
inc
fcoml
outsl
jl
add
jg
ret    
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
sti    
dec
sub
sarb
out
ja
addl
jge
mov
pop
fdivrl
sahf   
in
inc
push
fist
fwait
sub
pop
arpl
lret
xchg
std    
nop
mov
mov
adc
lods
cmc    
icebp  
cpuid  
(bad)  
(bad)  
dec
fdivr
xchg
cwtl   
cmpsb
inc
adc
pop
lret   
movsl
outsb
shrb
es data16 cmp
loopne
(bad)  
dec
adc
loop
xchg
jns
jns
rorb
xchg
nop
(bad)  
ja
loope
jle
xchg
leave  
rcrb
test
pop
push
sub
add
rcrb
js
pop
cmpsb
mov
sarl
cmp
mov
fdiv
mov
sahf   
pop
adc
sub
shll
dec
je
xchg
into   
jmp
jnp
or
jmp
mov
xor
push
out
mov
push
adc
jge
or
dec
fisubr
movsl
out
cs ret 
scas
pop
xchg
add
(bad)  
fsubl
xchg
in
fwait
mov
fisttp
ret
pop
add
(bad)  
jle
xchg
mov
loop
xor
lds
andl
mov
adc
cwtl   
inc
xchg
call
pop
sarb
jp
out
cltd   
xor
cmpsb
addr16 jns
add
xchg
adc
inc
int3   
jg
adc
or
pop
cmp
push
mov
push
add
jb
or
aam
pop
shrb
les
pop
je
or
imul
jmp
xlat
insl
data16 mov
jns
mov
clc    
inc
dec
ljmp
jno
cmp
gs gs repz
pop
or
hlt    
mov
out
xlat
iret   
fdiv
mov
and
mov
out
xlat
iret   
fdiv
mov
xor
iret   
add
xor
jg
push
inc
lcall
jo
neg
lahf   
xchg
mov
sbb
and
jb
dec
outsb
sbb
lea
outsb
jnp
lods
adc
xchg
adc
jno
rolb
sbb
sub
jne
jno
imul
xor
cmp
or
jae
arpl
sub
les
loope
add
push
pop
or
sti    
mov
imul
mov
cwtl   
jns
and
add
push
and
sbb
ds xor
(bad)  
xchg
push
add
pop
shrb
xor
xor
rsqrtps
jne
decb
shrl
inc
jl
dec
xchg
mov
movsb
popf   
mov
mov
out
xlat
iret   
pop
cmc    
add
out
ror
frstor
popf   
or
jae
cmpsb
leave  
xchg
int3   
mov
pop
js
mov
fdiv
mov
outsb
xlat
dec
fdiv
mov
loop
mov
add
push
mov
jmp
out
dec
cmc    
mov
out
xlat
iret   
pop
hlt    
or
outsb
stos
ja
leave  
insl
ret    
hlt    
daa    
pusha  
jbe
jno
push
pop
dec
adc
lods
xor
jl
fcomip
mov
out
xlat
dec
fdivl
icebp  
das    
mulb
cmpsb
loopne
negb
imul
mov
test
jnp
and
pop
jne
xchg
mov
add
ss
push
lods
xor
arpl
lods
and
and
inc
pushf  
es stc 
lock mov
sbb
mov
test
push
adc
loop
sub
pop
subl
aas    
je
xchg
pop
daa    
mov
leave  
mov
aaa    
(bad)  
cli    
xor
sub
or
or
adc
mov
mov
cmp
test
push
jge
aas    
in
jae
stos
push
les
inc
(bad)  
test
bnd je
loop
out
xlat
ret    
push
loope
xchg
push
jb
rolb
cmp
es lahf 
clc    
mov
ret    
sub
xchg
push
jb
shl
sahf   
inc
mov
pushw
dec
push
cmp
dec
out
jg
rorl
(bad)  
add
in
in
(bad)  
test
icebp  
adc
test
out
imul
xchg
gs or
sub
clc    
mov
sub
adc
push
dec
mov
pop
mov
fsubl
or
pop
or
andb
xchg
inc
mov
stc    
sarb
push
push
jmp
out
jg
pop
sub
das    
sbb
jae
or
sub
push
std    
xchg
std    
insb
lret   
pop
popa   
cli    
mov
mov
add
sub
jnp
mov
ret    
ljmp
(bad)  
dec
in
fdivrl
mov
push
dec
push
push
and
mov
xchg
pop
and
or
popa   
add
inc
fs nop
enter
ss stos
insb
cmp
movb
gs inc
mov
repz test
push
sub
ret
(bad)  
xchg
add
inc
dec
daa    
outsl
adc
in
rolb
mov
js
mov
jne
fsubl
inc
sub
adc
sub
dec
jp
jl
or
outsb
inc
sub
ror
push
dec
push
lds
cmp
mov
repz jle
sub
inc
dec
pop
jnp
or
jmp
aaa    
mov
insb
push
pop
lea
jns
rorb
aas    
jp
das    
mov
jecxz
push
dec
push
stos
xchg
loop
xchg
adc
(bad)  
jbe
cwtl   
lds
push
lods
shrl
aam
and
xchg
xchg
outsl
add
mov
and
int
dec
jno
push
cmp
insl
adc
inc
sub
icebp  
mov
mov
and
jg
or
add
cwtl   
adc
adc
bound
pushf  
push
adc
jmp
adc
add
(bad)  
jecxz
in
mov
mov
lahf   
mov
fwait
sub
and
shr
mov
adc
stos
(bad)  
mov
lea
addr16 push
or
aaa    
and
mov
inc
test
or
cmc    
test
cs mov
xor
and
xchg
jnp
adc
pop
icebp  
daa    
gs or
out
dec
adc
aaa    
dec
icebp  
test
sub
jnp
adc
dec
in
ficoml
sub
dec
jecxz
(bad)  
xor
adc
fdiv
popf   
cmp
sub
and
mov
outsl
xchg
mov
add
sbb
inc
ss xchg
xchg
and
lock xchg
popl
mov
(bad)  
ja
mov
dec
mov
outsl
in
dec
push
pop
fistpl
sbb
stos
and
sub
cmp
push
dec
lret
mov
ret
pop
dec
mov
out
dec
jae
xlat
addl
pop
push
pusha  
and
cli    
pop
iret   
fcoml
fstpt
add
(bad)  
mov
xor
and
xor
shr
sub
dec
add
inc
cmp
xchg
inc
out
lret
mov
iret   
(bad)  
insb
adc
xlat
iret   
fdivl
mov
rorb
out
xlat
ja
mov
nop
add
mov
adc
iret   
fdiv
cmp
and
iret   
inc
iret   
mov
dec
mov
xchg
cmp
out
dec
or
fnstenv
fdiv
mov
xlat
data16 insb
popf   
sub
iret   
fdivl
adc
out
xlat
fildl
pop
int3   
movsl
dec
xchg
add
mov
arpl
jle
mov
(bad)  
sbb
jl
test
iret   
sbb
dec
pop
das    
add
out
mov
jg
pop
jae
jae
fdiv
mov
cs fwait
mov
xlat
iret   
fmul
mov
add
lret
or
les
jecxz
sbb
adc
(bad)  
xlat
adc
xor
es adc
inc
jno
rcll
jp
or
mov
adc
popf   
decl
inc
add
cmp
and
sub
pop
adc
sarl
dec
and
jmp
es or
hlt    
mov
out
xlat
iret   
fdiv
mov
push
andb
iret   
fdiv
mov
out
xlat
daa    
adc
iret   
cld    
sub
test
out
mov
scas
(bad)  
les
mov
mov
and
(bad)  
mov
mov
ret
xchg
out
imull
call
lods
pop
notl
push
or
out
fisubl
inc
addr16 pop
or
or
cld    
loop
mov
xor
push
dec
jge
insl
inc
jge
push
jae
lret   
(bad)  
repz in
lods
add
inc
adc
icebp  
insl
daa    
negb
daa    
daa    
ja
fsubl
add
cmp
add
jns
jns
rorb
fistpll
and
mov
push
les
xorb
stos
fisttpll
sbb
xchg
pop
sbb
sub
mov
cmp
cmp
cwtl   
loope
push
subl
(bad)  
(bad)  
jmp
aaa    
sbbl
sub
push
aaa    
push
jae
mov
cs daa 
pop
adc
or
jnp
mov
clc    
inc
cmpsl
dec
out
stos
sub
test
xchg
mov
mov
loope
cmp
movsb
dec
iret   
and
jae
insl
pop
shll
out
sti    
repz aam
or
cmp
in
inc
das    
lea
scas
out
outsb
(bad)  
jne
fcoml
xchg
fnop   
and
repnz in
stos
mov
jbe
insl
lea
or
mov
sbb
pslld
cmp
xchg
mov
outsl
add
(bad)  
pop
ficoml
in
xlat
(bad)
or
pop
jo
aad
lods
jb
inc
arpl
fcmovnu
mov
(bad)  
negb
cmpsb
mov
jbe
or
bound
or
out
cmp
add
imulb
xchg
fdiv
dec
cld    
std    
xchg
push
std    
popl
xor
cmp
add
adc
inc
das    
sarb
fdivrs
mov
ss pop
pop
adc
inc
push
jbe
mov
cmpsb
in
out
in
inc
fimul
movsb
xor
cmp
jecxz
xchg
ljmp
add
scas
imul
cmc    
mov
dec
mov
sbb
pop
jns
mov
lock jnp
hlt    
insl
and
mov
inc
xchg
ja
out
stos
popa   
push
addr16 mov
mov
loop
andb
add
cmpsb
mov
jbe
sub
mov
sbb
(bad)  
sub
pop
mov
sbb
int3   
negb
daa    
daa    
ja
xchg
shr
mov
fdiv
dec
cld    
mov
pop
or
les
jecxz
lock jbe
mov
inc
cmp
jge
das    
hlt    
add
cmpsb
xchg
push
jno
or
(bad)  
lea
(bad)  
arpl
mov
cmp
imul
sub
pop
or
repnz in
stc    
std    
xchg
cmc    
pop
int3   
xor
test
dec
cmpsb
push
mov
or
inc
ret
fcmovnu
test
and
mov
repz xchg
pop
mov
inc
fdivl
xchg
mov
pop
xchg
dec
int
mov
test
mov
fwait
test
daa    
daa    
ja
fsubl
or
inc
es data16 cmp
xchg
xchg
ficoml
mov
pop
fildl
fsubrp
aad
mov
sub
and
rolb
add
xor
xor
dec
lods
xchg
push
jb
(bad)  
outsl
nop
repnz repnz int3 
mov
imul
add
xchg
(bad)  
icebp  
mov
jg
xor
and
sub
dec
add
call
dec
ss or
int3   
dec
popf   
dec
pop
jns
mov
call
fcomps
cli    
cmp
inc
int3   
ja
(bad)  {%k7}
fnstsw
and
mov
and
mov
loope
daa    
fdivl
jle
jbe
ljmp
pop
dec
ljmp
(bad)  
int
mov
test
adc
in
push
daa    
mov
aad
jle
popa   
mov
es iret 
outsb
xchg
out
mov
loop
inc
mov
add
cmpsb
mov
jbe
sub
mov
cmpsl
inc
mov
mov
imul
icebp  
cpuid  
icebp  
nop
add
int3   
lods
sbb
lcall
(bad)  
jo
or
sub
shlb
out
or
clc    
add
xor
(bad)  
(bad)  
in
push
imul
jno
adc
loopne
xchg
sub
out
xchg
repz sub
jle
bound
bound
jae
mov
nop
and
imul
daa    
cmp
sub
sbb
pusha  
ja
xchg
insb
sub
sub
cmp
mov
jbe
mov
iret   
iret   
mov
pusha  
add
js
ss adc
sub
nop
aas    
cltd   
sbb
roll
iret   
mov
pusha  
add
sarl
jno
pop
mov
mov
adc
in
mov
jae
inc
lea
and
jbe
ljmp
pop
dec
ljmp
(bad)  
int
out
fwait
cwtl   
clc    
mov
jmp
mov
mov
cltd   
dec
jb
sahf   
cmp
out
stc    
test
mov
gs clc 
in
or
mov
popa   
enter
jo
xor
(bad)  
popf   
dec
pop
jns
mov
fs xchg
pop
mov
add
pop
cli    
cmp
es pop
jge
(bad)  {%k7}
fxam   
mov
loope
mov
imul
inc
sbb
aad
dec
fdivr
xchg
ds out
mov
push
les
push
sarl
jnp
or
jmp
aaa    
test
jl
mov
pop
jmp
sar
mov
or
lret
jecxz
enter
int
push
pop
cwtl   
rolb
mov
sub
mov
sbb
stos
pmulhw
in
jbe
sub
(bad)  
push
sbb
pop
stc    
sarb
sarb
push
jl
(bad)  
sub
int3   
jl
jmp
movl
push
aad
addr16 jns
mov
pop
inc
push
popa   
out
test
or
int3   
(bad)  
xchg
jae
pop
mov
jle
xlat
cmpsb
or
bound
cwtl   
pop
aad
or
jb
inc
arpl
ljmp
mov
jbe
or
lods
or
xor
pop
jecxz
insb
mov
(bad)  
pop
mov
lahf   
into   
jnp
cmp
(bad)  
mov
(bad)  
lods
fistp
imul
loopne,pn
popa   
jp
mov
lcall
rolb
mov
sub
jbe
ljmp
pop
dec
ljmp
(bad)  
int
pop
leave  
cmp
mov
add
mov
ljmp
mov
out
push
push
sahf   
popa   
in
jp
in
std    
test
into   
push
add
add
xchg
icebp  
addr16 pop
push
lods
xchg
sub
adcb
or
xor
pop
inc
dec
push
jb
sbb
jb
mov
test
ljmp
rolb
pop
mov
push
mov
pop
test
adc
imul
sar
mov
sub
mov
enter
hlt    
xchg
aaa    
inc
in
ret
outsl
iret   
sar
rcrb
cmp
and
mov
inc
push
sti    
xlat
leave  
mov
mov
cmp
and
pop
add
ljmp
(bad)  
int
out
fwait
test
daa    
arpl
mov
jno
xchg
ficompl
lods
nop
icebp  
stos
je
push
loop
out
arpl
push
loop
cmpsl
in
xlat
stos
xchg
popf   
jns
daa    
movsl
push
lock stc 
pop
clc    
inc
add
dec
stos
inc
sub
adc
push
mov
add
xchg
repz fild
push
sbb
add
mov
add
sti    
xlat
cmpl
cmpsl
xor
js
dec
fimull
mov
bound
(bad)  
gs add
jecxz
sbb
test
xlat
xlat
adc
addr16 dec
push
sti    
xlat
movsb
insl
push
cwtl   
jno
xchg
ficompl
rolb
mov
sbb
rorl
iret   
fdiv
mov
out
xlat
iret   
aam
adc
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
fildll
stos
pushf  
adc
mov
sbb
dec
mov
roll
out
enter
into   
lahf   
out
push
dec
sti    
and
lea
inc
in
mov
or
push
stc    
arpl
out
xor
fistpl
add
pusha  
out
push
outsl
inc
bound
push
outsb
push
dec
inc
je
inc
adc
jne
sub
sub
cmp
insl
repnz dec
movsb
(bad)  
fwait
pop
xchg
jecxz
jae
rcrb
mov
sbb
sub
mov
hlt    
aas    
hlt    
xchg
dec
popa   
or
or
das    
or
in
add
lods
out
push
cmp
inc
movsb
rorl
aaa    
fsub
jmp
shll
loope
out
add
aas    
ljmp
out
aam
fdiv
mov
push
iret   
pop
testl
push
dec
sarb
in
pop
mov
jle
push
push
(bad)  
jne
jl
sub
mov
das    
pusha  
or
mov
lahf   
(bad)
add
ret    
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
sbb
mov
repnz pop
jb
xlat
or
xchg
lcall
jl
pop
mov
xchg
pop
aam
jnp
ret
in
mov
ror
xor
add
mov
rcrl
gs sbb
mov
pop
cmc    
es ljmp
xchg
adc
push
and
imul
lods
aas    
cld    
jle
xor
push
ret    
ds mov
cmpsb
in
jle
in
fwait
xchg
push
in
ljmp
lret
xor
mov
into   
lcall
or
dec
scas
sbb
sbbl
cmp
mov
(bad)  
repnz in
rorb
inc
lea
xor
add
mov
mov
dec
rcrl
inc
in
lods
dec
(bad)  
(bad)  
outsl
cmp
movsb
outsl
pusha  
cmp
(bad)  
cmpsl
mov
mov
mov
add
in
lods
inc
aaa    
cmpsl
icebp  
dec
in
imul
(bad)  
in
or
(bad)  
stos
mov
fsubl
imul
(bad)  
mov
cmp
jecxz
mov
pop
(bad)  
mov
in
xor
pop
pop
ljmp
mov
adcl
call
xlat
and
and
jae
in
out
insl
in
xor
(bad)  
sti    
mov
dec
push
cmp
inc
xchg
negl
add
fldl
pusha  
cld    
clc    
jecxz
rclb
push
jp
scas
clc    
push
xlat
xor
and
sarb
mov
inc
stos
scas
cld    
xchg
fst
dec
testl
fimull
cmp
in
adc
(bad)  
lret   
icebp  
cmp
mov
pop
fstpt
nop
dec
xchg
enter
hlt    
mov
movsb
or
jnp
aaa    
pop
jg
test
jp
fdiv
not
jle
jno
push
or
xor
stc    
aaa    
add
(bad)  
push
cmp
cmp
or
rolb
sub
fwait
in
(bad)  
sub
ss push
or
stos
stc    
test
sub
push
ror
push
pop
mov
movsb
stc    
aaa    
add
std    
cltd   
mov
dec
addr16 dec
and
lds
sbb
outsb
enter
aas    
pusha  
jl
in
adc
lahf   
loop
xor
xlat
xor
dec
rcrb
negl
pop
outsl
sub
das    
or
xor
les
inc
inc
cs ljmp
push
inc
cmp
(bad)  
out
adc
jmp
or
sbb
dec
enter
pop
addr16 ss push
or
stos
stc    
test
sub
push
shll
sbb
outsb
enter
ss dec
sar
dec
or
mov
sbb
xor
dec
rcrb
negl
pop
outsl
sub
das    
or
xor
imull
data16 cmp
inc
jb
adc
gs lret
in
and
psrad
shrl
ret    
add
dec
dec
pushf  
fsubrs
inc
xchg
sub
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jae
leave  
adc
(bad)  
(bad)  
insb
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lock adcb
inc
dec
popaw  
xor
jb
push
jns
push
push
ds cli 
sub
fs inc
inc
je
aas    
and
aaa    
push
inc
and
(bad)  
mov
sub
push
out
jbe
inc
pop
dec
jg
jbe
sub
or
test
jg
dec
inc
add
xor
dec
inc
jb
aaa    
cmp
mov
rcpps
or
je
push
or
hlt    
jmp
or
dec
jb,pt
sysret 
push
inc
out
iret   
fcompl
inc
cmp
and
adc
(bad)  
out
xlat
sub
jno
dec
push
xor
add
inc
add
and
add
outsb
inc
bswap
hlt    
adc
das    
or
jbe
bswap
hlt    
mov
or
or
or
sub
sub
sub
fdiv
mov
jbe
xor
push
iret   
fsubl
push
outsb
push
xor
jle
(bad)  
out
xlat
fistpll
dec
dec
jb
xor
push
or
out
(bad)  
out
loope
sub
push
ds xor
mov
or
or
adc
jno
aaa    
or
dec
inc
outsb
inc
bswap
hlt    
sbb
push
adc
jp
out
xlat
iret   
rcll
aas    
add
xor
dec
cmp
or
push
fcmovnu
hlt    
mov
or
aaa    
and
aas    
adc
mov
out
sti    
aaa    
and
inc
enter
or
cmp
sbb
inc
sub
sbb
mov
out
sti    
aaa    
and
inc
jb
xor
ja
or
iret   
enter
jb
xor
dec
inc
outsb
inc
bswap
hlt    
push
aas    
jg
xor
outsl
jp
push
xor
adc
das    
xor
pop
inc
inc
push
or
jo
inc
jns
cmp
hlt    
mov
push
push
mov
jl
jge
xor
ja
inc
outsb
push
aaa    
sub
xlat
ret    
cmp
dec
push
jbe
xor
sbb
jp
daa    
xor
mov
out
in
sub
cmp
push
add
sub
xlat
iret   
and
insb
gs
js
in
ficomp
decb
in
sub
or
ret
push
ret
leave  
fwait
jecxz
rorl
jp
adc
adc
cmp
or
dec
sbb
cmc    
les
mov
rcll
and
push
nop
fildll
jnp
adc
movsb
pop
push
enter
or
pushf  
or
andl
ja
mov
cli    
iret   
cli    
mov
les
ds push
xchg
cmp
mov
xchg
adc
push
fisubrl
je
out
adc
jge
xor
in
add
(bad)  
xchg
adc
jne
mov
or
push
scas
in
clc    
mov
pop
ds icebp 
les
pop
sarl
dec
jge
mov
inc
add
fisttpl
(bad)  
jecxz
dec
call
hlt    
popf   
cmp
sub
sub
jno
mov
(bad)  
out
add
mov
je
xchg
cmpl
cltd   
add
xchg
loop
mov
dec
sbb
mov
icebp  
mov
pop
sub
jle
xor
int3   
xor
test
(bad)
xchg
jae
add
aaa    
or
or
dec
mov
jp
push
pop
(bad)  
fsubs
(bad)  {%k6}{z}
mov
or
inc
loopne
(bad)  
or
stc    
ja
xchg
and
inc
mov
jb
inc
dec
dec
or
(bad)  
fisttpl
pop
adc
push
xchg
cmp
sub
decl
ret    
push
pop
mov
test
(bad)  
scas
scas
icebp  
mov
sbb
lea
cmp
sti    
inc
mov
gs test
and
lea
push
test
(bad)  
adc
push
push
xchg
mov
das    
insb
xchg
push
les
inc
(bad)  
stc    
pop
into   
addr16 xchg
pinsrw
jl
pop
mov
fwait
pop
fadds
or
cld    
mov
std    
pop
mov
inc
xor
ret    
push
pop
push
push
mov
mov
jae
mov
lock add
sub
leave  
jle
inc
and
xor
jb
ret
jb
add
addr16 mov
mov
mov
push
sub
cmp
cltd   
ret
lret
loop
imul
out
mov
pop
arpl
xchg
jnp
faddl
push
ret
adc
stos
pop
cld    
imul
xor
mov
loopne,pn
lcall
sbb
xchg
fbstp
int3   
adc
pop
stc    
pop
into   
addr16 mov
adc
pop
mov
leave  
cmp
fwait
xor
aad
sbb
xor
mov
sbb
mov
sub
and
(bad)  
call
mov
xchg
jnp
mov
jp
mov
jae
js
lock
or
adc
outsl
loop
add
sbb
insb
js
and
ja
fdiv
mov
icebp  
stos
not
clc    
mov
loopne
jmp
dec
push
sub
push
push
and
aaa    
pop
push
adc
pop
or
jp
int
and
mov
sub
and
(bad)  
call
test
xchg
(bad)  
jmp
mov
xchg
repnz xlat
pop
ss mov
mov
repz xlat
pop
xor
inc
jnp
mov
jp
mov
jae
js
lock mov
mov
mov
pop
(bad)  
jb
and
fisubr
lods
mov
pop
mov
notb
push
iret   
fcomip
mov
in
scas
lock fnop 
mov
loope
mov
xchg
mov
lea
(bad)  
mov
enter
mov
ror
(bad)  
in
(bad)  
(bad)  
nop
icebp  
sarl
lret   
mov
xlat
mov
scas
mov
out
cli    
mov
xchg
leave  
ret    
mov
mov
mov
test
(bad)  
mov
mov
jo
cmp
leave  
sbb
mov
push
push
in
pushf  
pop
ficom
sti    
or
adc
xchg
sub
cmp
cmp
lret   
aaa    
adc
jmp
push
sub
jnp
pop
pop
adc
inc
dec
sbb
mov
push
insb
iret   
(bad)  
adc
test
push
rcll
mov
das    
sbb
cwtl   
sbb
in
sub
out
in
cmp
add
jg
dec
adc
cmpsb
sbb
xchg
jnp
push
mov
adc
or
js
adc
sbb
test
sub
movsl
adc
(bad)  
cmc    
mov
mov
fcompl
mov
and
(bad)  
call
pop
test
cmp
int
hlt    
inc
aas    
cmpsb
(bad)  
cmpsl
insb
test
add
mov
decl
fidivr
int3   
fsubrl
hlt    
xlat
mov
mov
xor
cld    
mov
push
push
mov
jle
enter
std    
imulb
lret   
out
dec
pop
or
test
mov
faddl
sub
mov
and
mov
pop
(bad)  
movl
repz
hlt    
inc
sub
iret   
cmpsl
cmp
xchg
and
movsb
lock mov
mov
fnstsw
sti    
fsubrl
test
mov
mov
xor
repnz mov
push
aaa    
cmpsl
cld    
hlt    
xchg
mov
mov
iret   
je
(bad)  {%k6}{z}
fucomi
dec
pushf  
add
mov
mov
(bad)  
outsl
xchg
fcompl
mov
and
mov
movsb
(bad)  
movl
int
hlt    
inc
pop
inc
(bad)  
iret   
cmpsl
cmpsb
in
pop
out
xchg
xchg
iret   
mov
out
aas    
ret    
push
test
pop
pop
mov
add
xlat
fcmovu
insb
xor
xlat
mov
mov
xor
sbbb
hlt    
xchg
xor
enter
jecxz
mov
pop
out
dec
xor
movsl
adc
in
mov
rol
xor
popf   
pop
sub
xlat
mov
and
iret   
std    
xlat
pop
je
repnz movl
repz aam
inc
jae
adc
cmpsl
iret   
std    
mov
xchg
xchg
ss mov
adc
mov
fsubl
mov
rcr
es test
sub
mov
xor
xchg
adc
xchg
mov
and
fcomps
repnz adc
dec
mov
jns
test
mov
cs iret 
das    
fcompl
(bad)  
hlt    
repnz mov
sub
(bad)  
xchg
adc
hlt    
repz mov
sub
sub
lahf   
scas
out
adc
nop
xchg
mov
das    
lret   
sub
lahf   
movsl
jecxz
adc
nop
xchg
mov
xor
rcr
lahf   
mov
xchg
xchg
mov
xor
sub
lahf   
sbbl
mov
sub
sub
dec
adc
cwtl   
mov
xor
fcompl
and
push
out
xlat
fcompl
into   
lds
mov
dec
sub
jns
xor
aaa    
test
xor
xchg
arpl
xor
push
dec
sub
xchg
test
cs cmp
dec
push
cmpl
in
loop
popa   
in
jecxz
jb
fnstenv
dec
xlat
out
cmp
lea
call
sbb
pop
test
insb
cld    
pushf  
lock pop
jp
add
inc
xor
cmp
push
xor
sbb
mov
stos
cltd   
js
out
sbb
inc
cmp
ret
mov
inc
jge
push
test
jp
dec
xchg
xor
sub
les
push
pxor
mov
mov
mov
push
aam
jmp
push
out
(bad)  
ficomp
(bad)  
add
mov
cltd   
sub
outsb
push
scas
sub
aam
(bad)  
pop
jmp
jp
loope
test
fnsave
mov
xchg
das    
sub
test
mov
dec
xchg
cmpsl
fnstcw
stc    
cltd   
dec
test
in
fmull
mov
jle
fildl
sti    
fildl
mov
or
xor
pop
roll
sbbl
xchg
jbe
movsb
cmp
jbe
xchg
clc    
out
or
movsl
or
lods
jp
std    
push
jecxz
jb
fstps
push
xor
cmp
(bad)  
lret   
fsubr
dec
and
jl
fnsave
(bad)  
loope
mov
jnp
cmp
jg
sub
or
cmp
(bad)  
call
cld    
jl
or
pop
sub
aas    
add
sarb
loopne
and
sub
and
in
cmp
(bad)  
sub
(bad)  
xor
push
add
mov
es jecxz
je
xor
popl
mov
jg
add
daa    
sbb
pop
jecxz
sbb
lock push
adc
ljmp
inc
mov
push
hlt    
es mov
mov
xor
out
or
sahf   
enter
push
xchg
sub
jle
dec
jle
and
sbb
sub
inc
or
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
faddl
andl
repnz mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
shll
into   
shrl
mov
adc
pop
xchg
stc    
and
mov
or
(bad)  
iret   
fdiv
mov
out
incl
sbb
test
sbb
aaa    
lahf   
mulb
adc
ficoml
cmp
ss push
pop
cs push
and
adc
jle
fcoml
(bad)  
mov
add
xchg
(bad)  
xor
mov
jecxz
int3   
adc
dec
out
stos
mulb
ja
push
fsubrp
fimul
imul
jns
(bad)  
sbb
xor
inc
ljmp
scas
in
inc
adc
dec
loope
mov
jge
lds
inc
push
(bad)  
clc    
iret   
dec
scas
icebp  
xor
xchg
ss inc
push
adc
dec
sub
das    
out
test
dec
add
outsl
dec
cmp
insl
dec
ljmp
push
jg
pop
(bad)  
loope
sbb
pop
fnsave
jae
movsl
fidivl
push
jmp
lock test
xor
jno
ret    
add
leave  
(bad)  
sbb
inc
lea
hlt    
mov
out
(bad)  
(bad)  
inc
or
mov
add
cmp
scas
aad
pop
push
cmp
mov
jns
sub
push
repnz sub
adc
mov
scas
cmp
or
popa   
mov
cmp
cld    
(bad)  
sub
movsb
out
adc
daa    
add
jg
aad
out
xchg
sti    
and
mov
sub
ss aas 
or
push
push
enter
or
das    
inc
lock in
mov
push
(bad)  
(bad)  
out
xlat
adcl
(bad)  
pop
stc    
call
jno
imulb
pop
pop
add
lcall
dec
sub
das    
out
test
dec
add
outsl
dec
cmp
insl
dec
ljmp
push
jg
pop
(bad)  
loope
sbb
pop
stos
sub
mov
push
mov
adc
and
jb
repz jle,pn
in
pop
aas    
lfs
inc
lea
fsubl
push
sbb
imul
sub
adc
jns
(bad)  
sbb
ret    
(bad)  
push
(bad)  
int
jae
rcr
hlt    
mov
ljmp
and
loope
test
dec
adc
fnstsw
pop
push
inc
out
cs dec
xchg
ljmp
jmp
popa   
cwtl   
push
cltd   
daa    
les
bound
mov
sarl
cmpsl
aad
iret   
fdiv
test
out
lret   
pop
pop
daa    
ret
xor
jp
scas
test
pop
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
push
cmp
jno
scas
lret   
faddl
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
repz das 
pop
js
inc
xchg
sbb
xor
xor
fsubrl
xchg
jmp
icebp  
jno
out
js
aaa    
test
lods
cmove
int
mov
mov
test
outsb
inc
xchg
addr16 mov
mov
and
subl
dec
dec
cmp
mov
xchg
jmp
push
mov
clc    
arpl
das    
push
mov
loopne
add
loope
mov
lods
lcall
xchg
(bad)  
mov
dec
push
into   
add
jmp
push
cmp
lret
sbb
add
inc
or
hlt    
mov
out
xlat
iret   
sbb
addr16 jb
in
add
mov
out
xlat
iret   
fdiv
loopne
mov
cmp
jae
add
xor
jg
push
inc
lcall
jo
neg
lahf   
scas
(bad)  
les
mov
mov
and
mov
sbb
pop
jbe
sub
lods
loopne
das    
dec
xchg
mov
sbb
sub
jne
jno
imul
xor
cmp
mov
aad
mov
out
push
inc
stc    
pop
ret    
mov
cld    
repnz
fdiv
mov
call
sbb
mov
iret   
push
push
pop
fdivr
test
sub
sbb
sub
cmp
dec
sbb
add
push
inc
cmc    
cmpsb
xchg
and
push
loop
imul
xchg
movsl
outsl
stc    
ret
shll
mov
loope
pop
std    
loop
scas
icebp  
xor
xchg
or
aas    
cmp
test
sarb
sbb
push
test
sarl
add
out
xlat
iret   
fdiv
or
outsb
xlat
dec
fidiv
cli    
xchg
cmp
or
mov
dec
cmc    
mov
out
xlat
iret   
pop
hlt    
or
out
ror
(bad)  
daa    
sahf   
or
add
les
(bad)  
mov
mov
test
out
xlat
iret   
fdivl
call
icebp  
push
cmp
mov
pop
inc
add
push
xor
pop
in
jae
sub
enter
(bad)  
outsb
rorl
hlt    
xchg
js
int
push
sub
sbb
dec
imul
popa   
and
and
dec
mov
(bad)  
out
xlat
dec
fdivl
in
sub
sbb
jo
mov
pop
cmp
jnp
sub
enter
(bad)  
outsb
xlat
dec
fdiv
test
or
leave  
mov
dec
data16 into 
jp
fcmovnu
insb
push
push
iret   
fdivl
out
push
(bad)  
dec
jecxz
insl
loope
sbb
test
lods
lods
popf   
ret    
test
mov
hlt    
or
out
scas
leave  
ret
and
sbb
dec
cli    
aaa    
aaa    
enter
lahf   
orl
out
xlat
dec
fdivl
loopne
into   
cmp
aad
loop
jb
xchg
(bad)  
sbb
mov
pop
loopne
jno
sub
enter
(bad)  
outsb
xlat
dec
fdiv
mov
imul
stos
jle,pn
xor
fcmovnbe
cmp
add
cmpsl
jl
mov
push
pop
hlt    
mov
push
enter
shrb
xor
pop
arpl
insb
adc
repnz fwait
iret   
mov
out
xlat
iret   
fdiv
or
outsb
xlat
iret   
ret    
out
mov
pop
xor
and
pop
or
leave  
xchg
sub
sti    
pop
pushf  
sbb
dec
xchg
sub
mov
outsb
xlat
dec
fdiv
mov
add
push
daa    
ja
int3   
popf   
jecxz
out
pop
mov
iret   
pop
hlt    
or
outsb
lods
jno
and
and
decl
inc
jl,pn
xchg
mov
fwait
test
and
leave  
(bad)  
je
inc
push
jge
cld    
lret
scas
in
cli    
enter
leave  
(bad)  
mov
out
push
iret   
pop
hlt    
mov
in
sub
stos
sub
push
xor
cmp
push
pop
jg
scas
add
push
out
xlat
dec
fdivl
clc    
rcl
adc
xchg
icebp  
out
pop
jle
mov
xchg
pop
rcll
jns
out
xlat
dec
fbstp
(bad)  
call
fstl
test
aas    
add
pop
pop
lods
cmpsl
xlat
ja
(bad)  
mov
fwait
das    
fwait
pop
addr16
push
iret   
pop
hlt    
or
(bad)  
ficom
jg
pushf  
jmp
push
jbe
daa    
pop
xor
sbb
enter
(bad)  
outsb
xlat
dec
fdivl
cmc    
add
push
repnz sub
push
sahf   
iret   
push
xchg
in
mov
jl
fcomip
mov
out
xlat
dec
fdivl
cld    
sub
(bad)  
mov
rcl
pop
push
cmp
test
inc
push
adc
dec
fist
jl
lret
or
jl
popa   
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
dec
in
sbb
int3   
push
es dec
and
mov
sti    
adc
or
iret   
fdiv
mov
mov
xlat
jbe
xlat
iret   
fdiv
mov
out
leave  
pop
inc
and
jb
int3   
mov
in
pop
lret
add
out
test
out
enter
into   
lahf   
out
push
dec
sti    
and
(bad)  
aam
xchg
mov
or
dec
insl
push
stc    
arpl
xor
ret
jae
cmp
inc
bound
push
outsb
push
dec
inc
je
inc
adc
and
outsl
adc
and
mov
cmp
iret   
fcomip
mov
add
repz out
stos
divl
sub
or
cmp
push
(bad)  
iret   
xchg
mov
jge
add
bound
add
ljmp
adc
lret
sbb
loope
ljmp
xor
mov
out
aam
fdiv
mov
push
iret   
pop
(bad)  
or
sub
addr16 pushw
sti    
pop
add
es
xlat
iret   
fdiv
mov
out
xlat
iret   
cmp
ja
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
testb
mov
in
outsl
sbb
dec
mov
roll
out
enter
into   
lahf   
out
push
dec
sti    
and
(bad)  
aam
xchg
mov
or
dec
insl
push
stc    
arpl
xor
ret
jae
cmp
inc
bound
push
outsb
push
dec
inc
je
inc
adc
and
outsl
adc
push
in
das    
int3   
mov
cmpsb
fdivrs
loopne
in
fcompl
(bad)  
or
movsl
add
fist
inc
ja
mov
int
jae
add
ss push
cmp
repnz push
movl
iret   
fdiv
or
outsb
xlat
iret   
(bad)  
repnz mov
test
aaa    
in
lcall
inc
(bad)  
jo
cmpsl
inc
fcomps
fs repnz adc
(bad)  
mov
out
push
iret   
pop
hlt    
mov
xor
xchg
or
lcall
or
insb
xor
push
(bad)  
mov
out
xlat
iret   
pop
hlt    
or
out
stos
icebp  
fsubs
sahf   
or
adc
xchg
dec
fisubl
mov
ljmp
out
push
icebp  
push
loop
(bad)  {%k6}{z}
in
scas
scas
cmpsb
jecxz
lret   
idivl
sti    
pop
fs repnz dec
lcall
out
xlat
iret   
fdivl
out
push
repnz push
stc    
repz push
ficoml
push
jmp
pop
jle
dec
sbb
mov
aad
fdiv
mov
out
xlat
dec
fdivl
out
enter
push
push
enter
lods
sbb
daa    
dec
pop
xor
lock push
(bad)  
mov
out
xlat
iret   
pop
cmc    
add
out
scas
leave  
lret   
cmp
in
(bad)  
repnz mov
mov
dec
sub
movsb
xor
jl
fcomip
mov
out
xlat
dec
fdivl
loopne
leave  
adc
push
imul
lcall
mov
repnz sbb
adc
sub
xlat
iret   
fdivp
test
dec
adc
sbb
aaa    
push
loope
in
stos
rclb
fidivrl
mov
mov
popa   
pop
dec
bnd je
shll
enter
adc
adc
inc
pop
inc
psrad
fmull
(bad)  
outsb
(bad)  
aaa    
dec
pop
pop
lret   
in
icebp  
cmp
(bad)  
cltd   
add
xchg
mov
loop
rolb
mov
jnp
adc
push
aaa    
xchg
ss jbe
mov
add
ret    
adc
xor
or
xor
xchg
mov
sbb
sub
push
xlat
(bad)  
jae
adc
sbb
cmpsb
call
lret
sbb
pop
jg
movsl
or
aam
rorb
and
jb
mov
out
ss test
jae
add
sahf   
dec
movsb
addr16 sbb
xor
icebp  
sbb
jp
dec
popa   
or
(bad)  
cs mov
push
call
(bad)  
out
xlat
iret   
fdiv
mov
out
pop
(bad)  
dec
sub
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sbb
ja
push
push
daa    
faddl
sbb
jb
jg
not
lahf   
mov
mov
mov
cmp
pop
push
xchg
cmp
(bad)  
lods
or
loope
dec
idivb
or
adc
sub
outsb
in
xor
inc
or
inc
push
pop
jae
sbb
dec
adc
pusha  
jecxz
or
adc
movsl
mov
data16 jle
fstps
xor
mov
sub
dec
dec
rorb
(bad)  
mov
inc
mov
xchg
xor
xlat
or
pop
(bad)  
mov
cmp
adc
push
adc
fwait
lret   
data16 cmp
popa   
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
iret   
(bad)  
repnz mov
xchg
daa    
dec
jnp
xor
xchg
push
test
adc
les
add
aam
fdiv
mov
push
iret   
fdivr
mov
les
push
push
dec
jle
jp
pop
pop
iret   
push
cli    
and
cmc    
mov
out
xlat
dec
fdivl
icebp  
scas
std    
aas    
mov
dec
xor
xlat
je
les
or
scas
in
pop
jg
jmp
test
mov
mov
out
xlat
iret   
fdivl
out
xlat
icebp  
shl
stc    
pop
cmp
mov
stos
lcall
or
rorl
fdiv
or
outsb
xlat
dec
fnstsw
add
adc
mov
push
jg
(bad)  
mov
xlat
iret   
fdiv
or
outsb
xlat
iret   
(bad)  
in
sti    
xchg
and
jmp
insb
jl
ret    
push
aaa    
mov
lock jl
adc
(bad)  
mov
out
push
iret   
pop
hlt    
or
sarb
cmp
insb
test
sub
inc
xlat
jl
paddusw
fdiv
mov
push
iret   
fdivr
mov
add
ret    
adc
xor
or
scas
in
pop
pop
je
dec
pop
sub
(bad)  
xor
je
inc
out
xlat
mov
jmp
push
gs dec
rcrl
(bad)  
jne
add
inc
loope
stc    
mov
xlat
iret   
fdiv
or
outsb
aam
shr
jmp
xor
popa   
ss into 
in
scas
scas
cmpsb
jecxz
mov
adc
xlat
mov
mov
out
xlat
iret   
fdivl
out
xlat
(bad)  
int3   
in
sarb
dec
and
add
scas
push
std    
push
ss push
out
lock jae
dec
gs
enter
(bad)  
outsb
xlat
dec
fdivl
in
or
mov
xor
daa    
xor
pop
nop
jae
dec
gs
enter
(bad)  
outsb
xlat
dec
fdivl
cli    
sbb
jbe
stc    
lods
xlat
jl
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
(bad)  {%k6}{z}
mulb
out
movl
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
enter
push
pop
faddp
or
gs fmulp
cmp
xlat
test
and
adc
lds
daa    
dec
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
aam
sub
xlat
neg
cmp
(bad)  
aaa    
cltd   
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
jmp
mov
loope
adc
sbb
jmp
xor
pop
inc
inc
push
loopne
adc
inc
fwait
cwtl   
mov
pusha  
jb
add
and
mov
nop
(bad)  
mov
in
lret
lods
(bad)  
shll
fadd
jle
xor
jns
pop
int3   
and
js
dec
imul
jp
dec
js
mov
(bad)  
mov
add
and
and
or
lahf   
shlb
ret
les
sub
aam
sub
insl
sbb
rcll
jns
fisubr
cli    
push
cmpl
adc
fstpt
fistpll
pop
cld    
(bad)
xchg
imul
add
iret   
aad
or
sub
ret    
or
jg
xor
shrl
ds mov
ljmp
lods
jb
hlt    
push
adcl
sbb
imul
xchg
xlat
enter
rclb
lret
mov
mov
push
and
cmp
out
dec
xchg
pushf  
seta
out
jge
out
cmp
jp
and
nop
sub
pop
data16 mov
adc
push
pop
mov
inc
adc
arpl
mov
loope
fstpl
mov
jnp
pusha  
push
(bad)  
outsl
xchg
push
insl
jne
pushf  
adc
xchg
xor
enter
cmp
shlb
dec
pusha  
mov
out
mov
pop
push
xor
xlat
mov
outsl
xchg
adc
and
hlt    
or
jg
sub
push
mov
test
add
insb
out
dec
int
mov
out
sahf   
and
fsub
pusha  
(bad)  
or
push
ds std 
jl
and
inc
sub
cmpsb
jg
insl
in
int3   
sbb
sbb
pushl
push
adc
(bad)  
mov
pop
rorl
movsb
inc
lock push
test
xlat
mov
sbb
xchg
sub
pop
adc
mov
inc
repz inc
adc
sbb
pop
and
pop
dec
out
sahf   
and
sub
lock adc
pop
or
dec
and
test
add
mov
push
jl
in
sarb
stc    
stc    
or
push
lea
push
fldt
sbb
dec
jp
sbb
push
movsl
movsb
stos
lds
in
add
mov
jecxz
xchg
jge
pop
sub
sbb
jbe
inc
insl
in
mov
pop
mov
dec
xor
dec
ljmp
push
adc
inc
add
cmpsl
jmp
jo
mov
push
sbb
dec
fidivrl
ffreep
xchg
mov
dec
das    
mov
pop
pextrw
inc
jns
jns
rorb
cmpsb
scas
insl
sub
in
call
std    
push
and
mov
mov
loope
aas    
aaa    
and
(bad)  
out
adc
test
xor
dec
push
xchg
pslld
(bad)  
jae
xlat
add
out
mov
shrl
jae
loop
mov
test
or
xchg
scas
rcr
mov
in
pop
dec
xor
mov
cmp
mov
mov
mov
cmpsb
mov
pop
test
xchg
adc
in
xor
adc
and
js
jns
les
rcl
popl
aad
enter
add
inc
(bad)  
jne
lret
in
insl
or
dec
arpl
jecxz
out
(bad)  
xor
fnsave
shrb
mov
jae
or
sub
mov
or
inc
xor
mov
arpl
iret   
mov
push
inc
mov
loope
testb
loop
negl
in
repz push
pushl
lret   
call
pop
iret   
sub
or
jp
out
fwait
add
stos
xchg
stos
or
pop
push
pop
ss iret 
mov
push
push
push
lret   
aaa    
mov
sarb
push
fwait
imul
fimul
lods
clc    
fwait
mov
add
mov
fidivr
sbb
push
add
sbb
cwtl   
cmpsl
sbb
dec
lahf   
nop
or
cmpsb
in
pop
sar
pop
cmpsl
fs pop
push
gs out
mov
test
aam
xor
pushf  
inc
pop
fsts
scas
and
push
cmp
mov
xchg
sub
push
jmp
mov
cmpsb
cmp
xchg
cwtl   
inc
stc    
ret
call
adc
and
push
mov
icebp  
scas
lahf   
hlt    
popf   
cmp
sub
adc
iret   
and
aaa    
rol
call
fnstsw
jno
mov
(bad)  
(bad)
mov
mov
add
loope
lcall
sub
fstl
mov
push
ds sub
repnz lea
cld    
xchg
add
cld    
rcrl
(bad)  
xchg
out
pop
dec
(bad)  
or
xlat
movsl
lahf   
(bad)  
test
xchg
mov
xlat
aam
sahf   
test
or
mov
loope
push
daa    
inc
mov
inc
sbb
xor
nop
stos
dec
mov
int
ror
mov
sub
xchg
enter
fst
xchg
scas
or
or
mov
mov
out
xchg
test
(bad)  
cmp
push
mov
in
or
jg
sarl
lds
clc    
lret
ds pusha 
mov
pop
jae
xor
mov
jl
ret
ret    
sbb
(bad)  
shrb
cmp
cmpsl
pop
cmp
das    
fsubl
cli    
mov
cld    
jns
fs lods
mov
push
and
mov
in
or
jg
test
pop
mov
push
push
cmp
sub
or
jmp
jae
repnz lds
cvtpi2ps
pop
push
fs
(bad)  
popf   
repz jp
inc
jp
ror
mov
xchg
xor
pop
or
scas
clc    
adc
inc
sub
loop
psubd
or
and
int
xchg
push
(bad)  
and
ja
or
das    
jl
sbb
mov
out
pop
aaa    
xor
jmp
fld
inc
pusha  
nop
inc
xchg
push
pop
(bad)  
addr16 add
or
lret
cmc    
(bad)  
movsl
in
inc
pop
lea
fiaddl
jg
dec
cli    
sub
pop
int
sarb
ja
adc
add
dec
and
cld    
jo
hlt    
loope
pushf  
sub
int3   
fist
stc    
ret
movsl
in
inc
pop
lea
xchg
jne
pop
jg
push
lcall
int
shlb
inc
jb
cltd   
outsl
add
sub
imul
mov
rcl
(bad)  
(bad)  
jb
data16 xlat
aam
xor
iret   
sbb
inc
outsb
jmp
clc    
enter
cltd   
mov
(bad)
and
mov
fist
stc    
lcall
adc
sub
mov
in
out
pop
aaa    
xor
jmp
push
inc
fcoml
(bad)  
stc    
sub
cld    
ret    
mov
into   
divl
test
inc
ret    
or
sub
int
xor
xorl
cltd   
xor
cmc    
jl
cmp
and
int3   
add
imul
mov
xchg
das    
jecxz
xor
sahf   
sbb
(bad)  
adc
adc
cmp
mov
sti    
fcmove
inc
cld    
les
mov
mov
into   
divl
test
pushf  
sub
mov
into   
xor
and
dec
cwtl   
xor
hlt    
xor
(bad)
dec
ljmp
push
outsl
stc    
ret
movsl
in
inc
pop
lea
insl
flds
jg
jne
sub
int
rcrb
or
mov
jb
inc
sbb
(bad)  {%k6}{z}
fstpl
decb
into   
mov
in
cmpsl
adc
insb
shrl
mov
cmp
jae
or
lret
iret   
xchg
push
push
hlt    
xor
(bad)
dec
out
or
mov
fist
stc    
aad
adc
jb
adc
ja
inc
iret   
and
sub
outsb
pop
iret   
pop
xor
popf   
js
mov
into   
divl
or
imul
inc
mull
out
xor
pop
fdivl
cltd   
pop
aam
hlt    
popa   
test
mov
push
pop
mov
push
ljmp
cmp
lret
sbb
cwtl   
jle
inc
xor
pop
int3   
and
pop
inc
cmp
test
cwtl   
xlat
aas    
stos
in
mov
pop
inc
lret
repnz das 
cmp
cmp
jle
pop
inc
sbb
jg
ja
add
pop
or
adc
jae
bnd je
push
ja
jbe
xchg
fcompl
mov
pop
fs ret
or
jae
bnd je
push
ja
jbe
mov
xchg
add
xor
mov
(bad)  
stc    
sarb
ds clc 
aas    
add
fs inc
mov
std    
mov
repz int3 
(bad)  
insl
imul
pop
in
or
aas    
sti    
push
pop
mov
or
pop
jb
pop
sub
mov
jbe
mov
inc
jg
xchg
cld    
fs sub
or
jbe
or
push
jb
les
shrb
dec
sub
jecxz
imul
lret
pop
mov
pop
sub
pushl
scas
jnp
repnz mov
test
dec
out
sub
lahf   
push
mov
cmpsl
push
xchg
test
cmp
mov
push
jmp
insl
(bad)  
mov
cwtl   
xor
aam
mov
jbe
roll
ja
pop
sbb
pop
add
pop
jnp
shll
mov
jne
call
xor
push
sub
std    
nop
fistl
sub
repnz clc 
fcom
notb
add
test
das    
call
lea
mov
mov
push
xchg
lods
mov
out
push
(bad)  
jecxz
inc
in
jbe
mov
in
sarb
in
jae
dec
fdivrl
add
dec
mov
clc    
lds
push
xor
inc
push
das    
xor
push
mov
(bad)  
jo
mov
dec
movsl
loope
xor
xor
pushf  
lock sub
decl
test
add
xlat
es or
ds push
mov
addr16 or
mov
movsl
in
xor
sub
pusha  
enter
cmp
ret    
and
fsub
faddl
loop
push
out
pushf  
sbb
xor
jo
(bad)  
in
stos
inc
sub
and
xlat
nop
int3   
leave  
mov
xor
xor
mov
cwtl   
jmp
js
dec
fimull
fwait
into   
lods
or
mov
xorl
fwait
jae
mov
mov
and
mov
inc
pop
data16 sub
outsb
adc
fdiv
out
or
fisub
shrb
jmp
(bad)  
int
sub
(bad)  
out
jae
xor
xchg
mov
int
data16 loope
jbe
pop
push
sub
or
add
ja
sub
xchg
test
sub
sbb
mov
mov
sbb
jl
push
jp
leave  
aas    
into   
loope
int
jmp
mov
psubq
mov
ljmp
mov
mov
mov
scas
jbe
dec
scas
cmp
mov
pop
(bad)  
cwtl   
add
xlat
jns
iret   
adc
rorb
out
stos
xor
sub
add
push
popf   
push
int3   
rorb
scas
lock dec
sub
test
mov
push
mov
inc
in
cmp
or
subl
xor
or
add
mov
xchg
loopne
or
andl
or
loope
in
sbb
dec
xor
inc
insl
mov
arpl
and
and
insl
mov
outsl
jge
aas    
shlb
jnp
leave  
movsb
fptan  
mov
jb
push
test
data16
hlt    
fdivr
or
dec
fsubs
ljmp
cmpsl
push
cs jmp
ret    
mov
xor
pop
sarb
fdivrl
js
movsb
jb
inc
or
push
mov
lods
push
mov
and
aas    
es
jl
mov
sub
adc
and
pusha  
and
jae
fwait
add
adc
lock jl
pusha  
mov
cli    
push
nop
pop
lock xchg
mov
scas
jbe
out
cmpb
notb
repz
(bad)  
push
and
aam
daa    
outsl
mov
cli    
rorb
(bad)  
mov
shrb
and
cmpsb
in
cmpb
cmpsl
pop
enter
(bad)  
or
nop
out
push
popf   
dec
pop
jns
mov
xchg
pop
mov
push
pushf  
pop
sub
(bad)  
lcall
add
and
adc
inc
sub
(bad)  
enter
(bad)  
not
pop
and
jp
in
aam
jecxz
xlat
mov
fild
inc
push
(bad)  
les
sti    
popa   
fdivl
xchg
dec
mov
std    
cmp
lcall
mov
sub
or
jbe
add
pop
add
jp
push
mov
shrl
cmc    
ds rcr
stc    
mov
push
xchg
sub
out
mov
pop
imul
idivl
into   
lret
call
jmp
lcall
jl
aas    
mov
cmc    
jp
notl
xchg
pop
adc
sub
ss
xor
ficompl
mov
cmp
ljmp
dec
addr16
or
stc    
mov
mov
cmp
les
lods
(bad)  
xor
xchg
xchg
or
jl
jge,pn
jae
mov
nop
and
mov
mov
xchg
pop
lret   
add
cmpsb
mov
repnz iret 
imul
stos
ror
xchg
icebp  
jne
insb
add
leave  
xor
sub
lock ret
mov
lock inc
pop
lea
sti    
lret
lea
daa    
pop
xchg
mov
mov
in
mov
mov
das    
jae
subl
xchg
push
sub
xchg
test
jmp
mov
repnz lods
sti    
mov
clc    
jb
or
(bad)  
pushf  
outsb
ret    
xor
dec
jmp
jmp
and
(bad)  
mov
enter
data16 jp
rcr
inc
fdivrl
bound
pop
mov
and
dec
xor
pop
imul
movsb
pop
fcmovnu
clc    
xor
mov
repz mov
aas    
(bad)  
cli    
sub
dec
loopne
push
push
orl
aam
repnz aas 
mov
les
les
mov
add
out
test
or
lret   
xlat
xor
push
cli    
dec
jnp
lods
call
cmc    
push
jg
jbe
iret   
sub
gs push
cs xor
rorl
adc
dec
imul
leave  
and
sub
lahf   
(bad)  
adc
or
jmp
dec
sub
mov
push
pop
push
xchg
sarl
subl
dec
inc
rcll
or
push
je
outsb
mov
push
(bad)  
out
enter
out
iret   
cmc    
outsl
mov
lods
push
push
mov
scas
xchg
sbb
femms  
lods
(bad)  
mov
inc
and
xchg
mov
jle
push
xchg
mov
sub
or
out
dec
lret
jae
or
lods
sub
enter
xchg
int
pop
inc
out
sti    
out
add
scas
jg
inc
sbb
mov
or
out
andps
push
fidiv
imul
jbe
lret   
fnstcw
mov
sarb
nop
push
inc
inc
push
fs iretw 
repnz mov
inc
push
str
mov
pop
inc
lcall
jg
mov
and
jp
in
ror
and
xchg
add
and
hlt    
imull
jae
mov
xchg
pop
out
xorl
sarl
js
sub
mov
mov
jnp
push
sbb
bound
xor
inc
fsubrs
mov
and
cmpsb
sub
loopne
or
test
adc
inc
inc
dec
shrb
dec
or
cmp
mov
fdivp
or
call
popf   
insb
jbe
in
lds
test
fisubl
rcl
and
jno
sti    
aas    
and
xlat
jl
mov
ret
mov
ret
lahf   
loop
arpl
sahf   
jb
sbb
sub
inc
jae
xor
insb
xchg
sub
sub
jge
imul
sahf   
push
sbb
ja
add
dec
hlt    
xor
test
pop
or
sahf   
cli    
mov
sti    
add
jmp
jge
sub
mov
lods
mov
xorl
dec
jg
hlt    
cmc    
xor
inc
arpl
jp
aaa    
xchg
pop
xchg
push
scas
sub
xor
push
and
into   
(bad)  
pusha  
jl
fwait
and
imul
jno
mov
(bad)  
xor
ds in
xchg
sbb
and
jnp
lahf   
test
test
test
sbb
iret   
inc
outsb
push
scas
push
cltd   
aas    
out
test
fs
imulb
jae
inc
fcomps
divl
gs dec
sub
popf   
push
sub
lock and
or
sub
mov
xchg
pop
mov
jno
push
test
ss jns
jl
test
fstpl
dec
test
xor
mov
cmp
ljmp
(bad)  
(bad)  
mov
hlt    
lcall
inc
adc
lds
lea
adc
adc
fs mov
in
ret
add
push
inc
push
dec
push
(bad)  
jns
rorl
inc
and
jp
in
aam
cld    
hlt    
stos
(bad)  
fwait
sub
and
(bad)  
out
(bad)  
mov
hlt    
mov
out
xlat
cmp
mov
test
fdivp
dec
stos
pusha  
cmp
mov
(bad)  
and
and
xchg
aas    
js
movsl
inc
sbb
dec
pusha  
xor
pop
frstor
push
out
sbb
mov
pusha  
mov
jmp
mov
mov
movsl
outsb
out
cmp
inc
es data16 cmp
loopne
ret
lcall
mov
mov
jae
fst
test
gs push
and
daa    
jge
add
or
xchg
aam
inc
cld    
(bad)  
sub
pop
xor
leave  
sbb
dec
mov
or
xchg
jnp
adc
push
or
sbb
inc
sti    
mov
or
mov
jae
cmc    
jb
sbb
lock ret
mov
jns
hlt    
mov
inc
cs pop
jge
push
icebp  
or
xor
icebp  
push
ret    
icebp  
jg
out
lret   
inc
icebp  
lock ret
mov
jl
lds
jge
push
icebp  
jg
mov
into   
ret
lcall
test
stc    
lea
lahf   
dec
xchg
and
jno
push
icebp  
jle
cltd   
iret   
xchg
daa    
gs into 
ret
enter
daa    
divl
jle
push
mov
fucomip
stos
xor
mov
dec
dec
push
popa   
in
pop
xchg
ja
inc
push
not
(bad)  
lahf   
mov
iret   
lahf   
jge
jle
mov
push
or
jo
cmpsl
loop
rorl
(bad)  
mov
adc
or
imul
aaa    
out
aam
lret
add
cld    
ret
cmp
lea
stc    
test
inc
adc
and
out
jb
mov
aam
ja
cmp
mov
xor
mov
dec
rorl
movl
rorl
inc
sti    
mov
sahf   
lock pop
mov
sti    
and
and
clts   
adc
xor
cltd   
jnp
cli    
cmp
orw
sub
fwait
and
xor
(bad)  
rcr
repz inc
rorb
lea
pop
and
icebp  
or
mov
cwtl   
divl
(bad)  
stc    
lea
popf   
push
fnstenv
push
inc
and
inc
pop
icebp  
mov
sub
jg
pop
and
mov
ret
inc
stc    
(bad)  
fisttp
outsl
mov
cltd   
xchg
pop
mov
cmc    
ret
inc
stc    
repz fisttp
imul
mov
daa    
out
stos
sub
and
inc
ret
push
aam
lret
push
movb
xchg
jo
lahf   
inc
rorl
cmpsl
mull
and
iret   
lahf   
js
cld    
leave  
nop
ja
dec
sbb
inc
pop
icebp  
repnz orl
mov
lret
(bad)  
ret
ja
aas    
(bad)  
xchg
mov
mov
js
sti    
(bad)  
inc
cmp
dec
fdivl
lret   
out
cmp
add
sbb
repz inc
ret
fildll
stos
rcrb
addr16 sti 
cmp
pop
mov
xor
roll
mov
ja
mov
or
sahf   
push
dec
or
rorl
daa    
lret   
out
imul
and
(bad)  
mov
and
inc
out
stc    
lea
lahf   
dec
inc
mov
icebp  
data16 sti 
mov
fdivl
lret   
out
xchg
and
and
ret
aam
ror
lock mov
mov
dec
imul
repnz sub
xor
stc    
lea
(bad)  
iret   
mov
(bad)  
mov
cmp
lea
rorl
inc
or
int3   
dec
and
or
or
icebp  
dec
stc    
lea
(bad)  
mov
push
mov
add
int3   
jbe
out
stos
lret
cltd   
adc
sahf   
jge
not
sbb
loopne
loope
lahf   
or
enter
mov
and
push
lds
cmp
loope
stos
sub
jbe
int3   
pop
and
es es pusha 
hlt    
xor
cmc    
bound
mov
into   
stc    
lea
jae
mov
cmp
mov
(bad)  
mov
push
xchg
mov
mov
sub
dec
stos
xchg
and
cld    
ret
push
dec
mov
ret
push
jns
add
imul
mov
ret    
add
xor
repnz sub
lahf   
add
add
add
loop
pop
cli    
xchg
mov
(bad)  
mov
sub
es ljmp
icebp  
(bad)  
jl
ja
rorl
cmc    
pop
xchg
inc
xchg
mov
mov
lea
lahf   
das    
lods
mov
sbb
(bad)  
arpl
mov
rorl
mov
push
les
and
jnp
out
test
data16 negb
loop
ret    
push
dec
inc
cs push
inc
sti    
mov
mov
lock
daa    
daa    
add
ret
ret
(bad)  
in
inc
daa    
pop
dec
jl
adc
lret   
sub
sub
and
jae
cltd   
cmc    
(bad)  
or
xchg
sbb
stos
push
mov
lea
(bad)  
mov
sub
sbb
inc
out
stc    
lea
(bad)  
iret   
pushf  
cli    
iret   
out
pop
sub
or
ffree
pop
stc    
pop
or
lahf   
jge
xchg
es call
or
(bad)  
les
repnz sub
ss cmp
lea
(bad)  
iret   
pushf  
cli    
iret   
out
pop
sub
push
cltd   
popf   
pop
fbld
push
loop
lods
mov
adc
xor
addl
push
rol
inc
sti    
mov
mov
lock
daa    
daa    
pop
dec
or
sti    
repz fild
icebp  
or
or
dec
out
or
xchg
or
stos
daa    
fild
sbb
rcrl
test
push
sarb
aam
cmp
cmpb
aas    
adc
ror
outsl
aam
adc
insb
icebp  
jg
out
les
jmp
stc    
(bad)  
fisttp
outsl
mov
cltd   
xchg
pop
mov
cmc    
ret
inc
stc    
repz fisttp
imul
mov
and
mov
sub
pop
mov
cmc    
ret
inc
stc    
repz fild
icebp  
mov
pop
icebp  
repnz sti 
adc
(bad)  
(bad)  
xlat
repnz aam
cmp
(bad)  
cmp
stos
lret
ficomp
pop
jecxz
mov
std    
repnz movsl
test
dec
aam
adc
mov
jb
insb
icebp  
jg
mov
xchg
cmpsb
(bad)  
mov
sub
out
in
pushf  
test
stc    
pop
lahf   
test
lahf   
jge
xchg
mov
cmpsl
xor
fwait
mov
shrl
mov
xor
mov
fild
icebp  
jg
outsl
or
gs into 
ret
daa    
inc
adc
aam
stos
sub
js
loope
push
(bad)  
test
sub
cld    
ret
push
jmp
xchg
fisttpll
aam
adc
aas    
repz dec
pop
push
je
cmp
mov
cmp
cmp
sti    
mov
in
mov
js
std    
iret   
cltd   
mov
(bad)  
repnz movsl
movsl
lock or
dec
out
lods
fwait
stos
sub
or
xchg
xor
jg
fcmovu
mov
fisubrl
test
sbb
dec
nop
mov
shll
rorl
inc
mov
lret
inc
pop
(bad)  
ret
loop
clc    
je
jg
push
mov
jbe
movsb
pop
stos
mov
or
mov
js
xchg
test
stc    
lea
mov
xchg
pop
mov
sbb
cmp
fdivp
mov
icebp  
inc
ds mov
lret
pusha  
inc
icebp  
loope
adc
subl
ret
jl
imul
outsl
mov
leave  
das    
sbb
andb
pop
or
iret   
imul
mov
sti    
in
inc
pusha  
sbb
stc    
mov
ret
aam
lret
(bad)  
stos
and
imul
fisttpll
aam
mov
aam
dec
pop
lcall
sub
dec
clc    
fdivr
(bad)  
mov
lahf   
or
sub
stos
cmp
adc
and
push
icebp  
or
inc
repz cmp
mov
fcompl
jecxz
mov
and
(bad)  
mov
mov
jbe
movsb
jge
scas
mov
or
data16 jecxz
cltd   
cli    
lahf   
js
(bad)  
jmp
stc    
push
cmpsb
fistpll
aam
adc
mov
lahf   
pop
adc
lcall
mov
(bad)  
ret
stos
sub
or
push
ljmp
pop
dec
dec
stc    
lea
(bad)  
iret   
test
fisubl
cltd   
mov
sub
add
into   
lahf   
jge
xchg
stos
popa   
mov
push
pop
pop
ret
daa    
inc
adc
sub
pop
mov
sti    
outsb
inc
es jecxz
and
mov
andl
mov
add
mov
stc    
ret
lods
xor
cmp
add
(bad)  
lret   
lahf   
jge
inc
(bad)  
(bad)  
icebp  
or
dec
(bad)  
mov
mov
add
scas
mov
repnz decl
js
mov
cltd   
sbb
(bad)  
jns
mov
sub
and
(bad)  
out
(bad)  
mov
hlt    
mov
out
xlat
cmp
mov
das    
and
jecxz
bound
dec
jo
mov
dec
ljmp
(bad)  
int
out
lahf   
js
cld    
leave  
xchg
fild
and
mov
dec
push
inc
jnp
pop
mov
mov
fwait
sub
movsb
inc
mov
js
sti    
(bad)  
or
and
mov
xchg
push
and
mov
je
in
jge
xchg
clc    
repz xorb
mov
jecxz
cmp
rol
jge
xchg
clc    
repz addb
pop
sub
rorl
daa    
lret   
into   
(bad)  
bound
and
test
or
shrl
cmpsb
jmp
xchg
clc    
repz xorb
sub
test
mov
in
js
cld    
leave  
xchg
pop
stc    
lea
(bad)  
and
clts   
adc
into   
jo
div
or
jo
(bad)  
mov
xor
xor
out
jb
mov
pop
or
lahf   
jge
mov
mov
sub
insl
cmp
lahf   
jge
mov
jno
mov
dec
push
or
adc
iret   
mov
aam
lret
outsl
push
xchg
mov
mov
sub
mov
lods
xor
stc    
lea
(bad)  
iret   
pushf  
sahf   
lock ja
gs push
lods
(bad)  
push
repnz xor
or
ffree
inc
sti    
mov
adc
and
dec
fcoml
dec
enter
xorl
rolb
fcomps
stos
mov
lock outsl
dec
repnz sub
shll
fsts
lahf   
jge
xchg
es sub
mov
lahf   
jge
mov
sub
cli    
idivb
aam
lret
ficomp
pop
loopne
rcll
iret   
lods
cli    
stc    
mov
movsb
div
ret
dec
cmpsb
jbe
and
or
mov
add
xorb
push
(bad)  
icebp  
jg
pop
and
fiaddl
ret
mov
loop
or
test
(bad)  
addr16 push
aam
dec
cmp
or
imulb
fistpll
ret
lock fwait
sub
ret
jp
inc
sahf   
mov
mov
sub
pop
mov
loop
mov
mov
sub
pop
mov
out
xchg
mov
aaa    
rcl
fcoml
and
xor
xchg
or
std    
ret
pop
or
lahf   
jge
xchg
paddb
jb
push
aaa    
or
stc    
adc
lret   
(bad)  
lods
ret
mov
lret   
lahf   
jge
xchg
clc    
repz rcr
js
or
push
fild
icebp  
leave  
sbb
into   
jg
or
inc
sti    
mov
lods
inc
out
daa    
fucomi
ret
sbb
adc
cwtl   
jecxz
push
(bad)  
adc
inc
xchg
mov
sub
aaa    
mov
jae
(bad)  
mov
and
inc
out
stc    
lea
lahf   
dec
add
outsl
and
scas
dec
add
inc
sti    
mov
jae
divb
and
icebp  
jl
mov
xchg
rorl
inc
sbb
jecxz
in
stc    
stc    
lea
lahf   
aas    
mov
inc
sti    
mov
xor
cld    
ret
dec
xchg
(bad)  
lahf   
add
(bad)  
into   
fwait
icebp  
jg
pop
and
fidiv
rorl
movl
rorl
inc
sti    
mov
movsb
mov
popf   
mov
ss stc 
lea
mov
movsl
dec
stc    
lea
(bad)  
iret   
pushf  
push
(bad)  
call
xchg
push
mov
lea
inc
(bad)  
lods
ret
mov
xor
icebp  
xchg
loope
pop
ret
pop
xchg
lods
and
inc
jno
push
fild
je
fdivr
les
jmp
aaa    
icebp  
or
jl
repz adc
mov
loope
push
fisub
lods
mov
rorl
out
cmp
stc    
stc    
lea
lahf   
das    
lods
mov
aaa    
fild
icebp  
or
or
clc    
jl
(bad)  
(bad)  {%k6}{z}
fnstenv
pop
scas
mov
pop
jo
daa    
daa    
pop
dec
or
fwait
xor
ljmp
mov
lea
(bad)  
mov
sahf   
inc
push
negb
mov
sub
addr16 jle
push
lret   
fisttp
orl
add
lods
mov
adc
ret
mov
lds
and
icebp  
data16 sti 
mov
fdivl
lret   
into   
hlt    
adc
dec
pop
jns
mov
loop
lahf   
mov
pop
pop
add
lret   
in
cmp
push
(bad)  
stc    
lea
repz inc
in
sarb
clc    
adc
mov
stos
lret
repnz ljmp
cli    
xchg
mov
rcl
jecxz
adc
xchg
icebp  
or
lock push
les
js
xchg
jbe
std    
lcall
jae
es ljmp
icebp  
or
sub
or
lahf   
jge
xchg
es call
or
(bad)  
les
ret
rorb
lahf   
jge
xchg
es call
or
(bad)  
les
repnz sub
ss cmp
lea
(bad)  
iret   
pushf  
cli    
iret   
out
pop
sub
push
cltd   
popf   
pop
fbld
push
loop
lods
mov
adc
xor
addl
push
rol
inc
sti    
mov
mov
lock
daa    
daa    
pop
dec
or
sti    
repz fild
icebp  
or
or
dec
out
or
xchg
jne
fisttpll
aam
daa    
fild
sbb
rcrl
test
push
sarb
aam
cmp
cmpb
aas    
adc
ror
outsl
aam
adc
insb
icebp  
jg
out
les
jmp
or
fisttp
ja
adc
lods
ret
inc
stc    
repz fisttp
imul
mov
and
mov
sub
pop
dec
fldcw
stc    
repz fild
icebp  
mov
pop
icebp  
repnz sti 
adc
(bad)  
(bad)  
xlat
repnz aam
cmp
(bad)  
cmp
stos
lret
ficomp
pop
jecxz
mov
stc    
push
test
dec
aam
adc
mov
jb
insb
icebp  
jg
mov
xchg
cmpsb
(bad)  
mov
sub
out
in
pushf  
test
stc    
pop
lahf   
test
lahf   
jge
xchg
mov
mov
cmp
mov
shrl
mov
xor
pop
fild
loopne
icebp  
jg
outsl
or
gs into 
ret
daa    
inc
adc
aam
stos
sub
js
loope
push
mov
cld    
ret
push
jmp
xchg
fisttpll
aam
adc
aas    
repz dec
pop
push
je
cmp
mov
cmp
cmp
sti    
mov
in
mov
js
std    
iret   
cltd   
mov
(bad)  
repnz movsl
movsl
lock or
dec
out
lods
fwait
stos
sub
or
xchg
stos
loope
or
fmulp
inc
or
jl
outsl
fdiv
leave  
sbb
dec
nop
mov
shll
rorl
inc
xchg
push
stos
lret
sub
cld    
ret
loop
clc    
je
jg
push
mov
jbe
movsb
xor
shrl
or
lahf   
js
xchg
test
stc    
lea
mov
xchg
ss cltd 
xchg
pop
mov
sbb
cmp
fdivp
mov
icebp  
inc
ds mov
lret
pusha  
inc
icebp  
loope
adc
subl
ret
jl
imul
outsl
mov
leave  
das    
sbb
andb
pop
or
iret   
imul
mov
sti    
in
inc
pusha  
sbb
stc    
mov
ret
aam
lret
(bad)  
stos
and
mov
or
aam
mov
aam
dec
pop
lcall
sub
dec
clc    
fdivr
(bad)  
mov
lahf   
or
sub
stos
cmp
adc
inc
and
icebp  
or
jbe
inc
ret
out
aam
lret
mov
and
stc    
lea
ja
popf   
ret
mov
inc
fisttp
sub
lret
xor
lret
mov
xchg
jp
cmc    
jae
push
(bad)  
ret
daa    
inc
adc
jmp
mov
mov
shrl
cmpsl
dec
jo
inc
dec
add
(bad)  
mov
repz
mov
stc    
stc    
xchg
mov
add
dec
stc    
add
adc
push
adc
ret    
loope
rcl
dec
int3   
jbe
out
stos
lret
push
cld    
ret
mov
push
mov
mov
pop
stc    
push
in
push
push
lcall
jmp
stos
push
aaa    
(bad)  
mov
cwtl   
(bad)
pop
icebp  
or
(bad)  
lds
or
inc
ret
not
(bad)  
mov
aam
dec
pop
lcall
jge
inc
(bad)  
(bad)  
icebp  
or
dec
cmp
jnp
jns
rorb
test
sub
flds
and
ss and
and
fcompl
scas
je
jp
fs
enter
loopne
(bad)  
leave  
(bad)  
imull
(bad)
mov
cmp
push
(bad)  
mov
xor
mov
lret
ds cwtl 
mov
inc
or
insb
testl
mov
mov
mov
xchg
xchg
jno
decb
mov
sub
sub
mov
pop
xor
lret
out
xor
fwait
mov
(bad)
(bad)  
fnstcw
ljmp
and
rclb
(bad)  
out
aas    
mov
pop
sbb
adc
mov
cmp
stc    
mov
inc
mov
pop
sahf   
inc
data16 mov
leave  
cmp
mov
xchg
mov
insb
sbb
push
imul
pop
push
call
cmp
call
xchg
inc
mov
jnp
xlat
iret   
lret   
imul
bound
xlat
ret    
jl
mov
fwait
ds into 
test
je
iret   
cwtd   
(bad)
xchg
mov
push
adc
in
rcrb
inc
in
(bad)  
adc
push
(bad)  
or
cs dec
fcoml
iret   
mov
rclb
sahf   
push
sbb
pop
shrl
cmc    
dec
(bad)  
mov
or
vhsubpd
mov
clc    
mov
popa   
cwtl   
rcrb
fsubrp
lods
sbb
pop
sti    
cmpsb
add
and
cmp
inc
sub
(bad)  
cs int3 
fisttp
cmp
add
adc
push
dec
and
sub
out
or
enter
xor
ds
das    
cltd   
(bad)  
xchg
push
dec
cli    
aad
arpl
outsb
rclb
sbb
inc
sti    
pop
or
(bad)  
sub
inc
sti    
lret
lahf   
rcr
sub
or
aam
or
add
icebp  
mov
xor
enter
xorb
adc
data16 jge
add
out
roll
in
push
jl
leave  
dec
or
test
fistp
fwait
sub
js
mov
fisubrl
cmp
push
xchg
jg
sti    
std    
xor
js
popa   
(bad)  
mov
cli    
mov
pop
mov
fs test
sub
lock push
mov
stc    
mov
shll
adc
scas
or
mov
fistl
adc
movsb
(bad)  
mov
lods
cli    
xchg
fnstenv
out
(bad)  
arpl
lds
inc
out
xchg
mov
popf   
aaa    
or
cs xor
lock push
les
jne
sub
iret   
pop
dec
mov
out
sub
stc    
test
(bad)  
pop
(bad)  
aam
clc    
enter
pop
sub
fidivl
(bad)  
push
adc
pop
mov
jg
add
xchg
icebp  
push
pop
enter
sub
dec
lcall
stc    
dec
jnp
cli    
mov
mov
shr
lds
cld    
jp
in
(bad)  
lods
dec
push
mov
xchg
movsb
sbb
xchg
add
mov
mov
pop
push
imul
mov
lock sub
hlt    
mov
fcmovu
imul
cmc    
ss pop
nop
xchg
xchg
mov
int3   
sub
icebp  
loope
cmp
push
aam
shll
mov
mov
int
mov
dec
out
and
lods
jp
and
jae
and
into   
mov
push
mov
xlat
ret    
mov
push
(bad)  
imul
sarl
inc
test
inc
adc
pop
fnstcw
addr16 out
mov
mov
adc
movsb
add
jl
sub
movsl
sub
inc
pusha  
and
dec
dec
jne
add
nop
clc    
adc
inc
xor
mov
aaa    
and
(bad)  
out
(bad)  
mov
hlt    
pop
(bad)  
jecxz
rolb
not
jns
jmp
mov
popa   
and
cli    
das    
or
popf   
(bad)  
jnp
xchg
mov
pop
mov
xchg
pop
sahf   
bound
stc    
adc
lret
sub
dec
decl
fcompl
or
dec
test
fidivrl
es stos
stc    
xor
movsl
jbe
cwtl   
dec
fistp
xchg
xor
aam
getsec 
fistp
push
(bad)  {%k4}
mov
fdivrl
jbe
in
or
inc
mov
and
aas    
je
sbb
(bad)  
jecxz
push
cmp
lahf   
dec
and
push
loop
adc
sbb
adc
pusha  
mov
enter
or
pusha  
ljmp
outsl
add
add
mov
mov
sub
ret
mov
and
aas    
je
sbb
rorb
lds
mov
mov
xchg
stc    
lahf   
add
pop
jg
pop
icebp  
pop
lahf   
dec
and
icebp  
aaa    
punpckhwd
jle
xchg
data16 hlt 
fs jg
sub
inc
jns
lahf   
les
fcomps
outsb
sbbl
pop
mov
lret
addl
test
stc    
lods
push
mov
testl
adc
add
jle
xchg
shl
clc    
pop
ret
jbe
xor
jle
(bad)  
aad
pop
push
sbb
popf   
scas
orl
lods
shrl
(bad)  
push
pop
addr16 adc
jg
adc
xchg
loope
jo
popa   
mov
cmp
nop
mov
mov
lea
ret
cmpsl
add
sub
repz jne
xor
sbb
lods
dec
inc
repnz loope
pushf  
cmp
loop
hlt    
jl
stos
enter
sub
(bad)  
xor
sub
bound
sbb
mov
jmp
xchg
push
ljmp
xchg
inc
sub
movsb
ret    
leave  
(bad)  
fsub
jb
sbb
insl
adc
(bad)  
icebp  
gs lret 
xor
scas
dec
pop
faddp
(bad)  
shr
insb
lret   
pop
leave  
adc
loop
inc
xchg
stc    
xlat
icebp  
enter
ljmp
cli    
adc
xchg
jle
cmp
orl
cmp
adc
sbb
xchg
int
inc
push
pop
fnstenv
ss xchg
dec
aas    
fdivs
mov
test
sub
sub
and
icebp  
or
outsb
(bad)  
xor
push
push
mov
loop
out
sbb
mov
pop
mov
add
mov
test
xor
add
fisub
add
push
cwtl   
out
fsts
xchg
add
pop
mov
lods
jge
mov
and
(bad)  
pop
icebp  
xchg
or
aas    
or
push
aas    
shrd
(bad)  
sahf   
mov
jmp
mov
sbb
sbb
mov
add
push
xchg
nop
cmpsl
xor
add
xchg
cltd   
or
mov
fisubr
fimull
stos
inc
fisubl
aam
mov
les
lea
pop
loop
mov
test
inc
mov
sar
mov
cld    
xchg
orl
stc    
(bad)  
(bad)  
mov
aad
jmp
insl
xchg
mov
pop
sub
iret   
fucompp 
lea
scas
push
or
imul
bound
iret   
lea
cmp
sar
fadds
(bad)  
xor
or
cld    
lods
int3   
mov
xor
sar
outsl
imul
cltd   
cmpsb
cltd   
outsl
repz inc
stos
orl
out
imul
bound
dec
jl
ljmp
cmp
xor
push
and
sbb
jne
mov
or
iret   
popf   
loopne
inc
outsb
xlat
addr16 ja
xchg
adcl
sub
add
push
jb
xchg
mov
dec
push
std    
mov
and
xor
add
jns
sub
add
xchg
orl
shrb
or
arpl
push
inc
mov
rclb
addr16 mov
fchs   
leave  
scas
call
pop
hlt    
xor
push
jae
ja
or
out
or
lahf   
sbb
adc
lahf   
test
mov
jbe
dec
adc
mov
divl
out
xor
inc
pop
ljmp
outsb
pop
fdiv
pop
cwtl   
fcoml
clc    
lret
lahf   
fbld
into   
pop
mov
mov
jl
dec
arpl
pop
lret   
and
jbe
ljmp
and
mov
push
sub
jbe
int3   
push
ja
sub
push
insl
adc
cmpsl
in
inc
cmp
icebp  
jnp,pn
xchg
pop
cmp
iret   
mov
ficomp
fimul
mov
cmp
and
ljmp
out
xlat
ret    
inc
(bad)  
jne
ret
pop
hlt    
popf   
sub
es ja
xor
shlb
push
fstps
sbb
push
inc
jne
out
push
or
push
sub
aaa    
(bad)  
push
and
jbe
sbb
js
mov
xor
cmp
push
lods
mov
pop
cmp
bound
dec
adc
xor
fildl
lahf   
inc
push
lea
pop
sub
inc
sub
or
mov
cmp
sbb
cltd   
ss push
cmp
sbb
(bad)  
xorl
or
insl
imul
push
jnp
out
dec
jb
pop
(bad)  
pop
sbb
sbb
std    
mov
(bad)  
aas    
or
xor
push
test
ret    
rclb
jbe
sbb
xchg
(bad)  
lea
pop
sbb
xchg
int
xchg
dec
dec
orl
sub
movsb
pop
and
pop
lea
xor
or
pop
cmp
jge
shr
(bad)  
adc
arpl
sub
lret
iret   
sar
pop
pop
xchg
lods
add
jg
xor
stc    
enter
add
enter
aas    
pop
sub
and
mov
insb
movsb
pop
cmp
pusha  
cmp
int3   
sbb
stos
ljmpw
popf   
adc
bswap
pusha  
dec
dec
or
cmp
pop
sbb
iret   
cmp
into   
adc
or
mov
mov
fbld
xor
pcmpgtb
iret   
xor
fwait
out
pop
xor
push
les
lock ret
mov
cli    
inc
sub
push
jnp
sbb
cltd   
push
xor
(bad)  
cld    
int
ja
xlat
movl
cltd   
mov
and
aam
pop
jle
xor
loope
push
sub
mov
xchg
addb
sub
outsb
data16 mov
clc    
cmp
faddp
pop
sub
mov
mov
mov
repnz aam
or
cmp
and
cmp
(bad)  
xor
jb
loop
repz sar
dec
and
das    
(bad)  
test
cmp
jl
pop
lcall
and
push
add
lods
jnp,pt
cmp
adc
jnp
jno
jg
repnz inc
shrl
mov
lds
add
adc
gs xchg
add
and
fldl
push
pop
sbb
dec
and
jl
(bad)  
jae
cmpsb
test
aad
loope
or
adc
sub
xchg
test
mov
daa    
ds xchg
lock xor
ljmp
add
cwtl   
jb
rcrb
outsb
enter
std    
sub
fnstsw
dec
pusha  
fwait
add
mov
mov
sbb
fiaddl
xlat
jae
jp
mov
add
xor
xchg
push
mov
push
jle
fisubrl
ja
cmp
mov
je
or
mov
push
jle
fldcw
inc
push
pop
ja
cmp
mov
cli    
push
or
mov
push
gs dec
mov
leave  
fcmove
pop
cmp
mov
pop
pop
mov
xlat
in
and
and
lods
mov
inc
fist
mov
imul
xchg
xchg
push
xor
dec
mov
xor
out
mov
fdivrl
bound
fildll
in
js
pop
and
sub
fdivs
mov
or
mov
push
jle
shrb
clc    
inc
or
mov
es dec
fdivrl
bound
sbb
arpl
in
js
out
xlat
fmull
cmc    
push
and
lock inc
jl
cmp
cli    
jle
sbb
mov
adc
cmp
push
mov
(bad)  
jae
xchg
std    
pop
xchg
rcl
xor
cmp
cmp
sbb
xchg
push
fadds
lods
fstps
mov
imul
loop
jns
pop
pop
xor
mov
rorl
xchg
shl
jnp
cli    
cmpsb
push
jb
les
push
mov
mov
cmp
decl
adc
(bad)  
jno
lods
push
push
xchg
xchg
pop
inc
in
pop
outsl
and
decb
movsb
push
ret    
pop
pop
(bad)  
adc
push
in
pop
add
jle
xchg
cli    
push
sbb
iret   
cwtl   
movsb
add
jne
clc    
push
or
push
clc    
lret
lods
sti    
cltd   
dec
cmpsb
jbe
xchg
fcompl
pushf  
jae
aam
jl
pop
lcall
aam
sbb
daa    
daa    
xchg
and
inc
imul
lea
call
lret
fdivl
dec
in
int3   
sarl
addr16 xor
fist
gs sub
inc
lods
fstps
mov
imul
loop
jns
pop
pop
xor
mov
rorl
xchg
shl
jnp
cli    
cmpsb
push
jb
les
popf   
test
add
mov
cmp
decl
sub
inc
outsb
jmp
clc    
sub
pop
or
stos
sub
sbb
popa   
outsb
inc
lds
js
repnz fcmovu
dec
mov
stc    
jle
sub
fsubs
in
xor
out
push
mov
pop
lods
xor
iret   
lret   
xchg
(bad)  
fadds
dec
xlat
bound
popf   
or
inc
ja
jg
inc
inc
daa    
daa    
stos
jno
pop
mov
bnd ja
into   
push
mov
sbb
idivb
add
push
lods
lock cli 
jmp
insl
hlt    
xchg
(bad)  {%k4}
in
sbb
inc
repz or
add
jg
xor
in
leave  
pop
cmp
cld    
inc
xchg
sbb
hlt    
xchg
xor
xor
ds push
mov
mov
lea
ret
jg
icebp  
nop
push
inc
inc
xchg
sbb
xor
out
loope
mov
pop
and
daa    
pop
cli    
das    
jne
in
int3   
call
lret   
and
xlat
add
sub
mov
mov
pop
inc
shl
cli    
imul
(bad)  
loop,pt
xchg
sub
push
loope
(bad)  {%k4}
in
rorl
sahf   
push
dec
outsl
inc
push
sbb
pop
mov
push
push
push
jae
adc
popa   
dec
jnp
mov
xlat
scas
cmp
icebp  
mov
jecxz
leave  
inc
push
fisttp
call
mov
outsb
iret   
daa    
push
sbb
enter
cltd   
rorb
mov
jmp
ret
and
push
and
jmp
or
data16 loopne
stc    
ds push
push
aam
lret
outsb
daa    
daa    
or
ret
inc
sti    
mov
out
pop
jbe
sub
int3   
pop
cli    
jae
dec
sub
jge
dec
out
sbb
ja
cmp
lahf   
jge
dec
out
sbb
ja
cmp
shrl
lea
mov
or
rcl
(bad)  
mov
mov
icebp  
pop
aaa    
lea
aam
or
adc
test
adc
push
addr16 ret
add
stc    
lret   
arpl
xor
pop
jecxz
xor
mov
xor
xchg
mov
hlt    
outsl
fisubr
aas    
jge
xlat
inc
(bad)
jbe
jbe
add
jle
adc
lds
mov
icebp  
cmp
mov
out
sub
into   
cs popf 
std    
loope
and
jno
mov
(bad)  
xor
jo
pusha  
mov
out
out
subl
stc    
lods
cmp
mov
stos
cli    
sub
test
fiaddl
sub
(bad)  
aad
dec
popa   
xchg
out
mov
into   
mov
fcompl
cmpsb
and
mov
arpl
fildl
mov
mov
xchg
jge
dec
mov
xlat
pusha  
das    
insl
aaa    
mov
rorl
aad
fadd
adc
mov
scas
cmp
stc    
mov
(bad)  
lock sub
das    
push
cli    
test
aad
inc
sbb
fistp
data16 mov
adc
xchg
sub
imul
push
mov
(bad)  
mov
push
xor
sub
push
sti    
outsb
adc
push
vhsubpd
push
pop
cmp
(bad)  
lods
or
fldenv
or
in
aam
in
rol
fwait
sub
and
(bad)  
out
mov
repnz hlt 
popf   
cmp
sub
out
cld    
iret   
sub
cmc    
mov
insb
neg
push
jp
push
inc
push
add
mov
cmp
lret
mov
lds
adc
mov
adc
(bad)  
hlt    
xchg
jo
in
enter
cli    
clc    
xor
push
jg
bswap
jo
mov
lds
add
mov
inc
jnp
mov
repnz mov
mov
pop
test
je
addr16 repz lret 
lahf   
into   
jnp
stos
dec
mov
pop
mov
sub
fistl
fisubl
addr16 push
xor
aam
mov
jno
jno
cmp
xchg
sub
xchg
outsb
rcll
sbb
frstor
pushf  
sbb
cmp
dec
and
lods
adc
fidivr
test
addb
xsaves
pop
mov
lahf   
cmp
or
mov
mov
nop
push
push
jg
js
pop
or
mov
sti    
mov
jne
cmp
sarb
cmpsl
add
fisttp
fdivrl
inc
add
dec
aaa    
sub
mov
iret   
pop
neg
cwtl   
mov
in
sub
push
push
lret   
and
sub
and
jecxz
pop
xor
fistp
movsb
or
aam
mov
lret
loop
daa    
xchg
rcr
and
cwtl   
cli    
pop
ljmp
fildl
int
and
dec
xchg
ficomp
jecxz
add
xor
fnsave
mov
shlb
push
jmp
cmp
sub
outsb
inc
lods
mov
sti    
xor
or
sub
cld    
rolb
dec
stc    
xchg
rcrb
cmp
ret    
xchg
sub
sub
out
inc
lock pop
xor
outsb
xor
stc    
(bad)  
ss loopne
rcl
xsaves
call
ja
clc    
mov
xor
mov
xchg
jbe
push
push
stc    
ds push
push
mov
dec
repnz pop
aam
push
les
pop
inc
lds
pushf  
incb
imul
aam
adc
rcrl
inc
enter
test
xlat
inc
pop
test
ds insl
ficomp
push
jl
xchg
mov
add
aaa    
and
push
cmp
pusha  
(bad)  
ja
pushf  
test
mov
mov
mov
mul
or
xchg
dec
sti    
mov
(bad)  
mov
lock jg
mov
add
imul
ljmp
je
and
inc
adc
cli    
ljmp
push
cmpsl
jle
jo
bound
inc
std    
(bad)  
inc
les
bnd jbe
data16 int3 
mov
and
jb
mov
dec
inc
ljmp
push
in
movsl
mov
icebp  
repnz aam
popa   
inc
add
dec
repz inc
jbe
sub
xchg
sbb
inc
arpl
inc
mov
dec
lods
adc
mov
mov
data16 daa 
daa    
or
xchg
jns
push
ja
lea
jo
push
into   
inc
adc
add
push
lcall
pop
mov
fldl
stc    
in
sub
xchg
ss push
adc
ds out
and
cltd   
jae
xor
fdivs
jbe
sub
iret   
and
xor
jbe
sub
mov
dec
adc
xsaves
pop
mov
dec
inc
lahf   
inc
imul
iret   
mov
jae
ljmp
sub
icebp  
mov
(bad)  
mov
sub
lock movsl
sub
fs rcr
mov
and
es sub
inc
or
mov
jmp
inc
popf   
or
jmp
jmp
pop
jmp
dec
movsb
imul
aam
bound
ja
sti    
push
cltd   
mov
mov
scas
daa    
aam
outsb
mov
cmp
ret    
pop
and
fld1   
ret
or
pop
gs out
adc
mov
arpl
mov
pop
test
mov
outsl
fcompl
stc    
inc
or
hlt    
dec
xor
jbe
mov
adc
or
arpl
lds
or
jp
dec
jns
rorb
lahf   
pusha  
insl
sub
xlat
cmpsl
pop
xchg
or
cmp
out
dec
pusha  
xchg
push
push
sub
mov
and
int
mov
or
or
cmp
imul
(bad)  
mov
hlt    
popf   
cmp
sub
repnz cmc 
iret   
notb
mov
adc
loop
daa    
ds xchg
sbb
(bad)  
mov
sbb
sub
pop
ds pop
cmp
jl
and
pusha  
(bad)  
out
xlat
in
orl
mov
cmp
xchg
ret    
push
nop
jbe
imul
(bad)  
jp
les
mov
jb
into   
sub
or
imul
fild
mov
fs inc
push
lret
imul
leave  
mov
ds scas
ja
xchg
sbb
arpl
mov
mov
pusha  
add
fs xor
mov
push
mov
das    
mov
scas
cwtl   
add
das    
outsb
fnstsw
push
ss popa 
stc    
fs and
add
pop
mov
cltd   
movsl
lret
fmuls
insl
dec
jge
in
es xor
inc
or
sbb
xor
mov
sbb
(bad)  
or
pop
mov
and
inc
iret   
xor
enter
and
jg
push
orl
push
imul
int3   
fisubr
mov
outsb
cmp
push
dec
data16 fldcw
lea
bound
lret   
xor
ja
push
fimul
shlb
inc
cmp
sub
repz mov
movsb
xorb
(bad)  
ss lahf 
out
test
dec
xchg
popa   
leave  
mov
and
push
rorl
fiaddl
das    
in
inc
iret   
sbb
add
or
test
pop
mov
lret   
jbe
lea
xchg
sub
mov
fld
shr
insb
lret   
pop
leave  
jnp
in
sbb
sbb
clc    
mov
pop
pop
jmp
adc
in
imul
inc
sbb
pop
mov
adc
dec
add
(bad)  
pop
mov
int3   
adc
push
cltd   
cli    
pop
add
pop
push
aaa    
int3   
xchg
pop
mov
jle
or
sbbb
sub
dec
dec
jg
fnsave
fwait
ljmp
scas
push
jp
pusha  
add
loop
jecxz
jge
adc
loop
and
xor
jbe
iret   
rorl
xchg
sbb
(bad)  
addr16 aam
pop
xlat
mov
fdivrl
push
xchg
inc
cwtl   
(bad)  
xor
mov
push
jmp
or
fidivl
les
ret
lods
jb
mov
mov
imul
sbb
sbb
add
jg
dec
aam
mov
imul
or
test
loope
repz xlat
iret   
push
mov
add
pushl
mov
dec
pusha  
jnp
imul
ret
jnp
(bad)  
mov
cmp
mov
fisttpl
push
push
adc
jg
ficom
mov
sbb
mov
test
push
jge
(bad)  
adc
or
mov
xor
lcall
lea
lret   
inc
nop
scas
pop
sbb
dec
inc
nop
rcll
lret   
movsl
je
or
lahf   
sarb
mov
(bad)  
adc
cmc    
and
nop
pop
mov
popf   
daa    
dec
mov
stos
cwtl   
mov
mov
push
inc
aam
mov
pop
xchg
out
xchg
pop
adc
loop
(bad)  
mov
stos
cwtl   
xor
or
sbb
or
stc    
lods
in
insb
pop
push
fiadd
mov
out
idivl
and
aaa    
(bad)  
mov
cmp
int3   
rcrl
dec
fcoml
push
xchg
mov
shrl
mov
xor
in
and
adc
xor
icebp  
or
lods
in
inc
jecxz
icebp  
pusha  
(bad)  
mov
add
outsb
mov
lods
icebp  
mov
aaa    
fisub
pop
cli    
jae
mov
lahf   
sub
fadd
push
inc
or
stos
enter
test
jp
std    
xchg
sbb
xchg
and
(bad)  
mov
out
cmp
mov
roll
in
(bad)  
movsb
lods
movsb
ds inc
mov
xor
movsl
pop
fisubrl
mov
loop
mov
js
jno
sub
ljmp
out
xor
push
inc
sub
repz and
ljmp
pop
add
mov
mov
xchg
mov
mov
lret   
or
inc
sbb
jp
outsb
or
and
jnp
sub
inc
(bad)  
icebp  
push
aaa    
jb
fdivrl
sub
aam
pop
push
xor
aaa    
cmp
(bad)  
aaa    
ss mov
pop
sub
(bad)  
sahf   
imul
xor
(bad)  
in
dec
push
add
jge
inc
or
inc
jns
or
mov
add
pop
cmpsl
jo
add
dec
dec
and
jg
pop
int
xor
in
int
push
mov
fcmovne
inc
arpl
popa   
jp
test
pop
ret    
imul
jmp
mov
sub
add
sub
ret    
mov
lock mov
out
test
sbb
arpl
cli    
stos
out
jp
push
xor
dec
faddp
adc
ja
xor
sbb
lods
inc
dec
cmp
cmp
mov
mov
push
aad
add
sbb
jnp
push
fsubl
dec
mov
int3   
les
in
push
scas
pushl
mov
xchg
xlat
in
insb
push
ss pusha 
in
les
or
jmp
mov
pop
out
lret   
mov
ficomp
mov
pop
outsb
and
cmp
and
mov
hlt    
jl
jne
sti    
nop
fildl
(bad)  
xchg
xor
xor
aas    
aad
outsb
and
cmp
fistpl
jge
push
inc
xchg
mov
sub
cmc    
sahf   
add
xchg
adc
jle
icebp  
mov
(bad)  
das    
shl
mov
stc    
jo
xchg
xchg
cwtl   
xor
push
lret
shlb
dec
(bad)  
movsl
mov
mov
iret   
pop
jg
(bad)  
(bad)  
ss sbb
mov
add
jo
stos
jg
outsb
adc
lock test
jge
jnp
inc
cmp
lret
or
push
mov
push
and
rorl
shrb
push
xchg
sub
in
scas
jle
adcl
fisubl
cs sub
inc
xchg
adc
bound
cmp
ficoml
inc
dec
mov
adc
insb
and
sbb
jb
dec
jnp
mov
mov
add
scas
jne
outsb
dec
repnz mov
mov
cmp
sbb
insl
lahf   
mov
sub
jne
push
dec
dec
lds
push
pop
cmp
sub
cmpsl
mov
cmpsl
scas
mov
lods
mov
pushf  
mov
pop
das    
or
cmp
dec
dec
cs stos
sub
xlat
sbb
push
push
jbe
in
stos
in
jae
pop
pop
or
ja
or
xchg
and
jp
jmp
or
dec
mov
scas
daa    
sub
or
push
shrb
push
fs adc
fs dec
pop
cmp
pop
out
dec
push
movsb
hlt    
lahf   
(bad)  
in
fldcw
sbbl
shl
das    
or
xchg
(bad)  
cltd   
psubsb
and
xor
mov
aam
pop
jle
(bad)
jmp
into   
into   
inc
pusha  
cwtl   
cs mov
int
xchg
stc    
lods
scas
call
mov
push
and
mov
mov
in
push
inc
mov
sbb
fxch
out
push
js
xchg
aad
xor
sub
mov
roll
lock sbb
adc
inc
mov
adc
stos
mov
stc    
aas    
add
pop
add
push
mov
jne
mov
pop
int3   
or
cmc    
fldenv
in
inc
clc    
push
cmpsl
inc
repnz mov
into   
sub
aas    
leave  
out
xorl
aam
xor
mov
mov
cmpsb
jmp
jp
test
clc    
jno
pop
mov
or
jp
pushf  
cmp
dec
fcoml
(bad)  
out
daa    
inc
fdivrp
xchg
mov
mov
xor
lea
cmp
lcall
pop
iret   
lahf   
jge
jp
mov
jae
loop
cmp
sahf   
dec
jp
jo
cmp
stos
or
xchg
addl
bound
jmp
hlt    
aaa    
fisttpll
call
test
shrb
ds pop
out
rol
rorl
mov
sub
outsl
imul
pop
int3   
inc
add
repnz
jno
xchg
rolb
pop
push
out
cmc    
dec
fsts
inc
sti    
pop
cmc    
mov
xchg
jg
mov
andl
mov
mov
add
sub
adc
or
stos
ficompl
stos
mov
repnz movsb
pushf  
js
je
sbb
add
mov
xchg
(bad)  
mov
or
mov
les
js
dec
push
ss
xor
fnop   
mov
xor
push
out
out
push
mov
inc
mov
inc
push
push
mov
inc
jbe
xchg
add
xchg
or
(bad)  
arpl
dec
jmp
movsl
outsb
lds
es data16 cmp
and
xchg
cwtl   
mov
(bad)  
push
mov
insb
loope
xchg
xlat
dec
(bad)  
fs aad
cli    
mov
clc    
lds
fdivrl
nop
add
enter
push
sbb
xchg
fstpl
jns
in
pop
xchg
inc
xchg
sub
pop
and
xor
iret   
es sar
fisub
fucomp
lret   
xor
jno
scas
(bad)  
mov
mov
mov
xchg
ficompl
mov
mov
(bad)  
repz enter
in
push
dec
push
testb
test
jnp
mov
jmp
jbe
mov
popa   
add
cld    
insl
mov
pop
and
sub
add
outsb
test
(bad)  
outsl
cld    
hlt    
daa    
fwait
and
iret   
pop
movsl
cmp
or
das    
mov
cmp
hlt    
inc
jg
pop
mov
test
pop
fcmovu
addr16 iret 
mov
push
sbb
sub
xchg
push
push
loop
daa    
nop
sbb
test
mov
push
pop
nop
rorb
mov
adcl
mov
je
imul
fcomps
jns
xor
iret   
loope
cltd   
xchg
pop
mov
test
cvttps2pi
adc
pop
xor
sbb
jg
pushf  
mov
push
and
sbb
cmp
xchg
mov
lret   
fwait
xor
adc
or
xchg
(bad)  
mov
inc
sub
ss xor
lahf   
test
into   
(bad)  
mov
scas
rolb
frstor
mov
or
mov
push
mov
fwait
stc    
xor
in
push
pand
clc    
hlt    
mov
cmpsb
inc
xor
cmp
pop
add
xor
in
cli    
push
sti    
les
jb
cmp
cli    
push
andl
cmp
clc    
or
push
sti    
lret   
xchg
mov
arpl
sbb
xchg
jge
(bad)  
rorl
daa    
inc
mov
repz ds or
mov
or
pop
mov
and
jnp
add
shrl
push
out
shrl
sti    
dec
cltd   
leave  
xchg
jge
or
aam
push
les
(bad)  
negl
outsl
ja,pn
out
mulb
outsl
lods
es shrl
push
out
add
out
xchg
in
sub
push
fs and
inc
sarb
sbb
loope
push
js
sub
ss loop
and
call
push
xor
in
insl
mov
mov
jmp
dec
adc
in
jecxz
or
mov
das    
int3   
adc
test
lea
inc
cmp
inc
in
stc    
mov
pmaxub
or
(bad)  
jo
mov
shlb
sub
into   
xchg
add
stc    
insb
scas
jmp
dec
daa    
fs xchg
cld    
sar
stos
jecxz
(bad)  
nop
dec
mov
mov
add
scas
loopne
fdiv
enter
andl
(bad)  
int3   
pop
iret   
fwait
stc    
mov
or
dec
dec
push
jnp
dec
fs pushf 
pop
mov
out
stc    
ss
xor
jo
adc
lods
lods
and
les
test
jae
jmp
cwtl   
push
dec
iret   
and
push
push
ss jg
lods
aaa    
push
xchg
mov
test
sub
ds inc
js
jp
bound
ss inc
incl
lea
int3   
push
aad
adc
jb
retw   
sbb
inc
mov
insl
pop
inc
inc
popf   
push
add
stos
jl
in
mov
and
(bad)  
adc
pop
(bad)  
sbb
xor
or
cld    
jl
jge
push
or
les
outsb
inc
ja
es iret 
xchg
out
mov
xlat
lock fdiv
mov
out
mov
aam
inc
push
es sub
mov
pop
mov
or
fsubrl
xchg
cld    
fsts
(bad)  
cmpsl
outsb
mov
inc
cmp
int3   
and
cmp
cmpsb
and
inc
popf   
or
adc
mov
sub
lock add
das    
cmp
test
or
lods
pop
sub
scas
jb
popf   
idiv
out
mov
push
mov
cmc    
sbb
mov
lea
(bad)  
jns,pt
push
lods
mov
or
stc    
ja
xchg
and
dec
daa    
mov
aad
in
mov
mov
in
movsl
or
(bad)  
in
mov
out
push
stos
outsl
sub
aaa    
mov
sahf   
enter
mov
mov
inc
hlt    
push
fisub
cmp
sub
cmp
sub
lahf   
jb
dec
mov
inc
ss sarb
sub
push
verr
inc
push
ud2    
test
add
jo
jno
out
rclb
mov
add
leave  
and
mov
mov
cs shr
(bad)  
pop
loope
mov
sahf   
(bad)  
es aam
jecxz
paddusb
ret
jae
lds
pop
lock mov
popf   
test
cmpsb
mov
je
sbb
iret   
mov
pop
leave  
push
jge
inc
or
dec
push
pop
popa   
in
push
push
push
pop
hlt    
pslld
jle
pop
mov
cltd   
push
jmp
or
adc
pop
mov
aaa    
pop
add
lods
insl
aas    
cltd   
imul
pop
test
lret
hlt    
popa   
scas
data16 adc
sti    
xor
mov
aas    
lock fcoms
fwait
push
sbb
fbld
pop
addl
and
into   
push
mov
jbe
fisubrl
inc
jle
mov
sbb
cmpsb
in
xchg
icebp  
loop
inc
adc
add
xchg
sub
stos
inc
pop
jns
mov
inc
jne
movsb
add
out
dec
loope
faddl
mov
mov
push
fistl
push
mov
cwtl   
mov
js
cli    
popf   
je
int3   
add
repz leave 
out
mov
and
and
jno
and
and
jns
and
out
pop
in
inc
das    
pop
gs jnp
fsts
xor
xlat
fsubs
cmp
out
mov
in
out
inc
sbb
mov
pop
into   
adc
in
mov
jns
xor
or
aad
rcrb
repz test
cltd   
pushf  
add
jle
adc
ret    
cs xchg
mov
push
xor
leave  
fcompl
xor
(bad)  
mov
pop
dec
test
test
stos
and
rorb
(bad)  
mul
and
(bad)  
int3   
mov
sbb
inc
push
xor
enter
mov
and
mov
pop
jns
leave  
imul
cld    
mov
jecxz
int3   
pop
and
xor
das    
cmp
mov
(bad)  {%k4}
std    
jne
jnp
push
push
imul
add
cmc    
int3   
aad
dec
aad
dec
xchg
jae
mov
xor
cmc    
test
mov
iret   
cltd   
rep stos
mov
sahf   
pop
adc
clc    
not
iret   
mov
jmp
fcomip
in
mov
mov
gs lret 
(bad)  
std    
push
xor
out
mov
sub
outsl
out
adc
dec
mov
imul
aas    
mov
(bad)  
lret
ljmp
clc    
das    
and
into   
sbb
aas    
mov
(bad)  
mov
rorl
daa    
inc
mov
push
jmp
arpl
stos
outsb
enter
int3   
mov
notl
lahf   
sub
ds
shr
(bad)  
mov
aas    
(bad)  
mov
sbb
stos
call
mov
push
in
push
xlat
cmp
pusha  
sbb
pop
nop
xchg
test
push
(bad)  
in
xlat
add
add
mov
sahf   
fbld
int3   
decl
dec
cmp
cmpsb
mov
iret   
shll
popf   
push
sti    
loope
or
and
cltd   
xlat
add
mov
pop
repnz lcall
rclb
inc
in
xchg
lods
mov
ds scas
dec
lea
inc
adc
(bad)  
jecxz
lret
xchg
sarb
movsb
add
mov
cli    
mov
(bad)  
push
jno
pop
test
scas
lods
dec
sub
dec
out
ljmp
out
dec
lea
cmp
dec
adc
imull
arpl
clc    
or
jae
bnd je
adc
mov
push
mov
lret
stos
ret
mov
int3   
in
test
cwtl   
popa   
dec
lods
dec
xor
mov
je
test
cltd   
pop
push
insl
movb
fstps
or
inc
push
adc
std    
aam
mov
push
cmpsb
sbb
pusha  
clc    
mov
sbb
stos
sbb
nop
xor
(bad)  
mov
ret
shl
add
and
in
out
push
out
inc
or
jns
femms  
jns
enter
call
ret
mov
push
jmp
(bad)  
int3   
mov
jno
inc
les
pop
push
jb
inc
scas
cltd   
and
mull
inc
inc
sub
imul
ljmp
pop
dec
ud2    
fild
mov
ror
insb
in
fistl
out
jne
mov
mov
and
insl
out
hlt    
fwait
dec
sbb
call
popa   
loopne
push
test
movsl
xchg
jbe
pop
rorb
cmp
sbb
out
out
rorl
out
mov
sti    
es scas
dec
sub
rorl
loopne
or
out
sub
inc
push
cmpsb
dec
mov
cmp
push
jns
enter
adc
adc
gs xor
sbb
jmp
arpl
lea
mov
mov
cmp
and
pop
int
sahf   
fstpl
ljmp
(bad)  
int
out
fwait
test
daa    
ds movups
cwtl   
jno
xchg
ficompl
mov
push
mov
les
mov
mov
popf   
cwtl   
xor
orl
fwait
test
sub
les
js
cmp
lcall
fstpl
movsl
outsb
mov
xchg
andb
es data16 cmp
loopne
xchg
addr16 pminub
adc
stc    
push
lahf   
adc
leave  
add
dec
adc
adc
push
lcall
cmc    
xchg
or
inc
repz jecxz
out
out
sti    
dec
xor
std    
mov
pop
pop
mov
lret
dec
das    
in
mov
shll
fisubr
mov
cwtl   
dec
sar
mov
jbe
mov
icebp  
dec
aad
push
mov
aaa    
or
xor
or
sarb
(bad)  
lods
(bad)  
mov
xchg
mov
cmp
leave  
adc
pop
push
adc
loope
fucomi
into   
fdivr
test
jp
push
push
loope
mov
loope
in
lahf   
loope
repnz xchg
test
pop
inc
jno
add
xchg
jnp
pop
pop
sub
mov
(bad)  
pop
(bad)  
decl
out
mov
cwtl   
enter
fiaddl
pusha  
mov
sbb
sub
inc
nop
cmp
hlt    
dec
inc
pop
adc
adc
add
je
add
imul
in
(bad)  
roll
popa   
nop
mov
push
rcl
arpl
mov
lret
sbb
lret
add
and
mov
jle
xchg
leave  
das    
xor
adc
mov
mov
push
leave  
or
cmpsl
hlt    
lcall
frstor
out
fcomps
xchg
jmp
xchg
inc
cwtl   
cmpsb
in
push
xor
push
ffree
pop
sub
adc
das    
jg
xchg
(bad)
add
mov
mov
dec
sar
mov
xchg
(bad)  
sub
lcall
sarl
call
iret   
cltd   
popa   
aas    
or
xchg
inc
cwtl   
cmpsb
in
sbb
push
(bad)  
jl
xchg
mov
mulb
js
mov
sar
mov
sbb
sub
lcall
rol
jg
test
mov
negb
fxch
pop
mov
pushf  
xchg
mov
inc
xchg
shrb
fnstsw
push
das    
(bad)  
xchg
repz
lock ret 
fcmovbe
(bad)  
cmp
mov
mov
je
push
movsl
push
xchg
std    
in
popa   
leave  
pop
fisttp
push
jb
fcmovbe
movsb
fistl
or
call
mov
fwait
addr16 push
shll
lods
xor
xor
pop
(bad)  
fisubr
shrl
repz or
jns
xor
sub
xchg
(bad)  
mov
jp
scas
mov
jle
add
cltd   
popa   
aas    
mov
lret   
rcrb
lahf   
imul
scas
outsl
insb
pop
jmp
in
cltd   
sbb
or
sub
push
popf   
adc
cmp
xchg
cmp
sub
push
pop
(bad)  
iret   
dec
push
lds
cmp
loope
repz mov
mov
lods
mov
fiaddl
cltd   
js
test
mov
jp
pop
inc
hlt    
xor
lods
mov
lret   
push
pop
sub
inc
inc
imul
sub
xchg
fldz   
insl
repz adcl
xor
(bad)
call
stc    
cltd   
fsubrs
stc    
pop
pushl
int
cmp
cmp
pop
jns
mov
into   
fcmovnbe
mov
imul
dec
and
jnp
push
adc
inc
aaa    
adc
and
mov
push
push
lds
xchg
out
adc
sub
pop
in
fisttpll
stc    
inc
fisubrl
lods
leave  
addr16 xor
and
mov
hlt    
xor
std    
xchg
add
push
push
aas    
sub
aaa    
inc
inc
rorl
lds
cmp
sub
xchg
mov
hlt    
pop
movsb
jg
add
out
clc    
or
les
jecxz
call
sarb
into   
imul
out
lcall
cli    
push
mov
xchg
adc
(bad)  
xor
repz mov
leave  
push
xchg
dec
out
sub
pop
jns
out
xor
push
inc
(bad)  
pop
stc    
xchg
xchg
push
pop
int3   
outsl
sbb
arpl
mov
test
out
jbe
sahf   
cmp
addr16 or
xchg
xor
cltd   
mov
dec
gs dec
je
sbb
pop
sub
jnp
jbe
mov
int
cmpsb
dec
xor
sbb
pop
jns
mov
into   
fcmovnbe
mov
or
or
xor
stos
sub
lret
mov
jb
dec
stos
insb
das    
je
lahf   
adc
(bad)  
fisub
stos
push
imul
mov
mov
lea
push
push
bound
mov
out
mov
cmc    
sub
mov
and
mov
or
xor
adc
call
push
sub
adc
mov
(bad)  
cmp
lods
mov
xlat
cmc    
mov
xchg
leave  
psrad
mov
fs daa 
lods
ja
and
sti    
jmp
cmp
cmpsl
inc
mov
or
mov
in
or
(bad)  
jne
int3   
shll
mov
sbb
lahf   
gs
negb
stos
push
or
test
mov
mov
loop
pop
int
sahf   
lret
xor
jae
pushf  
sbb
arpl
jmp
or
in
push
mov
sub
mov
pusha  
sbb
jp
fimul
out
or
outsl
jp
inc
out
sbb
aas    
xchg
enter
es ljmp
sub
test
add
mov
pop
std    
cmp
mov
jp
xlat
outsb
inc
out
mov
sbb
inc
stos
rcll
sub
sbb
sbb
jmp
jbe
or
add
mov
or
je
lods
ret    
jne
call
outsl
or
loop
xchg
sbb
clc    
in
out
inc
sub
ret
mov
or
pop
inc
jb
rorb
fcomps
lret
roll
into   
jmp
repz inc
sbb
daa    
pop
stc    
jne
jle
ljmp
das    
jbe
out
lret   
or
jg
dec
(bad)  
jns
sbb
lahf   
sub
push
pop
rorl
or
add
rorl
mov
inc
or
push
mov
into   
lock ret
xchg
inc
ss jg
(bad)  
mov
das    
jge
cli    
lds
pushf  
pop
pop
int3   
(bad)  
repnz
add
push
cmp
mov
ret
inc
sub
outsb
xchg
mov
adc
pop
mov
or
repnz fist
mov
xchg
jg
aam
in
sarb
(bad)  
fcomps
mov
inc
inc
push
sub
jge
pop
mov
dec
lea
test
out
ja
cmp
push
stc    
(bad)  
nop
xor
(bad)  
in
cmp
cld    
into   
jmp
pusha  
aaa    
mov
lock ficom
cmp
or
adc
lret
popf   
adc
pop
push
subl
faddp
roll
testb
jl
and
repz adc
mov
mov
mov
or
jg
xor
sbb
aad
mov
ret
mov
xchg
sub
in
mov
xor
insb
adc
jecxz
subb
repnz lods
sti    
stos
push
jle
cmp
(bad)  
loop
movsb
mov
in
sahf   
mov
lods
clc    
ja
jmp
xchg
movsl
add
int3   
jbe
dec
loope
les
call
mov
inc
sbb
icebp  
inc
xchg
pusha  
cmp
and
add
mov
pop
cltd   
js
mov
and
(bad)  
dec
jb
or
(bad)  
cli    
mov
pusha  
pop
fwait
xchg
push
popf   
mov
and
push
in
sub
xor
or
lds
(bad)  
pop
loop
sub
fisttp
fisub
mov
mov
jl
sub
iret   
loopne
je
fwait
add
repz sti 
or
inc
inc
mov
cmp
imul
mov
fmuls
ret
mov
inc
shrl
out
sti    
orl
mov
loop
in
stos
lds
ret    
imul
lds
ret
cwtl   
cmpsb
mov
es iret 
xchg
out
(bad)  
rorl
arpl
cmp
mov
lods
je
push
dec
arpl
int3   
lret
movl
sbb
pop
mov
and
mov
and
adc
mov
scas
mov
xor
es iret 
jg
fcomps
fs add
arpl
dec
xor
test
outsb
inc
and
mov
lret   
sub
cmp
adc
test
int3   
orb
lret
int3   
push
iret   
std    
icebp  
(bad)  
ds mov
push
roll
orb
xchg
push
adc
ds lcall
fisub
sahf   
sahf   
nopl
mov
mov
jp
(bad)  
adc
add
decl
dec
lcall
dec
fwait
outsb
push
and
int3   
pop
test
aam
pop
cltd   
mov
cmc    
test
loop
ja
or
idivl
pop
data16 or
push
sub
stos
push
jbe
xor
xchg
scas
add
dec
je
les
(bad)  
icebp  
add
inc
mov
jmp
fbld
stc    
dec
sub
fcoms
shrl
inc
into   
fsubl
jmp
cmpsl
push
ret
inc
add
clc    
or
dec
imul
lds
jg
xchg
dec
pop
inc
int3   
jg
jp
inc
inc
cwtl   
lock ficompl
enter
sub
pushf  
movsl
outsb
adc
xchg
inc
es data16 cmp
ljmp
or
ficom
dec
sbb
jbe
jns
rorb
jecxz
cmovne
pop
test
lret
or
mov
movsl
(bad)  
xor
and
push
std    
mov
xchg
xor
imul
push
or
cld    
mov
xlat
fldcw
jmp
iret   
cmp
add
sbb
mov
insl
cwtl   
jge
dec
add
adc
fldl
movl
xor
jno
and
dec
dec
insl
cltd   
adc
(bad)  
push
mov
mov
mov
jle
or
loopne
mov
pop
addl
or
out
push
dec
aaa    
adc
or
push
pop
inc
push
cs insl
gs mov
or
test
adc
or
aad
fsubr
popa   
pop
add
xchg
xchg
cmp
pop
cld    
test
push
sub
mov
sbb
test
adc
sub
orl
adc
jecxz
mov
sub
pop
divb
sarb
inc
pop
mov
cmc    
adc
(bad)  
fmuls
lds
cmp
rclb
jmp
pop
jp
cld    
xchg
movl
add
sub
clc    
lds
fild
iret   
sbb
ret
mov
insl
mov
sub
(bad)  
in
es mov
mov
arpl
mov
mov
xor
lret
shr
fidiv
fsubrs
mov
sub
push
and
lcall
sub
cwtl   
icebp  
mov
pop
mov
sub
push
and
push
sbb
out
ror
fdivp
dec
stos
mov
leave  
fstps
pusha  
or
inc
test
xor
push
mov
pop
or
jge
test
lods
sbb
jo
or
xlat
iret   
fdiv
mov
out
xlat
iret   
enter
sub
iret   
fdiv
mov
out
xlat
iret   
fdiv
(bad)  
lods
daa    
test
cmpsl
and
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
jp
fstl
mov
incl
popf   
lea
(bad)  
xor
jmp
mov
or
cs rcl
add
xor
repnz adc
push
push
jbe
repz sbb
dec
cmp
adc
dec
jl
stos
jno
mov
scas
stc    
sbb
std    
fsubl
push
adc
and
adc
(bad)  
mov
out
push
iret   
pop
hlt    
mov
out
test
dec
adc
aam
cs xor
xchg
js
mov
push
(bad)  
mov
out
xlat
iret   
pop
mov
lret   
fwait
(bad)  
enter
sbb
or
gs cmp
jecxz
dec
ds nop
rcrb
aaa    
mov
outsb
scas
dec
(bad)  
hlt    
mov
out
lods
rcrb
or
js
call
(bad)  
mov
mov
(bad)  
mov
out
push
iret   
pop
hlt    
mov
ljmp
adc
mov
cmpsl
repnz add
aam
fdiv
mov
push
enter
mov
push
cmp
(bad)  
and
xchg
cwtl   
js
sbb
fdiv
mov
out
xlat
dec
fdivl
icebp  
scas
les
pop
dec
adc
nop
xor
iret   
in
xchg
enter
mov
xlat
dec
fdivl
in
stos
repnz cs mov
xor
fdivrl
std    
mov
repz popf 
mov
aam
fdiv
mov
push
iret   
fdivr
test
insl
pop
(bad)  
dec
inc
pop
int3   
xchg
mov
push
xor
je
inc
out
xlat
(bad)  
int3   
loopne
push
lret   
jg
int3   
addl
sub
enter
(bad)  
outsb
xlat
dec
fdiv
mov
cli    
adc
data16 pop
(bad)  
dec
inc
pop
xor
mov
sbb
test
out
xlat
iret   
fdivl
out
xlat
(bad)  
loopne
cmc    
add
add
insb
xor
xchg
popa   
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
iret   
(bad)  
mov
mov
inc
jbe
cmp
cmp
insb
xor
sub
xlat
iret   
fdiv
or
outsb
aam
shr
loope
push
ja
and
sbb
jnp
and
or
inc
pop
dec
je
push
xor
(bad)  
mov
out
pop
xchg
sbb
aad
sub
cmp
test
data16 sub
cmp
sub
(bad)  
lods
add
xor
jg
in
add
(bad)  
mov
in
(bad)  
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
faddl
mov
into   
shrl
les
jbe
and
(bad)  
scas
mov
mov
shrl
xlat
jp
push
iret   
mov
mov
negl
cmp
test
xchg
sub
jne
add
push
jns
pop
dec
fs inc
inc
push
jp
dec
outsb
and
or
(bad)  
jae
loop
mov
mov
push
ret
add
xor
or
in
rcrb
add
mov
aad
push
aad
jae
or
jg
(bad)  
dec
inc
add
sub
jbe
xchg
(bad)  
ja
or
cmp
movsb
jb
mov
shrl
out
cmp
shr
cwtl   
orl
aaa    
sahf   
mov
sti    
lock cmp
loope
inc
pop
icebp  
cmpsl
sbb
jl
call
xchg
lret   
lea
lods
repnz inc
push
repnz gs fs sub
jmp
hlt    
add
not
mov
movsl
inc
pop
inc
aam
clc    
jb
mov
sbb
nop
(bad)  
psadbw
and
(bad)  
xor
adc
stos
repnz fmull
inc
cmp
daa    
mov
xchg
stos
cmp
mov
adc
inc
outsb
xlat
in
gs icebp 
(bad)  
scas
push
test
sbb
outsl
add
cmp
or
xor
pop
or
lock adc
pop
cmc    
aas    
mov
dec
arpl
push
(bad)  
in
das    
mov
jns
nop
xor
xchg
nop
std    
movsb
sti    
sbb
mov
xchg
mov
ss cmp
rorb
lods
xchg
mov
mov
out
xlat
iret   
fdivl
out
push
les
insb
subb
cmp
jp
enter
sbb
push
mov
pushl
(bad)  
enter
(bad)  
out
push
iret   
pop
hlt    
or
clc    
notb
adc
mov
sub
popa   
fnstcw
pop
mov
and
(bad)  
mov
out
push
iret   
pop
hlt    
or
dec
pop
sub
jge
pop
in
fiaddl
push
lods
mov
cmp
jle
lahf   
cmp
add
aam
fdiv
mov
push
iret   
pop
test
ret
aad
sbb
sbb
dec
cmp
adc
push
lret   
adc
sbb
mov
jnp
inc
pop
inc
dec
dec
fnsave
fdiv
xchg
stos
xchg
loop
xor
lods
insl
in
inc
ss out
inc
or
sbb
and
mov
and
dec
in
cmp
outsb
jbe
inc
add
jne
aaa    
sbb
pop
in
pop
dec
push
insl
fnsave
cmp
ffreep
pop
fildll
jnp
adc
fcoml
push
(bad)  
cs or
(bad)  
jne
mov
mov
adc
push
add
aam
test
or
mov
xchg
jnp
test
enter
out
(bad)  
sub
or
xchg
adc
addr16 hlt 
andb
adc
call
lret
sbbl
rcrb
cld    
lods
rcl
jbe
sub
jge
mov
addr16
fdiv
mov
fwait
sub
and
popa   
(bad)  
out
stos
or
(bad)  
mov
in
mov
lret
jae
cmp
jmp
(bad)  
out
xlat
into   
(bad)  
(bad)  
mov
int3   
les
or
pop
sbb
sbb
roll
cmp
in
fstpl
adc
hlt    
push
xchg
add
cli    
test
dec
cmpsb
and
add
in
jne
sub
or
scas
and
fwait
add
movsb
jp,pt
push
rcrl
mov
ljmp
and
pop
inc
adc
daa    
mov
hlt    
les
push
adc
cli    
and
or
aas    
dec
ficom
repnz add
std    
pop
inc
loopne
and
mov
mov
movsl
out
in
sub
cmp
push
testl
push
(bad)  
pop
xchg
loope
adc
jno
or
(bad)  
mov
jle
inc
in
cmp
out
mov
inc
jo
cmp
jbe
jle
fmuls
inc
or
inc
adc
les
sbb
fmull
or
add
jne
sbb
out
jle
and
imull
js
sbb
dec
mov
xchg
cmp
call
aas    
sarl
iret   
(bad)  
push
xor
sbb
jnp
lock
fsubr
or
jl
iret   
or
xchg
leave  
popa   
pop
dec
repnz pop
inc
loopne
and
les
out
adc
jne
imul
push
jg
insb
inc
mov
aam
fdiv
test
out
subl
xchg
cmp
mov
mov
in
pop
xor
outsl
fsubl
cmpsl
rcll
lret   
or
or
sub
mov
dec
negl
loopne
and
xchg
out
adc
jmp
int3   
pop
jne
adc
loop
cmc    
mov
call
aas    
jo
adc
fwait
sub
pop
adc
add
sub
and
sbb
aas    
cmp
sub
pop
jl
jg
shl
jg
lret
dec
adc
les
imul
stos
sub
repnz test
cmpsb
mov
icebp  
xor
sarl
jbe
or
xor
pop
rcr
insl
lds
or
(bad)  
jo
or
push
test
lret
dec
(bad)  {%k4}
hlt    
sub
loope
enter
or
adc
mov
fsubrl
inc
ja
out
stos
mulb
ja
push
call
dec
imul
xchg
fisubl
pusha  
jbe
les
or
dec
call
mov
xchg
xchg
dec
(bad)  
sti    
pop
cltd   
and
mov
in
loop
je
xor
mov
scas
cmp
or
popa   
mov
cmp
cmp
pop
arpl
arpl
dec
loope
mov
cmp
jp
cld    
push
xchg
aas    
jg
leave  
icebp  
push
shrl
js
lock xor
push
mov
test
fidiv
xor
insl
push
or
jno
ret    
add
aad
hlt    
mov
(bad)  
pop
pop
aam
fabs   
and
or
lods
sub
icebp  
sub
xlat
add
loop
push
jno
icebp  
jno
sub
ud2    
mov
je
or
xor
sbb
mov
and
pushf  
adc
and
push
jae
popa   
fistpl
je
push
sbb
imul
jle
xor
sub
mov
(bad)  
pop
xchg
loope
push
push
mov
(bad)  
mov
out
cmpsl
mov
scas
cmc    
(bad)  
int3   
sbb
cmp
fisubr
mov
xchg
sbb
inc
jbe
in
jle
sbb
push
(bad)  
out
xlat
iret   
fdiv
mov
jbe
jmp
sub
iret   
fdiv
mov
out
jne
aaa    
xchg
inc
and
into   
test
jbe
shrl
dec
mov
and
inc
out
enter
sbb
dec
push
dec
sti    
and
lea
(bad)  
popf   
sbb
fdivp
loope
out
push
(bad)  
push
stc    
arpl
fs iret 
fcompl
or
jae
jae
dec
push
outsl
inc
cmp
je
or
pop
daa    
dec
outsl
ficomp
in
stc    
enter
loope
jae
out
sub
inc
in
out
xor
shr
inc
sahf   
daa    
das    
shrb
aaa    
xchg
leave  
adc
stos
sbb
sub
inc
add
cld    
xchg
or
js
or
sub
sub
pop
jecxz
jg
sub
pop
sub
rorl
fwait
xchg
mov
cmp
add
out
cmc    
jno
les
or
mov
dec
andl
mov
sub
push
mov
push
push
fdivs
lret
ret    
int
inc
insl
insl
dec
and
clc    
stos
cmpsb
mov
lock jns
sub
stos
test
fistl
movsl
movsb
rorl
leave  
cmc    
pop
bound
xor
sbb
push
int3   
inc
mov
pop
(bad)  
xlat
in
neg
hlt    
mov
repnz scas
repz fmull
mov
push
div
test
scas
mov
or
out
push
rorl
out
adc
(bad)  
jmp
push
mov
mov
jne
test
repz imulb
ret    
call
shr
(bad)  
(bad)  
out
hlt    
lock loop
mov
mov
ret    
in
out
sarb
icebp  
mov
mov
xchg
cmp
jmp
cmc    
cmp
in
lcall
mov
aas    
push
dec
dec
jb
push
push
dec
js
das    
(bad)  
into   
push
cmp
lea
bound
mov
loope
shr
(bad)  
fmuls
mov
(bad)  
xor
push
sub
arpl
adc
lods
(bad)  
addr16 fwait
mov
cli    
mov
hlt    
push
xor
sub
dec
pop
scas
mov
mov
jae
scas
push
iret   
fs xchg
add
in
push
notb
push
js
inc
or
adc
mov
ja
or
pop
pop
dec
pop
bound
sub
jnp
cld    
sbb
ljmp
insl
cmp
jl
fs insb
push
mov
xchg
pop
(bad)  
add
push
das    
add
jg
sub
sbb
push
outsl
dec
push
ja
mov
adc
imul
negl
sub
add
push
xchg
aam
js
add
add
repnz xchg
add
push
scas
inc
mov
xchg
je
xor
push
lret
sub
ds out
xor
pop
sub
jbe
clc    
rorb
(bad)  
adc
das    
fdivrs
in
push
xlat
scas
(bad)  
sbb
jg
inc
clc    
push
imul
pop
inc
leave  
out
or
pop
jmp
ds xor
fsubl
inc
cmp
fnsave
test
sbb
iret   
and
cmp
adc
into   
in
repnz pop
xor
cs xchg
nop
std    
movsb
sti    
sbb
mov
(bad)  
out
pop
nop
stos
add
cltd   
cli    
mov
cmp
je
inc
out
push
into   
push
sti    
(bad)  
data16 rolb
mov
sbb
or
jecxz
cmp
xor
enter
(bad)  
outsb
xlat
dec
fdivl
repz pop
fstl
sub
mov
out
xlat
iret   
fdiv
mov
lret
pop
hlt    
mov
out
xlat
iret   
fdiv
mov
out
mov
inc
lret
and
cmp
push
lea
and
(bad)  
jp
push
repz xchg
mov
enter
sub
mov
movsl
lret
aaa    
jmp
push
in
lds
fs push
jns
pop
dec
sub
dec
es jnp
dec
outsb
dec
(bad)  
cwtl   
das    
cli    
imul
mov
push
ret
add
xor
js
or
mov
add
mov
sahf   
and
add
jae
or
jg
(bad)  
dec
inc
add
sub
test
jae
jecxz
add
cmp
adc
sarb
cmp
shr
cwtl   
orl
aaa    
sahf   
mov
out
pop
push
inc
mov
cli    
sub
lea
dec
mov
xchg
lret   
lea
repz pop
jg
movsl
xor
out
repnz gs fs sub
jmp
hlt    
add
divl
and
inc
aam
clc    
jb
mov
bnd jbe
(bad)  
psadbw
and
pop
ficomp
push
or
roll
or
lock daa 
out
ss in
sub
outsl
jecxz
xchg
cmp
imul
cmp
xchg
sti    
sbb
xchg
leave  
push
jnp
or
ret
lret
jle
pushf  
xchg
addr16 fs out
std    
movsb
sti    
sbb
and
les
cmpsb
dec
mov
test
out
xlat
iret   
fdivl
out
push
clc    
jl
lret   
pop
out
dec
imul
mov
lods
and
(bad)  
push
stos
cli    
imul
out
xlat
dec
fdivl
clc    
push
(bad)  
jbe
cmp
jns
fild
mov
or
pop
pop
lahf   
fidivr
xor
enter
(bad)  
outsb
xlat
dec
fdiv
mov
xor
pop
cmpsb
in
pop
and
lods
dec
push
int
cmp
je
inc
out
xlat
jecxz
repnz sti 
gs out
pop
es std 
add
leave  
dec
add
mov
jle
cli    
out
aam
fdiv
mov
stos
cmpsb
fmull
shlb
mov
popf   
(bad)  
and
dec
stc    
movsb
xchg
das    
inc
iret   
jl
ret
push
lock pop
sub
hlt    
mov
push
lret
mov
and
cmp
cld    
ss
or
sbb
stc    
pop
dec
xor
fdiv
or
outsb
xlat
iret   
in
lcall
and
sub
push
jecxz
aam
and
jecxz
adcb
adc
(bad)  
outsb
xlat
dec
fdiv
mov
in
js
int
jg
xchg
repz xchg
sub
sbb
dec
fiaddl
pop
cmp
fdivl
call
test
out
loope
sti    
cmp
inc
adcb
add
xor
mov
outsb
aam
(bad)  
hlt    
mov
in
sub
cmp
push
ficompl
mov
sbb
loope
add
dec
and
xlat
iret   
pop
(bad)  
or
out
fmul
shlb
pop
sbb
cs inc
and
push
and
or
fsubr
mov
out
aam
fdiv
mov
push
iret   
fdiv
mov
or
dec
ja
jl
jl
stos
lahf   
iret   
lahf   
mov
cmc    
push
movsb
cli    
imul
out
xlat
dec
fdivl
stc    
das    
iret   
sbb
sub
es push
add
inc
pop
icebp  
sbb
pop
mov
(bad)  
push
iret   
pop
hlt    
or
rolb
ds pop
sbb
cmp
push
jo
xchg
jno
mov
fdiv
or
outsb
xlat
dec
aad
mov
and
popa   
push
dec
imul
pop
push
aas    
mov
mov
push
pusha  
iret   
(bad)  
out
push
iret   
pop
hlt    
or
stc    
xor
stc    
xor
insb
add
adc
iret   
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
iret   
push
fucomi
nop
inc
push
jp
push
inc
push
push
js
xchg
adc
jb
dec
sbb
cmp
jg
(bad)  
jb
cli    
out
aam
fdiv
mov
push
iret   
(bad)  
lret
bnd jl
pop
dec
push
or
add
iret   
sbb
or
rclb
jg
scas
repnz insb
dec
sub
enter
iret   
fdiv
or
outsb
xlat
dec
icebp  
jb
add
or
sbb
dec
add
lret
push
(bad)  
mov
int3   
(bad)  
loopne
adc
iret   
(bad)  
out
push
enter
fwait
(bad)  
into   
add
lret   
sbb
insb
(bad)  
xor
out
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
iret   
sti    
(bad)  
shr
addl
cld    
or
push
out
jbe
jecxz
lea
mov
ret    
and
push
iret   
fdivl
jmp
out
enter
jne
(bad)  
cmc    
push
dec
or
and
daa    
sti    
outsl
mov
fwait
adc
mov
out
xlat
iret   
pop
hlt    
or
out
mov
sti    
sub
iret   
or
out
jp
mov
arpl
dec
cmc    
mov
out
xlat
iret   
pop
hlt    
or
out
(bad)  
(bad)  
in
sub
rcll
js
xor
and
out
xlat
iret   
pop
hlt    
or
out
mov
jno
(bad)  
fisttpll
test
into   
daa    
jg
les
leave  
jne
xor
iret   
pop
cmc    
add
out
mov
jbe
push
rcrl
jle
dec
adc
push
or
out
xlat
dec
fdivl
(bad)  
shr
adc
mull
xor
adc
lcall
iret   
fdivl
out
push
jmp
test
pop
out
add
or
push
push
sbb
cmp
mov
outsb
xlat
dec
fdiv
scas
mov
sub
inc
dec
push
sbb
push
cmp
mov
(bad)  
out
push
iret   
pop
hlt    
or
jb
pop
iret   
and
sbb
inc
mov
je
mov
aam
fdiv
mov
push
iret   
pop
ret
(bad)  
push
lds
ret    
adc
sub
cmp
jg
lock pop
pushf  
xor
pop
hlt    
mov
push
iret   
pop
jecxz
mov
or
dec
cmp
adc
inc
mov
xchg
xor
fsubs
cmpsl
aam
loopne
iret   
fdivl
out
push
ljmp
out
aam
or
add
cmpsl
pop
decl
lock outsb
ss aaa 
mov
outsb
xlat
dec
fdiv
fcmovb
nop
or
ret
ss push
push
inc
pop
scas
and
scas
dec
mov
sub
cmc    
mov
out
xlat
dec
fdivl
fstl
and
outsb
iret   
imul
lcall
(bad)  
push
iret   
pop
hlt    
or
icebp  
xor
repz pop
pop
jo
out
mov
push
mov
out
xlat
iret   
fdivl
out
push
sahf   
xor
mov
cmp
bound
pop
push
push
inc
mov
insl
js
cmpsl
lcall
hlt    
or
outsb
mov
and
push
daa    
jmp
aaa    
test
roll
pop
jle
(bad)  
xchg
les
fidivr
dec
cmc    
mov
out
xlat
dec
fbstp
(bad)  
loope
(bad)  
adc
jecxz
in
mov
cmp
and
es push
push
fadds
push
iret   
fdiv
mov
out
push
iret   
pop
hlt    
or
into   
pop
inc
add
(bad)  
ds enter
loop
sub
outsb
jl
arpl
push
pushf  
xor
pop
hlt    
mov
push
iret   
pop
jmp
in
jne,pt
jbe
cmp
jmp
stos
(bad)  
pop
push
and
mov
sub
enter
(bad)  
outsb
xlat
dec
fdiv
ret
pop
push
rclb
xchg
cmp
push
test
mov
xor
(bad)  
mov
out
push
iret   
pop
hlt    
or
ljmp
push
cmp
push
loop
xor
iret   
lahf   
les
push
iret   
fdivl
call
ljmp
aaa    
cs addr16 inc
out
jb
out
xchg
sub
xor
and
push
iret   
fdivl
out
xlat
xchg
mov
pop
jl
sub
or
ret    
pop
bswap
xor
loopne
pushf  
xor
pop
hlt    
mov
push
enter
icebp  
cmp
inc
jb
mov
addr16 int3 
dec
stos
das    
xor
iret   
fdivl
out
xlat
xchg
lods
fwait
loope
imull
push
imul
cmp
add
mov
(bad)  
or
adc
mov
push
iret   
pop
sarb
aas    
jae
add
repnz and
add
cmp
jg
dec
ds cwtl 
mov
aam
fdiv
mov
push
icebp  
(bad)  
hlt    
hlt    
ret    
mov
pop
jge
gs add
sub
mov
gs adc
dec
addl
or
(bad)  
cmp
or
pop
in
fidivl
cmp
call
adc
mov
push
iret   
fdivl
add
dec
shrb
cmp
subb
cmp
fwait
pop
leave  
cwtl   
jnp
pop
mov
or
outsb
xlat
dec
fstpt
in
and
pop
pop
(bad)  
and
ret    
lods
xor
pop
push
mov
out
xlat
dec
fdivl
sub
xor
inc
or
jp
je
xchg
enter
ss insl
ljmp
hlt    
or
outsb
xlat
dec
push
lock bnd call
gs and
jmp
xchg
mov
arpl
pop
dec
lret
ss aaa 
mov
outsb
xlat
dec
fdivl
and
lods
sahf   
out
xor
push
jae
cmp
cmpsl
xor
pushf  
mov
cmc    
mov
out
xlat
dec
fdivl
jmp
lret
sub
sbb
out
fidivr
sub
xchg
sub
push
rcrl
mov
aam
fdiv
mov
push
iret   
pop
loop
mov
(bad)  
(bad)  
stos
les
xor
adc
(bad)  
push
jl
stos
and
adc
mov
push
iret   
pop
cmp
test
sub
jl
push
push
add
in
lods
fs mov
imul
out
xlat
dec
fdivl
xor
int
xor
divl
xchg
jecxz
add
push
iret   
pop
hlt    
or
(bad)  
ficom
arpl
out
stos
cmpsb
push
push
lret
ss aaa 
mov
outsb
xlat
dec
fdivl
sub
mov
std    
daa    
insb
sbb
push
dec
test
dec
fisubl
(bad)  
out
xlat
iret   
fdivl
out
push
pop
int3   
iret   
sti    
insb
lcall
jae
dec
push
adc
adc
or
repnz
inc
cld    
adc
jmp
xchg
(bad)  
enter
(bad)  
out
push
iret   
pop
hlt    
or
out
ljmp
js
jge
add
push
xchg
in
(bad)  
stos
push
pop
sahf   
pushf  
dec
lret
ss aaa 
mov
outsb
xlat
dec
fdivl
sub
mov
and
daa    
xor
pop
pop
pushf  
pushf  
dec
lret
ss aaa 
mov
outsb
xlat
dec
fdivl
sub
lods
mov
and
push
ja
push
hlt    
mov
scas
xchg
mov
imul
out
xlat
dec
fdivl
sub
enter
adc
mov
push
addr16 mov
cmp
xlat
iret   
pop
hlt    
or
outsb
loop
or
xor
add
inc
adc
push
jne
(bad)  
fwait
insl
mov
add
gs
enter
(bad)  
outsb
xlat
dec
fdivl
add
adc
fidiv
aas    
mov
orl
lods
pop
cmp
cmc    
mov
out
xlat
dec
fdivl
sub
ret
ret    
xor
xchg
xor
add
dec
cmp
xchg
push
iret   
fdivl
out
push
aas    
cld    
into   
in
xchg
xlat
sub
pop
call
or
hlt    
xchg
scas
inc
dec
jl
or
fwait
xor
pop
hlt    
mov
push
iret   
pop
lds
cmc    
sbb
add
push
cmpsl
mov
jno
fwait
(bad)  
enter
(bad)  
out
push
iret   
pop
hlt    
or
mov
cmp
les
adc
sub
sti    
sub
int
lods
je
ljmp
out
xlat
dec
fdivl
aas    
rcll
sbb
sub
mov
imul
xchg
mov
mov
bound
lock outsb
ss aaa 
mov
outsb
xlat
dec
fdivl
rcrb
cmpsl
fwait
clc    
cmp
dec
mov
cmp
lods
popa   
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
dec
sub
lcall
or
clc    
lahf   
mov
fistl
pop
cmp
xlat
iret   
pop
hlt    
or
outsb
add
mov
lds
and
lcall
ret    
and
push
iret   
fdivl
out
push
and
int
pop
xchg
fsubrl
push
jg
xor
in
xchg
out
(bad)  
jle
std    
mov
pop
hlt    
mov
push
iret   
pop
int3   
mov
movsl
loop
inc
sbb
testb
out
xchg
arpl
jae
or
hlt    
or
outsb
xlat
dec
pop
xchg
call
pusha  
dec
std    
lock cmp
add
xor
pop
jns
clc    
or
xchg
sbb
jae
or
hlt    
or
outsb
xlat
dec
push
or
mov
mov
pusha  
dec
testb
lods
pop
(bad)  
loope
inc
bnd call
(bad)  
out
push
iret   
pop
hlt    
or
mov
and
icebp  
pop
push
cmp
imul
and
cmpsl
mov
fdiv
or
outsb
xlat
dec
adc
aam
dec
out
mov
pusha  
jl
pusha  
fildll
cmp
mov
leave  
mov
push
out
xlat
dec
fdivl
cmp
mov
(bad)  
add
pop
jns
mov
xchg
fwait
pop
data16 lods
xchg
sbb
jae
or
hlt    
or
outsb
xlat
dec
adc
mov
pusha  
dec
loope
mov
cmpb
jge,pn
lret
mov
aam
fdiv
mov
push
iret   
pop
xor
xor
push
xor
jecxz
out
dec
dec
ds sahf 
repz fs pop
pop
dec
cmc    
mov
out
xlat
iret   
pop
hlt    
or
outsb
(bad)  
(bad)  
int3   
ret    
xchg
lds
stc    
sub
sub
sti    
aaa    
pusha  
adc
sbb
xlat
iret   
fdivl
out
push
sub
iret   
sbb
mov
jp
inc
cmp
cwtl   
cmp
push
call
xlat
iret   
pop
hlt    
or
outsb
icebp  
(bad)  
aas    
leave  
insl
mov
push
adcb
mov
movsb
xchg
pop
xor
leave  
mov
push
out
xlat
dec
fdivl
psrlq
adc
sub
push
into   
fsubrs
cmpsb
fcomip
mov
out
xlat
dec
fdivl
adc
leave  
testb
nop
out
sub
iret   
fnstenv
iret   
fdivl
out
push
sub
fcomip
push
ljmp
sub
cmovl
cmpsb
fcomip
mov
out
xlat
dec
fdivl
or
and
stos
loopne
add
ljmp
sbb
enter
in
lods
popa   
(bad)  
out
xlat
iret   
fdiv
or
outsb
xlat
dec
cmp
or
dec
push
xchg
push
jnp
push
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
je
push
iret   
fdiv
mov
out
xlat
xchg
inc
jns
and
pusha  
cld    
jg
in
or
repz pop
add
ffree
popa   
(bad)  {%k4}
out
call
adc
push
jns
test
mov
shrb
das    
out
dec
rorb
(bad)  
pop
(bad)
sbb
fs jp
add
bound
pop
scas
cmp
bound
pop
out
bound
bound
enter
sti    
out
xchg
clc    
jnp
inc
inc
into   
add
frstor
dec
lods
sbb
ret    
out
mov
xor
add
out
dec
xchg
jno
xchg
push
sbbl
insb
dec
ja
push
mov
into   
dec
testb
mov
aad
mov
out
mov
pop
ret    
shrl
lret
lret   
iret   
loop
outsb
push
in
adc
sarb
lahf   
fldenv
cmp
aam
inc
lods
divl
inc
xlat
jge
rolb
pop
jns
and
jmp
or
sbb
sbb
into   
lret
hlt    
data16
loope
sbb
adc
out
xchg
xor
push
je
ljmp
cmp
pop
pop
push
subl
repz jns
add
sub
shr
cmp
int3   
popa   
mov
adc
cmp
jbe
sub
lds
or
push
inc
sti    
movsb
and
lret   
xor
dec
jno
adc
jbe
les
adc
xchg
ss inc
push
cmp
rcll
jnp
push
fistl
fnsave
data16 je
pop
loopne
rclw
jnp
push
fistl
fnsave
in
pushf  
outsb
insl
inc
xchg
sti    
ret    
sub
loopne
and
add
enter
mov
push
out
xlat
iret   
fdiv
mov
push
iret   
pop
test
(bad)  
dec
(bad)  
jo
push
pop
sbb
and
out
mov
test
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivr
inc
add
dec
aaa    
mov
mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
iret   
add
cmp
push
push
pop
sahf   
push
iret   
fdiv
mov
out
xlat
jg
out
mov
pop
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xor
cmpsb
gs
push
xlat
pop
iret   
jg
xor
cmp
(bad)  
scas
mov
mov
(bad)  
sub
sarb
push
push
cmp
mov
pop
and
push
jbe
cmp
cmp
push
aad
or
dec
fs inc
inc
push
jp
dec
outsb
and
or
mov
mov
out
(bad)  
leave  
(bad)  
ss scas
bound
xlat
lods
lods
mov
ss dec
mov
pusha  
roll
(bad)  
mov
mov
cmp
push
cmpsb
add
sti    
negb
jge
mov
clc    
std    
add
xor
sbb
(bad)  
out
pop
out
add
(bad)  
cmpsb
xlat
jg
fdivrs
idivl
test
pop
notl
jbe
mov
sub
mov
gs mov
out
xlat
iret   
fcoml
cmpsb
fdiv
xchg
movsb
sti    
sbb
push
xchg
xchg
scas
enter
mov
out
xlat
iret   
push
cmp
aaa    
mov
out
xlat
iret   
fdiv
mov
out
xlat
mov
insl
aas    
enter
sarb
inc
lcall
jo
neg
lahf   
scas
(bad)  
les
mov
mov
and
pop
les
stos
sbb
lea
outsb
jnp
lods
adc
xchg
adc
jno
rolb
sbb
sub
jne
jno
imul
xor
cmp
jecxz
push
call
repnz sar
mov
out
pop
xor
mov
insb
adc
repz out
jecxz
out
or
cmp
arpl
iret   
push
das    
add
or
pop
hlt    
outsb
add
(bad)  
cli    
jl
mov
adc
inc
jle
dec
popa   
or
jno
out
xchg
mov
in
addr16 jne
cs push
sub
fwait
clc    
insl
test
les
ss ret
divb
mov
out
xlat
iret   
fdiv
mov
out
xlat
ret    
ljmp
fdiv
mov
out
xlat
iret   
fcompl
add
mov
stos
dec
icebp  
test
or
mov
cmp
dec
fs mov
and
std    
(bad)  
fcoms
call
fwait
das    
scas
fmul
or
imul
cmp
pusha  
sbb
(bad)
out
test
xchg
sbb
sub
and
mov
sbb
test
movsb
sti    
sbb
(bad)  
std    
(bad)  
pop
add
mov
mov
insl
fnstsw
test
out
xlat
iret   
fdivl
out
xlat
iret   
fdivr
int
(bad)  
pop
inc
insl
push
adc
loopne
sub
lock adc
mov
out
xlat
iret   
fdiv
mov
out
(bad)  
leave  
fxch
imul
stc    
mov
(bad)  
jl
push
mov
out
aam
fcomip
mov
out
xlat
iret   
fdiv
mov
cmpsl
jne
dec
es push
ret
mov
and
hlt    
mov
call
mov
ljmp
cmp
fistp
iret   
(bad)  
out
xlat
into   
(bad)  
(bad)  
mov
out
xlat
iret   
fdivr
mov
movsl
loope
sbb
stos
adc
daa    
daa    
mov
adc
mov
out
xlat
iret   
pop
hlt    
or
out
stos
icebp  
lds
cwtl   
xor
mul
sub
bound
pop
loop
les
xchg
test
push
test
(bad)  
ss jp
mov
lock mov
sti    
jbe
sub
pop
leave  
out
adc
lock lods
dec
sub
mov
jno
aad
daa    
fldt
enter
inc
fwait
jbe
aas    
loope
xor
jecxz
roll
cltd   
inc
int3   
jg
push
stos
push
jbe
fistpl
in
clc    
lahf   
mov
jp
push
verr
(bad)  
ja
inc
jno
cwtl   
pop
ret
jbe
call
sbb
push
mov
pop
in
ds cmp
mov
mov
inc
insl
lcallw
cmc    
xor
dec
mov
lcall
data16
mov
(bad)  
or
stos
in
loopne
call
mov
aam
ror
xor
out
xor
(bad)  
xor
mov
(bad)  
je
es ret 
adc
xchg
dec
(bad)  
push
arpl
in
insl
mov
fmul
lcall
dec
push
jp
mov
jo
inc
mov
loop
sub
(bad)  
mov
mov
in
adc
ret
mov
cmp
sub
cld    
out
pop
and
mov
dec
in
lret   
push
jno
xchg
mov
loope
mov
sub
mulb
mov
push
icebp  
push
ffreep
ret    
bound
and
xchg
loop
in
xlat
adc
fsub
mov
xor
movsb
dec
dec
xor
jl
and
jb
cs cs xor
test
pop
ret    
scas
insl
stc    
jle
cmp
pop
sub
mov
negb
(bad)  
movsb
addr16 out
addl
fs scas
(bad)  
leave  
xor
popa   
sbb
or
pusha  
inc
fucomi
lock mov
divl
xchg
cmpsb
aaa    
(bad)  
sti    
pop
cld    
lods
jb
inc
imul
arpl
les
add
lcall
sbb
jle
add
outsb
ss push
aam
in
outsb
ss push
bound
adc
lea
ljmp
(bad)  
int
sbb
xor
fiaddl
sub
int
xorb
loope
jns
ror
(bad)  
fiadd
or
imul
cli    
sti    
int
pop
jns
mov
cli    
add
cmp
push
fs iret 
xchg
xlat
push
hlt    
xchg
jp
sbb
adc
maxps
cwtl   
dec
pop
jns
mov
inc
out
cld    
out
cs push
cmp
pop
or
push
mov
adc
cmp
aaa    
pop
shll
and
nop
fwait
sub
sbb
mov
jnp
mov
add
inc
jl
inc
xor
cltd   
pop
stc    
pop
sub
push
mov
(bad)
(bad)  
addr16 xchg
lods
xlat
xorl
das    
dec
pop
aad
or
ret
stc    
jne
(bad)  
sahf   
add
fimull
shl
mov
or
lock pop
add
shlb
dec
rorb
sbb
mov
push
adc
mov
les
mov
outsb
out
jno
adc
das    
push
cmp
ss xor
pop
mov
dec
xorl
or
jmp
push
adc
dec
mov
ss femms 
inc
clc    
adc
negl
jecxz
add
cmp
or
gs clc 
popl
insb
cmp
dec
push
sldt
jae
pop
push
xor
xor
xchg
xor
push
mov
mov
mov
dec
jbe
sub
jb
push
lret   
lock jno
stc    
ss and
sbb
push
xchg
test
cld    
lods
rolb
adc
inc
mov
push
xor
shrl
out
cltd   
(bad)  
xchg
adc
lret
lahf   
data16 jb
xchg
test
push
push
lea
or
jecxz
movsl
arpl
in
push
xchg
scas
cs and
aas    
mov
std    
adc
lret
(bad)  
push
cmp
sbb
dec
imulb
movsl
fldcw
cld    
sbb
out
cmp
jge
pop
cmp
sti    
push
stos
mov
xchg
sbb
in
loopne
aas    
push
lods
dec
inc
popa   
aas    
out
xchg
sub
test
cmp
inc
mov
repz mov
dec
push
xor
pop
pop
xor
fidivr
(bad)  
fistl
xchg
aaa    
scas
loop
movsb
mov
xor
pop
loopne
xor
inc
push
jg
inc
xchg
(bad)  
mov
xchg
cmp
xor
lahf   
sub
pushl
lea
push
adc
mov
sub
ret
mov
mov
jno
cltd   
sub
sbb
in
mov
dec
fistpll
pop
xchg
call
dec
mov
mov
stc    
test
xchg
es dec
lret   
ss inc
mov
lods
inc
cs inc
fucom
std    
(bad)
(bad)  
dec
lds
outsb
(bad)  
adc
inc
xchg
xlat
iret   
fdiv
stc    
imul
(bad)  
movsb
jecxz
pusha  
adc
xchg
imul
jb
pop
push
push
push
xchg
cld    
stos
(bad)  
sub
or
xlat
out
or
mov
push
push
sahf   
test
mov
nop
pop
mov
adc
and
inc
adc
jmp
jbe
xchg
sub
dec
(bad)  
pop
xchg
shll
aad
push
xchg
mov
mov
mov
mov
lahf   
js
lret
cmp
xlat
iret   
fdiv
imull
pusha  
inc
imul
pushf  
movsl
outsb
mov
inc
es data16 cmp
ljmp
adc
inc
std    
xor
out
xlat
(bad)  
or
xor
lahf   
loopne
mov
and
push
rorb
mov
add
jge
xlat
cmpsl
mov
int
or
jg
push
iret   
lds
cmp
stos
xor
mov
mov
pop
push
mov
sar
enter
and
pusha  
cli    
xor
add
xchg
repnz loop
fsubr
into   
loop
(bad)  
sti    
jge
call
jge
pop
aam
hlt    
mov
out
push
jns
mov
mov
gs cli 
push
push
xchg
out
std    
repz in
js
mov
jb
dec
push
lds
cmp
pusha  
push
test
xchg
jge
or
cld    
and
mov
mov
das    
or
xor
push
repnz loop
push
push
out
mov
int
or
cmp
icebp  
jge
loopne
aad
gs syscall 
mov
arpl
mov
add
pop
jae
or
xorl
dec
mov
mov
loope
dec
mov
xchg
cmp
mov
xchg
adc
cmpb
das    
push
js
cld    
inc
xchg
xor
pop
cmp
(bad)  
or
ror
xor
sbb
js
mov
jo
stos
xchg
push
aad
jne
aam
mov
cmp
mov
lret
xchg
mov
test
xchg
mov
aas    
ror
fwait
inc
mov
int3   
xchg
jno
popf   
mov
out
lods
xor
(bad)  
or
hlt    
mov
fidivl
mov
jge
(bad)  
je
sahf   
gs hlt 
shrb
push
fwait
push
loop
addl
add
sbb
inc
iret   
test
int
push
sbb
mov
insb
inc
lahf   
xlat
repnz pop
negl
(bad)  
(bad)  
mov
mov
adc
pop
test
stos
lret
stos
sbb
dec
repnz mov
ljmp
jne
mov
lea
xorb
mov
and
jbe
xchg
mov
mov
adc
into   
mov
cli    
iret   
loopne
jns
into   
and
pop
jo
int
or
mul
mov
mov
in
mov
mov
ja
push
(bad)  
jno
in
jecxz
adc
out
and
in
pop
and
jecxz
push
jl
sbb
adc
ja
xor
add
fwait
cld    
pop
adc
and
clc    
incl
lea
mov
in
ret
mov
insl
pop
pushf  
cmp
xlat
ret
pop
imul
sti    
stc    
lea
mov
dec
outsl
jp
movsb
mov
enter
mov
mov
ja
push
(bad)  
jno
in
std    
push
adc
cmp
mov
gs pusha 
and
pop
mov
(bad)  
loopne
insb
arpl
adc
lock and
in
mov
sub
pop
sarl
mov
or
ljmpw
mov
mov
pop
(bad)  
mov
and
and
push
inc
mov
lock test
rcrl
test
push
and
xchg
xchg
push
lods
clc    
ret
lds
sbb
insl
xlat
inc
lea
push
add
cltd   
xchg
hlt    
push
jg
fs enter
int3   
add
repz lret 
fwait
ss loop
dec
add
(bad)  
sbb
push
inc
mov
dec
dec
daa    
xor
test
out
lods
mov
pop
inc
sub
ret
jp
mov
adc
fbld
sti    
cmc    
pusha  
push
push
push
sub
insb
dec
and
jp
push
fstpl
mov
mov
jp
outsl
icebp  
mov
in
pop
mov
test
mov
addr16 jmp
sti    
mov
xor
shl
psubsb
pop
cmp
sbb
int3   
and
(bad)  
jl
call
add
cmpsl
ret
adc
mov
aas    
loop
fwait
dec
jne
jbe
imul
lea
lret
ja
mov
jmp
mov
mov
(bad)  
adc
stc    
lea
mov
jae
pop
mov
(bad)  
loop
arpl
or
inc
les
clc    
je
add
scas
pop
call
push
fist
adcl
(bad)  
icebp  
das    
rclb
in
movsb
(bad)  
ja
insb
cmp
test
ljmp
stc    
in
jns
lret   
inc
push
mov
or
(bad)  
fsubrl
(bad)  
fnstcw
lods
stos
enter
cltd   
fidivl
scas
pop
jle
mov
cmp
cltd   
mov
add
lea
xor
dec
push
mov
stc    
dec
lock int3 
dec
jg
xchg
dec
push
and
hlt    
es push
jno
lret   
add
pop
inc
fwait
push
dec
jg
mov
mov
sbb
add
pop
mov
repz push
lcall
pop
mov
dec
push
addr16 sub
pop
inc
andl
stos
mov
lcall
pop
lock jl
pop
sbb
fidivrl
fwait
jp
ds lods
mov
int
dec
pop
adc
push
addl
cmc    
inc
sbb
sub
mov
mov
(bad)  
out
jecxz
mov
sub
fidivrl
push
jb
xlat
inc
pop
icebp  
data16
cmp
dec
lds
xor
jp
sbb
rcl
xor
sahf   
inc
jns
rclb
mov
cld    
(bad)  
dec
bound
mov
fdivs
mov
loope
test
and
andl
mov
push
outsb
out
sub
inc
nop
dec
or
test
pop
pop
fnstsw
push
test
add
int
sbb
cli    
rolb
and
aam
subl
in
add
mov
sub
pop
idivl
push
mov
flds
mov
std    
xchg
sub
and
sub
mov
jge
ss lock icebp 
mov
mov
mov
ja
stos
dec
mov
pop
mov
(bad)  
cmpsl
or
repz cld 
fstpt
adc
lret
push
ffree
clc    
fbstp
out
mov
scas
pop
test
ret
fscale 
insb
test
popl
shr
mov
nop
jbe
mov
pop
sbb
add
mov
mov
out
mov
mov
mov
and
lahf   
nop
sbb
cmpsb
mov
mov
push
and
and
in
not
lods
pop
into   
adc
or
(bad)  
test
push
fcomps
daa    
arpl
(bad)  
sub
pop
inc
js
lret   
repnz sub
pop
add
lods
add
push
data16 cmc 
xor
test
push
shr
cmpsl
inc
hlt    
mov
adc
xor
push
xor
addr16 push
fcomps
push
xchg
enter
xor
mov
mov
mov
scas
fstpl
inc
pop
test
(bad)  
lock jle
insb
lods
(bad)  
rcll
shrb
enter
test
stos
push
adc
out
std    
mov
stos
sub
fnstsw
push
test
add
mov
hlt    
add
pop
adc
or
(bad)  
out
inc
adc
xor
push
mov
sbb
inc
stc    
ss cwtl 
iret   
fwait
test
stos
mov
popa   
rol
js
(bad)  
(bad)  
rol
outsb
daa    
cmc    
xchg
push
mov
pop
iret   
fwait
test
stos
mov
popa   
rorb
test
(bad)  
(bad)  
roll
fildll
addl
stc    
lret
sysret 
rorl
outsl
jmp
sar
enter
pop
out
mov
repz std 
mov
mov
ja
mov
(bad)  
xor
fdivr
or
out
dec
mov
cmpsb
adc
adc
fstps
daa    
repnz std 
inc
xor
xchg
cmpsb
in
jns
imul
xor
cmp
gs iret 
mov
xor
ljmp
fdivs
out
daa    
sub
xor
ljmp
int3   
or
fdivr
out
mov
adc
scas
add
fwait
cwtl   
aad
inc
fcompl
hlt    
out
(bad)  
scas
jg
cmpsb
push
out
(bad)  
lods
pop
out
ret    
fwait
cwtl   
jmp
xchg
mov
ret
push
pop
pop
or
xchg
es push
inc
lcall
(bad)  
push
gs or
xchg
mov
add
push
dec
jmp
imul
lods
inc
xor
cwtl   
repz leave 
(bad)  
outsl
mov
and
jb
cli    
and
les
jle
je
shr
and
lds
sub
lret
call
jmp
or
cmp
es mov
jmp
fdivr
mov
xor
testb
or
jb
add
scas
mov
jp
sti    
mov
shrl
add
add
out
sbb
mov
(bad)  
mov
and
iret   
arpl
xchg
rol
stc    
xchg
shlb
js
mov
adc
(bad)  
stc    
sti    
jecxz
sbb
fucomi
mov
es ja
mov
inc
adc
(bad)  
mov
shlb
and
idivl
pop
call
or
sbbl
mov
mov
lds
mov
add
in
fwait
loope
pop
dec
pop
lock pop
xchg
maxps
xchg
sbb
in
pop
sbbl
push
push
mov
fucompp 
icebp  
sahf   
loop
into   
int
(bad)  
repz add
dec
xor
mov
push
ja
and
mov
dec
outsb
mov
aam
pop
mov
cs mov
(bad)  
mov
jns
push
jnp
jbe
jmp
xor
hlt    
adcl
sub
xchg
or
(bad)  
mov
ret
jns
enter
in
dec
jle
je
shr
push
stc    
sarb
mov
mov
pusha  
dec
or
(bad)  
xchg
mov
dec
mov
fwait
(bad)  
ret
mov
iret   
lcall
push
or
mov
scas
nop
rol
cmpl
aas    
clc    
cmpsl
adc
into   
sub
stc    
dec
outsb
cmpsb
(bad)  
leave  
adc
lret
repnz mov
lea
mov
jg
mov
xsave
mov
adc
lcall
clc    
outsb
sub
xor
enter
xchg
xlat
or
adc
or
shr
pop
std    
imul
jecxz
aad
adc
lcall
add
dec
fs pop
test
cld    
enter
fidivr
fsub
xor
pushf  
rcl
das    
icebp  
imul
call
adc
lcall
add
jno
pop
test
cld    
enter
xchg
jae
lds
les
in
(bad)  
pushf  
sarl
dec
leave  
imul
mull
adc
lcall
or
jne
pop
test
cld    
enter
push
inc
or
jp
xchg
addr16 fwait
mov
push
sub
mov
std    
sbb
inc
popf   
jmp
(bad)  
ss gs or
mul
xchg
and
add
push
lahf   
and
lods
bound
lock or
mov
icebp  
sti    
outsl
jbe
fs mov
icebp  
pop
repz jecxz
mov
cmp
sbb
js
lret
dec
les
scas
lods
pop
pop
cmpb
ret
xlat
xlat
insl
pop
push
fsubl
mov
inc
outsb
(bad)  
xchg
out
jmp
sahf   
std    
dec
nop
shr
xchg
mov
dec
outsb
lret
dec
imul
lahf   
stc    
outsb
mov
mov
stos
leave  
push
(bad)  
jae
xchg
mov
mov
repnz andl
mov
jo
imul
mov
push
mov
xor
sbb
inc
and
xchg
adc
jmp
xor
mov
or
mov
(bad)  
xor
out
xchg
adc
add
inc
sub
test
lea
fisttp
lahf   
inc
movsl
pop
mov
inc
add
mov
mov
cltd   
decb
mov
xchg
pusha  
negl
dec
lcall
pop
gs
or
add
fprem1 
stos
xor
imul
mov
in
aas    
pushf  
sbb
arpl
in
mov
push
sbb
sbb
ds push
mov
pusha  
or
mov
sbb
xchg
dec
addl
(bad)  
xchg
cmp
push
test
rolb
fcmovnb
xchg
adc
out
js
pop
add
shrl
mov
jp
xlat
fidivl
hlt    
mov
test
fdivl
stos
rcll
xchg
sarl
mov
jge
jae
cmp
push
and
xchg
inc
(bad)  
push
mov
(bad)  
iret   
shll
fildl
jne
push
lea
ret
or
loop
xchg
lods
loop
out
inc
sub
mov
xorb
movsl
mov
sbb
cmp
rorl
(bad)  
xor
lret
xchg
jno
mov
rorl
jbe
sub
mov
xchg
inc
int3   
fcompl
fwait
sub
psubw
hlt    
es nop
xchg
jecxz
xchg
loope
ret
jbe
xor
sub
add
xor
jg
inc
addr16 push
push
dec
std    
xlat
jecxz
push
mov
jae
pop
push
test
hlt    
push
stos
ljmp
and
lock ja
xchg
and
cmc    
inc
sbb
cmpsb
ljmp
xchg
xchg
add
ss sub
andl
test
or
jmp
aaa    
test
inc
sub
je
rclb
sub
push
mov
les
jae
js
dec
sti    
iret   
jmp
mov
movsl
lahf   
lds
test
xchg
pop
inc
cmpsl
test
and
fnop   
lods
addl
mov
xchg
fwait
adc
inc
adc
fdivr
pop
and
sub
rorb
int
mov
cmp
push
repnz pop
popa   
ficomp
cmp
adcl
out
into   
mov
xorl
adc
inc
into   
pop
fdiv
(bad)  
xor
loope
jns
and
adc
mov
int
andb
iret   
inc
lea
sbb
cmp
inc
push
das    
xor
lock add
negl
lcall
adc
aas    
push
xchg
mov
loop
push
mov
movsb
mov
int
inc
gs
push
sbb
jno
or
dec
das    
repnz or
mov
js
push
xchg
fcmovb
xchg
push
sbb
inc
dec
test
ficomp
sub
jb
fstpt
enter
fldt
xchg
ret
cltd   
inc
or
jmpw
and
ds pop
push
scas
xchg
fcmovb
xchg
and
hlt    
ds
test
les
movsb
(bad)  
or
mov
mov
leave  
pop
mov
ljmp
inc
lock outsb
sti    
and
xor
cmp
jg
loope
pop
jecxz
ljmp
shr
push
scas
pop
(bad)  
addr16 push
fdivr
dec
mov
sub
mov
into   
pop
(bad)  
mov
sahf   
jo
sub
test
or
jmp
aaa    
test
fdivp
psllq
xchg
inc
xchg
sahf   
faddp
xchg
jp
dec
xchg
fldl
pop
fisub
inc
movsl
xor
stc    
into   
jbe
shlb
call
push
mov
out
adc
movsb
dec
std    
xchg
inc
xchg
xchg
fcmovb
xchg
dec
push
out
es dec
xchg
fldl
add
gs leave 
inc
movsl
xor
divb
shlb
call
push
jmp
inc
push
adc
xchg
inc
xchg
sahf   
faddp
fbld
mov
inc
sub
push
and
test
inc
rcrl
fsubp
mov
push
stc    
pop
cltd   
pop
jbe
dec
mov
mov
add
scas
fucom
daa    
(bad)  
dec
(bad)  
std    
(bad)  
repz repnz imul
shr
es mov
pusha  
lret   
inc
or
ret
cmpsl
popa   
mov
fiadd
aad
aad
or
nop
les
ds mov
mov
lods
shrb
std    
fnstsw
inc
pop
push
(bad)  
insb
lret   
inc
add
lea
lods
cli    
inc
inc
cmp
icebp  
les
and
sub
sub
push
pop
stos
push
sbb
and
xchg
enter
jmp
popf   
test
outsb
loopne
inc
or
ds push
xchg
rcll
xor
add
mov
test
inc
cld    
lahf   
lahf   
mov
and
xchg
enter
jmp
popf   
test
ljmp
push
xlat
mov
pop
fcmovnbe
lea
flds
xchg
fcmovb
addr16 add
adc
adc
lcall
xor
xchg
inc
or
mov
ds inc
test
or
nop
loopne
xor
cmp
mov
adc
sub
sub
lahf   
fucomp
inc
ss imul
xchg
mov
xchg
and
pop
sub
adc
pop
call
push
jg
movsl
cmp
repz jbe
sbb
adc
fwait
xor
jbe
test
nop
push
mov
fs cmp
mov
imul
pop
movsl
lahf   
pushf  
mov
leave  
push
aas    
or
jl
push
bound
fcomps
in
inc
sahf   
std    
insb
mov
sub
ret
mov
in
ss sbb
jbe
sub
scas
push
(bad)  
rol
lret
lods
cld    
cmp
adc
pop
outsb
arpl
xor
cmpsb
movsl
pop
push
scas
xchg
fcmovb
xchg
pop
mov
ds
test
les
mov
jmp
jmp
fsubrl
test
(bad)  
or
in
push
(bad)
mov
pop
stos
jl
jb
cmpl
jg
jle
or
mov
rorl
in
loope
jo
fsubs
mov
pop
mov
jne
xor
push
movsb
icebp  
rolb
arpl
xor
clc    
mov
lea
andb
xor
inc
inc
adc
sbb
lahf   
jecxz,pt
aaa    
xor
cmp
outsb
inc
lods
jp
jo,pt
dec
lea
fldl
stc    
sarb
pop
arpl
scas
int3   
lods
sbb
testb
mov
jle
push
enter
ss pop
pop
adc
(bad)  
rcrl
adcl
mov
mov
jnp
enter
cs ljmp
mov
push
cmp
mov
adcl
xor
adcl
icebp  
or
mov
shll
(bad)  
adc
fucompp 
std    
jmp
and
das    
or
mov
in
sahf   
rolb
cmp
pop
cmp
xor
pop
jecxz
call
test
pop
jns
mov
mov
fadds
mov
push
scas
rolb
orb
cmc    
fcomps
rorl
loopne
out
fnsave
out
mov
jb
out
pop
sub
aaa    
ds daa 
pop
aas    
test
test
aam
mov
xor
mov
cmp
dec
aaa    
loop
out
les
xchg
fcmovb
xchg
xchg
add
ficompl
and
les
leave  
pop
sub
loop
mov
pop
call
dec
jg
loope
mov
stos
ret
xchg
sbb
stc    
inc
jne
sarb
roll
rcll
push
dec
lret   
mov
push
jl
or
ficompl
faddp
addr16 add
and
mov
jp
enter
dec
test
fidivr
mov
dec
mov
call
dec
scas
adc
in
push
xor
or
(bad)  
inc
pusha  
sbb
insl
and
cmpsl
push
cmp
push
(bad)  
jmp
mov
jb
inc
push
into   
ret
mov
cmp
jae
mov
fs push
xor
outsb
adc
rol
out
mov
push
or
bound
outsb
clc    
test
mov
out
sub
jecxz
cmc    
(bad)  
(bad)  
icebp  
xor
fiaddl
or
sbb
mul
js
(bad)  
or
ds sahf 
dec
push
ljmp
and
lods
adc
xchg
inc
xchg
xchg
fcmovb
xchg
add
stc    
std    
mov
mov
cli    
push
into   
popa   
ds mov
dec
es ds push
out
cs and
or
jle
mov
jge
lock adcl
popw
fadd
out
adc
aas    
add
inc
sub
xor
leave  
lahf   
fist
dec
push
lds
cmp
mov
sar
in
or
fwait
(bad)  
pop
xlat
inc
pop
test
popa   
out
scas
sbb
cmc    
add
out
sub
out
out
adc
clc    
jp
gs sub
addr16 push
fdivs
xchg
enter
mov
pop
mov
dec
ljmp
(bad)  
int
(bad)  
aas    
sub
cmc    
adcl
hlt    
sbb
mov
outsb
daa    
jg
aaa    
shlb
fadd
ds push
shrl
add
xchg
dec
ds push
pop
jmp
push
jnp
sbb
lds
pop
and
(bad)  
mov
mov
adcl
icebp  
mov
rolb
pop
mov
add
lahf   
out
sub
pushf  
jl
stos
cmp
popf   
dec
push
out
cld    
fdivs
into   
icebp  
out
iret   
enter
std    
xchg
cmc    
pop
or
leave  
push
xlat
sahf   
jo
push
rorb
out
jno
jno
inc
sub
and
sbb
dec
pop
dec
jg
sbb
mov
lock xchg
sbb
adc
or
xchg
in
(bad)  
pop
scas
mov
pop
jb
mov
sbb
inc
stos
shr
fsubrs
clc    
jno
and
(bad)  
ds lret
fnop   
int3   
(bad)  
mov
or
cmp
stos
icebp  
loope
jmp
cld    
sub
(bad)  
test
xchg
mov
stc    
sarb
push
push
jmp
insl
(bad)  
mov
repnz xor
xchg
ret
fcompl
dec
(bad)  
dec
addr16 call
cld    
dec
(bad)  
cli    
cld    
roll
add
fimull
xchg
in
insb
pop
inc
cmpsl
mov
lret
call
lahf   
les
sub
mov
cmpsl
pop
inc
adc
ds lahf 
(bad)  
mov
scas
jbe
dec
insl
xlat
push
mov
cltd   
hlt    
jge
or
mov
aam
pop
notb
xchg
rcll
ret    
push
pop
std    
pusha  
add
inc
dec
daa    
ds mov
setbe
(bad)  
dec
pusha  
xor
inc
call
pop
int3   
inc
js
ds push
mov
ja
xor
fst
sti    
cmp
rcrl
dec
fsubr
in
fsubp
(bad)  
frstor
jmp
sub
mov
(bad)  
push
fldl
push
xchg
rcr
mov
ror
xor
roll
call
std    
cmp
rolb
call
dec
addr16 call
add
test
cmp
ss mov
cltd   
sti    
cmp
shr
jle
xor
cmp
fidivr
int3   
test
out
pushl
dec
popf   
sarl
push
(bad)  
mov
and
(bad)  
jmp
fcmove
(bad)  
mov
mov
negb
mov
js
inc
mov
xchg
mov
nop
call
nop
pushf  
pop
inc
cmpsl
loope
(bad)  
hlt    
mov
stc    
inc
sar
mov
add
lods
inc
les
pusha  
test
adcl
ror
push
mov
fldl
in
stos
xor
out
sub
test
push
js
mov
stc    
mov
outsl
xchg
(bad)  
cmp
test
sbb
jbe
(bad)  
(bad)  
aas    
lods
in
push
pop
pop
mov
add
pop
mov
cmpsl
std    
addl
xor
outsb
sub
jns
or
add
and
pop
adc
jno
jp
xor
mov
or
clc    
loope
enter
(bad)  
(bad)  
in
pop
sub
or
xchg
loopne
fdivp
pop
xor
ja
jbe
pop
clc    
mov
mov
les
js
push
xor
mov
sub
mov
movsl
dec
lahf   
xchg
loop
in
jp
push
in
and
out
adc
push
movsl
loopne
pop
pop
mov
add
pop
dec
popf   
pop
data16 mov
push
ljmp
rol
out
push
ds ret 
enter
sub
int3   
cmpsb
mov
jbe
pop
clc    
mov
sar
jmp
shll
jae
(bad)  
stc    
popa   
enter
pop
push
xchg
imul
rorb
ret    
call
addr16 push
fcomps
shll
fisttpl
fcomps
shll
fisttpl
fcomps
fsubrp
jmp
xchg
xor
test
scas
in
stc    
std    
mov
imull
(bad)  
lods
das    
xchg
push
adc
pop
mov
mov
or
hlt    
xor
(bad)  
shll
addr16 sbb
(bad)  
arpl
mov
mov
adc
movsb
push
les
cwtl   
cmp
outsl
push
andl
rorb
sbb
(bad)  
mov
fidiv
icebp  
cpuid  
(bad)  
flds
mov
cmp
xchg
jl
(bad)  
iret   
enter
insb
pop
aad
into   
ret    
sbb
or
sub
push
popf   
insl
popl
adc
push
(bad)  
(bad)  
sahf   
jo
push
rorb
and
mov
sub
jbe
int
sbb
ret    
rcl
rolb
add
out
out
fisttpll
jb
fwait
shrb
out
fnop   
pop
(bad)  
cmp
iret   
mov
rolb
adc
mov
(bad)  
dec
test
inc
xchg
scas
(bad)  
out
sti    
jo
fwait
bound
data16 jl
sub
ljmp
(bad)  
int
daa    
lret   
popf   
or
inc
out
jl
xchg
add
xchg
leave  
psrad
mov
incb
rorl
ret    
call
xchg
js
xlat
pop
xchg
(bad)  
mov
ret
push
stos
cli    
xchg
jb
mov
pop
fisub
cmp
fsubrl
cwtl   
test
out
clc    
add
jp
ficomp
ljmp
adcl
fidivr
in
lcall
jo
or
dec
orl
int3   
lds
dec
mov
icebp  
addr16 xchg
lods
leave  
int
pop
xchg
dec
pop
sbb
jg
out
divl
or
adc
mov
and
aas    
jge
stos
rolb
xor
data16 mov
add
sub
int3   
dec
inc
dec
push
inc
sub
push
dec
in
xlat
stc    
sbb
xchg
jge
push
call
iret   
movsl
out
mov
jne
pusha  
iret   
pop
dec
add
sub
xchg
xor
(bad)  
repnz lahf 
iret   
pop
cwtl   
inc
push
xchg
inc
(bad)  
xchg
xchg
or
dec
iret   
mov
je
rcr
daa    
into   
mov
cmp
stos
mov
mov
rol
cmp
xor
mov
push
out
xchg
cld    
inc
xchg
int
mov
(bad)  
std    
fildll
jno
lods
pop
jp
imul
mov
pusha  
adc
rol
jno
rcrb
mov
(bad)  
clc    
in
aam
les
push
pusha  
fldcw
dec
xchg
(bad)  
cmpsl
out
pop
cli    
fdivrl
add
and
js
jmp
mov
push
int3   
loop
pop
jge
mov
repz push
push
lret   
lret
jle
int
push
adc
jge
dec
(bad)  
arpl
imull
(bad)  
fsubl
mov
(bad)  
fs int
test
fisubr
dec
add
std    
dec
shrl
mov
test
movsb
sbb
inc
fldcw
stos
push
adc
add
clc    
pop
ret
inc
mov
push
jmp
mov
cmp
subb
bound
lcall
cmp
cli    
in
and
and
jg
jg
(bad)  
add
cmp
xor
out
sbb
in
enter
neg
in
sbb
fcomps
sbb
sbb
pop
dec
push
pusha  
int
movsl
fwait
(bad)  
adc
fs sbb
pushf  
pop
xchg
cli    
aas    
call
fwait
cwtl   
js
outsb
sub
(bad)  
lods
das    
xchg
push
adc
cmp
fnsave
(bad)  
inc
daa    
movsl
cs stc 
aad
addr16 fdivp
lea
and
add
jg
(bad)  
jmp
mov
or
mov
iret   
dec
ljmp
ret    
dec
addr16 call
xor
int
popl
aas    
mov
int3   
daa    
push
loope
outsl
inc
mov
jle
ret
inc
adc
imul
addr16 call
add
test
cmp
ss mov
aas    
cmp
out
mov
xchg
or
mov
mov
fsubl
out
push
jnp
movsl
fwait
cwtl   
movsb
iret   
dec
and
inc
sbb
push
cwtl   
out
fxch
jnp
incl
test
cmp
fidivr
inc
lahf   
cmpsb
in
in
pop
xchg
fs pusha 
push
fmuls
xlat
repz enter
std    
xchg
inc
incl
and
ds inc
into   
or
push
jg
les
test
rcl
push
fisttpl
divb
(bad)  
std    
cmpsb
mov
insb
ss
out
pop
mov
fwait
test
or
xor
jle
cmp
sarl
les
cmpsb
xor
rorl
inc
leave  
pop
iret   
fwait
xchg
mov
ja
hlt    
stos
dec
in
dec
out
mov
xchg
or
sub
or
inc
cltd   
cli    
int3   
sarl
pop
mov
sbb
pop
mov
and
mov
xchg
or
sub
or
inc
test
lock sarl
int3   
in
sbb
pop
cmpsl
mov
out
mov
sahf   
or
pop
mov
dec
out
cmpsl
mov
iret   
fwait
test
xor
sbb
mov
and
(bad)  
std    
jmp
test
outsb
jg
jl
(bad)  
jb
jbe
lret
out
xlat
adc
addr16 push
fdivr
pop
mov
push
adc
or
std    
(bad)  
(bad)  
xor
shll
jo
ja
push
fdivr
mov
dec
pop
jns
mov
or
stc    
sub
sub
xchg
es cltd 
bound
mov
(bad)  {%k4}
fdivl
xchg
iret   
fdiv
mov
rcrl
adc
pop
jle
xor
inc
push
les
or
addr16
movsb
rol
insb
scas
ss add
ljmp
inc
sti    
pop
push
iret   
mov
fs mov
and
lahf   
jge
jp
aad
outsl
sti    
cmp
mov
subb
icebp  
or
sub
sbb
inc
fwait
imul
or
dec
dec
fdiv
and
ret
int3   
mov
int
stos
lret
imul
or
dec
push
xchg
xor
and
lahf   
jge
jp
mov
push
fs jmp
push
stos
inc
das    
jne
(bad)  
in
lods
cmc    
icebp  
cpuid  
(bad)  
(bad)  
dec
fdivr
outsl
jbe
arpl
pop
shl
dec
addr16 sti 
fisubr
bt
and
mov
iret   
enter
and
cmp
sarb
mov
cltd   
rorl
dec
and
adc
jnp
sub
mov
push
scas
sub
dec
stc    
aaa    
xchg
test
xorb
inc
push
str
mov
das    
cmp
mov
sarb
mov
push
cli    
jne
dec
dec
pop
popf   
outsb
subl
rolb
lods
addl
imul
out
mov
mov
pop
nop
mov
stos
into   
outsl
into   
pop
pop
aad
imull
stos
mov
jns
dec
test
pop
rcrl
fistp
sub
jl
push
push
or
xlat
mov
jmp
inc
mov
push
popf   
ljmp
popf   
mov
push
mov
fmull
fildl
(bad)  
mov
jnp
sub
dec
stc    
aaa    
xchg
test
adc
jle
stos
leave  
mov
movsb
shrb
negb
or
(bad)  
mov
cs in
lock stos
pop
xchg
out
das    
cwtl   
movsl
cmp
sahf   
or
inc
pop
adc
jp
sarl
inc
cld    
cmp
(bad)  {%k4}
jmp
dec
nop
jns
ljmp
mov
iret   
inc
pop
popf   
lea
sub
mov
dec
(bad)  
jo
push
pop
sbb
and
(bad)  
xlat
pop
and
jp
jmp
adc
mov
cmpsl
loop
xor
or
mov
or
sbb
cmpsl
les
inc
dec
jge
jle
dec
stos
out
xor
or
inc
in
and
cmp
(bad)  
push
or
dec
loope
sbb
stos
and
jl
and
xchg
xabort
xor
sub
aam
push
or
arpl
jne
jae
mov
or
cmc    
xlat
xor
sub
aam
push
or
pop
push
sbb
xchg
adc
push
aam
gs in
test
dec
push
adc
mov
sbb
fcoml
lock jecxz
lds
inc
gs in
test
dec
push
adc
not
cmp
stos
in
and
std    
scas
xor
or
hlt    
xlat
xor
sub
aam
push
or
shrb
pop
xchg
int3   
(bad)  
jle
cli    
das    
or
and
std    
lds
int
sbb
dec
fcomi
mov
cmp
lock ret
mov
bnd je
push
mov
loop
(bad)  
and
test
mov
pop
inc
lret
cli    
das    
or
sbb
iret   
pop
mov
dec
xchg
mulps
sbb
psubd
or
sbb
ret
xor
xchg
and
sbb
adc
ja
frstor
add
adc
pop
xlat
xchg
jl
or
movsl
test
int
cmp
sbb
mov
fdivrs
inc
cmp
or
repnz iret 
inc
imul
fmuls
fwait
loope
loop
repnz es lahf 
xor
sub
out
mov
xchg
jnp
adc
(bad)  
sahf   
xlat
mov
icebp  
mov
nop
stos
mov
fmuls
or
cmp
pop
imul
add
inc
mov
cmp
lods
dec
es dec
addr16 pusha 
xchg
lods
icebp  
clc    
xor
jb
(bad)  
imull
ds xchg
xchg
js
incl
adc
cmpsl
popl
mov
(bad)  
(bad)  
(bad)  
dec
pop
test
aas    
(bad)  
and
nop
and
lea
popa   
cmp
adc
mov
mov
or
xchg
lods
lcall
jle
popa   
lcall
shlb
push
sub
std    
or
fdivp
adc
xchg
sahf   
idivl
dec
pop
push
in
inc
out
sub
add
mov
pop
pop
inc
test
sbb
cmp
push
call
inc
cmp
or
aaa    
adc
subb
mov
add
adc
iret   
mov
pop
fdivp
pop
cwtl   
fdivrl
mov
test
sbb
insl
movsb
push
inc
test
ss push
lret
push
hlt    
push
dec
sbb
subb
mov
lahf   
cmp
addb
and
fidiv
or
mov
add
rol
ret    
cmp
mov
into   
divl
ret
out
sti    
movsl
jmp
jnp
sbb
jl
dec
xchg
inc
(bad)  
aaa    
adc
or
jno
in
test
sti    
dec
or
add
lret
leave  
mov
adc
(bad)  
ss sub
dec
fstps
jns
jmp
jl
adc
imul
(bad)  
fwait
cmp
add
aam
pop
jle
cli    
das    
or
sbb
insl
movsl
fisubr
push
push
lcall
pop
sub
mov
push
lods
js
ficomp
iret   
sub
add
cmp
add
rolb
push
or
fild
sub
std    
mov
icebp  
cmp
pushf  
inc
sub
cmovg
push
sub
mov
cmpsb
arpl
add
aaa    
xor
sub
stos
push
or
push
sub
scas
or
lahf   
rolb
mov
mov
xlat
icebp  
lcall
inc
lods
rcr
lds
icebp  
aaa    
pop
sarb
push
nop
mov
pop
pop
jae
imul
hlt    
mov
adc
sbbl
and
bnd jnp
jmp
out
and
lock or
push
enter
adc
sub
and
lea
xchg
sarl
rcll
and
xchg
jecxz
push
lock test
daa    
dec
aad
xchg
add
jbe
imul
lea
lds
fnstsw
dec
pop
pop
adc
cmp
add
or
hlt    
jl
or
in
push
fcoml
push
scas
jae
xor
inc
cmc    
lcall
jmp
outsl
sti    
pop
out
aam
movsb
sbb
mov
outsl
cmp
(bad)  
xchg
cli    
inc
xor
loope
imul
stc    
xchg
jp
fimul
(bad)  {%k4}
fnstsw
dec
in
addr16 inc
pop
repz or
ja
mov
cld    
outsl
add
pop
clc    
dec
test
push
jbe
ret
insb
adc
jge
clc    
mov
jg
inc
or
jge
in
test
fnop   
pop
(bad)  
clc    
pop
ret
movsl
in
sbb
or
dec
lahf   
adc
sub
pop
adc
mov
xor
or
ja
mov
(bad)  
push
fidivrl
fwait
jbe,pn
cwtl   
lcall
mov
int
dec
dec
outsl
ss
push
int
pusha  
mov
iret   
sti    
ja
pop
push
adc
mov
popf   
cmpsl
fsubl
lods
inc
iret   
js
fsubp
dec
int
dec
jle
cmp
cmp
iret   
inc
addr16 mov
jp
ss sub
gs jns
enter
xlat
(bad)  
int3   
cld    
mov
nop
pop
lea
fbld
cmc    
adc
pop
xor
fiadd
in
sub
lahf   
in
dec
or
jno
mov
cmp
jns
bound
cmp
push
inc
xchg
inc
scas
loop
dec
pop
inc
int3   
jg
xor
add
in
in
pop
insb
pop
xchg
xlat
adc
jae
or
sub
sub
adc
(bad)  
jg
mov
out
sti    
jg
setg
test
movsb
(bad)  
popl
(bad)  
into   
cwtl   
inc
and
(bad)  
lret
sbb
or
xlat
icebp  
call
mov
adc
jmp
sub
cli    
jg
xor
adc
out
mov
fsts
loop
sub
push
shrb
xchg
pop
fimull
xor
mov
mov
(bad)  
clc    
mov
sarb
aas    
adc
push
enter
iret   
test
jae
xor
mov
add
(bad)  
mov
xor
push
ds test
cmpsl
(bad)  
repnz cmpsb
push
daa    
mov
fs fld
add
jns
rorb
mov
(bad)
imul
call
xchg
enter
hlt    
rcll
fsubrl
mov
incl
ljmp
ja
add
dec
loope
add
outsl
iret   
cmp
orl
test
mov
add
stc    
ja
frstor
mov
ret
outsb
adc
fdiv
mov
adc
cmp
jg
(bad)  
fsts
mov
cmpsb
sub
int3   
mulb
leave  
pop
iret   
fstpl
push
shll
cli    
test
inc
iret   
fwait
or
push
xchg
push
std    
mov
dec
mov
mov
add
scas
sub
pop
fild
xchg
(bad)  
mov
iret   
mov
cmp
lret   
rcrb
push
and
iret   
cmpsb
(bad)  
leave  
adc
xor
sub
ret
enter
push
lea
sbb
inc
fdivp
push
test
sbb
inc
addr16 push
sub
add
shll
xor
aam
test
pop
mov
jl
cli    
popf   
je
int3   
lods
mov
sub
int
pop
cmpsl
pop
outsl
jle
xchg
movntps
hlt    
or
mov
shll
mov
repz lock
outsl
dec
fdivr
sub
mov
mov
insl
xchg
scas
ss gs ja
mov
repnz push
cmpsl
cmpl
arpl
dec
push
inc
jg
stc    
jg
aas    
xchg
xlat
mov
es in
dec
mov
dec
popa   
xor
cmp
shlb
lock nop
fs mov
sysexit 
pop
lea
pop
pop
adc
push
clc    
mov
and
jno
adc
dec
rorl
pop
inc
pop
mov
ja
push
clc    
mov
dec
out
test
push
int
or
cmp
cmp
sub
cmc    
aaa    
mov
shll
sbb
sub
fxch
push
add
jno
vpsraw
int
jne
pop
std    
mov
cmp
insl
cltd   
stc    
fwait
cwtl   
fimull
addl
pop
loop
mov
xchg
sub
sub
lods
and
pushf  
pushl
add
pop
and
xor
lret
cmp
cs pop
imul
jl
mov
push
aaa    
mov
sub
test
jmp
mov
jbe
js
hlt    
inc
cmp
cmpsl
push
test
mov
test
push
fwait
aad
lds
notb
mov
cmp
dec
in
test
jno
daa    
bound
jmpw
jg
js
aam
enter
push
sti    
mov
jne
test
add
cmp
pop
jg
pop
mov
xor
xor
dec
jg
imul
push
adc
cmc    
in
fcompl
inc
pop
test
fldl
aas    
into   
test
fistpll
(bad)  
dec
adc
dec
mov
sbb
into   
(bad)  
addr16 push
fdivs
loope
add
iret   
lds
cmpsl
cmp
add
clc    
pop
movsb
jns
xchg
cmc    
divl
(bad)  
std    
jmp
mov
fnop   
subb
aad
daa    
test
xchg
call
push
fadds
mov
leave  
add
add
popa   
(bad)  
xor
les
leave  
fisub
test
(bad)  
mov
fild
push
lret   
cmpsb
pop
(bad)  
scas
mov
loop
jmp
ss jae
clc    
in
dec
mov
jne
addr16 push
fadds
mov
leave  
loopne
and
fidiv
je
sub
mov
(bad)  
mov
test
das    
(bad)  
mov
lods
std    
jge
mov
leave  
pop
iret   
fwait
or
(bad)  
mov
xor
lods
adc
(bad)  
lods
das    
loop
add
mov
test
or
sbb
dec
fsubr
jno
cmp
inc
bound
add
cmp
(bad)  
int
out
imul
dec
jns
push
xor
pop
jo
ret    
and
cmp
loopne
data16 int3 
iret   
cli    
pop
out
cwtl   
mov
jmp
int
(bad)  
push
xchg
dec
out
sub
inc
imul
push
mov
jl
lret
pop
imul
pushf  
jbe
popf   
inc
insb
xchg
jp
xor
cmp
imull
jg
and
sbb
xor
or
jl
fisttp
fs inc
jb
and
mov
sub
rol
adcl
sti    
out
or
push
inc
mov
sbb
test
sbb
inc
or
inc
pop
test
(bad)
aas    
or
jne
jg
ret
fcomps
rcrl
mov
arpl
add
xor
std    
mov
sub
cmpsb
pop
and
in
scas
movsl
jns
xchg
mov
ds pop
out
sub
sbbl
pop
jecxz
sub
mov
inc
or
jnp
or
jmp
aaa    
mov
insl
(bad)  
hlt    
dec
cld    
mov
aam
xor
pop
jecxz
call
xchg
cwtl   
movsb
push
inc
lcall
push
xchg
dec
out
sub
inc
imul
sub
(bad)  
mov
popf   
inc
insb
or
xor
cmp
call
mov
fwait
dec
lods
or
jnp
fisttpll
movsb
xor
or
xchg
into   
adc
jle
mov
je
sbb
cli    
cmp
jnp
dec
lods
fwait
mov
lahf   
and
sbb
and
jns
jns
mov
sti    
xor
mov
or
sti    
jno
fild
int
sub
or
dec
sarl
rcr
stc    
adc
mov
dec
fwait
mov
ret    
add
inc
or
cmp
cmp
cmpsb
in
dec
cs xor
add
arpl
incl
inc
inc
pop
test
daa    
pusha  
and
iret   
cmp
and
(bad)  
std    
mov
js
mov
push
inc
int
push
int3   
push
sub
out
(bad)
mov
es add
mov
stc    
mov
jg
(bad)  
sarl
cwtl   
movsl
adc
bound
int3   
jo
ja
push
fdivr
sbb
sahf   
popf   
sub
aam
cmp
xchg
mov
push
inc
(bad)  
std    
xlat
fcomp
cmc    
test
out
sbb
lods
sbb
or
mov
(bad)  
pop
aam
lret
and
addr16 std 
pop
lahf   
jge
data16 data16 fmuls
dec
stc    
lea
mov
das    
leave  
sub
or
or
cmp
sarl
les
lahf   
pushf  
push
add
repz pop
lret
jmp
inc
les
clc    
je
push
stc    
lea
mov
faddl
xor
xor
stc    
lea
mov
push
lds
les
leave  
fisub
and
mov
mov
jne
add
or
sub
retw
mov
cmp
insb
mov
cli    
mov
aad
pop
cmc    
mov
jecxz
imul
enter
pop
out
sbb
xchg
cmc    
mov
inc
(bad)  
hlt    
xor
jae
or
les
movsb
cs adc
add
sub
adc
and
mov
mov
xchg
mov
jg
(bad)  
std    
xchg
std    
insb
lret   
inc
sti    
or
fs or
shlb
mov
daa    
add
out
push
ds aam
push
leave  
fisub
sbb
jecxz
pop
call
pop
sub
dec
jb
mov
stos
adc
leave  
sub
cmc    
xchg
loope
cmp
test
aad
insl
fstpl
fiadd
cmp
or
mov
sub
stc    
test
mov
out
dec
xor
jmp
mov
cmpsb
adc
sti    
sub
call
fildll
fldcw
fisttp
cmp
loope
fdivrs
test
bswap
aam
sub
dec
ficomp
(bad)  
(bad)  
addr16 push
movsb
or
mov
fs sti 
ret    
and
ret    
sbb
dec
std    
xchg
inc
fisttpl
push
sarl
out
xchg
cmp
xor
ret
std    
sbb
mov
sbb
or
sub
sbb
jle
daa    
sub
dec
jb
mov
stos
adc
leave  
sub
xchg
lahf   
jne
adc
je
ja
inc
out
fnstenv
pop
adc
inc
jnp
inc
sbb
mov
mov
test
out
je
xchg
(bad)  
pusha  
(bad)  
in
(bad)  
fwait
cwtl   
stc    
or
iret   
loopne
cwtl   
jno
xchg
ficompl
nop
ja
mov
jg
insb
adc
pop
call
sub
and
stc    
testb
push
or
or
mov
repnz cmp
dec
inc
jno
or
insb
jnp
leave  
mov
stos
cmp
rorl
jne
inc
mov
out
pop
add
test
or
pop
push
sti    
test
imul
mov
mov
out
test
sbb
stos
cmp
sarl
les
lahf   
sbb
test
push
test
stc    
cmp
pop
daa    
xor
ljmp
clc    
pop
aad
ret    
mov
push
mov
sbb
lods
push
into   
inc
pop
jae
(bad)  
xor
adc
hlt    
es push
pop
movsl
push
cltd   
mov
cld    
cmpb
popa   
mov
mov
xor
or
xor
inc
adc
mov
lret
adc
lahf   
inc
addr16 jmp
sub
leave  
cmp
and
mov
setnp
cmp
sub
outsb
inc
lods
lret
push
fnstsw
sahf   
je
jno
ljmp
add
push
das    
fisubrl
jecxz
ds xchg
stos
adc
icebp  
mov
jecxz
lret   
push
rorb
int3   
lods
sbb
jno
(bad)  
jno
ror
lret   
icebp  
fs insl
std    
(bad)  
repz push
outsb
ss shr
jb
add
pop
out
rol
out
push
(bad)  
addr16 out
inc
test
out
mov
lea
jle
mov
out
mov
push
cmp
pop
je
repnz add
mov
push
cmp
out
lods
(bad)  
pop
and
mov
enter
std    
(bad)  
jmp
test
scas
ret
(bad)  
fistl
mov
mov
stos
cli    
xchg
push
inc
inc
cwtl   
mov
in
sbb
pop
mov
(bad)  
(bad)  
adc
aas    
sub
xchg
pop
je
jmp
int3   
xor
aad
call
sub
fildll
js
xlat
inc
out
xchg
hlt    
idivb
lods
mov
(bad)  
jmp
cmpsb
lds
(bad)  
jmp
enter
ja
sub
ss in
scas
idivb
push
bound
xchg
lock jg
push
fwait
mov
call
pusha  
ror
leave  
fildll
jne
dec
repnz sbb
sbb
(bad)  
mov
popa   
hlt    
in
in
ss push
xor
lods
mov
les
arpl
jmp
popa   
inc
push
cmp
hlt    
fwait
push
mov
lret
xor
lock dec
out
movsb
adc
insb
fldt
xchg
out
jg
es ret
cmp
jns
and
adc
(bad)  
push
xor
ljmp
call
roll
pop
fcomi
test
add
cmc    
scas
iret   
mov
ljmp
xchg
(bad)  
clc    
pop
inc
xchg
iret   
fdiv
mov
not
enter
lock nop
daa    
lret   
dec
dec
lcall
inc
adc
(bad)  
lea
mov
mov
jecxz
ret
adc
cli    
shll
bound
pop
jae
into   
sub
pop
(bad)  {%k4}
out
gs inc
lret
mov
mov
xor
and
push
sub
inc
pusha  
or
aaa    
(bad)  
mov
or
call
pop
je
fiaddl
or
fbstp
cwtl   
cs adc
shrl
sub
in
or
ss push
lret
ja
jecxz
adc
andl
imul
test
mov
adc
addr16 out
xor
pop
adc
lahf   
and
pop
sub
out
inc
divb
add
inc
dec
xchg
lods
mov
in
dec
aas    
iret   
out
xchg
and
push
add
fwait
cmpsl
jno
pushf  
les
jecxz
movsl
pop
mov
add
jl
outsb
lock mov
xorl
sbb
adcb
cmpsl
cltd   
xchg
mov
fcmovnbe
dec
jb
xor
call
jno
jne
int
(bad)  
imull
dec
(bad)  
jbe
test
(bad)  {%k4}
out
jl
cs pop
shrb
pop
addr16 in
leave  
lock add
aad
fldenv
cmp
fwait
ret
adc
push
jge
(bad)  
outsl
xchg
mov
stos
or
popa   
mov
outsb
dec
xor
push
data16
ficompl
inc
lock imul
xor
(bad)  
in
pop
rolb
btr
cmp
scas
push
data16 adc
mov
stos
(bad)  
mov
je
(bad)  
out
pushf  
(bad)  
pop
cmp
xchg
ret
(bad)  
mov
enter
rcll
mov
mov
sti    
loop
jnp
mov
dec
lahf   
mov
inc
(bad)  
xchg
inc
push
lods
stc    
xchg
repz fldl
jne
rclb
jnp
pop
fsub
ljmp
out
test
and
movsb
jecxz
mov
out
sbb
mov
out
hlt    
push
or
add
fcomp
ror
insb
(bad)  
(bad)  
out
das    
(bad)  {%k3}{z}
outsb
cmp
cmp
test
mov
mov
dec
pop
incl
push
in
pop
bswap
aam
stos
lods
rclb
and
and
or
sbb
dec
inc
push
repnz push
mov
enter
div
or
inc
cli    
insb
sti    
dec
imul
leave  
pop
add
jg
inc
mov
sbb
push
jae
je
cltd   
push
push
aas    
iret   
out
sahf   
add
xor
xchg
out
sbb
sti    
fbstp
bound
xor
cmc    
sub
mov
sub
pop
adc
adc
cltd   
fucomi
lods
ss je
pusha  
sbb
sti    
out
or
cwtl   
fcmovnbe
outsb
rolb
and
pop
inc
(bad)  
cld    
push
hlt    
es ret
adc
push
int
lret   
pop
jl
fs xchg
pop
pop
ss add
fist
fidiv
(bad)  
negl
jne
outsb
outsb
lods
xor
adc
into   
sub
xor
inc
gs call
popf   
inc
and
(bad)  
push
adc
icebp  
add
ror
int3   
jne
sahf   
xchg
mov
push
mov
mov
inc
pop
out
lcall
sbb
outsl
dec
lsl
das    
outsb
xlat
inc
test
and
les
or
mov
sub
loop
bswap
mov
dec
dec
fdivrl
outsb
or
(bad)  
(bad)  
mov
jp
push
test
lods
repnz sahf 
inc
and
les
sbb
and
cmpsl
jo
add
ja
stos
xlat
test
nop
stos
ret
mov
adc
nop
out
cmp
loopne
cmp
sahf   
inc
fdivrl
cmp
jae
fs mov
das    
scas
dec
dec
sub
pop
lcall
cmp
fs test
fistp
mov
push
inc
adc
push
(bad)  
stc    
xchg
sbb
popa   
inc
cmp
sahf   
iret   
sub
nop
lcall
movsl
aam
ficomp
je
loope
aas    
outsl
adc
cwtl   
testb
cmp
hlt    
xor
or
arpl
cmp
push
or
test
fadd
aaa    
(bad)  
mov
lea
fildl
shr
mov
push
xor
dec
faddp
adc
lret
dec
sbb
loop
mov
sti    
sub
call
jnp
dec
das    
leave  
fsubrl
pushf  
push
je
enter
arpl
pop
inc
mov
insl
mov
jl
aam
(bad)  
(bad)
insb
vpsraw
enter
jp
in
push
aaa    
mulb
xchg
dec
xor
cmp
add
jb
popf   
xor
shr
dec
mov
ror
enter
sbb
in
xchg
mov
addr16 mov
in
push
fs xor
lds
je
sub
call
mov
fwait
mov
lods
(bad)  
adc
(bad)  
leave  
inc
pop
jecxz
sbb
mov
cmc    
shr
ret
hlt    
test
aam
mov
xchg
cs into 
aas    
loop
mov
mov
adc
stc    
repnz lods
sti    
xchg
fisubrl
cmpsl
rol
mov
add
or
orl
pop
test
lds
fs xor
inc
mov
xchg
fwait
adc
adc
fcmovbe
xlat
(bad)  
fstpt
mov
push
mov
test
mov
mov
fidivl
(bad)  
fucomi
test
push
mov
lcall
add
fisttp
mov
ret    
call
xlat
pop
inc
and
test
aam
(bad)  
fisttpl
stos
movsb
das    
lcall
je
lea
cmp
into   
push
int3   
shr
push
ja
jg
push
cmp
pop
adc
pop
mov
push
imul
mov
(bad)  
imul
mov
mov
ret
(bad)  {%k3}{z}
aam
jle
clc    
or
mov
test
mov
lods
sbb
lret   
je
aad
ror
insb
fisttp
jnp
mov
std    
xor
popf   
xor
shr
mov
mov
insb
out
push
ds aam
push
leave  
fsubrl
scas
sub
cmpsb
mov
or
call
xchg
es clc 
jp
sub
les
fdivr
xor
fxch
xchg
aam
adc
popf   
roll
verr
inc
push
and
push
ds aam
push
leave  
roll
adc
out
push
outsb
push
lahf   
or
push
jl
(bad)  
mov
ja,pt
and
dec
dec
mov
scas
shlb
jno
repnz stc 
loop
iret   
lret   
add
stc    
mov
push
repnz sub
out
out
adc
clc    
push
std    
mov
rclb
stos
mov
ret
mov
negb
js
aas    
mov
dec
cmp
stc    
cmp
ficompl
scas
cmpsb
cmp
addr16 push
fadds
mov
leave  
pop
pop
fisttpl
(bad)  
or
(bad)  
add
shrb
jno
push
incb
iret   
lret   
push
push
repz fwait
(bad)  
cmp
jne
mov
ret
or
fsts
into   
scas
call
xor
imulb
test
jl
xchg
sub
test
mov
mov
mov
ret
jmp
xchg
mov
fldt
lret
sub
push
lock mov
test
ds call
shrb
dec
das    
leave  
fsubrl
scas
or
jg
sti    
sbb
(bad)  
jno
sar
mov
les
fs lret
add
jg
in
popf   
xlat
and
leave  
scas
xchg
lcall
sbb
adc
cwtl   
pop
aaa    
xchg
arpl
in
push
mov
sbb
(bad)  
mov
int3   
ljmp
addr16 xchg
add
add
jl
sub
lods
dec
mov
sub
ret
les
jnp
pop
cltd   
sub
pop
test
and
or
(bad)  
jne
movsb
(bad)  
or
in
adc
movsl
and
sub
adc
pop
imul
sub
mov
(bad)
jb
jae
movsb
(bad)  
push
fsubrl
mov
subb
int3   
push
xor
ficompl
in
and
cmp
loop
push
hlt    
mov
movsb
sub
adc
(bad)  
pop
mov
xchg
push
lods
pop
push
mov
mov
pop
jle
mov
ror
rclb
xor
popa   
add
cmp
push
dec
adc
adc
add
adc
stc    
mov
pushf  
xlat
jb
add
xchg
fisubr
in
data16 aas 
pop
loope
stc    
out
adc
(bad)  
jno
sar
mov
cmp
mov
sub
aaa    
mov
dec
xor
xor
clc    
cli    
add
(bad)  
jno
sbb
push
mov
fwait
or
(bad)  
pushf  
insb
sarl
add
ljmp
jae
hlt    
xor
pop
fidiv
mov
push
mov
repz clc 
loope
enter
jp
ficomp
add
scas
data16 loopne
mov
(bad)  
xor
hlt    
xor
pop
fidivr
push
les
mov
dec
callw
pop
lds
sub
add
popa   
cltd   
sbb
add
(bad)  
in
(bad)  
lret
popa   
sti    
fist
iret   
(bad)  
jbe
mov
fs inc
adc
lock flds
push
stos
inc
or
in
sti    
pop
cmp
lahf   
jle
xor
mov
test
test
les
movsb
adc
push
jl
lahf   
xchg
in
ja
mov
test
test
push
cmp
jno
js
xlat
int
fucom
shr
or
mov
xrelease mov
test
out
cmc    
push
jb
rcl
aas    
add
xor
and
mov
shr
verr
inc
push
bt
je
cmp
lcall
cmp
inc
dec
fdivrl
add
repnz cld 
pop
jp
inc
or
mov
mov
scas
jbe
enter
dec
mov
mov
add
scas
mov
repnz mov
adc
shll
aad
push
(bad)  
jns
rorl
dec
add
dec
addr16 call
adc
inc
aas    
aam
(bad)  
jp
xor
shl
cmp
rol
out
cli    
cmpsl
pop
sub
mov
mov
pop
aad
jae
push
(bad)  
addr16 push
adc
sahf   
test
iret   
sti    
dec
sub
dec
das    
sahf   
inc
mov
mov
pusha  
out
ret
mov
bound
jb
or
push
loope
iret   
(bad)  
or
jae
cli    
inc
sub
imul
xchg
jecxz
pop
pop
test
push
faddl
in
(bad)  
movl
(bad)  
jb
dec
addr16 call
sub
in
push
scas
jbe
leave  
inc
fidiv
inc
cmpsb
or
call
mov
loop
inc
jo
ljmp
fild
in
sbb
mov
mov
or
fsubl
sahf   
(bad)  
iret   
enter
ds lods
jae
(bad)  
(bad)  
fist
add
mov
mov
test
fwait
mov
aas    
inc
(bad)  
xor
(bad)  
(bad)  
lret
leave  
loop
ret
jbe
clc    
aas    
add
and
sbb
repz pop
xchg
int3   
lret   
mov
sub
mov
mov
push
sbb
mov
xor
xchg
dec
(bad)
xchg
repz or
mov
sub
in
ficomp
mov
pop
pushw
mov
xor
push
adc
inc
rclb
insl
pop
jbe
sarb
sarb
push
adc
xchg
xchg
adc
adc
out
in
dec
rorb
rcrl
fidivr
sub
out
mov
or
mov
in
cmpsl
cmp
dec
fbstp
(bad)  
jno
sar
(bad)  
mov
call
fucompp 
lret
icebp  
mov
lea
mov
cmp
cmp
leave  
fisub
sti    
mov
jno
test
inc
pop
(bad)  
hlt    
sbb
in
or
xor
push
mov
xlat
dec
cmp
je
aad
pop
lods
rcrb
movsb
lahf   
fucomp
pop
cmc    
push
(bad)  
add
and
xchg
int
hlt    
lods
mov
es cmp
(bad)  
dec
pop
test
sub
dec
lods
loope
sbb
push
hlt    
push
jo
cmp
pop
scas
inc
call
insl
or
test
sub
es mov
movsl
lahf   
movsl
pop
fnstenv
test
lock ret
mov
cli    
inc
sub
jmp
lret   
inc
fildl
test
std    
rcrl
jne
push
xchg
cmc    
mov
pop
xor
sbb
push
aaa    
mov
xchg
add
ljmp
enter
ret
jbe
sti    
or
es inc
push
aam
fidivr
mov
out
pop
divl
scas
jge
(bad)  
clc    
mov
gs pushf 
sbb
stos
imul
mov
adc
fs push
add
pop
or
movsl
mov
xchg
mov
(bad)  
xchg
mov
jecxz
fwait
mov
pop
or
(bad)  
jb
add
stc    
ror
popl
pop
(bad)  
sbb
and
mov
out
push
addr16 mov
movsb
lcall
lods
scas
insb
or
iret   
sysenter 
and
add
pop
push
mov
icebp  
xlat
iret   
adc
xchg
ja
pop
rorb
xor
jg
sub
cltd   
cmp
cmp
rcr
mov
jns,pn
jg
sbb
or
int3   
scas
add
adc
leave  
jg
pop
push
mov
repnz xchg
loop
data16 das 
loop
cmp
sbb
lret   
neg
hlt    
xor
in
sti    
or
adc
ror
add
xchg
xor
cmc    
lock icebp 
adc
cmp
push
loopne
jecxz
inc
dec
shlb
fnop   
out
cld    
mov
pop
idiv
sub
movsl
enter
ror
call
xchg
data16 cmp
cli    
mov
xor
inc
mov
push
cli    
rcrl
xor
fwait
mov
push
mov
push
add
idivl
inc
js
pushl
xor
adc
arpl
out
inc
es xchg
out
lods
cmpsl
xchg
pop
pop
(bad)  
punpckldq
(bad)  {%k3}{z}
hlt    
jle
dec
push
jl
pop
loop
jge
shl
or
mov
pop
idiv
sub
movsl
enter
ror
call
xchg
scas
scas
cli    
mov
xor
rorb
out
cli    
rcrl
xor
fwait
mov
push
mov
rolb
inc
js
pushl
xor
xchg
mov
int
es xchg
out
lods
cmpsl
xchg
pop
pop
(bad)  
punpckldq
(bad)  {%k3}{z}
hlt    
jle
dec
push
jl
pop
pop
mov
fnstsw
xor
lds
ljmp
stc    
imul
test
mov
sub
xor
movsb
mov
mov
push
xor
(bad)  
push
shlb
test
sub
dec
je
pop
lea
int
movsb
or
out
mov
add
ror
call
xchg
movsb
lods
xor
and
(bad)  
adc
ror
popf   
hlt    
ljmp
rcrl
sti    
sub
lret   
cmpsl
pop
outsl
test
lea
cmp
push
push
outsb
jmp
inc
fnop   
enter
ljmp
cld    
xor
mov
rdpmc  
inc
and
mov
xchg
repz and
mov
clc    
lds
and
xchg
cld    
xor
neg
lcall
repnz pop
clc    
outsb
and
pop
jecxz
nop
xchg
sub
mov
clc    
lds
mov
popa   
cld    
xor
test
sbb
and
(bad)  
or
add
pop
jle
dec
push
jl
dec
cmpsb
push
repz leave 
add
leave  
xor
rol
jp
pushf  
scas
cmp
xchg
testb
stc    
(bad)  
loop,pt
sbb
aas    
ds mov
push
and
sarb
(bad)  
xchg
add
push
sub
movsb
insl
mov
icebp  
je
(bad)  
push
rorb
sub
jae
mov
sub
adc
rcrl
scas
adc
lahf   
test
cmp
sub
aam
sbb
(bad)  
clc    
mov
pop
adc
imul
shrl
adc
sub
sti    
add
scas
push
adc
pop
(bad)  
sti    
test
push
lods
loope
outsb
imulb
fcoml
xchg
cmp
push
insl
cmp
mov
iret   
lds
mov
test
pop
pusha  
lcall
lret
and
repz jmp
iret   
add
ss push
(bad)  
shr
push
ret
dec
or
lret
mov
clc    
xor
test
dec
les
jo
ss test
jmp
push
and
xchg
cmc    
or
enter
daa    
test
pop
xor
fstl
mov
xor
jb
(bad)  
and
push
mov
lret   
bound
ja
fsubs
adc
faddl
in
mov
or
cmp
or
cmp
inc
out
ss mov
xor
subl
loop
jb
enter
adc
jecxz
movl
sbb
jae
in
sub
(bad)  
push
shrb
mov
sub
(bad)  
or
sti    
(bad)  
mov
xchg
jbe
mov
sub
(bad)
out
mov
mov
arpl
xor
cs cmp
fsts
enter
clc    
mov
push
mov
ja
int
(bad)  
sbb
ret    
mov
sub
fcomi
enter
pop
popf   
mov
jg
push
mov
dec
mov
cli    
test
clc    
mov
inc
ret    
and
adc
loopne
mov
push
das    
adc
or
inc
push
and
push
dec
pushf  
sub
xchg
test
xor
cmovo
sub
jg
call
mov
mov
cli    
mov
hlt    
xor
jae
fistpll
push
dec
sub
clc    
nop
mov
je
inc
data16 or
pop
jno
imul
mov
call
(bad)  
pop
in
adcl
cmp
ret    
mov
iret   
jl
pop
mov
das    
sbb
ds pop
dec
jno
and
fsubl
mov
mov
ret    
inc
shrl
add
add
out
mov
fbstp
lock jo
jae
cs
dec
pushf  
sub
sub
mov
add
push
jno
movsb
jns
or
jbe
mov
out
aaa    
mov
arpl
pop
jge
jmp
sysenter 
mov
adc
stos
sub
lahf   
inc
push
lea
repz or
or
or
lahf   
pusha  
sbb
(bad)  
dec
xchg
add
iret   
cmp
mov
nop
icebp  
adc
or
out
cmp
mov
(bad)  
hlt    
xchg
jl
ficomp
fimul
mov
repnz insb
jno
dec
lods
fucomi
gs inc
lret
dec
pop
cli    
fcoml
fldenv
pop
jae
mov
icebp  
ljmp
iret   
pop
mov
iret   
pop
popa   
arpl
sti    
int3   
mov
mov
ljmp
pop
aam
fidiv
(bad)  
push
leave  
fildll
jle
dec
push
jne
push
js
repz fdivrs
jne
mov
xchg
add
repz fadds
mov
out
push
jge
cmp
pop
fsubs
or
call
jo
test
scas
inc
les
aad
iret   
pop
mov
iret   
pop
sarb
push
in
lret
cmpsl
js
push
arpl
(bad)  
cmp
cmp
and
adc
repnz xlat
enter
mov
hlt    
xchg
jl
cmp
aas    
push
sbb
sarb
leave  
cmp
(bad)  
push
leave  
fildll
dec
lock push
xchg
dec
dec
mov
(bad)  
mov
hlt    
mov
movsl
push
in
xor
dec
and
out
sbb
outsl
pushf  
mov
shr
push
das    
adc
adc
out
mov
pusha  
addl
jecxz
mov
(bad)  
aam
(bad)  
clc    
mov
mov
lea
fnsave
xchg
fs inc
pop
jbe
loopne
pop
sbb
mov
test
sti    
and
push
out
xchg
dec
sub
mov
xlat
pop
hlt    
xor
sti    
fbld
inc
adcb
in
inc
out
sub
add
pop
movb
or
lds
leave  
loopne
and
dec
pop
out
dec
hlt    
lods
das    
mov
je
fist
sub
inc
outsl
fidivr
push
jle
lea
add
das    
fcomps
out
jp
scas
jbe
std    
xor
lods
xor
imul
jecxz
insl
add
push
mov
pusha  
jecxz
mov
inc
pop
or
inc
add
push
test
mov
das    
leave  
and
loop
push
jne
jecxz
cmp
mov
fnstenv
dec
rorl
push
sarl
bound
lock ss jb
xor
xor
(bad)  
faddp
nop
lahf   
push
and
popa   
or
mull
fwait
xchg
adc
dec
lods
jae
xor
pusha  
jp
push
verr
xchg
sti    
fistp
outsb
scas
(bad)  
ss push
or
lret
sbb
inc
dec
lods
lahf   
fimull
xor
lds
or
dec
shrl
loopne
xor
mov
pop
push
loope
jg
push
les
mov
pop
je
jmp
fnsave
icebp  
jge
dec
mov
cmp
sbb
les
test
jae
mov
subb
pop
je
jmp
stos
roll
je
jmp
lods
jno
cmp
mov
addr16 mov
sahf   
loope
or
nop
shrl
daa    
bound
xor
pop
into   
inc
sub
in
call
sti    
mov
pop
mov
test
mov
mov
loope
or
sbb
lods
jo
call
scas
lock ficompl
cmp
jp
dec
je
cmp
jg
jnp
push
sbb
or
js
inc
outsb
out
gs inc
lret
inc
pusha  
push
push
leave  
ret    
popl
and
ret    
daa    
out
jne
jo
call
pop
addb
push
mov
cmp
(bad)  
or
sar
aas    
sub
popa   
and
sbb
rcrb
rcrl
add
add
repz or
repnz rorb
pop
(bad)  
es in
test
dec
aam
mov
decb
xchg
lods
js
fs repz
out
(bad)  
cmpsl
dec
pop
sti    
mov
mov
dec
cmp
ficom
mov
and
xchg
sub
les
js
lret
push
dec
pop
lcall
fs mov
pop
adc
icebp  
or
sbb
cmp
mov
jp
adc
sbb
lret   
cmp
xchg
lods
mov
xor
lret
incl
inc
mov
out
fist
psrad
xorb
add
inc
rclb
and
js
sbb
mov
out
cmp
or
pop
mov
jae
mov
adc
mov
lcall
mov
jbe
das    
mov
mov
fidivr
lock and
cmp
jecxz
not
lods
lods
sub
jno
hlt    
imul
inc
sbb
mul
inc
ljmp
(bad)  
out
lods
gs inc
scas
inc
(bad)  
addr16 push
fcomps
(bad)  
dec
pushf  
loopne
xor
and
adc
push
dec
out
pop
rorb
(bad)  {%k3}{z}
in
cmpsl
fdiv
xor
std    
cmpsb
jae
mov
fcomps
(bad)  
inc
daa    
adc
sti    
nop
push
ss ret
mov
pop
outsl
mov
inc
pop
dec
ljmp
(bad)  
int
out
fwait
test
ss cld 
divl
out
mov
xor
cmpsb
cmp
fist
psrad
lea
jl
cmpsb
sahf   
jl
fs pushf 
(bad)  
mov
sbb
lret
scas
mov
inc
mov
mov
lahf   
sub
sbb
jmp
xor
fwait
test
xor
cmc    
xor
scas
in
xchg
out
out
pop
mov
cmp
mov
es push
scas
shrl
clc    
lock mov
cli    
repz xor
repz xor
cmpsb
in
lock mov
add
outsb
jge
stos
jb
xchg
add
ret    
movsl
inc
ja
repnz inc
leave  
lret   
lds
jg
call
mov
stos
adc
leave  
sub
inc
shrl
or
outsb
adc
test
xor
jo
mul
add
push
and
clc    
aas    
add
sub
inc
push
shr
dec
xor
or
rcl
mov
es pop
mov
lea
mulb
mov
repz sub
adc
mov
idiv
mov
dec
out
es lret 
jl
cwtl   
in
xchg
jp
cmp
add
aad
mov
pop
inc
int3   
jg
xor
add
jne
dec
je
or
xchg
jp
jnp
push
sbb
xor
call
popf   
icebp  
call
ret    
std    
jb
mov
cmp
lock ret 
mov
(bad)  
in
out
fstl
in
jle
mov
jp
dec
(bad)  
fsubl
xchg
in
inc
cmp
cmp
mov
rcrb
ds inc
fisttpll
sub
add
fsts
push
dec
xor
and
push
cmp
jg
or
icebp  
(bad)  
addr16 xchg
andl
cwtl   
jno
xchg
ficompl
xchg
xchg
cwtl   
fdecstp 
out
sub
fwait
xchg
push
dec
adc
orb
mov
in
sarb
(bad)  
dec
es push
lea
jp
mov
divb
jns
lret   
daa    
inc
scas
pop
jg
out
xor
mov
scas
mov
outsb
(bad)  
cmp
pop
dec
jge
cmpsb
jb
pop
mov
cmp
or
push
cs xchg
inc
mov
stc    
sarb
loop,pt
sub
aaa    
fsubr
test
inc
push
xlat
data16 jne
ds mov
push
pop
add
jle
mov
mov
xor
jns
inc
sbb
scas
ljmp
adc
cld    
pushf  
xor
stos
inc
test
mov
pop
lea
int3   
cmpsb
lea
ljmp
call
mov
ficom
ror
(bad)  
daa    
movsl
push
jecxz
pop
lea
xor
mov
test
and
jmp
fucomp
aad
push
mov
sbb
xor
inc
push
mov
(bad)  
hlt    
push
das    
pop
cld    
jp
inc
sbb
adc
shrl
pop
push
mov
outsb
sbb
ror
popl
sub
mov
out
enter
adc
shll
lds
out
sub
pop
std    
cmpsb
jae
mov
popf   
fnstsw
(bad)  
and
pop
scas
inc
push
in
(bad)  
pop
scas
insl
adc
jecxz
movsl
or
inc
cmp
ret
ror
popl
pop
icebp  
inc
xor
push
dec
xchg
fimull
js
sub
mov
mov
dec
bswap
cmp
jbe
mov
sub
lods
dec
mov
es mov
in
mov
into   
lock enter
push
pop
add
adc
bnd jl
and
sub
repz addr16 ja
sub
aam
xchg
sbb
das    
call
jns
das    
aas    
leave  
pop
or
(bad)  
rcll
movsb
stos
mov
mov
xchg
mov
out
inc
lcall
jg
sahf   
inc
jl
xchg
faddl
aad
dec
mov
in
mov
push
xchg
inc
inc
inc
jg
iret   
pop
mov
dec
dec
jno
sub
sbb
inc
lds
flds
mov
iret   
test
mov
lret   
xchg
(bad)  
leave  
lret   
jno
jae
in
fcmovnu
jg
bound
pop
jne
sbb
mov
cmp
daa    
lods
dec
mov
es
cmc    
add
cmp
sarl
int3   
lret
test
out
mov
test
xchg
fistp
xlat
fsubrs
jl
divl
outsl
stos
loop
adc
jge
push
add
dec
mov
arpl
pop
js
test
and
or
sub
and
ja
mov
dec
adc
mov
cmp
dec
adc
jns
jmp
in
adc
jg
jl
mov
mov
mov
lret
stos
push
fadds
mov
pop
subl
jnp
sub
dec
outsb
sub
aaa    
pop
push
mov
movsl
push
fwait
pop
dec
inc
(bad)  
jo
lea
xchg
iret   
cld    
hlt    
stos
(bad)  
scas
(bad)  
aam
pop
jle
call
adc
jno
rolb
sub
inc
sub
fsubrl
jo
sahf   
repz mov
aas    
(bad)  
rorb
pop
call
insb
inc
imul
lea
not
xor
sub
(bad)
inc
and
jge
mov
and
test
mov
add
xor
dec
fwait
int3   
dec
inc
jp
inc
int
pop
in
push
sub
cli    
adc
ss stos
xor
pop
sbb
sub
leave  
pop
or
iret   
scas
rorl
cmp
adc
in
xor
sub
ret    
jae
inc
movsb
icebp  
jge
es cmp
fsubrl
outsb
cmp
in
lds
mov
push
bound
push
mov
(bad)  
(bad)  
cmp
sub
jge
jb
iret   
pop
dec
jge
jecxz
aaa    
subl
dec
das    
fld
ss
mov
jb
adc
sti    
cmpsb
mov
(bad)  
mov
jg
data16 jmp
leave  
movsb
vmaxsd
push
push
mov
out
out
lahf   
dec
xchg
inc
cmp
idivl
jne
jno
fidivr
xchg
push
cmp
inc
fisttpll
add
pop
imull
xor
ret    
mov
int
lock push
cmp
hlt    
xor
mov
cmp
add
push
imul
loope
mov
pop
sub
mov
popa   
ror
jg
pop
shrl
repz
loope
int
movsb
lds
mov
sub
movsl
pusha  
(bad)  
mov
pop
mov
out
sbb
outsb
(bad)  
adc
pop
movsb
pushl
(bad)  
mov
add
sbb
dec
rorl
loopne
xlat
push
sbb
jb
inc
or
bound
ret    
mov
xchg
jmp
sub
dec
sub
mov
jle
dec
jnp
lods
sbb
les
jns
mov
mov
aam
cmp
sub
mov
insb
cld    
loop
jnp
push
add
les
push
scas
mov
stc    
sarb
in
inc
push
adc
lods
xchg
fadds
pushf  
in
mov
mov
iret   
enter
adc
sub
inc
test
cwtl   
mov
adcl
push
cmp
jbe
cmp
inc
(bad)  
xchg
aam
movsb
xchg
and
ja
lods
call
jne
ret
mov
mov
push
ficompl
fstps
cmp
jmp
jl
adc
pop
jp
(bad)  
fwait
cmp
pusha  
repnz test
iret   
sbb
(bad)  
push
xchg
jbe
add
int3   
rorb
jnp
push
xor
les
jg
jp
cmpsb
adc
xchg
or
mov
(bad)  
lods
das    
repnz pop
jo
pop
inc
jno
repz inc
mov
js
in
cvtpi2ps
cmp
in
(bad)  
lods
das    
repnz pop
jo
cmp
ret
pushf  
add
push
icebp  
xchg
aas    
add
xor
cmp
add
adc
mov
fcompp 
rclb
(bad)  
cmpsl
adc
jae
adc
and
adc
mov
push
cmpsl
jnp
lahf   
aad
mov
adc
(bad)  
pop
add
out
lods
gs mov
xchg
(bad)  
outsb
clc    
and
and
insl
iret   
inc
add
in
stc    
jp
cmp
pop
xor
fisubl
addr16 call
push
(bad)  
mov
or
xor
out
pop
loopne
pop
mov
push
popa   
cld    
pop
out
rcll
repnz addr16 mov
and
jno
daa    
(bad)  
cmpsb
mov
ret    
dec
addr16 call
cmp
std    
cmp
shr
push
xlat
mov
cs ljmp
mov
push
push
jmp
(bad)  
xor
fidivl
test
icebp  
push
dec
fidivr
mov
stc    
imul
add
into   
fwait
test
dec
push
divb
add
push
repnz push
sbb
out
mov
fisub
push
mov
mov
decl
inc
call
fldl2t 
sbb
loope
mov
xchg
mov
into   
push
mov
pop
jns
mov
xor
dec
stos
push
mov
jecxz
push
lea
add
cmpsb
test
dec
pop
repnz cmc 
fdivs
in
jns
ror
enter
std    
xchg
inc
fild
add
addr16 ret 
pop
sub
addr16 repnz ljmp
mov
(bad)  
arpl
mov
movsb
dec
outsl
mov
repnz pop
jo
nop
pushf  
xor
add
cmp
dec
pop
inc
jnp
sbb
std    
cmc    
cmp
pop
decl
inc
call
fbstp
outsb
data16 cmp
pop
sti    
lretw
in
pop
stos
mov
repz xchg
jae
mov
imul
sbb
repz test
mov
inc
jecxz
cmp
and
aas    
lock adc
sub
fmull
hlt    
lcall
or
xchg
cltd   
inc
lahf   
dec
lret   
sub
idivb
adc
(bad)  
imul
enter
out
sub
cmp
sub
adc
cmp
lret
sahf   
sub
test
(bad)  {%k3}{z}
(bad)  
or
incl
js
dec
and
push
jbe
iret   
popa   
in
pop
cmp
add
adc
leave  
shrb
push
adc
pusha  
scas
mov
stc    
sarb
(bad)  
sahf   
jle
and
data16 aad
or
popf   
mov
es pop
sub
icebp  
loopne
dec
push
sbb
push
test
xor
or
movsb
fistpl
stos
lods
push
and
popa   
mov
outsl
aaa    
sub
add
and
fild
xchg
jp
(bad)
jge
ljmp
jp
es ret 
scas
fstpl
xchg
xor
iret   
dec
test
jmp
test
inc
xchg
(bad)  
leave  
ffree
(bad)  
mov
addr16 aas 
inc
push
test
and
sti    
cmpxchg
add
shll
sub
and
push
and
sahf   
dec
dec
push
xor
das    
sbb
(bad)  
push
leave  
fildll
mov
xchg
fadd
aaa    
(bad)  
mov
mov
mov
loop
mov
(bad)  
jp
xor
sub
xchg
data16 mov
(bad)  
insl
test
mov
push
mov
xlat
jb
dec
or
mov
jb
push
inc
ja
push
stc    
push
pop
inc
loop
mov
icebp  
nop
push
inc
inc
pop
jbe
dec
fs hlt 
pop
pop
xchg
and
(bad)  
dec
iret   
and
mov
stos
(bad)  
sbb
stos
push
push
xor
repz hlt 
xor
inc
ja
push
stc    
push
gs fs adc
push
or
push
sub
sub
push
cmp
sub
or
adc
stos
sub
cmp
hlt    
lea
lcall
inc
sti    
pop
jp
enter
enter
ret    
mov
or
loope
in
les
or
movl
or
hlt    
hlt    
es sti 
stos
xchg
imul
push
out
stos
lret
shlb
into   
mov
in
push
and
add
xchg
bound
clc    
adc
and
jmp
lods
out
gs xor
rcrb
ja
das    
fidivl
(bad)  
movb
insb
fs stc 
fisttpl
push
scas
lock jns
dec
dec
scas
dec
(bad)  
in
mov
inc
xchg
and
lcall
lcall
mov
mov
lahf   
jge
jp
mov
rcr
inc
movsl
inc
inc
dec
dec
scas
dec
(bad)  
in
shrb
xor
lahf   
jge
jp
mov
stos
aam
movsl
inc
inc
pop
movq
hlt    
add
mov
cmpsb
inc
pop
stc    
sarb
push
lcall
mov
sbb
mov
sbb
std    
mov
mov
jge
shlb
lahf   
dec
shrb
sub
lods
jns
and
push
or
fistp
shl
or
push
jmp
pop
nop
adc
jge
xchg
xchg
rdmsr  
and
je
adc
dec
pop
sub
xor
mov
mov
cld    
(bad)  
icebp  
lret
loop
(bad)
(bad)  
icebp  
add
cld    
jle
xchg
fdivrl
inc
inc
push
verr
inc
dec
xchg
lods
fst
lahf   
ss aas 
iret   
mov
(bad)  
mov
loope
cmpl
adc
sbb
xor
or
fsubrl
push
pop
int3   
jne
mov
mov
jb
sub
mov
inc
inc
push
lea
bound
(bad)  
jbe
in
push
fcoml
test
imul
int3   
push
sbb
scas
and
and
pop
push
mov
jne
ja
cmp
add
and
push
rol
xchg
mov
pop
sti    
adc
in
jbe
out
mov
in
mov
jno
xchg
out
adc
movsb
add
and
push
push
setae
aas    
cmp
xlat
inc
imul
rcll
jle
xchg
sahf   
add
inc
hlt    
js
adc
add
dec
(bad)  
and
xchg
sahf   
scas
test
out
xor
repnz cmpsl
add
push
inc
and
sbb
xor
pop
ror
outsl
aad
(bad)  
xor
sbb
les
in
int3   
add
cs pop
lret
sub
enter
leave  
ret    
popl
mov
js
cmp
stos
ffreep
in
stc    
fistpl
push
lods
pop
mov
(bad)  
js
adc
sub
in
jp
push
fldenv
(bad)  
push
iret   
pop
dec
jg
or
(bad)  
sub
fbld
nop
jge
push
call
(bad)  {%k3}{z}
ror
leave  
fildll
outsl
aad
mov
mov
out
fildl
dec
xchg
scas
push
les
cmp
dec
or
sbb
int
(bad)  
jecxz
cmpsl
mov
lret
cli    
das    
or
enter
mov
add
arpl
xlat
ret    
inc
push
data16 jo
data16 jo
adc
roll
jp
out
inc
jbe
pushw
and
ret
data16 add
(bad)  
mov
mov
enter
jg
mov
popa   
test
mov
lea
push
call
sarl
int3   
dec
cmp
out
popa   
push
enter
inc
add
sbb
mov
sub
outsl
arpl
imul
pop
push
push
mov
jmp
inc
mov
push
inc
(bad)  
push
push
push
lds
cmp
dec
movsb
pusha  
(bad)  
mov
stos
sbb
cmp
pusha  
jno,pt
mov
xchg
add
inc
dec
enter
ljmp
lcall
das    
push
add
lods
fisttpl
(bad)  
mov
movsb
rcrl
repz pop
pop
and
cmpsl
fsts
stos
(bad)  
int
and
(bad)  
dec
(bad)  
mov
(bad)  
fildl
push
mov
sbb
mov
(bad)  
fistl
push
xchg
sub
sbb
mov
sub
inc
or
inc
lock cmp
jae
xchg
push
or
push
sub
data16 or
mov
lds
sbb
scas
mov
cs xor
mov
lret
fwait
pop
mov
out
stos
dec
push
out
push
aam
test
or
ss inc
push
outsl
lahf   
imul
push
or
test
jbe
pop
out
pop
bound
mov
call
jbe
mov
mov
mov
dec
jl
mov
cmpxchg
imul
addr16 jae
aad
dec
cmp
and
clc    
aas    
add
fs inc
mov
cmp
ja
dec
cmp
push
or
rclb
sbb
adc
jbe
in
vpsraw
enter
and
mov
hlt    
push
stos
subl
push
add
bound
or
sub
pop
fwait
mov
xchg
jne
pop
sub
pop
ret
je
inc
int3   
lret   
les
out
sbb
sti    
push
pop
mov
or
(bad)  
icebp  
lock test
adc
xchg
test
clc    
adc
icebp  
leave  
repz mov
mov
cmp
xchg
rcrl
notl
cli    
mov
sbb
mov
or
std    
shr
cmovbe
jbe
xor
stc    
icebp  
lock test
adc
jge
test
fidiv
aad
scas
push
cmp
daa    
daa    
mov
cmc    
pop
ret
jbe
clc    
aas    
add
fwait
(bad)  
jb
jns
jne
xchg
inc
dec
add
iret   
pop
movsl
lahf   
ja
leave  
shll
add
in
and
imulb
push
mov
iret   
iret   
movsl
xchg
xor
fidivr
or
mov
cmc    
punpckldq
ja
push
stc    
push
gs adc
sub
lock
iret   
enter
lcall
in
pop
imul
xor
mov
dec
dec
mov
mov
test
fdivp
sub
cmp
mov
das    
(bad)  
aaa    
sbb
inc
add
sbb
mov
sarb
push
insb
pusha  
add
jle
pop
or
ror
lret   
push
cld    
mov
ffreep
add
(bad)  
dec
jae
inc
pop
sub
sub
push
push
mov
mov
int3   
xchg
loop
mov
leave  
or
push
aad
xchg
loop
mov
leave  
leave  
int
repnz sub
dec
mov
mov
sub
jo
ds
popa   
fdivrs
cmpsb
ret
(bad)  
mov
cs aaa 
loop
stos
sahf   
fadds
mov
ret
mov
bnd je
ret
pop
test
xor
and
daa    
outsl
arpl
lods
ret
ret
jno
xchg
test
mov
sub
add
movsl
icebp  
in
mov
in
inc
xor
xor
lahf   
jge
jp
sbb
popa   
sti    
(bad)  
enter
lahf   
jl
cli    
xchg
test
jle
loop,pt
xchg
sub
ret    
fadd
in
cli    
mov
into   
aam
enter
ds pop
fiaddl
mov
faddl
jno
shl
enter
js
xlat
mov
push
push
or
mov
in
cs cwtl 
fcomp
(bad)  
in
cli    
mov
jo
mov
push
imul
mov
rol
cmpb
(bad)
pusha  
mov
mov
sbb
std    
repz loope
std    
int3   
mov
sub
mov
insl
jl
or
jmp
xchg
or
sbb
(bad)  
std    
xchg
add
in
(bad)  
ljmp
invlpg
jecxz
or
aas    
in
lahf   
pop
bound
mov
push
mov
lret
loopne
cmpsb
mov
dec
cmp
or
jo
push
adc
mov
gs
mov
mov
xor
push
inc
fsubrl
mov
pop
gs inc
inc
sbb
mov
mov
fcoms
lods
ds aam
mov
fsubl
pop
int3   
mov
das    
stos
mov
iret   
cltd   
lret   
scas
xchg
test
jmp
or
xchg
mov
push
fs popa 
pop
inc
xchg
mov
gs rcr
mov
out
dec
xor
fs or
or
mov
pop
imul
andl
mov
and
fild
and
out
jno
xlat
push
iret   
imul
and
testb
es cli 
test
clc    
lds
dec
outsl
daa    
rclb
jae
test
clc    
(bad)  
xchg
rorb
imul
(bad)  
clc    
lds
out
sahf   
jo
push
rorb
movsb
or
sub
cmc    
jmp
data16 or
mov
sbb
cmpb
mov
mov
popa   
les
fmuls
add
and
mov
jge
add
dec
lods
cltd   
mov
shl
mov
xchg
sbb
test
mov
sbb
imul
or
lods
fnstcw
adc
mov
jno
adc
sbb
pop
push
fs push
(bad)  
insb
lret   
sbb
lahf   
stos
lea
ret
add
mov
pusha  
inc
pop
or
ret
je
fcomi
mov
loope
xor
mov
sti    
pop
les
inc
mov
sub
mov
roll
mov
movsl
das    
add
hlt    
lea
mov
in
(bad)  
fs test
lods
es out
ljmpw
push
gs hlt 
xor
pop
xor
es inc
out
and
push
and
stos
enter
movsl
out
pop
mov
addr16 or
scas
adc
in
sahf   
arpl
(bad)  
jb
fdivr
push
mov
sbb
push
or
iret   
scas
cmp
and
cwtl   
dec
gs push
pop
ficom
arpl
sub
xor
mov
cmc    
xchg
cmp
xor
fdivr
fs dec
dec
imul
mov
hlt    
mov
jno
mov
and
lods
pop
or
adc
jle
outsb
cmp
imul
int
ja
push
stc    
jb
aaa    
and
psubusb
(bad)
pop
sbb
test
pop
xchg
je
xchg
xor
jg
pop
movsb
imul
ja
int3   
pop
xlat
inc
pop
test
and
sbb
cmpsl
out
sub
dec
int3   
mov
pop
push
sub
mov
mov
(bad)  
xor
push
roll
(bad)  
sbb
push
sub
pop
xchg
cmpsb
mov
jp
iret   
inc
add
in
stc    
jp
inc
movsb
stos
shrb
pop
xor
mov
lds
in
mov
adc
aad
dec
ja
movsl
pop
mov
xchg
std    
test
cmpsb
and
inc
jecxz
shrl
popf   
jle
pop
ss sbb
push
inc
xor
leave  
xchg
int
adc
imul
sahf   
inc
xor
(bad)  
lods
das    
xchg
push
adc
test
adc
popf   
orl
rcrb
gs mov
je
fs dec
in
jmp
jb
flds
inc
and
cmp
in
mov
xor
jno
or
mov
jbe
push
mov
and
(bad)  
(bad)  
sarb
adc
arpl
xlat
ret    
push
rcrl
or
leave  
pop
and
pop
mov
push
and
cmp
add
mov
mov
and
push
push
mov
jbe
lret
xor
mov
ror
inc
and
add
(bad)  
sti    
xchg
sti    
add
aam
test
or
xchg
and
mov
xor
push
add
stos
push
push
or
pop
adc
inc
lret
cli    
das    
or
cld    
ficomp
stos
les
xor
fwait
pop
shr
test
pop
ja
inc
mov
mov
lcall
popf   
movsl
ljmp
les
scas
inc
inc
xchg
ljmp
add
lods
xchg
fadds
pusha  
in
test
mov
mov
pop
add
mov
jo
ja
nop
mov
push
cmc    
stos
lret
cmp
cli    
les
std    
mov
and
ss ret
repnz rcrl
aam
adc
push
mov
lds
scas
or
aas    
std    
mov
insl
popa   
repnz lret
xchg
xchg
jnp
fsubrl
insb
je
mov
(bad)  
pop
jl
or
jmp
aaa    
test
xchg
fistp
repz mov
(bad)  
(bad)  
in
lret
sbb
stos
bound
rcr
add
roll
ds inc
fstpl
add
outsl
rcl
roll
xor
loop
xchg
sub
xchg
mov
sti    
sbb
ds
sahf   
jl
ljmp
xor
std    
xor
push
fstps
out
lods
and
scas
add
cmpl
pop
jecxz
call
aaa    
xchg
mov
arpl
mov
sarl
adc
test
mov
push
xorb
fwait
add
ffreep
enter
jp
ret
ds iret 
rorb
fimull
iret   
pop
iret   
fwait
add
movsb
pushl
(bad)  
mov
xor
std    
xor
popf   
xor
shr
pop
xor
call
mov
dec
mov
mov
ja
ja
ret
fwait
int3   
into   
bnd call
mov
int
insl
inc
mov
lods
(bad)  
or
out
(bad)  
fdivrl
mov
andps
sbb
in
cmp
push
adc
adc
(bad)  
cmp
add
iret   
fildl
lea
push
or
fdivrs
rcrl
mov
hlt    
into   
lock enter
(bad)  
sub
inc
fnop   
enter
xchg
pop
lods
inc
mov
ret    
call
xlat
mov
ror
call
arpl
xchg
push
test
sub
xor
hlt    
es
pop
iret   
pop
iret   
fwait
add
mov
pop
test
adc
shr
sub
out
cmp
inc
shll
fidivr
dec
js
jno
ljmp
push
clc    
mov
ret    
loope
std    
xor
movsb
fsubp
(bad)  
repz negb
ljmp
xchg
xor
mov
xlat
cwtl   
cmp
fwait
test
(bad)  
mov
jno
sub
push
leave  
into   
repz xor
adc
xor
push
mov
xor
lret
mov
sahf   
lret   
out
call
sbb
sahf   
push
andl
xchg
leave  
jb
jb
js
enter
xchg
daa    
scas
inc
mov
ja
ja
ret
fwait
int3   
into   
(bad)  
pop
push
mov
lcall
xor
popa   
ret
aam
(bad)  
fcmovne
bound
(bad)  
mov
aam
(bad)  
fcmovnbe
mov
jle
sbb
in
popf   
push
sbb
mov
and
out
in
dec
adc
xchg
pop
and
jmp
pop
fwait
test
ljmp
fstp
lcall
fdivrl
(bad)  
pop
stos
(bad)  {%k3}{z}
call
fnop   
pop
iret   
fwait
cwtl   
repz arpl
sbb
sub
xlat
fwait
lret   
leave  
or
xchg
pop
iret   
fwait
add
movsb
pushl
(bad)  
mov
mov
rolb
jp
xchg
addr16 jnp
popl
pushf  
hlt    
add
imul
subl
rcll
test
dec
in
dec
xchg
push
xchg
notb
pop
push
mov
xchg
imul
shrl
xor
movsb
jecxz
jl
cltd   
cmpsb
mov
daa    
sub
xchg
popa   
jmp
iret   
aam
(bad)  
fistpl
jecxz
ficomp
mov
lods
cmp
sbb
in
std    
fwait
inc
std    
rcrb
mov
pusha  
nop
out
dec
mov
(bad)  
mov
sbb
ror
call
xlat
sti    
push
lret
int
call
addr16 jnp
hlt    
adc
ror
imul
mov
shrl
in
cmp
add
iret   
movsl
add
mov
push
or
fcomps
pop
fcomps
rorl
or
jne
add
out
testl
pop
jmp
shr
test
ljmp
imul
cmp
call
mov
shll
aas    
dec
(bad)  
bound
(bad)  
clc    
mov
(bad)  
outsb
or
mull
rcrb
mov
(bad)  
cmp
fdivr
imul
int
daa    
repz sub
mov
test
lea
xor
in
dec
imul
in
and
inc
testl
ss popf 
cmp
jg
lock popa 
gs stos
sbb
fdivr
add
cmpsl
push
or
jecxz
stc    
std    
mov
movsl
les
push
femms  
pop
push
imul
ss mov
xor
subl
cmp
pop
daa    
and
mov
cmc    
xor
std    
jmp
sub
sub
ret
(bad)  
adc
test
sub
mov
pop
mov
add
cmp
pop
jecxz
call
xor
ss loope
mov
mov
arpl
mov
rorl
sub
mov
xchg
pop
xor
das    
fldt
jno
aad
push
mov
xchg
repz hlt 
ss mov
rcll
adc
stc    
std    
xor
popf   
xor
shr
mov
mulb
scas
cmpsb
cmp
test
cmp
cmpsb
mov
xchg
(bad)  
out
pop
in
adc
verr
inc
push
sldt
(bad)  
rcll
jns
sti    
fild
push
xlat
xorl
cmc    
add
(bad)  
roll
push
xor
push
test
mov
aaa    
test
movsl
push
inc
std    
and
mov
sub
les
rcrl
ret    
aam
dec
imul
in
dec
out
leave  
verr
inc
push
sldt
(bad)  
rorl
fimull
mov
push
pop
adc
adc
fdivr
out
ror
daa    
xlat
stos
mov
jnp
imul
fistp
jmp
ljmp
outsb
mov
cmpsb
adc
ds repz cltd 
out
xlat
ret    
dec
xchg
dec
lcall
sbb
iret   
mov
push
(bad)
addl
in
mov
push
cmpsl
fadd
xchg
adc
arpl
call
outsb
jns
rorb
ficompl
data16 sub
mov
and
into   
mov
sbb
cwtl   
clc    
rorb
in
and
popa   
xor
xchg
in
push
jecxz
es out
divl
or
add
clc    
movsb
(bad)  
or
xlat
jmp
scas
dec
sub
inc
pop
jbe
or
sti    
inc
push
fadd
aaa    
(bad)  
mov
mov
rorb
dec
out
leave  
xchg
loop
mov
leave  
clc    
xchg
xor
jno
movsb
add
mov
leave  
jg
call
mov
stos
adc
leave  
sub
pop
push
(bad)  
mov
sub
aas    
inc
inc
daa    
outsl
mov
mov
adc
xor
scas
sub
imul
cmp
or
dec
fninit 
jge
ljmp
out
jg
pop
cmp
push
pop
jae
or
sub
sbb
mov
js
push
rorb
aam
insb
and
fyl2x  
(bad)  
adc
and
mov
fstl
hlt    
popa   
test
add
das    
push
rorb
dec
sbb
repnz pop
aas    
rcll
sub
loopne
push
xor
cmc    
mov
outsl
jbe
jmp
adc
gs cld 
sub
ss ljmp
(bad)  
cmp
iret   
lds
inc
fdivp
mov
out
dec
mov
sub
xlat
jae
sub
aaa    
inc
fadd
aaa    
(bad)  
mov
push
push
(bad)
out
cli    
push
int3   
stos
inc
insb
push
xchg
jl
je
scas
loope
push
and
dec
xchg
ret    
das    
call
mov
adc
jmp
(bad)  
clc    
lds
jecxz
ret    
cmpsb
dec
gs std 
xchg
xor
cmovbe
enter
fwait
dec
adc
mov
mul
mov
push
mov
xor
out
sbb
sti    
inc
mov
jmp
mov
out
test
sbb
into   
pop
scas
jbe
lret
aaa    
cltd   
adc
cwtl   
sbb
push
ja
jo
xchg
dec
jmp
add
roll
jg
dec
mov
les
fdivrp
movsl
pop
das    
mov
fsubrl
jp
push
sub
cmp
mov
mov
mov
jbe
test
cmc    
inc
sbb
scas
ljmp
data16 add
scas
jbe
adc
adc
xchg
cmc    
pop
or
leave  
(bad)  {%k3}{z}
xlat
jae
sub
in
mov
aam
cmp
outsb
fisubl
mov
gs mov
or
pop
(bad)  
jns
dec
(bad)  
mov
sbb
add
cmp
rcrl
call
fwait
cwtl   
jns
fcmovu
out
cwtl   
jno
xchg
ficompl
mov
inc
xor
int
sub
mov
daa    
movsl
dec
lahf   
xchg
loop
in
jb
aad
dec
sub
mov
mov
xchg
pop
sbb
push
in
lret   
dec
mov
xchg
imul
jne
aaa    
adc
shl
aaa    
test
dec
jnp
popf   
cmpsl
sbb
popa   
imul
ja
cmp
ja
(bad)  
ss
mov
dec
add
sbb
ja
jbe
jbe
mov
and
mov
add
jge
pop
mov
lcall
jns
mov
push
scas
adcl
push
or
lea
(bad)  
arpl
mov
xchg
or
sarl
mov
adc
dec
shll
cld    
jl
push
aam
mov
(bad)  
fist
add
sub
sub
lea
add
sub
adc
inc
lret
or
verr
ljmp
inc
inc
lea
cmp
inc
fistl
lock xor
in
mov
jae
and
aam
call
mov
out
mov
push
push
lds
cmp
dec
popf   
jg
(bad)  
pop
stos
(bad)  {%k3}{z}
call
cmpsb
mov
jbe
jbe
mov
(bad)  
(bad)  
in
lret
and
sti    
addl
ficompl
jle
cmp
sahf   
mov
bound
mov
xor
pop
or
lcall
xor
stos
movsb
pop
push
mov
sbb
and
add
dec
pop
and
hlt    
xchg
or
xlat
or
loope
mov
xor
movsb
enter
out
cltd   
js
and
sub
cmp
in
(bad)  
pop
sbb
lret
pop
push
fdivs
mov
(bad)  
iret   
lret   
je
mov
insb
testl
push
std    
mov
shll
xchg
(bad)  
fcmovnbe
in
xchg
mov
cld    
add
sub
insl
sub
add
test
pop
xchg
dec
pop
push
mov
add
xchg
ret    
(bad)  
daa    
movsl
push
jecxz
xchg
mov
pop
pop
clc    
lret   
ret    
mov
add
iret   
dec
sbb
sbb
in
and
(bad)  
jne
sbbl
movsb
ss out
or
mov
jae
adc
and
adc
mov
scas
lret   
js
mov
aam
push
push
sti    
sbb
fimull
(bad)  
push
sub
out
fstps
jo
cmp
mov
inc
loopne
and
sbb
in
enter
imulb
mov
je
xlat
cmpsb
ss mov
xor
mov
scas
jo
mov
arpl
xor
lock sub
daa    
leave  
fdivp
test
xchg
cmp
inc
fdivp
push
aaa    
jnp
fdivr
shll
out
mov
mov
daa    
leave  
pop
mov
inc
jmp
jp
push
xor
std    
mov
es pop
test
mov
xchg
test
insl
iret   
xorb
mov
jns
mov
lods
sti    
jne
push
fdivr
pop
push
cmp
dec
and
jnp
mov
mov
fisttpll
repz pop
sbb
rolb
inc
add
js
mov
ret    
call
xchg
mulb
ror
call
addr16 push
mov
sbb
rolb
in
or
cmpsl
dec
lret   
lret
pop
inc
(bad)  
pop
push
mov
xor
mov
pmaxub
dec
cmp
cmp
xlat
(bad)  
add
xor
pop
jno
jmp
xchg
pop
xor
jg
sar
pop
imul
adc
stc    
std    
xor
push
cmpsl
fadd
mov
dec
bound
jno
or
movsl
or
jge
cltd   
clc    
mov
dec
pop
fldt
fwait
push
pop
dec
jg
jns
mov
adc
mov
mov
and
jnp
jmp
vhsubpd
ret
mov
lock add
mov
test
xor
sbb
push
jmp
push
in
test
pop
in
jge
dec
inc
lds
sub
jb
gs aad
jnp
mov
iret   
sbb
mov
cmp
jg
xchg
jbe
ret
ja
dec
pop
fstpt
addl
jle
cmp
lahf   
sub
sbb
lods
dec
pushf  
and
and
aas    
std    
mov
xor
aas    
add
or
xor
inc
mov
std    
cmc    
xchg
cwtl   
iret   
inc
sbb
jno
sbb
pop
sahf   
in
sti    
movsb
sbb
hlt    
or
mov
push
pop
jae
adc
shll
jns
mov
mov
and
jbe
xchg
flds
in
cmp
push
or
addr16 xchg
stos
mov
les
dec
int3   
inc
mov
sahf   
lock enter
adc
in
out
sbb
pusha  
mov
clc    
aas    
add
or
lahf   
leave  
and
lcall
or
jge
pop
xchg
push
mov
jae
leave  
adc
lret
dec
mov
out
jge
mov
mov
sarb
add
and
sti    
iret   
jmp
outsb
gs
das    
(bad)  
loope
test
loope
fwait
ljmp
push
ds imul
scas
sub
cmpsb
in
jp
imul
arpl
pop
cli    
jae
les
or
mov
xchg
jle
sbb
aam
xchg
and
stc    
scas
push
aas    
clc    
rcr
mov
movsl
add
pop
into   
fldl
in
jmp
sbb
pop
stos
aam
xchg
jl
adcl
nop
and
icebp  
getsec 
jne
inc
push
addr16 in
inc
xor
sbb
push
(bad)  
mov
test
xchg
(bad)  
(bad)  
jg
jecxz
or
aam
pop
scas
sahf   
(bad)  
lahf   
inc
fbstp
iret   
enter
lock inc
divb
imul
pop
(bad)  
jb
sub
stos
fiaddl
xchg
or
xor
push
fwait
xchg
or
loop
sbb
(bad)  
inc
test
stc    
sarb
push
push
jmp
inc
ljmp
(bad)  
out
sti    
in
jne
fwait
cwtl   
add
push
loopne
test
xchg
push
adc
mov
fldl
pop
mov
repz int
add
fsubl
cmc    
int3   
aad
sub
xor
pop
lret
adc
loop
icebp  
das    
sar
nop
jmp
movsb
xbegin
shrl
or
fsubrl
mov
fwait
lods
in
push
out
sbb
negb
xchg
popf   
(bad)  
rcl
ficomp
jmp
sbb
shr
cmpsl
add
aad
cmp
or
sarb
stos
enter
clc    
std    
rorl
out
sbb
or
inc
les
sub
popf   
mov
stos
hlt    
(bad)  {%k3}{z}
mov
mov
xchg
aaa    
scas
loop
cmc    
push
mov
cltd   
out
flds
imul
cmp
pop
push
cmpsb
enter
shll
aam
fiaddl
hlt    
mov
cmp
int
push
mov
(bad)  
icebp  
das    
sar
xchg
jmp
inc
hlt    
or
xchg
les
jae
loop
stos
clc    
rorb
xorl
mov
xchg
mov
xchg
lahf   
push
xor
ja
(bad)  
iret   
enter
clc    
popf   
sub
jb
lret
mov
repnz
dec
xor
scas
pop
dec
sbb
jno
inc
mov
add
add
fistl
sub
cmpsb
enter
xchg
aad
cmpsl
add
int3   
aad
xor
xchg
mov
or
mov
or
mov
(bad)  
leave  
adc
xor
pop
test
ret
aam
or
and
or
leave  
sub
(bad)  
xlat
bound
int
inc
jae
inc
leave  
adc
xchg
push
mov
test
add
das    
or
adc
dec
(bad)
jge
add
or
arpl
fdivl
jge
mov
jbe
data16 repz loop
xchg
xor
inc
jb
jae
loop
in
cld    
mov
cltd   
daa    
mov
mov
in
enter
xchg
hlt    
or
in
iret   
repnz gs cmp
fdivrl
data16 fwait
das    
and
jns
mov
sbb
pop
jno
lods
pop
neg
adc
iret   
pop
inc
fxch
xor
lods
(bad)  
out
cli    
push
mov
movsb
sti    
cmp
iret   
enter
jmp
mov
mov
in
aad
or
inc
cltd   
movsl
aas    
add
imul
xchg
pop
nop
push
push
bound
outsb
mov
(bad)  
aam
out
jg
outsb
shll
lret   
dec
jns
in
jmp
test
jmp
inc
fidivl
loopne
push
aaa    
mov
sub
mov
jns
aaa    
xchg
mov
and
hlt    
and
sub
fdivs
pusha  
jp
dec
xchg
lods
fcomps
add
and
in
dec
pop
inc
shrl
sarl
lret
nop
outsb
and
test
imul
dec
fwait
(bad)  
ret    
cmp
es add
lret
xchg
dec
adc
ja
fsts
jmp
jg
ds
cmpsl
jae
bound
xchg
lcall
mov
inc
repz ret
fsubrl
popa   
mov
cmp
inc
push
cmova
push
mov
fprem1 
push
push
inc
lret   
aas    
xor
fiadd
ret
xor
ljmp
xor
shlb
js
(bad)  
iret   
lret   
pop
imul
push
cmp
adc
push
cld    
mov
mov
aam
ljmp
fadds
shl
cmpl
xor
ljmp
in
xchg
call
push
iret   
rorb
shll
jp
xor
(bad)  
jae
inc
jg
pop
out
fwait
mov
aaa    
(bad)  
sbb
sahf   
xchg
ficoml
xchg
mov
imull
adc
mov
(bad)  
repz
in
xchg
call
push
iret   
rorb
shll
jp
xor
mov
cmp
add
jl
dec
mov
sarb
push
push
jmp
insl
(bad)  
mov
mov
cmp
cltd   
mov
pop
inc
inc
xchg
inc
push
and
out
jbe
mull
or
lret
je
sbb
sbb
repz scas
lahf   
lret
jecxz
fwait
mov
adc
out
xchg
mov
xchg
dec
or
mov
hlt    
sbb
inc
stos
(bad)  
jo
adc
enter
or
jb
inc
imul
push
enter
fidiv
test
sbb
mov
pop
out
roll
sarb
cmpsb
in
pop
fldl
push
dec
nop
out
inc
xor
push
loope
scas
add
clc    
fild
adc
inc
je
jb
xchg
mov
test
xor
movsb
imul
out
mov
int3   
leave  
test
mov
(bad)  
xor
(bad)  
out
sub
(bad)  
push
and
adc
inc
mov
xchg
dec
loope
mov
ss cltd 
sbb
(bad)  
jo
jne
mov
inc
jp
dec
inc
cmc    
lods
jg
ficom
lcall
setne
lock and
(bad)  
movl
mov
push
xchg
mov
loop
xchg
pop
cmp
mov
popa   
and
dec
mov
movsb
pop
rorl
hlt    
popa   
popf   
cmpsl
inc
pop
jbe
(bad)  
xchg
mov
lock adc
cmp
lahf   
or
test
lret
sbb
dec
sub
test
cmp
setnp
adc
and
ja
push
stc    
jp
adc
sbb
lahf   
sub
testl
or
mov
cmp
lea
subl
pusha  
scas
mov
cmpsb
les
js
insl
popa   
repnz adc
outsb
jp
loope
das    
mov
test
jp
cmp
stos
jno
xchg
(bad)  
mov
and
push
rol
bnd je
push
or
xchg
aad
push
cmp
in
in
rcrl
add
mov
test
xor
adc
icebp  
mov
nop
pop
mov
or
sbb
(bad)  
mov
mov
fildll
fidivrl
sbb
sub
and
ss mov
lods
jge
das    
(bad)  
jb
ficomp
mov
jno
verr
inc
push
test
test
test
and
jp
dec
icebp  
dec
stos
jle
and
addr16 xchg
lods
push
sub
aas    
iret   
inc
cli    
jg
(bad)  
into   
fld
ss
mov
jae
push
adc
lahf   
add
mov
jno
pop
in
mov
pop
jge
sub
push
scas
cwtl   
pop
lcall
add
cmp
and
lods
xor
or
in
les
or
int
pop
cld    
push
sub
dec
sub
mov
inc
cmp
lret   
push
lods
adcb
mov
sahf   
xlat
(bad)  
addr16
jno
or
mov
pop
outsb
xchg
fwait
arpl
lahf   
(bad)  
mov
inc
int3   
jg
xor
add
pop
shll
pop
call
push
sbb
xor
daa    
outsl
push
icebp  
mov
lret   
xor
jle
dec
fdivrl
ret
mov
xor
mov
cmpsb
shr
mov
sahf   
lea
adc
xor
sbb
fldcw
xor
rcll
or
sub
xchg
icebp  
sbb
fnsave
sub
iret   
pop
pop
fisttpl
mov
(bad)  
xor
push
movsl
mov
xchg
xor
jno
inc
jno
jecxz
movsl
pop
jbe
fistl
fnsave
dec
mov
mov
add
scas
push
or
jae
decl
js
cmp
scas
xchg
dec
push
(bad)  
jns
mov
or
ret    
jb
js
(bad)  
sbb
sbb
cmp
pop
inc
lret
xor
push
out
pop
inc
jge
std    
out
mov
and
lods
dec
jae
outsl
out
xchg
inc
push
jbe
mov
arpl
xchg
xchg
mov
or
dec
xor
cmpl
add
push
int
cmp
or
mov
movsl
adc
sbbl
mov
push
jno
test
das    
xlat
inc
or
and
cmp
iret   
gs mov
mov
scas
mov
push
jno
test
xchg
xlat
inc
or
cmp
cli    
cmp
insb
add
cs xor
lea
pop
int
stos
xchg
jmp
fwait
sbbl
je
sbb
divb
push
sbb
mov
leave  
cmp
test
in
jo
gs cltd 
inc
push
(bad)  
(bad)  
fidivr
push
stos
sbb
xchg
fmul
mov
cmc    
pop
in
adc
mov
negb
jne
outsl
das    
push
cmp
cmp
cmp
clc    
pop
ret
pop
mov
pop
mov
shl
hlt    
divb
push
sbb
mov
leave  
cmp
xor
ja
subl
mov
mov
mov
jle
push
jle
push
out
clc    
stos
cltd   
in
int
lods
adc
and
je
fwait
movsb
jne
dec
and
dec
je
fwait
movsb
jne
and
stos
xchg
lods
inc
jno
movb
mov
and
xchg
mov
xor
aaa    
sar
fadds
(bad)  
jle
or
sbb
sti    
sar
push
jbe
in
push
aas    
sub
dec
pop
mov
pushf  
test
cmp
jnp
cwtl   
mov
mov
sti    
daa    
loopne
mov
pop
add
push
cmp
xlat
(bad)  
or
in
mov
insl
and
add
pop
xlat
pop
lret   
push
push
outsl
mov
adc
ljmp
(bad)  
test
jge
mov
jg
(bad)  
pop
rcrb
(bad)  
je
mov
push
ja
lretw  
rorb
jecxz
fisub
pop
dec
jo
dec
jecxz
inc
out
sub
sub
push
(bad)  
decl
jnp
popf   
gs mov
and
fstl
mov
dec
fdivrl
mov
(bad)  
pop
jns
xchg
je
(bad)  
stc    
(bad)  
arpl
push
xchg
inc
(bad)  
hlt    
mov
fidivl
test
and
mov
in
mov
fwait
das    
and
notl
xchg
jne
dec
fisttpl
inc
jl
pop
stc    
mov
sarl
jnp
iret   
movsb
xchg
pop
cmp
imul
fsts
dec
cmp
sbb
xor
dec
sar
lcall
stc    
in
cltd   
rol
xchg
shlb
fcmovb
lret
or
negb
xlat
add
push
insb
out
cld    
repnz and
je
rep stos
fwait
jge
push
roll
mov
push
in
ror
mov
ds mov
ljmp
inc
mov
fwait
pop
dec
xor
sbb
addb
hlt    
xor
movsl
pop
out
sarl
dec
fimull
lahf   
lret
mov
insl
lock enter
out
mov
leave  
cmp
loopne
sub
pop
sub
bound
imul
test
emms   
pop
aaa    
sbbb
js
rclb
call
pop
jle
mov
cmp
ret    
lods
popa   
xchg
ret    
push
pop
and
push
sub
testb
iret   
out
pop
sub
xor
fs scas
pusha  
mov
jg
mov
xchg
ret    
push
pop
and
stc    
sarb
ds clc 
aas    
add
or
sti    
push
and
in
xchg
cltd   
or
add
out
lret   
stc    
(bad)  
ds clc 
aas    
add
or
out
lret
xchg
cltd   
pop
fild
out
lret   
stc    
jne
inc
fmull
adc
jno
in
jb
xlat
iret   
enter
adc
loopne
jo
dec
negl
sbb
add
repz push
jg
adc
mov
iret   
enter
adc
call
testl
add
add
bnd je
push
or
int
push
es out
call
cmp
(bad)  
repnz fbld
fwait
sub
mov
push
ljmp
lret   
xchg
mov
ror
mov
fs sub
je
push
or
int
negl
jbe
xor
dec
mov
test
clc    
lds
inc
inc
or
das    
les
idivb
mov
cmp
xlat
ret    
dec
jmp
popl
or
out
dec
inc
push
ret
dec
pop
inc
bound
in
mov
rolb
add
ljmp
lea
inc
xor
push
jp
push
hlt    
loopne
or
xchg
(bad)  
mov
lods
into   
ret
inc
xchg
lea
pushf  
mov
push
cmp
shr
mov
inc
jb
insb
jmp
(bad)  
adc
pop
add
mov
out
lods
into   
pop
xchg
dec
iret   
mov
or
jae
in
ss mov
mov
arpl
jmp
inc
hlt    
call
iret   
nop
ja
stc    
iret   
addl
mov
ficomp
mov
push
outsb
test
iret   
pop
movsl
lahf   
nop
scas
aas    
xor
fsubrp
jnp
xor
push
mov
xchg
fs xchg
stc    
cld    
lcall
js
mov
or
aas    
sti    
push
stos
cli    
cmp
cmpl
cmpsb
add
push
adc
out
cmp
leave  
int3   
andl
out
mov
or
mov
js
mov
sub
adc
movsl
outsb
inc
push
aas    
mov
cmp
loopne
(bad)  
push
xlat
ficom
cmp
push
xchg
fistl
fisubl
nop
add
(bad)  
dec
xor
jb
fstpl
(bad)
icebp  
inc
ss repz xchg
lret
(bad)  
loop
scas
mov
call
mov
in
dec
in
in
add
cmp
lods
adc
xchg
pop
sub
push
xlat
inc
sub
(bad)  
rcrb
jp
push
and
pusha  
shrl
rorl
cmp
cs or
sub
daa    
hlt    
cs lret 
test
negl
and
popf   
popa   
xlat
fidiv
es cmp
xor
push
out
movsl
outsb
add
sti    
mov
cmp
cmp
mov
leave  
frstor
pop
jecxz
mov
mov
je
sbb
xchg
xor
sarb
inc
stc    
jle
pushf  
jg
jmp
fcoml
sbb
jno
addr16 cmp
(bad)  
popa   
fdiv
xchg
mov
mov
aaa    
sub
push
mov
cmpsl
mov
fcomps
addr16 or
and
data16 int3 
lahf   
leave  
daa    
movsl
out
adc
es mov
sub
adc
pop
xchg
or
cwtl   
jno
xchg
ficompl
popf   
iret   
xchg
xor
add
mov
jae
jno
stos
nop
outsb
dec
inc
and
jns
dec
mov
pmaxsw
std    
xchg
add
ss pop
mov
xchg
mov
out
mov
adc
leave  
psrad
fmull
add
inc
test
dec
pop
or
jae
cs pusha 
sbb
and
stos
lds
push
inc
(bad)  
aas    
mov
sbb
dec
cmp
lret
or
cmp
dec
dec
cs stos
sub
xlat
sbb
push
push
jbe
in
stos
in
jae
pop
pop
or
ja
or
aas    
or
bound
ja
xchg
loop
jge
sub
sub
data16 fidivrl
or
aam
inc
test
adc
mov
adc
gs cld 
sub
(bad)  
xor
int
jl
sti    
movsl
mov
xchg
xchg
out
xchg
push
iret   
lret   
dec
cld    
xor
je
clc    
cmp
mov
(bad)  
jae
out
ja
hlt    
push
cmpsl
mov
ret    
bound
int3   
in
lahf   
pop
ret
mov
(bad)  
fildl
stos
push
or
jae
bnd je
push
or
xor
(bad)  
ret
cmp
rolb
leave  
imul
lret
dec
add
adc
pop
jo
xor
xchg
xchg
test
mov
repz addl
sbb
sub
sbb
daa    
ja
pushf  
pop
dec
sub
jecxz
jl
int
or
push
cltd   
in
ja
es in
xchg
cmp
fsubr
mov
dec
stos
in
imul
loopne
maskmovq
idivl
add
dec
in
lret
lcall
daa    
jb
and
mov
mov
nop
je
out
sarl
dec
aam
pop
lret
fwait
dec
dec
aaa    
inc
(bad)  
lahf   
aas    
fstpt
out
sub
iret   
std    
sahf   
jl
mov
insl
or
enter
pushf  
pushf  
cmpsl
mov
sahf   
int3   
aaa    
mov
enter
xchg
loop
or
iret   
inc
sub
cli    
cs stc 
adcl
ja
cmp
leave  
fisubr
bound
ret
adc
lods
fldcw
sub
int3   
jnp
dec
push
test
outsb
(bad)  
je
sbb
mov
push
sbb
jg
movl
mov
sub
jle
(bad)  
dec
sbb
dec
(bad)  
lcall
xlat
inc
ret
add
gs std 
fbstp
repz xchg
mov
push
push
mov
mov
daa    
inc
inc
leave  
fisubr
loopne
sbb
popa   
inc
add
outsb
xlat
cmpsl
jmp
dec
out
dec
push
cwtl   
jp
sbb
jmp
or
int3   
dec
jl
pop
xchg
push
or
fimul
hlt    
inc
cmp
movsb
jmp
mov
cli    
inc
add
jbe
cmpsl
mov
push
hlt    
pop
je
or
xchg
fidiv
jb
dec
in
dec
out
cmp
lcall
mov
mov
ficompl
xchg
aaa    
mov
enter
movsb
add
iret   
inc
dec
sahf   
popf   
dec
rolb
push
dec
dec
lds
out
enter
pop
hlt    
dec
pop
cmp
in
andl
and
dec
out
movl
xlat
mov
add
xchg
inc
and
lret
jmp
sahf   
or
pop
jp
inc
push
rcrb
(bad)  
xor
inc
push
xchg
int
mov
mov
mov
lcall
out
push
mov
xchg
jge
mov
rorb
(bad)  
jle
lds
push
jg
add
sbb
xchg
nop
dec
xorl
das    
sub
xchg
mov
mov
adc
pusha  
cmpsb
xor
ret
add
mov
stos
(bad)  
outsb
test
out
stos
cmp
mov
icebp  
or
jae
jnp
sbb
cmp
dec
sbb
sub
mov
sub
ds repz pop
lret
loope
cltd   
das    
popf   
add
push
daa    
xchg
push
ret
ss cmp
push
ja
clc    
mov
incl
and
notb
xchg
fmull
in
adc
adc
(bad)  
(bad)  
xor
mov
test
pop
sub
aam
dec
and
stos
lret
out
xor
sti    
pop
or
mov
fs out
insb
mov
inc
cmpsb
pushf  
outsl
or
sub
inc
add
push
lahf   
jge
jp
xor
jp
or
xor
push
rorl
das    
out
into   
xchg
aaa    
mov
dec
fmull
xchg
out
push
sbb
inc
sti    
pop
xchg
adc
sub
sbb
sbb
outsl
lea
mov
pop
or
ja
je
aam
sbb
fisub
pop
das    
mov
cld    
pop
cli    
sub
jle
add
repnz mov
pop
mov
mov
mov
js
add
inc
jmp
gs popf 
jecxz
or
cmpsl
movsb
dec
mov
movsb
pop
lea
fwait
repz pop
repnz mov
pop
(bad)  
jno
jae
fstpl
mov
add
jmp
rcll
rorl
lea
psubw
repz jecxz
mov
sub
mov
stc    
lea
mov
push
lods
lcall
and
vpackuswb
jg
xor
jno
or
inc
sbb
scas
ljmp
dec
fcoml
fistpl
pop
jae
stc    
xchg
fstps
pop
aam
lret
xchg
daa    
sti    
inc
adc
stc    
lea
mov
mov
lret
jge
(bad)  {%k3}{z}
idivl
fcom
rorl
mov
xchg
jbe
mov
aaa    
icebp  
or
std    
shr
mov
ret
fwait
icebp  
or
lret
mov
sub
push
xor
inc
scas
(bad)  
and
or
xor
icebp  
decl
(bad)  
out
sub
rorl
(bad)  
scas
in
popf   
ds cltd 
or
push
or
(bad)  
rol
xchg
lea
shrb
and
arpl
jno
dec
mov
cmp
js
or
je
xchg
pusha  
dec
mov
mov
sahf   
loop
lahf   
jge
data16 mov
mov
lods
fsubrs
stos
lret
mov
xor
and
aad
jbe
out
es sbb
or
mov
cs xchg
add
icebp  
cmp
cltd   
dec
dec
pop
dec
test
fwait
insb
jle
out
lret   
js
xlat
iret   
pop
iret   
lahf   
sub
test
ret
je
mov
mov
out
jo
lcall
icebp  
les
sub
iret   
lds
cmc    
repz jl
add
xor
cs in
xor
pop
(bad)  
sbb
rorl
(bad)  
sub
add
xor
cli    
ficoml
outsl
inc
in
add
jcxz
(bad)  
aaa    
stos
push
inc
decb
je
push
or
ror
lret   
pop
push
les
repz mov
or
xor
pop
mov
mov
mov
sti    
inc
out
scas
pop
(bad)  
jns
cmp
sub
sar
push
test
mov
aad
mov
xchg
lds
cmp
cmp
movsb
test
lods
inc
sbb
enter
cs in
mov
mov
das    
stos
fs pusha 
idivl
das    
or
pushf  
jo
aam
push
cmp
jns
rorb
test
insb
and
xchg
scas
mov
and
xchg
and
sbbb
loope
mov
imul
inc
sbb
inc
xlat
dec
fdivr
xchg
ds out
push
int
in
jnp
hlt    
push
stos
negl
fdivrs
lcall
mov
dec
shrl
add
cltd   
sub
jecxz
mov
sub
pop
outsb
lds
inc
sbb
inc
fcoml
xchg
cmpsb
in
mov
xchg
mov
loop
lret   
jmp
jl
cmpsb
outsb
cltd   
mov
stos
xchg
mov
sub
pop
xlat
std    
push
adc
lcall
mov
stos
cmpsb
cmpsl
xor
jo
and
aam
pop
jle
cli    
das    
or
sub
ja
mov
and
push
lret
arpl
cltd   
dec
and
stos
pop
or
sbb
es push
or
dec
pop
inc
(bad)  
aaa    
sbb
xor
hlt    
mov
push
pop
popa   
int
clc    
sub
pop
dec
fisttp
lods
ret
(bad)
lock dec
xor
or
imul
sub
or
mov
sbb
pop
ror
cs push
dec
popf   
flds
ds or
fs aad
fldenv
xor
inc
add
(bad)  
insb
mov
pop
idiv
mov
rolb
in
stos
mov
or
inc
arpl
(bad)
shlb
sbb
ret    
out
mov
call
loope
pop
data16 out
push
imul
imul
pop
loope
stos
pusha  
test
mov
enter
addr16 inc
sahf   
nop
test
adc
in
cmp
jne
xchg
scas
xchg
and
call
dec
imul
repnz adc
sbb
sub
clc    
or
inc
xor
lcall
fwait
adc
jp
dec
test
clc    
lds
scas
inc
test
je
mov
sarb
mov
loop
jns
mov
mov
insb
mov
mov
mov
(bad)  
xor
xchg
arpl
(bad)  
mov
jmp
or
cli    
cmpsl
mov
jp
push
verr
pop
jb
add
mov
nop
lea
or
mov
push
push
pop
xlat
mov
lahf   
int3   
fistpll
in
cmp
mov
cmp
push
mov
jno
loope
pusha  
clc    
or
dec
jns
aam
adc
ret    
in
ret    
xor
mov
inc
adc
in
cmp
ljmp
mov
or
mov
rclb
popa   
gs pop
inc
sarl
xor
pop
jne
xor
and
lcall
xchg
sub
xchg
cltd   
test
scas
call
shrd
mov
xor
cltd   
lcall
arpl
movb
es gs jecxz
add
push
inc
jp
inc
xchg
pop
stos
mov
jle
pop
xchg
dec
loopne
and
jle
dec
jge
xchg
pop
rcll
ljmp
repz pop
cmp
jp
popa   
jp
add
mov
lahf   
pop
stc    
mov
fs xchg
sbb
fistp
aaa    
subb
mov
jmp
cmp
and
fisub
arpl
outsl
cmp
and
jo
push
aad
add
pop
icebp  
ror
popl
aaa    
loope
jle
inc
ja
clc    
pop
aad
pop
cmp
int
enter
neg
ja
arpl
(bad)  
mov
pop
push
and
mov
and
sti    
add
or
outsb
and
xor
aaa    
scas
loop
pop
inc
jns
jecxz
sub
icebp  
repnz or
and
movsb
imul
dec
cmp
(bad)  
pop
jns
pop
stos
pop
pop
loope
mov
aad
jp
inc
pop
mov
and
push
cwtl   
sbb
or
outsb
mov
ja
jns
and
sub
lods
dec
sub
movsb
jl
add
inc
nop
outsb
lods
jne
(bad)  
jno
es js
xchg
dec
pop
inc
xor
fwait
aas    
jae
push
cmp
adc
out
hlt    
mov
jecxz
sbb
inc
adc
mov
pushf  
sbb
arpl
dec
push
push
cmp
mov
sbb
pop
inc
cmpsl
jle
or
movsl
pop
and
inc
mov
sub
shl
xchg
cmpsb
in
rolb
pop
(bad)  
loop
inc
icebp  
xor
push
adc
lea
dec
jge
(bad)  
jno
rcll
mov
mov
out
jae
jb
dec
insb
hlt    
pop
ret
cld    
(bad)  
xchg
inc
push
xlat
sbb
in
loopne
sarb
and
nop
dec
fxch
cmp
(bad)  
jb
hlt    
inc
jl
jbe
aam
and
jp
inc
cmc    
inc
jl
imul
imul
popa   
imul
jecxz
inc
jbe
iret   
lcall
lcall
push
xchg
fnsetpm(287 only) 
je
data16 out
bnd ret 
negl
pop
cs leave 
adc
cld    
sub
mov
jp
inc
iret   
xor
mov
mov
cmp
sbb
ja
(bad)  
incl
pop
cmpsl
js
adc
out
and
adc
or
lahf   
pop
sub
sub
dec
pop
aaa    
push
jns
adcb
sbb
loope
jl
xor
ret    
cmp
(bad)  
dec
int3   
sbb
psubb
sub
aas    
in
imul
inc
arpl
(bad)  
outsb
(bad)  
icebp  
lods
or
aaa    
push
jns
sbb
mov
push
(bad)
int3   
jno
iret   
inc
inc
push
(bad)  
push
cs int
cs test
xchg
xchg
fs xchg
cmp
hlt    
stc    
pop
(bad)  
xor
mov
out
and
mov
out
ss loope
adc
(bad)  
push
hlt    
and
mov
mov
xchg
cwtl   
jge
imul
out
(bad)  
pushf  
jne
mull
lahf   
add
movsl
lahf   
mov
movsl
aaa    
lea
(bad)  
xor
mov
mov
sbbb
lret
in
test
mov
lahf   
and
shrb
or
addl
mov
gs sti 
sub
inc
xor
dec
nop
imul
lock lret
in
aaa    
fisttp
xchg
sarb
out
pop
push
enter
loop
pop
jge
loopne
ret
xorl
into   
rcrb
out
sub
xchg
dec
adc
mov
je
iret   
fdivrl
bound
mov
sbb
mov
xchg
mov
jp
xor
cwtl   
fstp
cmp
pop
mov
ss mov
rcll
insb
add
mov
(bad)  
lcall
pop
lods
jae
fsubrl
imul
sbb
inc
push
cli    
fild
pop
push
sar
lcall
cmp
int
add
add
dec
xchg
xor
cli    
xor
sub
jnp
fidivrl
movsb
xor
or
add
sbb
movl
inc
fcompl
imul
lret
jo
mov
test
push
jge
std    
dec
or
mov
mov
int3   
jg
jp
mov
sbb
or
pushf  
movsl
outsb
test
mov
inc
es data16 cmp
std    
popa   
pop
test
cmp
jg
rclb
mov
cmp
and
jmp
pop
mov
loop
cmp
les
sbb
insb
cld    
push
test
or
call
pop
iret   
push
mov
lcall
xor
data16 loop
jns
sub
ljmp
xchg
ficompl
inc
sar
push
loop
mov
je
mov
xchg
loopne
jnp
int
clc    
je
push
fbstp
(bad)  
imul
data16
xchg
mov
add
jno
mov
pop
daa    
sub
mov
leave  
cmp
adc
out
lods
cmpsl
xchg
mov
push
verr
inc
mov
mov
mov
movl
cmp
inc
pop
push
mov
les
or
(bad)  
in
or
sbb
cmc    
psubw
repz sahf 
pop
aas    
push
cmpsb
aad
push
std    
mov
fiaddl
xchg
adc
aas    
inc
mov
(bad)  
(bad)  
push
iret   
pop
and
aas    
cmp
inc
push
loope
pop
insb
push
out
addr16 inc
shrl
jmp
sahf   
addr16 fwait
add
xchg
xchg
out
fstpt
js
mov
mov
ja
mov
loop
pop
add
mov
(bad)  
cmpsb
mov
adc
addr16 mov
mov
push
rorb
rolb
sub
push
pusha  
and
sbb
fnop   
jno
in
push
pop
push
mov
jns
loope
add
mov
push
cli    
push
iret   
add
fiaddl
rcll
cwtl   
je
scas
and
xchg
aad
sbb
xor
fs jb
scas
and
xchg
and
scas
and
fninit 
xor
xor
shr
lret   
pop
fldl
andl
stos
push
lds
xor
shlb
les
sub
les
jae
mov
ror
push
pop
xchg
andl
mov
stos
dec
jnp
les
push
xor
popf   
scas
adcl
xchg
sbb
aaa    
and
sbb
cwtl   
xor
mov
mov
mov
jl
jo
adc
ljmp
sub
and
lods
sub
(bad)  
pop
(bad)  
xchg
movsl
arpl
test
mov
or
je
ja
sub
iret   
fsubrl
into   
mov
or
cmp
or
imul
and
mov
inc
test
fdivl
data16 jecxz,pt
push
leave  
cltd   
cli    
int
lret   
fadds
ss nop
mov
lahf   
xchg
dec
daa    
(bad)
lret
(bad)  
fimull
xchg
aas    
lock pushfw 
ss and
ss mov
adc
insl
xchg
out
scas
mov
pop
hlt    
mov
inc
push
sldt
lcall
mov
cmp
fcmovnu
ficomp
fnstenv
ret    
sbb
test
hlt    
jecxz
adc
jbe
imul
push
divl
mov
mov
mov
data16 fsubl
jno
cmc    
fstl
enter
pop
mov
or
int
mov
hlt    
pop
mov
dec
xchg
(bad)  
out
sti    
cmpsl
in
stos
inc
dec
or
push
testl
aad
jb
movsb
jae
sbb
adc
or
jne
and
dec
lods
cmc    
nop
mov
mov
cmpsb
inc
mov
cmc    
mov
iret   
mov
pop
aaa    
dec
mov
xchg
out
mov
add
mov
jp
insl
(bad)  
mov
push
sbb
xchg
dec
xor
rcll
lea
push
xor
loopne
dec
daa    
inc
add
dec
jne
jge
out
xlat
fdivrl
jns
or
iret   
pop
adc
insl
xchg
out
scas
mov
pop
hlt    
mov
inc
push
verr
cmpsb
xchg
push
sub
pop
sbb
xchg
hlt    
mov
test
push
xchg
mov
jp
cmpsl
inc
jle
inc
(bad)  
jbe
ds pushfw 
adc
mov
jg
sbb
xchg
lret
cmpsl
stos
iret   
fdiv
mov
out
ror
fsubl
mov
pop
xor
or
rolb
adc
shrl
add
lods
int
mov
sub
roll
xchg
xlat
fist
sti    
xor
imul
mov
gs ljmp
sbbl
push
cli    
insb
or
cmp
fidiv
mov
mov
mov
(bad)  
test
fnstsw
dec
push
pop
cmp
inc
push
pop
in
mov
(bad)  
or
mov
mov
mov
xor
rclb
inc
insl
ret    
call
dec
jb
mov
(bad)  
(bad)  {%k3}{z}
(bad)  
xor
rcr
(bad)  
and
sti    
sbb
in
sti    
mov
add
scas
sti    
ds mov
stos
mov
and
jno
hlt    
popa   
test
add
das    
cmp
call
mov
aas    
xor
xor
js
mov
cs dec
insb
hlt    
or
hlt    
pop
mov
inc
fsub
ds dec
out
pop
pop
xchg
call
xchg
aas    
push
xor
call
mov
mov
push
pop
pop
mov
icebp  
jnp
aaa    
(bad)  
xchg
roll
rolb
lret
mov
int3   
push
js
lret
mov
jb
mov
jbe
jbe
push
push
adc
lea
xlat
cmpsl
sbb
mov
inc
stos
hlt    
xchg
(bad)
jge
fcompl
dec
sahf   
pshufw
lret
pop
popa   
out
jl
arpl
push
(bad)  
outsl
xchg
jbe
jo
(bad)  
jmp
ja
arpl
or
sbb
in
mov
adc
and
sbb
in
rcl
mov
pop
mov
cmp
mov
xchg
lods
aam
std    
mov
iret   
cwtl   
inc
sbb
cmpl
out
sub
dec
(bad)  
adc
icebp  
inc
insb
push
adc
cli    
out
xchg
imul
mov
int3   
pop
push
sub
bound
cmp
daa    
daa    
addr16 js
jno
dec
push
out
xlat
inc
out
sti    
imul
or
lods
mov
or
jno
sahf   
mov
add
fnsave
dec
add
jmp
push
lods
mov
or
lock ja
xchg
and
loope
xchg
jmp
cmp
or
lahf   
cmp
xor
dec
jae
mov
shlb
flds
or
mov
(bad)  
arpl
inc
sub
push
pop
adc
ror
pusha  
data16 and
out
xchg
pop
lea
fnsave
or
and
sub
xchg
(bad)  
jl
or
jmp
cmp
aam
enter
call
test
push
aas    
push
test
scas
adc
inc
in
mov
inc
sub
mov
cmp
scas
(bad)  
mov
addl
arpl
decl
jnp
in
(bad)  
dec
push
jmp
or
ret
cld    
lods
sbb
or
mov
(bad)  
pop
aam
lret
and
addr16 std 
pop
lahf   
jge
data16 data16 fmuls
dec
stc    
lea
mov
aas    
hlt    
jge
mov
and
dec
stc    
out
xor
and
push
or
inc
fadds
popf   
inc
add
push
test
cltd   
inc
(bad)  
stc    
lea
mov
aad
inc
mov
inc
and
adc
mov
jp
sbb
jp
pop
adc
mov
sub
jg
jp
pop
mov
lock add
mov
jecxz
loope
push
mov
test
jae
adc
and
adc
mov
int
mov
out
dec
ja
sub
lahf   
daa    
test
xor
std    
xchg
inc
notl
(bad)  
addr16 jns
push
cltd   
cwtl   
jg
fcmove
aas    
xorl
mov
push
mov
psrad
inc
xor
add
shrb
pop
hlt    
mov
fdivp
test
jns,pt
insb
push
dec
or
jns
repz push
push
ds or
enter
dec
fld
js
cli    
popa   
mov
adc
xchg
sbb
lds
push
xchg
pop
or
mov
hlt    
popa   
mov
jp
pop
lahf   
into   
lcall
lds
push
xchg
pop
mov
mov
popa   
cmp
into   
lcall
xchg
xchg
xchg
mov
dec
cmc    
sub
sub
and
pop
aam
mov
(bad)  
sub
ja
shlb
sub
loope
in
dec
xorb
inc
(bad)  
cmp
std    
repz push
mov
icebp  
adc
cmpsl
mov
psllq
int3   
mov
js
fldcw
mov
and
in
test
sub
xor
addl
faddp
fldcw
aam
insb
xchg
ret
cmp
icebp  
(bad)  
xchg
icebp  
dec
mov
and
lcall
notb
repz out
mov
push
cld    
push
jo
test
test
sbb
jmp
xchg
dec
test
aad
jne
add
repnz dec
std    
(bad)  
mov
xchg
loope
clc    
or
and
xchg
push
push
mov
test
jl
inc
in
dec
icebp  
xchg
adc
cmp
inc
imul
pop
rcrl
out
pop
sti    
or
not
(bad)  
out
sti    
mov
std    
mov
je
mov
fadds
jg
(bad)  
sarl
mov
es push
cs xchg
sub
push
push
outsl
inc
repnz sub
inc
(bad)  
hlt    
mov
lahf   
sti    
mov
inc
rorb
xor
(bad)  
std    
xchg
add
(bad)  
jmp
adc
xchg
ds daa 
and
or
sub
out
mov
sahf   
out
sbb
daa    
pop
test
cld    
cmp
sub
mov
rol
out
js
add
in
loop
xor
test
test
dec
fwait
js
add
(bad)  
std    
mov
lods
mov
adc
mov
in
dec
dec
ror
es pusha 
jp
push
xor
std    
xchg
add
ss pop
jp
and
in
push
hlt    
sub
in
dec
inc
lods
addl
(bad)  
hlt    
mov
mov
xchg
push
sbb
mov
nop
(bad)  
out
flds
or
sahf   
punpcklbw
outsb
(bad)  
(bad)  
or
std    
(bad)  
lods
out
(bad)  
dec
insb
(bad)  
mov
fwait
sbb
mov
addr16 push
fdivr
xchg
and
or
inc
aam
pop
iret   
fwait
test
scas
mov
mov
(bad)  
add
test
roll
mov
iret   
mov
push
fs aaa 
cli    
stos
xchg
fwait
cwtl   
xlat
fcmovnbe
cmp
cld    
(bad)  
lods
das    
xchg
mov
mov
addr16 enter
lock pop
and
sbb
in
enter
hlt    
not
mov
bound
(bad)  
lret
stos
mov
sub
add
mov
insl
lods
xchg
dec
jbe
fs aaa 
cli    
mov
ret    
fwait
test
scas
daa    
xchg
scas
adc
fdivrp
cwtl   
test
fistpll
and
inc
pop
test
adc
pop
mov
pop
push
ret
sbb
int3   
ret
jb
lret
adc
xor
sti    
gs cmc 
push
mov
push
in
add
iret   
outsl
add
push
push
dec
daa    
shll
push
js
and
inc
sbb
inc
leave  
pop
iret   
outsl
cmp
out
fdiv
mov
mov
shrb
jge
sub
out
fstps
mov
iret   
imul
inc
daa    
xorl
cmp
cmp
adc
cs adc
(bad)  
cli    
aam
cmpsl
(bad)  
and
call
lock add
ror
sub
test
call
lahf   
push
dec
xchg
cmp
fidivr
enterw
lds
mov
mov
xchg
fidivr
test
push
in
adc
imul
sub
fidivr
outsb
add
cwtl   
cmp
pop
mov
lds
nop
stos
fidivl
into   
outsl
jge
(bad)  
jg
pop
lahf   
test
xchg
les
lods
and
ret    
mov
fs xchg
xchg
iret   
or
xor
inc
aaa    
or
sti    
ret    
out
xlat
mov
addr16 push
fdivrs
stos
mov
enter
mov
movsl
push
xor
in
xchg
pop
or
call
mov
js
push
mov
(bad)  
fucomi
scas
xor
inc
in
mov
(bad)  
jp
xor
lods
hlt    
rorb
dec
stc    
jle
jne
xor
pop
insb
stc    
lods
mov
cs nop
sbb
or
(bad)  
and
fstpl
shr
sub
(bad)  
mov
pop
test
loope
pop
out
dec
addr16 ret 
push
push
sbb
(bad)  
pop
mov
icebp  
out
xlat
lret
jg
out
sub
decl
mov
mov
pop
mov
xchg
ss jb
enter
test
scas
daa    
dec
decl
call
pop
mov
mov
out
pcmpgtd
push
adc
dec
mov
inc
fwait
stos
hlt    
cli    
fistp
nop
push
ja
sub
xlat
inc
pop
icebp  
dec
ljmp
jl
jb
out
(bad)
jmp
mov
addr16 push
movsb
loop
icebp  
aaa    
and
es sti 
jmp
test
icebp  
cmpsb
in
int3   
sti    
xor
hlt    
xor
test
in
ss jecxz
cmp
jnp
into   
cmpsl
out
inc
out
sub
inc
(bad)  
hlt    
mov
rcrb
hlt    
xor
mov
cmpsl
das    
inc
imul
popa   
negb
and
xchg
out
sbb
jbe
cltd   
pop
test
ljmp
adc
mov
cli    
pop
or
push
in
push
xor
out
in
rorb
pop
mov
and
fbstp
ja
dec
pop
dec
jns
cltd   
xlat
push
lret
and
aaa    
adc
in
cwtl   
adc
xor
jge
xlat
test
(bad)  
mov
in
(bad)  
dec
jecxz
pop
push
mov
mov
xchg
pop
adc
mov
pop
test
ret
dec
iret   
and
sbb
shrl
add
in
popf   
(bad)  
push
pop
cmp
jno
test
inc
mov
vmwrite
out
pop
in
pop
ret
push
test
mov
jge
mov
or
popf   
sub
js
cmp
push
and
jl
sub
sub
ja
lahf   
sub
add
add
popf   
mov
mov
sub
cmp
dec
pmuludq
push
cmp
or
and
addr16 daa 
jecxz
xchg
(bad)  
pop
and
sub
aas    
addr16 lock jo
shrl
scas
push
mov
fistpll
fcmovnu
jg
sahf   
pop
aas    
push
leave  
inc
xchg
push
js
dec
lcall
lods
pop
sub
(bad)  
mov
(bad)  
out
sti    
mov
mov
pop
add
pop
enter
inc
ret
sahf   
jb
sahf   
loope
dec
shl
cld    
jle
xsavec
mov
(bad)  
repz cmp
scas
mov
scas
or
jecxz
icebp  
aas    
add
inc
fdivrl
pop
push
std    
js
iret   
and
pop
ss repz push
cmc    
ljmp
into   
jbe
std    
std    
inc
aaa    
scas
pop
daa    
data16 rolb
xor
jg
movsb
fcoms
push
and
incl
int3   
lahf   
xor
je
add
adc
out
sub
addr16 inc
mov
cmp
pop
and
dec
sbb
mov
add
push
data16
xchg
mov
add
jno
mov
pop
es sub
mov
leave  
cmp
adc
out
lods
cmpsl
xchg
mov
mov
(bad)  
addr16 inc
push
pop
inc
lods
xor
std    
cli    
cld    
adc
push
std    
fst
enter
shlb
ret    
adc
roll
mov
add
in
xchg
pop
out
xchg
xor
xchg
imul
jp
xor
mov
je
sti    
fisttp
sbb
push
in
xor
hlt    
push
mov
push
adc
aam
lock int3 
les
adc
push
or
push
test
sbb
push
mov
cltd   
pop
or
imul
ret
fdivs
lahf   
sub
sbb
stc    
jle
in
insl
into   
fcompl
or
lahf   
sarb
out
stc    
inc
inc
adc
pop
sub
pop
loopne
sbb
hlt    
push
loop
int
imul
jb
shlb
pushf  
cs out
aam
sub
cmp
mov
dec
insb
adc
adc
cmp
notl
jae
pusha  
scas
(bad)  
out
sub
pusha  
scas
(bad)  
out
sub
in
or
ret
pop
fsubl
inc
out
dec
dec
test
aaa    
mov
ret    
mov
mov
push
cmp
in
mov
decl
or
sub
iret   
enter
dec
int
push
cld    
je
clc    
insl
xchg
or
sub
clc    
or
je
dec
adcb
(bad)  
insl
xchg
or
sub
xlat
pop
iret   
je
dec
adcb
andb
xor
pushf  
jmp
adc
(bad)  
jno
mov
rol
aaa    
(bad)  
mov
inc
rorl
mov
push
xchg
(bad)  
pop
or
(bad)  
jp
xor
popa   
mov
cli    
mov
clc    
xchg
mov
das    
leave  
sub
rorb
jbe,pt
dec
adcb
sub
inc
ret
(bad)  
fcomps
dec
pop
xlat
jecxz
mov
(bad)  
jmp
mov
inc
mov
jecxz
cmp
push
pushf  
test
inc
adc
mov
and
daa    
push
test
fwait
pusha  
pop
call
add
sub
dec
add
xor
mov
sub
test
cli    
cmp
pop
dec
bound
das    
push
enter
lcall
lock leave 
xchg
or
adc
add
xor
or
ja
sbb
mov
rorl
insb
nop
insb
aam
movsb
dec
mov
rclb
or
push
cli    
jae
pop
cmp
push
cmp
(bad)  
xor
inc
out
sbb
test
sbb
mov
je
push
xchg
test
push
dec
cs push
push
imul
mov
xchg
into   
das    
rcrl
lods
adc
push
leave  
cmp
stos
stc    
jle
jmp
jmp
mov
pop
stos
mov
flds
sub
pop
adc
subl
mov
mov
pop
mov
mov
dec
pop
xlat
addr16 xchg
aad
(bad)  
clc    
pop
ret
jbe
sti    
rcr
xor
insl
into   
popa   
cli    
jmp
adc
xlat
ret    
dec
repz dec
cmp
sub
cmp
mov
mov
arpl
out
inc
(bad)  
jb
add
lahf   
xchg
cmc    
ss mov
sti    
fbld
mov
int3   
and
movsb
sbb
repz pushf 
je
dec
rcrl
cvtps2pi
mov
ret
xor
sbb
mov
xchg
stos
adc
gs cld 
sub
lods
sti    
stos
push
jbe
mov
mov
lock clc 
lret
test
and
lds
xor
inc
mov
sbb
les
gs xor
xchg
repnz
inc
mov
(bad)  
clc    
or
pop
push
stc    
jo
repnz
inc
mov
nop
pcmpeqd
and
ljmp
fwait
xchg
push
movsl
dec
int
lahf   
fdivrl
push
(bad)  
fcom
repz loope
loopne
xor
mov
addr16 iret 
pop
es inc
inc
push
stc    
pusha  
xchg
xor
int
lahf   
fdivrl
push
(bad)  
dec
cld    
push
xchg
pop
jns
xchg
cli    
and
push
imul
dec
mov
sub
inc
ret
(bad)  
out
push
idivb
in
push
inc
push
verr
shl
cmp
inc
rorl
(bad)  
pop
lea
xchg
sbb
sub
popa   
cmp
repz aam
ror
xor
out
repz or
xchg
mov
out
push
fldenv
push
add
mov
push
scas
imul
bound
push
emms   
and
dec
adcb
into   
or
push
xlat
push
mov
test
push
bound
(bad)  
lods
outsl
sub
lcall
cmc    
mov
pusha  
rorb
test
push
insl
push
push
inc
cli    
mov
pop
fdiv
xor
pusha  
mov
jb
rclb
inc
pop
push
call
lods
(bad)  
cmpsb
gs popa 
push
cmp
dec
push
xchg
cli    
xchg
clc    
add
xor
jo
bound
inc
add
in
inc
into   
push
fldl
daa    
jge
cli    
mov
mov
inc
pop
lods
xchg
(bad)  
push
arpl
in
add
(bad)
push
cmp
cmp
lods
roll
sbb
push
xchg
mov
push
fwait
push
mov
or
data16 aam
outsl
das    
in
inc
into   
leave  
mov
pusha  
jns
jle
aas    
notl
test
(bad)
mov
ja
sbb
xlat
iret   
lret   
push
scas
push
in
mov
fwait
sub
cs inc
aas    
(bad)  
test
and
sbb
inc
push
xlat
cmpsl
je
movsl
imul
xchg
in
mov
addl
sarb
ja
dec
test
test
pushf  
mov
cmp
lret   
dec
das    
out
dec
js
mov
pop
mov
(bad)  
push
je
jno
aaa    
cmc    
or
fsubl
fistpll
mov
or
xor
test
sub
mov
xchg
loopne
mov
inc
iret   
movsb
sti    
test
nop
dec
dec
pop
jns
sti    
lahf   
adc
jb
lcall
push
outsl
pop
imul
aas    
and
pop
xchg
xchg
jp
in
cld    
pop
xchg
ja
les
mov
mov
ret    
dec
dec
call
and
in
xchg
mov
fucom
std    
and
or
jno
pop
cs mov
or
xchg
lods
jae
inc
cmpsl
(bad)  
(bad)  
push
pusha  
sub
repnz int
jg
bound
push
sub
repnz int
int3   
cmp
add
repnz or
mov
sub
xchg
lock test
mov
xor
cmp
push
sub
pop
in
rorb
dec
inc
push
stos
inc
aad
add
xor
pusha  
push
pop
call
pop
fstl
fadd
sub
sub
sub
push
adc
or
lods
sbb
cwtl   
adc
mov
add
pop
mov
mov
pop
out
sbb
push
jnp
ret    
sbb
mov
scas
ret    
xor
pusha  
jne
jne
and
adc
cmc    
or
pop
orl
out
inc
sub
inc
les
sub
sub
or
negb
cmpsb
in
xchg
mov
(bad)  
gs ljmp
daa    
pop
aas    
test
roll
or
sub
pop
jmp
xchg
mov
add
mov
lock std 
xchg
add
shrl
cld    
mov
int
push
fsub
scas
lods
dec
or
fsubl
sbb
xorb
mov
out
xchg
mov
add
(bad)  
jbe
daa    
or
dec
insb
push
push
dec
dec
fwait
mov
mov
mov
dec
sub
call
lahf   
(bad)  
mov
xor
out
xchg
pusha  
sbb
stos
push
mov
lea
inc
std    
(bad)  
lods
out
(bad)  
dec
insb
ja
jae
cmp
mov
xorb
sbbl
out
fdivr
mov
mov
ret
repz popf 
(bad)  
cld    
(bad)  
mov
inc
sub
cmp
dec
ficoml
pop
popf   
jno
or
fidiv
cmp
fildll
(bad)  {%k3}{z}
hlt    
jbe
cmp
dec
sldt
sahf   
aam
test
js
adc
sub
jge
push
mov
or
es ljmp
mov
fcomps
movsl
(bad)  
lret
stc    
lods
mov
mov
dec
cmp
leave  
mov
add
dec
inc
and
mov
subl
pusha  
outsb
xchg
sub
nop
mov
cmp
mov
lahf   
adc
das    
mov
xor
dec
fmull
pop
ret
add
add
pop
rdmsr  
les
jecxz
repnz and
lcall
sub
add
xchg
xlat
pop
popf   
jecxz
cwtl   
dec
cld    
cld    
jl
imul
(bad)  
sub
inc
data16 cmp
into   
adc
into   
daa    
inc
push
mov
push
leave  
mov
sbb
dec
add
pop
fs push
gs pop
dec
ficom
xor
dec
and
pop
jns
enter
xchg
test
std    
mov
fldl
push
mov
mov
jae
push
rorb
jmp
xchg
or
test
jae
std    
decl
jnp
mov
pop
(bad)  
jns
mov
test
mov
jp
fs
enter
in
out
add
xchg
push
adc
aas    
add
mov
cltd   
es es cmc 
and
mov
orl
adc
(bad)  
cmc    
xor
sub
loop
ror
(bad)  
pop
xchg
dec
and
das    
daa    
lock int3 
or
rorl
fs scas
cmc    
push
jg
aad
(bad)  
cmp
ljmp
mov
pop
rcrl
cli    
or
mov
fucomi
jl
mov
sbb
data16 hlt 
pop
mov
lods
push
(bad)  
mov
push
mov
lret   
inc
rcrb
rcrb
das    
or
xchg
dec
xchg
out
push
jg
imul
flds
ljmp
addr16 pop
out
loopne
into   
push
int
sbb
mov
sbb
loopne
xor
daa    
mov
int
cmp
mov
or
mov
inc
xchg
lock push
and
mov
jmp
pop
rclb
or
es iret 
and
pop
pop
lods
jae
fsubrl
test
jmp
icebp  
fsubl
imul
lret   
and
stc    
in
test
pop
push
mov
jg
mov
loop
cmc    
inc
sbb
mov
xchg
sarl
fild
mov
push
mov
int3   
push
xchg
das    
or
pop
and
sahf   
hlt    
notl
out
sti    
mov
(bad)  
push
rcrb
dec
clc    
mov
test
ret    
inc
divb
imul
ror
popl
pop
aaa    
out
cmp
and
adc
out
fs repz inc
(bad)  
mov
pop
mov
sarl
inc
test
mov
fbld
push
or
lcall
test
mov
cmc    
mov
jb
(bad)  
jns
ss popf 
insl
xlat
xor
aaa    
xchg
dec
push
or
jle
mov
xchg
push
fs cmp
push
mov
jae
mov
lock ficompl
mov
test
fwait
pop
adc
stos
lret
test
xchg
jns
inc
jbe
jp
fnstsw
or
pop
push
das    
aam
dec
icebp  
lods
mov
fs aad
xchg
mov
es push
xor
xchg
push
fdivl
int
push
les
push
and
js
inc
lods
xchg
sub
dec
cmp
mov
mov
xor
add
inc
je
pop
jae
daa    
out
jnp
mov
xchg
pop
sbb
jb
inc
arpl
jecxz
aam
xchg
jae
pop
ret    
pop
aad
pop
jae
or
sub
adc
and
loope
fildll
and
mov
adc
push
ja
sti    
mov
xchg
cmp
sub
clc    
sub
frstpm(287 only) 
mov
add
jg
shrb
fistpll
scas
je
out
outsb
mov
loop
mov
aam
jbe
dec
inc
lret
sub
int
xor
mov
cmp
clc    
rorb
jp
imul
cld    
sub
rcr
xchg
mov
dec
out
sti    
jb
jmp
add
push
ja
js
iret   
ss pushf 
inc
sbb
jb
outsb
cli    
lcall
das    
push
(bad)  
addr16 add
fsubs
mov
jae,pn
pushf  
lret   
push
orb
jae
test
stos
push
or
jae
cmp
ror
call
fisub
pop
cli    
jae
rorb
cwtl   
jl
sbb
in
popa   
push
cmp
push
adc
ret    
pop
mov
lods
lcall
add
xchg
xor
lahf   
mov
cmp
pop
dec
dec
es lahf 
sub
mov
pop
xlat
xor
stos
adc
pop
fwait
inc
stos
jae
pushf  
or
xchg
popf   
add
adc
mov
outsl
mov
aaa    
add
sbb
mov
and
fs leave 
ret    
xor
lods
int
insb
pop
add
jae
or
sub
pop
jnp
in
mov
gs pop
pop
mov
loop
xor
sahf   
clc    
mov
cmc    
mov
sbb
cmpsl
ror
pop
mov
add
xchg
rorl
and
sub
push
mov
cmp
sbb
cmpsb
ljmp
cmpsl
insl
sti    
popf   
fsubrl
insb
je
jecxz
mov
jl
or
jmp
aaa    
test
xor
inc
(bad)  
std    
xor
xor
xor
out
sti    
mov
mov
jae
xchg
push
std    
mov
adc
(bad)  
push
test
and
mov
std    
(bad)  
out
call
test
mov
xor
cmp
or
jmp
aaa    
test
mov
cmc    
mov
pop
mov
(bad)  
inc
lret
popa   
pop
cmp
inc
out
out
push
aam
xchg
jb
push
fcomps
xlat
dec
mov
inc
mov
cmpsb
in
push
out
jle,pt
adc
cmp
mov
pop
sti    
jmp
cmp
inc
call
add
jne
in
aaa    
(bad)  
fdivl
xor
push
xchg
push
std    
mov
dec
mov
mov
add
sub
pop
(bad)  
cwtl   
stos
lret   
fwait
cwtl   
cs
hlt    
cmp
enter
cmp
xor
fstpt
rorl
into   
dec
imul
mov
xor
rolb
pop
fcomip
mov
lret   
mov
in
imulb
cli    
and
out
dec
dec
rep movsl
pusha  
jnp
clc    
cmc    
daa    
dec
pop
mulb
mov
loope
add
and
lods
(bad)  
lock enter
shrb
and
outsl
mov
dec
jns
(bad)  
adc
ror
(bad)  
adc
pop
push
sub
sti    
call
mov
xchg
dec
xor
in
jno
pop
pop
mov
push
sti    
arpl
jle
cltd   
(bad)  
xchg
push
xor
aaa    
push
fistl
mov
(bad)  
mov
adc
push
add
add
outsb
push
test
in
jne
insl
outsb
(bad)  
mov
sete
cmp
inc
sub
loop
cmc    
icebp  
cpuid  
icebp  
nop
push
inc
inc
xchg
or
pop
mov
pop
jne
lret
bound
shll
mov
(bad)  
out
sti    
cmpsl
in
inc
cmp
pop
sub
fstl
enter
(bad)  
outsl
popf   
cwtl   
jns
jg
rcll
sti    
xchg
scas
sbb
fwait
cwtl   
das    
sbb
out
movsl
outsb
add
insl
sub
cmp
loopne
(bad)  
dec
adc
push
sbb
ja
jns
rorb
(bad)
and
(bad)
ja
and
and
fstpl
aam
or
adc
outsb
sbb
jp
xlat
(bad)  
inc
mov
add
xchg
(bad)  
ss
dec
jne
imul
mov
push
push
pop
push
jne
inc
mov
inc
push
verr
mov
fwait
and
loope
pop
insb
dec
test
out
lods
inc
inc
pop
xor
aaa    
test
loope
fwait
ljmp
insb
clc    
push
push
jmp
mov
mov
lods
push
inc
aaa    
cltd   
adc
cwtl   
sbb
mov
ret    
call
fidivr
cmpl
xor
nop
dec
(bad)  
out
sti    
push
mov
adc
mov
cmp
mov
lods
pushf  
xor
pusha  
in
lea
mov
jl
fstps
bound
mov
xor
xor
push
or
addr16 xchg
stos
mov
or
ret
les
mov
aaa    
xchg
jecxz
or
sub
(bad)  
clc    
pop
mov
stc    
repnz adc
ljmp
push
scas
lods
mov
cmp
rclb
inc
rcr
popf   
lods
(bad)  
dec
xchg
add
das    
sbb
lods
xchg
pop
cmpsl
or
out
cli    
or
jg
jne
enter
pop
aam
hlt    
popa   
popf   
cmpsl
(bad)  
adc
inc
jle
in
std    
rorb
addr16 mov
or
mov
or
cmp
sub
lock ret
mov
in
push
fdivl
inc
sub
xor
jmp
daa    
pop
roll
out
xchg
mov
in
fmull
fsts
pop
leave  
addl
xlat
ja
xlat
enter
or
(bad)  
push
mov
dec
stos
pop
push
mov
hlt    
mov
(bad)  {%k3}{z}
lds
out
dec
icebp  
xchg
sub
mov
or
inc
iret   
add
fcomps
pop
es push
lret
cmp
fidivr
daa    
loope
xchg
or
pop
inc
in
lea
fs dec
jbe
mov
mov
lods
xor
adc
and
xchg
test
adc
push
sub
movsb
stos
pushf  
adc
jnp
ret
mov
repnz or
sub
insb
or
jmp
lret
ja
mov
nop
inc
test
jecxz
xor
push
lea
cmp
nop
bound
in
cmp
sub
loop
out
stos
xchg
andl
cmpsb
mov
xor
ret    
mov
aas    
and
jo
and
mov
les
jl
xchg
dec
pushl
push
cmpsl
stos
mov
dec
cltd   
aas    
dec
out
xorl
mov
inc
adc
insl
lret
mov
sti    
lods
lret
ret
push
and
lret
shlb
hlt    
pop
dec
jnp
jp
xchg
repz pop
dec
mov
sub
(bad)  
jb
hlt    
xchg
sbb
dec
fisubrl
bound
lahf   
sub
jb
hlt    
xor
mov
mov
adc
stc    
jae,pn
pushf  
icebp  
xchg
add
cmp
loope
sub
cwtl   
(bad)  
adc
mov
jb
cmpsl
test
test
xchg
mov
fsubrs
dec
adc
icebp  
mov
xchg
sub
test
mov
dec
imul
adc
cld    
xor
push
imul
daa    
adc
xor
loopne
ret    
or
scas
ret    
enter
dec
or
les
js
sub
pop
sub
out
mov
leave  
cmp
stos
lret
movsl
fldl2e 
jecxz
(bad)  
pop
cld    
sbb
pop
enter
loopne
mov
lods
enter
and
dec
icebp  
sub
popf   
xchg
int3   
mov
fiadd
add
into   
outsl
test
xchg
fcoms
and
jbe
pop
dec
icebp  
sub
xlat
popf   
stc    
jp
fnsave
int
andl
roll
mov
mov
scas
jb
into   
lods
xchg
imul
test
pusha  
js
push
fsubrp
fucomp
fcompl
or
vpcmpgtd
aad
fiaddl
cs data16 daa 
nop
data16 and
hlt    
int3   
push
add
test
mov
into   
scas
fildll
jg
jle
inc
fwait
push
sub
pop
fs aaa 
xor
mov
xor
jo
add
fnsave
and
sub
inc
xor
mov
or
pop
popa   
dec
outsb
(bad)  
in
addr16 and
push
sub
push
movsb
mov
(bad)  
xor
mov
xchg
xor
daa    
in
sbb
jp
lea
sub
les
pop
aad
dec
and
mov
aam
push
movzwl
vhsubpd
in
rolb
mov
adc
pop
sbb
dec
out
out
mov
lahf   
jge
jp
or
cmp
out
sub
pop
mov
mov
cmpsb
or
mov
adc
sub
movsb
add
rorl
mov
(bad)  
mov
(bad)  
push
pop
cli    
xchg
mov
fdivl
hlt    
cld    
fs
das    
(bad)  
loope
test
xor
mov
xchg
mov
cmp
rclb
icebp  
lock jns
jae
adc
and
sysenter 
aam
lcall
inc
fsubp
fstpt
popf   
cmpsl
scas
xor
addl
pushf  
sbb
std    
mov
iret   
in
xor
mov
fwait
or
lock loope
push
or
lea
sar
ret
pop
or
aas    
jb
inc
inc
dec
mov
call
flds
or
(bad)
(bad)  
adc
pop
cltd   
inc
push
sti    
sbb
pop
push
popa   
aad
je
icebp  
imul
(bad)  
cmp
lods
add
stc    
jg
cmp
and
jp
jmp
xchg
(bad)  
mov
or
mov
les
fs sub
mov
mov
in
into   
movsb
fbld
mov
cmp
test
pop
add
int3   
cmpsb
push
lcall
loop
add
cmp
pop
or
dec
ljmp
(bad)  
int
test
(bad)  
je
(bad)  
jo
mov
int3   
nop
hlt    
ja
jb
out
xlat
lret
hlt    
lods
call
push
mov
push
test
out
divb
mov
pushf  
stos
hlt    
in
inc
mov
jl
lcall
(bad)  
cmpsb
jle
fmull
out
sub
imul
pop
in
push
adc
adc
sahf   
mov
repz das 
repz in
add
push
or
sahf   
pop
push
mov
sub
xor
inc
stos
and
push
lea
or
pop
jno
or
stos
jl
(bad)  
movd
add
and
ds mov
xor
adc
mov
inc
pop
testl
fimull
pop
mov
jl
adc
dec
sbb
xor
cmpl
xchg
pop
jmp
sbb
ja
inc
xchg
imul
sub
aad
and
pop
ror
aam
(bad)  
sti    
sbb
xchg
add
jae
movsl
mov
add
(bad)  
or
mov
(bad)  
push
cmp
leave  
mov
and
pop
(bad)  
push
int
in
jno
bound
repz cmp
adc
leave  
(bad)  
sub
xchg
shll
(bad)  
cmpsl
loope
push
sbb
stc    
jp
push
enter
inc
mov
std    
or
rcr
xchg
and
mov
fs xor
mov
dec
cmp
cmpsl
sahf   
inc
nop
stos
inc
je
push
mov
in
pop
pop
(bad)  
jmp
xor
and
xchg
dec
leave  
imul
jbe
mov
push
test
shr
fsubrl
bound
or
mov
push
jbe
jecxz
mov
loope
(bad)  
aam
xor
aam
sub
sti    
je
xor
(bad)  
shl
out
ljmp
lds
(bad)
jmp
xchg
nop
gs stc 
sbb
pop
stos
inc
les
(bad)  
mov
lahf   
inc
aas    
daa    
repnz push
negb
cmp
push
push
jecxz
jp
outsl
pop
adc
push
negb
cmp
scas
sbb
popa   
scas
xchg
pop
mov
(bad)  
jb
mov
push
inc
or
push
mov
aas    
ret
iret   
cmp
sub
push
repz dec
fcoms
jp
pop
cmpsb
test
cwtl   
int3   
xchg
sub
inc
div
sub
into   
cmpl
call
push
in
xor
repnz cmp
xor
movsl
adc
adc
fsubl
mov
adc
pop
lods
sbb
pop
inc
int
push
shrb
mov
add
call
shlb
jb
inc
daa    
mov
jbe
iret   
outsl
sub
in
inc
jecxz
cmp
sub
xlat
mov
cmp
jbe
fcomps
ds dec
aaa    
(bad)  
jbe
or
das    
mov
(bad)  
dec
pusha  
mov
push
pop
dec
unpcklps
jmp
repz in
or
arpl
unpcklps
lods
pop
jge
adc
dec
popf   
add
add
lock sahf 
out
pop
push
sub
jno
xchg
ficompl
xchg
roll
movl
scas
(bad)  
adc
jl
and
enter
jo
inc
adc
aad
stos
mov
(bad)  
sarl
add
in
mov
xor
fcomps
lcall
dec
jge
sbb
int
hlt    
xor
loope
test
or
push
fisttpl
out
mov
lcall
or
dec
sub
cwtl   
sub
int
jmp
push
xchg
iret   
pop
or
lds
jp
dec
cli    
push
dec
(bad)  
addr16 iret 
movsb
pop
xchg
add
test
or
inc
mov
mov
fdivrl
dec
add
out
(bad)  
bnd js
mov
int
jge
xchg
repnz
inc
mov
xchg
adc
divl
fdivrl
inc
fisubl
(bad)  
outsl
xchg
or
ss test
jmp
inc
insl
icebp  
add
cmpl
cmpb
add
scas
pop
inc
(bad)  
pop
push
mov
pop
mov
insb
mov
sti    
mov
cltd   
cmp
pushf  
or
into   
or
inc
fucomip
xor
scas
dec
lea
ret
jg
fisttp
or
mov
iret   
enter
adc
enter
dec
mull
popl
loopne
andl
lret   
dec
dec
mov
test
sahf   
pop
aas    
roll
call
xor
dec
and
sub
stc    
fcmovnbe
movsl
sbb
adc
fdiv
push
mov
xchg
jno
sbb
mov
jl
jmp
(bad)  {%k3}{z}
(bad)  
outsl
mov
test
pop
xchg
add
push
out
push
lea
repnz or
loopne
and
sub
dec
sub
mov
fwait
dec
mov
jge
(bad)  
pop
push
mov
push
pop
dec
push
movsb
mov
je,pt
mov
xchg
jae
out
inc
test
es push
inc
ljmp
dec
push
movsb
mov
je,pt
mov
inc
addr16 add
inc
pusha  
ret    
mov
sub
mov
sub
pop
sbb
lret   
add
sbb
adc
xchg
andl
or
lods
call
or
mov
nop
std    
shlb
sub
fwait
lret
mov
push
iret   
xor
std    
xor
idivb
or
or
jle
dec
xchg
ret    
xor
out
sti    
cmpsl
in
pop
add
push
and
mov
dec
negl
xchg
hlt    
lea
daa    
divl
loopne
mov
hlt    
mov
data16 fdivl
sbb
(bad)  {%k3}{z}
stc    
mov
lds
outsb
aas    
loop
push
add
clc    
in
mov
or
push
jb
sub
pushf  
stc    
cmp
cs enter
je
sub
pop
and
add
(bad)
mov
jae
sbb
shl
inc
dec
jae
and
cmp
push
push
and
mov
inc
push
test
out
jp
inc
push
cmpsb
mov
mov
sbb
test
cli    
int3   
in
(bad)  
jne
xchg
int
pushf  
(bad)
leave  
sub
cltd   
stos
stc    
sarb
ljmp
popf   
ja
sti    
dec
or
jp
jae
sub
das    
rol
add
leave  
lret   
add
stos
cltd   
imul
inc
mov
jbe
dec
dec
loop
pop
arpl
push
sub
lods
push
push
fisubl
or
adc
xor
mov
loopne
loopne
in
push
bound
add
sbb
adc
gs xor
aad
adc
jg
ret
dec
sub
mov
xchg
pop
into   
js
and
push
push
and
or
insb
adc
push
or
push
sub
aad
mov
ret    
sarl
aaa    
test
pop
(bad)  
fs pushf 
adc
push
or
push
sub
dec
(bad)  
mov
mov
daa    
data16
mov
and
or
push
or
push
sub
(bad)  
movsb
mov
mov
daa    
inc
cwtl   
ret
or
pushf  
push
mov
xchg
push
fstl
mov
lahf   
pop
(bad)
test
pop
cmpsl
fs mov
mov
xchg
xchg
inc
insb
mov
mov
daa    
data16 jnp
ljmp
adc
pop
fwait
dec
dec
sub
jae
xchg
(bad)  
in
into   
sub
dec
fs out
sub
sub
js
inc
lea
mov
in
xor
dec
add
aam
aas    
lcall
push
fiadd
fs mov
jmp
mov
addr16 jg
scas
(bad)  
mov
das    
and
dec
adc
outsl
lahf   
pop
ss loopne
sub
or
aaa    
and
mov
jl
out
dec
mov
add
dec
dec
xor
dec
outsb
push
test
test
les
or
lahf   
cmpsl
push
xor
inc
mov
inc
pusha  
mov
jbe
dec
dec
outsb
je
pop
push
lods
popf   
lret
mov
inc
ja
push
cmp
lds
xchg
js
or
mov
lods
(bad)  
jbe
bnd je
push
lods
mov
in
fiadd
cli    
pop
pusha  
jge
pop
add
insl
or
bnd je
push
lods
adc
test
bound
bound
cwtl   
pop
aad
ret    
(bad)  
bnd je
push
lods
jl
mov
fiadd
into   
mov
lret   
test
or
bnd je
push
lods
js
nop
fiadd
out
pop
jge
in
test
or
bnd je
push
lods
les
cmp
mov
pop
bound
pop
mov
add
bnd je
push
lods
and
cmp
add
dec
pop
jge
add
push
or
jae
aam
dec
pop
test
insb
cmp
mov
or
mov
adc
dec
fchs   
icebp  
ds mov
xchg
pop
subb
aad
mov
test
out
scas
add
or
hlt    
mov
fidivl
mov
jge
sub
je
push
dec
dec
adc
mov
inc
cmp
orb
mov
(bad)  
dec
sti    
lea
mov
ret
xlat
sbbb
mov
jecxz
push
pslld
inc
mov
std    
add
push
inc
add
nop
fidiv
cmp
inc
sub
lret
pushf  
push
adc
roll
(bad)
add
xorb
mov
inc
adc
cmpsb
in
inc
iret   
sub
sub
jg
fwait
test
sub
data16 mov
push
(bad)  {%k3}{z}
fldt
fsub
inc
shlb
pop
or
add
add
xor
jb
fstpt
or
push
mov
enter
xlat
add
lahf   
push
stos
clc    
cmp
iret   
enter
ds mov
add
add
add
loop
je
mov
mov
push
arpl
jae
mov
sub
imul
push
xchg
rcr
xlat
stc    
add
sbb
popf   
repz mov
sbb
sbb
inc
incl
pop
loopne
mov
into   
imul
ret
jg
push
pop
rclb
in
(bad)  
mov
push
ss jae
mov
loope,pt
sub
out
mov
mov
push
les
shrb
test
inc
and
call
mov
ret    
popa   
sub
imul
pop
push
daa    
or
xor
aas    
xchg
les
leave  
fildll
mov
jmp
push
push
push
cwtl   
test
pop
cmp
mov
int3   
and
scas
jbe
mov
sub
cmpsl
push
btc
sub
xor
je
jno
lods
push
push
pop
sbb
(bad)  
hlt    
es pop
xor
fidivl
cmc    
mov
pop
fdivs
cmp
pop
fstp
xchg
out
sbb
shrb
fildl
incb
lock sub
je
xor
xlat
sti    
out
xlat
iret   
sub
cmc    
adc
out
mov
adc
push
jnp
pop
jnp
add
dec
xor
or
and
out
cwtl   
popf   
imul
aaa    
sbb
roll
iret   
call
or
cmp
mov
(bad)  
sti    
sub
shrl
pop
xchg
push
shrl
jno
xchg
ficompl
aad
mul
xor
pop
sbb
adc
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
xchg
inc
repnz pushf 
jg
mov
mov
(bad)  
jle
daa    
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
xchg
sbb
(bad)  
xchg
sub
lcall
fs ds inc
sub
mov
ljmp
sub
stos
cmc    
sbb
fdivl
adc
push
jmp
fdiv
mov
out
xlat
iret   
fdiv
mov
ljmp
out
xlat
iret   
fnop   
data16 aas 
cli    
das    
lret   
dec
loopne
inc
(bad)  
xlat
pop
iret   
jg
xor
cmp
(bad)  
scas
mov
mov
(bad)  
sub
sarb
push
notl
repz hlt 
js
sub
out
daa    
out
pushf  
jl
cld    
(bad)  
stos
lret
cmp
push
aad
or
dec
fs inc
inc
push
jp
dec
outsb
and
or
mov
shll
jmp
cwtl   
shlb
xchg
addr16 aam
push
xchg
leave  
mov
mov
pop
jnp
push
(bad)  
cwtl   
loop
jb
(bad)  
lds
jae
push
jmp
loopne
stos
and
inc
cmp
mov
scas
test
lock push
lret   
pop
lock xchg
lods
or
mov
sub
int3   
add
sub
mov
mov
decb
mov
iret   
mov
mov
inc
jae
loope
(bad)  
fistpll
adc
mov
adc
(bad)  
into   
nop
in
lret
xchg
cmp
mov
xchg
adc
jg
in
imul
add
xorb
jbe
or
popf   
mov
iret   
pop
dec
add
jle
(bad)  
mov
add
add
ret    
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
sti    
dec
sub
sub
jo
shrb
dec
repz xor
pop
jge
inc
sub
dec
xchg
xor
pushl
dec
test
add
sbb
(bad)  
add
call
test
adc
add
push
add
repnz sbb
(bad)  
jnp
cmpsb
shr
adc
jg
add
mov
dec
cmp
mov
add
dec
lea
cmp
std    
mov
(bad)  
mov
mov
xor
pop
jecxz
loope
cwtl   
mov
rcll
dec
shl
aaa    
add
push
mov
xchg
fwait
mov
add
jb
sti    
addl
xchg
add
fsubrs
pop
mov
loopne
add
in
jg
loop
hlt    
clc    
mov
fwait
mov
or
inc
jl
xchg
int
jge
mov
mov
adc
mov
iret   
xchg
push
jecxz
sub
cmc    
lahf   
push
(bad)  
fmul
adcl
xor
mov
xchg
or
leave  
pop
movsl
cmp
jae
cltd   
mov
add
es gs mov
movsb
icebp  
daa    
mov
mov
insl
cmp
jnp
hlt    
insb
je
or
sub
pop
insb
(bad)  
push
push
lds
cmp
loope
mov
aas    
or
xchg
add
std    
xchg
add
test
jp
fiaddl
or
dec
and
and
repz sbb
push
push
push
jp
in
xchg
pop
sub
rclb
cmp
or
mov
imul
fisttpll
iretw  
and
adc
push
xchg
sub
pop
sub
mov
bndstx
js
add
ror
outsl
dec
push
out
(bad)  
fcomps
cld    
jl
inc
rcrl
lret
out
sbb
in
mov
mov
mov
loope
imul
xchg
fs inc
xchg
xor
ficomp
pushf  
repz xor
cltd   
xor
mov
pop
cmp
lods
inc
mov
sub
pop
xchg
push
push
fucompp 
icebp  
nop
push
inc
inc
pop
jbe
mov
and
(bad)  
in
cli    
fisttp
call
and
inc
xlat
test
push
stc    
jne
inc
pop
(bad)  
rcl
jae
out
pop
loope
dec
aas    
loop
mov
push
inc
inc
push
push
imulb
pop
adc
pop
jge
mov
mov
jb
les
adc
push
mov
xchg
shrb
std    
cmp
mov
out
lret
inc
in
push
mov
pop
jle
call
push
popf   
adc
mov
das    
mov
inc
mov
inc
mov
cltd   
or
push
mov
and
pusha  
lahf   
xadd
pop
sub
mov
mov
lret
mov
ja
insb
(bad)  
push
push
lds
cmp
aas    
out
out
movsl
movsb
add
out
ret
inc
or
repz mov
and
dec
iret   
pop
xchg
popa   
xor
xor
and
and
sub
test
call
inc
je
ljmp
cli    
sub
stos
xchg
iret   
pop
inc
leave  
popf   
ja
testb
xor
push
dec
pop
test
cmpsb
sbb
sahf   
jo
push
rorb
pushf  
(bad)  
data16 sub
fxam   
mov
and
test
sbb
fwait
iret   
mov
test
mov
or
out
jnp
loope
fisub
test
or
sub
mov
jae
or
sub
loop
pop
pop
xchg
lods
dec
dec
test
aad
mov
xchg
(bad)
les
lds
cmp
loope
in
push
idivl
loop
inc
aam
mov
(bad)  
push
(bad)  
jb
cmp
std    
mov
(bad)  
pop
fcomps
add
mov
movsl
popa   
pop
jns
mov
iret   
xor
pop
addr16 sub
loop
mov
pusha  
jns
rorb
ljmp
imul
and
sbb
negb
sbb
lcall
adc
inc
sub
loop
mov
aam
inc
in
movl
or
les
shl
aaa    
test
dec
jnp
test
mov
je
std    
int3   
push
stc    
jl
or
jmp
lods
test
lods
iret   
sub
sub
adc
test
or
icebp  
std    
dec
movsb
mov
mov
push
(bad)  
mov
add
inc
iret   
sbb
mov
test
xor
ds
fistpl
mov
loope
(bad)  
jns
fwait
or
mov
arpl
mov
mov
(bad)  
movsl
in
rcll
jnp
and
cmc    
icebp  
cwtl   
in
dec
aam
(bad)  
mov
out
or
cmc    
jp
clc    
mov
popa   
test
mov
test
jle
and
sub
mov
pop
jne
(bad)  
and
mov
mov
add
test
andl
out
stos
cwtl   
pop
aam
hlt    
popa   
popf   
cmpsl
inc
pop
jbe
lods
(bad)  
jbe
lods
(bad)  
jnp
mov
or
sbb
mov
insl
cmp
mov
lods
jb
data16 arpl
fcmovnu
mov
fwait
lods
adc
xor
mov
adc
imul
cmp
and
ja
loope
or
std    
fldl
or
shll
add
(bad)  
xchg
sbb
xchg
pop
or
call
sti    
xchg
pop
mov
lds
out
push
aam
imull
xchg
sub
cwtl   
adc
add
scas
xchg
in
push
or
jb
(bad)  
frstor
mov
jl
adc
dec
stc    
jl
ljmp
shr
repnz imul
add
jnp
cwtl   
(bad)  
mov
pop
adc
(bad)
fsubl
cmp
dec
test
and
pop
(bad)  
in
or
cmc    
pop
adcl
imul
dec
adc
pop
cmpsb
lods
out
movsl
and
(bad)  
pop
fadds
xchg
push
insl
sub
or
into   
xchg
add
outsl
push
loopne
xor
lds
les
or
and
push
jae
(bad)  
mov
cmp
or
ja
mov
jo
bound
hlt    
test
mov
(bad)  
aaa    
and
and
mov
rcrb
add
mov
jne
mov
and
dec
xor
addr16 popf 
(bad)  
fcoml
xchg
mov
xor
stos
faddl
dec
or
mov
push
in
jnp
and
rclb
sub
and
rcl
pop
and
adc
jns
sub
lods
jmp
mov
cwtl   
pusha  
jp
dec
push
movsb
xor
pop
sahf   
pop
sbb
in
xchg
sbb
jp
add
jno
pop
xchg
loop
push
int
adc
sub
adc
in
inc
testb
ss xchg
inc
out
mov
lahf   
neg
iret   
xchg
fs inc
imul
jecxz
mov
loopne
popf   
das    
or
sbb
xor
mov
sbb
pop
inc
rcll
fsub
fsubl
mov
xor
mov
rorl
cmpb
cwtl   
(bad)  
fdivr
les
nop
mov
sub
jp
mov
int3   
aad
shll
fcomps
push
xchg
push
or
sub
test
push
mov
std    
mov
mov
int3   
dec
jnp
push
push
lds
cmp
sub
cltd   
fbstp
push
test
push
cld    
rdmsr  
les
jecxz
call
fisttpll
push
stc    
mov
xor
lcall
pop
push
stc    
xchg
adc
rcr
pop
xchg
out
add
data16
sbb
movsl
pop
adc
cs sub
xor
jmp
(bad)  
lods
pop
add
daa    
ds stos
rclb
(bad)  
lods
pop
push
mov
addr16 std 
jb
ds mov
out
mov
adc
cwtl   
sbb
jns
sbb
lods
sub
ds
hlt    
xor
jae
insb
mov
out
add
cmp
data16 jae
sbb
push
iret   
inc
push
sldt
data16 jae
out
sahf   
push
test
xor
outsl
aam
and
mov
pop
xor
xchg
idiv
insb
sti    
(bad)  
xchg
xchg
adc
jp
push
test
xchg
xchg
xor
pop
dec
test
insl
js
add
cmpsb
in
movsl
add
cmpsb
sbbb
lret
jno
xchg
ficompl
popf   
iret   
addr16 nop
insb
pop
(bad)  
stc    
sub
ficom
jae
cmp
stos
add
ljmp
mov
inc
pop
loopne
dec
jnp
mov
mov
add
scas
mov
(bad)  
std    
mov
push
mov
pop
rorb
jns
rorl
ret    
(bad)  
bnd je
adc
sbb
inc
insl
cmp
imul
or
push
cs xchg
inc
sub
sub
push
jle
sahf   
cmpsl
push
mov
or
and
ss stos
mov
lret   
leave  
lret   
mov
jnp
jg
data16 jge
pushf  
sub
dec
add
in
dec
add
add
adc
inc
xchg
je
dec
cmpsl
xchg
outsb
out
lods
mov
xor
in
pop
and
or
mov
pop
or
lahf   
pop
fild
idivb
lods
insl
call
and
jne
jg
mov
fisub
pusha  
out
outsl
and
and
xor
insl
and
jmp
loop
aaa    
mov
cmp
pop
add
orl
inc
sub
adc
jg
add
sbb
loope
imul
daa    
cmp
out
cmp
lret   
mov
je
jecxz
add
in
dec
add
add
adc
inc
xchg
je
dec
cmpsl
aas    
bound
fdivr
inc
xor
adc
pop
add
mov
cmp
mov
fiadd
xor
and
mov
and
sub
inc
push
mov
push
aaa    
sub
sahf   
cmp
test
xor
mov
or
fidivr
mov
ficompl
lods
jg
movsl
cmp
js
arpl
xchg
inc
sub
sub
pop
mov
mov
adc
lods
cmc    
pop
push
push
(bad)  
bnd je
ret
add
xchg
addl
sti    
cli    
popf   
sbb
mov
pop
cmp
mov
ljmp
or
add
mov
mov
add
cmp
icebp  
jge
loopne
mov
xchg
pop
(bad)  
mov
arpl
mov
cmpl
cmp
pop
sbb
jo
aam
(bad)  
mov
lods
jl
cmp
sahf   
stos
mov
(bad)  
jecxz
in
(bad)  
jns
mov
popf   
arpl
sbb
(bad)  
mov
shrb
pop
decl
mov
sarl
push
js
psubd
mov
inc
inc
scas
pop
dec
jge
rcrb
sbb
sti    
push
sub
shll
in
and
std    
inc
(bad)  
std    
push
les
in
minps
lret   
sbb
mov
loope
imul
pop
inc
xchg
daa    
call
push
mov
stos
pop
fisubl
(bad)  
xor
(bad)  
jne
(bad)  
test
mov
sbb
sti    
push
xchg
sbb
in
cld    
loope
or
mov
loopne
jb
ljmp
dec
fstpt
cwtl   
jge
push
and
clc    
aas    
add
fs inc
mov
mov
push
jb
test
mov
xor
inc
int3   
stos
sahf   
ficompl
aam
ja
jbe
xor
divl
rclb
loop
jns
pop
pop
xor
lret
pop
mov
test
dec
addr16 fs mov
pop
jge
jmp
sysenter 
cltd   
inc
push
xchg
jecxz
loopne
mov
test
rcll
jl
jg
bound
dec
iret   
sbb
mov
mov
mov
(bad)  
stos
xchg
sbb
pop
rcrb
(bad)  
mov
add
or
ds pop
out
(bad)  
repnz jecxz
jbe
dec
daa    
ds xchg
(bad)  
rcl
stc    
xchg
jb
out
pop
cmp
fidiv
pop
daa    
jb
xchg
pop
jae
or
sub
push
test
ljmp
push
dec
pop
pop
inc
or
icebp  
jmp
dec
pop
jns
mov
dec
je
stos
push
mov
ds dec
and
jp
mov
mov
fisttpll
push
subb
aaa    
call
inc
clc    
sbb
and
or
inc
bnd js
(bad)  
rorl
daa    
inc
mov
adc
stos
sub
jecxz
fnstenv
inc
sti    
pop
or
std    
nop
dec
sub
pushf  
insb
mov
fsubp
jp
push
lcall
aam
lret
xor
push
lret
call
dec
pop
and
lahf   
jge
inc
stos
outsb
sbb
call
clc    
es push
or
inc
sbb
fisttpl
mov
sub
aas    
movsl
push
ljmp
xor
xor
mov
or
pop
shll
in
cmp
mov
jne
std    
xchg
in
or
xor
mov
pop
cmp
sub
andl
sub
inc
xor
stos
cli    
popf   
je
int3   
cmpsb
(bad)  
jbe
repnz and
divb
imul
inc
lea
hlt    
mov
dec
loope
or
cmp
adc
pop
adc
xchg
rcrl
sub
int
inc
lahf   
mov
jnp
xchg
je
adc
movsb
or
jbe
movsb
push
mov
sbb
fldl
hlt    
mov
dec
loope
mov
mov
out
rcrl
sub
int
push
cmp
mov
push
insb
lret   
ja
pop
mov
cltd   
sbb
add
fdiv
push
int3   
repnz fcomps
dec
repz pop
push
stc    
xchg
dec
fcomps
dec
repz pop
push
stc    
mov
push
cwtl   
adc
adc
jbe
out
add
xor
and
inc
(bad)  
(bad)  
lods
pop
push
mov
imul
cmp
mov
imul
adc
lods
out
(bad)  
dec
xor
out
mov
xchg
wbinvd 
icebp  
inc
iret   
or
cmp
test
adcl
rcrl
sub
int
out
outsl
jge
daa    
daa    
pop
dec
or
icebp  
int
imul
xlat
iret   
adc
(bad)  
scas
out
pop
rorb
mov
inc
and
outsl
iret   
pop
iret   
outsl
jge
daa    
daa    
add
(bad)  
mov
ljmp
es and
inc
iret   
sbb
jmp
(bad)  
mov
xlat
inc
pop
test
loope
xor
dec
mov
and
mov
pop
push
jnp
mov
fcomps
lahf   
push
dec
jno
xor
or
push
dec
adc
adc
and
ds dec
out
dec
cwtl   
fmulp
push
adc
jmp
xchg
dec
mov
and
mov
pop
push
jnp
mov
fcomps
lahf   
push
push
lea
loope
or
aaa    
xchg
stos
mov
jbe
cld    
js
dec
out
dec
cwtl   
fimul
push
movsl
push
lret
xchg
out
fldenv
(bad)  
adc
push
dec
xchg
xor
jb
rorb
mov
jae
push
rorb
cwtl   
mov
imul
inc
jnp
xor
fwait
cwtl   
sysenter 
push
fbstp
rclb
jl
arpl
mov
push
call
mov
(bad)  
cmpsl
xor
(bad)
dec
jnp
mov
mov
add
scas
adc
repz icebp 
jne
test
sub
sbb
(bad)
(bad)  
jns
rorl
daa    
inc
mov
sub
cmp
test
inc
in
test
cwtl   
pop
add
adc
jge
iretw  
sbb
ds pop
out
rol
inc
(bad)  
cmp
xlat
cwtl   
movsb
rep movsb
incb
mov
into   
std    
mov
scas
dec
(bad)  
mov
mov
add
scas
fs ret 
arpl
jne
movsl
mov
sub
lret   
test
ljmp
add
mov
aaa    
rol
aam
cmc    
outsl
(bad)  
rcl
stc    
xchg
xor
add
or
xlat
xchg
mov
pop
jae
or
sub
arpl
test
mov
push
xor
scas
lea
dec
movsb
mov
push
adcl
imul
or
mov
rorl
jbe
sub
and
mov
push
pusha  
mov
jns
movsb
ljmp
mov
sub
pop
fdivl
lods
push
test
fwait
dec
mov
push
cmp
push
cmp
mov
fdivrl
pop
les
xor
cmpsl
inc
push
push
bt
addr16 nop
pop
mull
dec
stc    
jns
cmp
mov
mov
int
or
loop
pop
xchg
inc
bound
in
rcrl
ljmp
(bad)  
int
out
xchg
pop
sub
testb
push
xchg
jno
push
inc
in
jb
(bad)  
stc    
pusha  
bound
dec
pop
jns
mov
push
pop
shrb
(bad)  
mov
dec
and
jp
mov
mov
fisttpll
xchg
jge
insb
and
add
int
and
sub
and
cmpb
pop
in
inc
into   
pop
mov
(bad)  
mov
or
out
pop
lahf   
mov
sbb
cmpb
or
xchg
push
adc
xchg
inc
pop
and
jecxz
sub
mov
sbb
stos
iret   
pop
dec
or
adc
mov
scas
push
or
xor
mov
adcl
daa    
cmp
incl
in
lock lret 
cltd   
jg
xlat
jecxz
xor
pop
adc
cmp
fcoml
pop
and
push
xor
mov
push
xchg
sarb
testb
xchg
pop
mov
push
sub
dec
xor
jns
icebp  
cpuid  
(bad)  
fcomi
je
adc
or
push
aam
subl
push
in
shll
fdivr
mov
push
sbb
adcl
mov
outsl
fs mov
(bad)  
pop
sub
add
sbb
push
push
sub
addb
loopne
add
dec
bound
mov
dec
ljmp
(bad)  
int
xlat
sti    
in
ret    
xor
mov
ss std 
xchg
(bad)  
int
jnp
movsl
inc
xor
js
cmpsb
mov
negb
int3   
sbb
mov
push
pop
in
mov
xorl
pop
pop
lds
sub
fistpll
movsl
inc
push
fldl
loopne
imul
add
int3   
adc
shrb
inc
inc
dec
fstl
loope
xchg
add
push
xchg
mov
loop
lods
pop
jg
jl
cmpsb
in
mov
int
mov
das    
push
sbb
push
dec
aas    
xor
or
cli    
xlat
addl
stos
adc
aas    
loop
iret   
fcoml
fstpt
nop
dec
xchg
enter
hlt    
mov
movsl
adc
adc
adc
addr16 sub
jo
cmp
les
popf   
jnp
sub
lods
pusha  
sub
lahf   
add
ss scas
sbb
push
sub
das    
jae
mov
sbb
pusha  
sub
fwait
das    
cmp
mov
lret
mov
xor
aaa    
xor
xor
or
xchg
sbb
pop
sub
push
(bad)  {%k3}{z}
in
push
pop
movsl
inc
lret   
xchg
jo
ret    
es jecxz
bound
add
(bad)  
out
xlat
iret   
xor
jb
repnz fpatan 
(bad)  
cmp
fdiv
or
pop
mov
sbb
iret   
in
jmp
inc
lcall
jo
neg
lahf   
scas
(bad)  
les
mov
mov
and
into   
fisttpll
lea
outsb
jnp
lods
adc
jne
gs jo
(bad)  
jo
mov
gs jno
imul
xor
cmp
fnstenv
push
add
rorb
lea
sub
jns
mov
fsubrl
fdiv
mov
out
xlat
arpl
iret   
fdivr
xchg
es cmp
dec
pushf  
inc
or
and
lea
and
jmp
je
call
imul
fpatan 
(bad)  
aas    
mov
addr16 mov
or
add
popf   
out
push
cmp
ret
idivb
sar
sti    
pusha  
out
mull
pop
out
add
inc
(bad)  
jl
loopne
mov
adc
mov
push
iret   
pop
(bad)  
or
jns
xor
mov
pop
mov
iret   
fdiv
mov
out
xlat
iret   
fdiv
inc
mov
hlt    
mov
out
xlat
iret   
push
mov
xlat
inc
jp
out
out
enter
inc
je
lods
(bad)  
enter
popf   
dec
mov
out
das    
test
mov
mov
or
xlat
mov
stos
sub
cmp
repnz cmp
or
and
adcl
mov
push
popa   
or
and
inc
pop
push
ja
rcrb
notl
xor
pushf  
scas
push
jbe
and
inc
jne
jmp
dec
pop
xchg
adc
push
jecxz
arpl
loopne
lock mov
out
adc
call
imul
adc
xchg
shl
(bad)  
leave  
mov
arpl
and
(bad)  
or
ficompl
sub
jbe
dec
fidiv
mov
enter
fisub
hlt    
pusha  
(bad)
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
sbb
lret   
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
mov
cli    
(bad)  
out
mov
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
sub
push
stos
add
inc
in
imul
clc    
mov
cltd   
push
mov
out
mov
insb
cmp
std    
sbb
repnz lret
lahf   
xor
jnp
loope
adc
dec
mov
data16 mov
xchg
insl
test
outsl
cmpsb
push
xorl
and
inc
mov
icebp  
xor
out
repz mov
into   
mov
xchg
xchg
fnop   
push
out
ficom
cmp
cmp
inc
adc
fs ds mov
call
xor
repz jae
(bad)  
cmp
shll
jp
push
lock adc
clc    
sbb
cmp
mov
xor
daa    
arpl
sbb
lcall
or
mov
push
cmc    
sub
mov
stc    
cmp
fdiv
push
mov
push
cmpsl
sti    
out
xlat
iret   
fdiv
mov
mov
scas
lret   
xchg
dec
(bad)  
jl
xchg
cmp
or
test
cmp
dec
fs mov
dec
mov
test
inc
mov
push
out
outsb
test
xchg
jns
lods
jbe
add
xchg
lods
adc
jbe
jo
inc
insb
and
inc
insl
jno
sub
cmpl
mov
xor
jge
mov
mov
mov
push
xchg
xchg
and
push
sahf   
(bad)  {%k3}{z}
hlt    
add
mov
iret   
fdiv
mov
jmp
sbb
jbe
iret   
push
push
daa    
fmull
mov
enter
xchg
add
and
fild
cmp
or
(bad)  
lret
aas    
mov
pop
(bad)  
fild
cmp
or
inc
sbbb
aas    
jmp
add
scas
call
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
mov
mov
(bad)  
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
sbb
dec
pop
loop,pn
jb
pop
jle
mov
clc    
pop
lods
test
mov
movsl
ja
add
pop
repnz and
jb
insb
fadds
sub
das    
xchg
pusha  
stc    
inc
loopne
add
fwait
addr16 add
subl
(bad)  
scas
mov
stos
xchg
(bad)  
rcr
loopne
mov
fwait
shr
nop
andl
leave  
notl
and
loope
out
fwait
mov
negl
(bad)  
or
ficompl
fsubrs
inc
sub
lcall
or
je
lods
ret    
jne
dec
addr16 dec
mul
outsl
or
loop
xchg
les
adc
inc
sub
sti    
dec
(bad)  
mov
inc
mov
inc
jmp
add
repz pop
decb
mov
rcrb
jmp
hlt    
mov
pop
mov
sbb
and
xchg
add
cmp
dec
clc    
cmpb
add
das    
or
jo
push
lea
repz jg
in
inc
dec
into   
lods
jo
dec
inc
fisubl
call
gs jl
push
jbe
sub
mov
mov
adc
icebp  
mov
nop
stos
cli    
xchg
push
inc
inc
pop
jbe
mov
hlt    
add
add
adc
sti    
test
movsb
sti    
mov
or
sbb
xor
sub
or
cld    
pop
loope
push
jo
mov
lea
ret    
(bad)  
bnd je
push
dec
jecxz
insl
xchg
rcll
(bad)  
lret   
mov
jg
rolb
adc
int3   
leave  
mov
mov
cmp
push
sub
das    
xor
xor
push
test
xchg
and
inc
inc
cmp
out
ja
cld    
fs sub
je
xchg
daa    
arpl
je
(bad)  
lret
mov
out
inc
jbe
data16 fwait
mov
pop
aam
hlt    
popa   
test
add
push
sub
fs out
pop
aam
pusha  
sbb
les
push
sbb
sub
jmp
push
cs out
xchg
push
jb
shl
push
xor
ss popf 
lods
cmpsl
jge
js
or
iret   
adc
sbb
ja
arpl
push
sbb
call
xchg
lea
ret
jg
(bad)  
fcomi
inc
and
add
jns
pop
test
inc
(bad)  
call
into   
add
aaa    
mov
inc
sub
add
cmpsb
movsb
lea
mov
push
xchg
dec
loopne
xor
out
sahf   
roll
dec
or
mov
mov
(bad)
mov
aas    
pushf  
sbb
arpl
xor
cmp
mov
sbb
pop
inc
cmpsl
scas
adc
in
adc
bound
xor
fisubr
in
bound
test
ljmp
test
test
mov
xchg
test
imul
hlt    
sbb
inc
stos
(bad)  
jo
adc
enter
lea
daa    
dec
je
add
push
test
loope
pop
pusha  
imul
add
jnp
add
enter
xor
mov
jg
xchg
lahf   
jecxz
jnp
hlt    
aas    
pushf  
sbb
mov
test
nop
mov
aas    
adc
sub
cmc    
inc
sbb
scas
aam
enter
lcall
call
mov
add
cmpsb
mov
out
mov
cmc    
pusha  
icebp  
testl
xchg
insb
jle
jnp
fmulp
push
xor
dec
dec
in
(bad)  
or
lds
stc    
stc    
repnz adc
push
or
in
in
xchg
add
add
mov
dec
dec
xor
jecxz
sbbl
aad
xor
js
mov
adc
loop
psubd
or
jo
shl
push
pop
inc
in
jae
mov
xor
mov
js
(bad)  
into   
call
das    
or
popf   
iret   
test
iret   
pop
ffree
sbb
dec
icebp  
movsb
dec
mov
cmp
pop
fiadd
fistl
out
(bad)  
repnz adc
jmp
insb
mov
mov
stc    
repnz adc
or
jo
bound
push
test
(bad)  
js
cwtl   
(bad)  
stos
push
sarb
push
dec
push
cmp
popf   
inc
cwtl   
adc
push
mov
idivb
lgdtl
cmp
push
push
fucompp 
icebp  
nop
push
inc
inc
push
fisubr
out
sub
and
pop
mov
mov
adc
loop
psubd
or
jo
shl
push
xchg
jae
mov
fs jne
mov
or
hlt    
push
jnp
mov
daa    
pop
movsl
or
sub
jnp
(bad)  
sbb
cli    
jae
inc
xor
or
jnp
rorb
jle
sahf   
dec
js
mov
add
lods
(bad)  
sarb
(bad)  
xchg
out
push
inc
das    
or
jge
inc
fdivp
push
xor
lret
test
cli    
daa    
daa    
arpl
mov
push
pop
lea
cs and
push
cmp
into   
dec
cltd   
mov
dec
inc
and
xchg
mov
sbb
(bad)  
popf   
adc
arpl
sahf   
inc
adc
test
stos
out
mov
jae
(bad)  
jns
mov
ds ret
nop
inc
outsb
jmp
clc    
push
mov
or
mov
bound
push
hlt    
push
mov
add
(bad)  
and
and
fild
mov
lahf   
sbb
cmovs
pop
sub
jb
xchg
lea
or
cmp
mov
mov
js
scas
loopne
mov
push
insl
jns
pop
or
sub
inc
lahf   
ret    
lret   
jbe
subb
dec
sub
mov
sub
sbb
inc
xchg
lea
cwtl   
rcll
lret
sbb
jb
jne
sbb
xchg
setge
xlat
inc
or
bswap
inc
repnz sbb
lret   
in
insl
pop
fwait
mov
(bad)  
sbb
cli    
jae
and
jnp
rorb
adc
dec
xor
push
lds
inc
in
xchg
out
push
add
inc
test
(bad)  
inc
test
push
jecxz
mov
push
mov
clc    
xlat
jg
adc
mov
scas
test
mov
daa    
pop
movsl
or
mov
dec
xor
sub
xor
and
pop
sbb
jne
inc
faddl
or
lret
test
fiaddl
aad
adc
jb
mov
cmp
ret    
mov
in
popf   
cmpsl
jnp
jb
rcrb
rolb
mov
in
dec
mov
(bad)  
icebp  
or
fnsave
pop
mov
clc    
mov
sub
pop
mov
out
pop
aaa    
xor
jmp
pop
in
fisubrl
cmpsl
inc
xchg
xor
cmpl
sbb
jne
inc
faddl
or
lret
sbb
fiaddl
aad
adc
jb
mov
cmp
ret    
mov
aam
divl
shl
mov
icebp  
mov
stc    
mov
roll
aam
divl
shl
mov
icebp  
mov
nop
es sti 
pusha  
push
insl
(bad)  
mov
push
xor
cld    
inc
xchg
fdivrs
fsubr
and
ljmp
xor
or
fdiv
xlat
test
mov
inc
jl,pt
mov
shrl
xlat
iret   
push
mov
add
fdivs
cmp
sti    
push
pop
ss push
pop
push
xor
lea
xlat
cmpsl
jb
lods
jecxz
dec
(bad)  
jb
mov
sbb
shr
xor
fsubrl
jno
pop
aam
insb
hlt    
xchg
add
pushf  
xor
mov
in
or
mov
mov
adcb
pop
sub
xor
push
push
jnp
outsb
jmp
clc    
push
inc
in
sub
mov
into   
add
xlat
inc
sbb
mov
xchg
test
lods
outsb
fcoms
fsub
dec
jae
pop
xchg
mov
and
push
xlat
inc
dec
daa    
cmpsl
fmuls
dec
mov
mov
addr16 inc
hlt    
outsl
je
cmp
and
iret   
test
mov
inc
pop
in
in
test
mov
inc
pop
notl
push
test
mov
or
sub
sub
pop
cli    
enter
jno
stc    
jg
in
fnstcw
fsubrl
pusha  
adc
dec
xor
cmp
mov
mov
rcr
lret
sbb
ret
add
cmp
ret
cltd   
ljmp
lcall
mov
outsb
sbb
(bad)  
and
roll
jnp
rolb
aas    
mov
push
les
icebp  
mov
pop
aad
or
rolb
adc
cmp
repnz and
pop
mov
hlt    
xor
std    
(bad)  
mov
movsl
aas    
out
rclb
or
rcrb
jae
adc
and
adc
cli    
adc
in
xchg
sub
iret   
fwait
test
push
push
test
jne
(bad)  
jl
popa   
push
add
sbb
icebp  
push
cmc    
pusha  
icebp  
testl
in
clc    
push
int
sub
jg
sahf   
pop
and
sbb
cmp
out
insb
clc    
push
out
pop
out
jae
fwait
add
cmp
sbb
(bad)
out
dec
aaa    
sub
std    
xchg
add
jmp
popa   
sub
xchg
adc
xchg
adc
jl
xchg
jb
rcrb
das    
lret   
mov
shr
or
in
jle
xchg
into   
mov
cmc    
mov
pop
cmp
fwait
test
daa    
daa    
scas
xchg
hlt    
cwtl   
jno
xchg
ficompl
popf   
iret   
fwait
(bad)  
scas
or
jnp
sbb
jp
outsl
mov
icebp  
mov
nop
stos
mov
leave  
pop
push
mov
adc
jbe
sbb
js
or
std    
xchg
cld    
jle
inc
dec
sbb
add
xchg
adc
pushf  
fist
lea
shrb
int
and
nop
jno
push
ja
int
push
cmc    
pusha  
icebp  
call
cmp
in
clc    
sbb
mov
or
xchg
gs popa 
add
add
out
sub
js
shrb
mov
scas
clc    
lds
lret
notl
mov
push
lods
pop
out
(bad)  {%k3}{z}
cli    
cmp
sti    
push
jp
sti    
inc
push
mov
inc
push
fisubl
rol
push
mov
sub
fcompl
cs lret 
mov
or
int
lock sbbl
sahf   
dec
nop
jle
test
scas
fstpt
pop
mov
xor
vpsubq
push
insb
sbb
and
jnp
and
outsb
push
add
xchg
loop
pop
inc
jp
imul
add
jno
loope
stos
sbb
in
mov
jle
out
in
inc
fistpll
mov
movsb
fidiv
int
repz mov
pop
mov
ret
jg
lea
lahf   
or
sbb
add
das    
ficoml
(bad)  
loope
inc
mov
rcrl
das    
fiaddl
scas
stos
(bad)  
dec
xchg
inc
ss ss cmc 
jmp
jmp
shl
mov
add
pop
and
jno
and
insl
fucomi
dec
es xor
pop
mov
fnsave
imul
test
ret    
jle
cmp
ret
add
cmp
ret
cltd   
ljmp
lcall
mov
outsb
sbb
fucomp
and
adc
ja
(bad)  
addr16 xchg
ja
jbe
xchg
loop
lea
stos
mov
lahf   
lea
inc
popa   
xlat
shrb
js
lret   
dec
cmp
das    
ficoml
(bad)  
loope
dec
mov
rcrl
das    
fiaddl
scas
stos
(bad)  
dec
xchg
inc
ss ss cmc 
jmp
outsl
(bad)  
in
shl
pop
ds cltd 
and
insb
lret   
fwait
aad
in
negb
push
or
push
fnstcw
(bad)  
addr16 xchg
ja
jbe
xchg
loop
lea
inc
mov
jmp
jne
sbb
inc
jp
lret   
dec
add
das    
ficoml
(bad)  
loope
dec
mov
rcrl
das    
fiaddl
scas
stos
(bad)  
dec
xchg
inc
ss ss cmc 
jmp
push
fsub
outsb
shl
pop
xor
xchg
int
in
testb
push
jb
lret   
inc
jp
cmp
pop
mov
cmp
sti    
push
stos
cli    
cmp
mov
into   
iret   
pusha  
mov
lcall
mov
pop
loopne
in
jmp
or
mov
addl
mov
jmp
inc
cltd   
div
cli    
int
and
mov
mov
push
mov
jl
cmpl
jno
imul
push
scas
sti    
lahf   
jno
jb
mov
std    
xor
xlat
lret
inc
cmc    
pop
inc
xor
sub
cld    
xor
dec
push
(bad)  
fistpl
sahf   
das    
ljmp
jp
cmp
fwait
jb
stos
js
mov
mov
jbe
notb
loope
stos
ljmp
sub
mov
cmp
xchg
stc    
jns
xchg
mov
mov
data16 cmp
into   
lret
call
jmp
mov
dec
sbb
out
cli    
cmpsl
pop
sub
fdivr
adc
clc    
and
andb
in
pop
sbb
addr16 push
in
add
call
inc
xor
pop
push
push
in
cli    
jbe
and
aas    
add
or
lahf   
(bad)  
pop
rclb
test
outsb
data16 icebp 
sbb
fnstcw
adc
outsb
push
adc
push
dec
xor
cmp
mov
fdivs
mov
je
or
jnp
push
sub
addr16 iret 
mov
cs
pop
pusha  
sbb
(bad)  
jle
jo
mov
or
and
push
pop
cmc    
pop
cmpsb
mov
sub
ret
cld    
lods
loop
movsl
outsb
imul
sub
cmp
adc
out
ds in
push
xchg
sub
(bad)  {%k3}{z}
cli    
(bad)  {%k3}{z}
fdiv
and
adcl
in
inc
roll
mov
mov
push
(bad)  
lret
inc
test
push
pop
mov
sub
xor
cmp
xchg
xlat
(bad)  
mov
repnz aad
mov
call
mov
ja
lcall
dec
adc
repz sub
sbb
pop
ljmp
jnp
xchg
adc
fs add
dec
fistl
fcmovu
add
push
dec
push
bound
jmp
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
imul
xlat
(bad)  
insb
xchg
sbb
movzwl
push
jle
cli    
stc    
imul
and
mov
(bad)  
sub
sarb
push
inc
lods
stos
(bad)  
loopne
bound
push
adc
enter
xor
xchg
pop
cmp
or
jns
push
and
jp
ss push
xor
add
fdivl
(bad)  
cmc    
sbb
inc
jae
mov
fsubs
(bad)  
sbb
out
scas
push
dec
jecxz
inc
jae
dec
pushf  
out
xorl
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
faddl
stos
pushf  
das    
ja
hlt    
cmp
pop
fdivrs
adc
adc
xor
mov
dec
fs mov
dec
lcall
jl
ficoml
push
sbb
iret   
pop
pop
pop
aaa    
fisubl
out
push
rcr
mov
or
clc    
xchg
pop
rclb
enter
in
xor
loop
gs push
push
jbe
into   
and
push
xor
pushf  
call
or
(bad)  
stos
xlat
nop/reserved
sub
fldt
dec
push
jg
jg
out
clc    
stos
into   
(bad)  
out
inc
lds
inc
adc
iret   
popa   
hlt    
(bad)  
jb
or
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
add
(bad)  
xchg
jp
mov
adc
adc
xor
mov
dec
fs mov
dec
lcall
mov
adc
lcall
iret   
pop
pop
pop
aaa    
fisubl
out
sub
fnstsw
pop
or
aaa    
push
push
push
xchg
pop
rclb
enter
loop
dec
or
or
sub
xor
imul
cmp
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
dec
add
(bad)  
sbb
fdivl
adc
sbb
xor
mov
dec
fs mov
dec
lcall
mov
adc
lcall
iret   
pop
pop
pop
aaa    
fisubl
out
sub
fnstsw
pop
or
aaa    
push
push
push
xchg
pop
rclb
enter
loop
dec
or
or
sub
xor
imul
push
sbb
jmp
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
aaa    
pop
cwtl   
lods
inc
inc
out
andl
arpl
movzwl
push
jle
cli    
stc    
imul
and
mov
(bad)  
sub
sarb
push
pop
sbb
shll
push
(bad)  
dec
test
enter
xor
xchg
pop
cmp
or
jns
push
cmp
shl
pop
push
fmuls
loop
or
outsb
out
sbb
mov
je
loop
push
cmp
adc
mov
dec
push
fdivs
imul
mov
mov
ss push
and
xor
imul
ljmp
test
pop
insb
(bad)  
cmc    
cmp
into   
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
adc
mov
mov
sub
pop
jns
push
aam
jg
inc
out
enter
into   
lahf   
out
push
dec
sti    
and
lea
push
sbb
cmp
fsubrl
rorl
cmc    
mov
push
out
(bad)  
in
push
xor
(bad)  
push
lahf   
pcmpeqb
repnz adc
nop
bswap
jmp
dec
fdecstp 
arpl
out
mov
sub
adc
out
mov
rcrl
cmp
bswap
sub
and
push
mov
sti    
test
mov
out
xlat
iret   
fdiv
mov
out
xlat
inc
out
into   
mov
fdiv
mov
out
xlat
iret   
fcoml
xor
mov
xor
jb
or
mov
cmp
dec
fs mov
xlat
pushf  
lock cli 
fist
call
outsl
fnsave
push
sar
inc
or
ss pop
or
gs push
push
jbe
int
pop
js
movsl
jnp
out
cmpsl
call
sbb
push
push
jbe
int
pop
js
pop
ror
pop
jle
add
mov
je
dec
push
mov
pop
fdivrs
adc
mov
out
xlat
iret   
fdiv
mov
out
lahf   
sbb
out
xlat
iret   
fdiv
mov
out
xlat
iret   
jo
loop
mov
sti    
xchg
pop
jb
jg
not
lahf   
mov
mov
mov
cmp
pop
push
xchg
cmp
(bad)  
lods
and
ret
jno
or
and
hlt    
inc
mov
mov
mov
pop
inc
push
pop
jae
sbb
dec
rorb
cmp
je
mov
mov
push
aaa    
cld    
xor
popa   
jo
pop
stos
fistpll
xchg
sub
cli    
jecxz
(bad)  
fild
or
sbb
inc
cmc    
(bad)  
cmp
or
sti    
fistp
sbb
cmp
or
sbb
(bad)  
or
inc
inc
jg
clc    
shr
xor
ret
jmp
insb
(bad)  
cmc    
aaa    
push
mov
(bad)  
cmp
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcompl
imul
hlt    
mov
xor
jb
or
mov
cmp
dec
fs mov
(bad)
xor
aas    
and
sbb
dec
sbb
movsl
jb
adc
rcr
cmp
pop
adc
int
dec
(bad)  
je
movb
loope
idivb
cmpl
ljmp
test
loopne
mov
loope
jbe
ljmp
and
jecxz
repnz scas
pop
sbb
and
jmp
add
push
inc
mul
jae
adc
outsb
lret
out
lret   
cs scas
mov
rcll
sti    
xchg
xor
jecxz
ja
and
mov
adc
sbb
cmp
addr16 cltd 
mov
jp
cmp
jecxz
inc
jae
aas    
test
push
cmp
lret
sbb
sub
add
adc
out
jl
hlt    
or
fmull
fdivp
(bad)  
adc
fidiv
rolb
and
bound
dec
push
adc
push
jnp
inc
and
pop
lock cmp
sbb
mov
sbb
mov
aam
fdivr
mov
nop
not
lcall
outsl
fnstsw
mov
or
sub
add
roll
inc
adc
sub
clc    
push
sti    
or
rolb
xor
and
and
(bad)  
lret   
out
ja
sbb
bnd jmp
(bad)  
je
or
sbb
inc
inc
push
ret
cmp
push
adc
sub
mov
(bad)  
mov
out
aam
fs pop
fdivp
sub
test
hlt    
sbb
pop
xor
cmp
pop
ja
dec
(bad)  
jae
lds
inc
adc
testl
es jno
and
push
xor
(bad)  
mov
out
dec
fcmovne
nop
cmc    
out
lret   
mov
movhps
(bad)  
xchg
ss push
leave  
nop
cmc    
sub
xchg
mov
lret   
es jno
(bad)  
xlat
sub
mov
inc
inc
inc
(bad)  {%k3}{z}
hlt    
enter
xor
dec
and
(bad)  
jne
call
fdiv
mov
sbb
fisttpl
xlat
fildl
sbbl
dec
jno
in
mov
and
jl
or
sbb
int
rcll
cmp
(bad)  
jne
call
(bad)  
(bad)  
mov
cmp
rorb
enter
sub
bound
add
adc
insl
mov
inc
inc
inc
(bad)  {%k3}{z}
hlt    
fsubr
lock lock xor
dec
push
add
ja
fwait
mov
inc
pop
xchg
jecxz
inc
jae
push
push
gs daa 
(bad)  
lret   
jg
and
sub
mov
sub
adc
mov
out
xlat
iret   
fdiv
mov
out
iret   
roll
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sub
xchg
adc
out
(bad)  
push
sahf   
arpl
rcrb
push
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
sbb
(bad)  
mov
movsl
pop
stos
inc
hlt    
sub
test
jle
int
idivb
in
adc
insb
sub
or
hlt    
ficompl
push
testl
jae
jl
and
cmp
mov
push
inc
inc
adc
iret   
dec
xlat
ret    
stos
jecxz
les
or
cmc    
mov
out
xlat
iret   
fdiv
mov
out
xlat
rclb
or
gs push
jg
jle
rorb
loopne
mov
lahf   
and
(bad)  
mov
in
xlat
enter
(bad)  
out
(bad)  
leave  
lds
popa   
adc
push
inc
push
or
cld    
test
adc
mov
call
mov
out
ror
fnstenv
push
xor
xlat
mov
in
pushf  
sahf   
dec
push
jnp
cmp
hlt    
mov
out
xlat
into   
sar
lcall
cmp
ss es push
rcl
dec
bound
sub
dec
adc
sub
xlat
iret   
mov
jp
ficom
dec
cmp
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubrl
mov
jmp
fdiv
mov
out
xlat
iret   
fdiv
mov
pop
mov
xor
stos
(bad)  
into   
jp
inc
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
test
push
(bad)  
dec
rorb
(bad)  
int3   
mov
push
and
test
cs shl
and
pop
cmp
push
jg
mov
out
loop
jb
cs inc
sbb
sub
out
jno
mov
scas
lret   
add
pop
insb
loop
fwait
arpl
out
in
dec
(bad)  
jno
cmp
xlat
iret   
fdiv
mov
jmp
(bad)  
data16 rolb
xor
div
rcrl
add
and
xlat
enter
(bad)  
out
ror
fcomip
mov
call
lds
movsl
sbb
in
xchg
enter
or
ljmp
call
in
dec
add
ss sbb
cli    
mov
pop
loope
out
aam
(bad)  
repnz test
out
ror
fdiv
test
and
fild
jg
and
call
iret   
fdiv
mov
out
xlat
iret   
fsubl
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
pop
cmpsl
out
xor
stos
(bad)  
ficompl
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
test
push
(bad)  
dec
rorb
(bad)  
int3   
mov
push
and
test
cs shl
and
jae
adc
out
adc
in
sbbl
mov
loopne
ss scas
lret   
add
pop
insb
loop
fwait
arpl
out
in
dec
(bad)  
jno
cmp
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivr
(bad)  
data16 rolb
xor
div
rcrl
add
and
xlat
enter
(bad)  
out
xlat
iret   
fdiv
mov
call
lds
movsl
sbb
in
xchg
enter
or
ljmp
call
in
dec
add
ss sbb
cli    
mov
pop
loope
out
aam
(bad)  
repnz test
out
xlat
iret   
fdiv
test
and
fild
jg
and
mov
cmpsl
xchg
xor
push
sbb
sub
lock cs out
scas
ds dec
decl
dec
add
outsl
dec
cmp
insl
dec
xchg
into   
and
orl
mov
mov
inc
ja
out
xor
add
inc
push
or
ljmp
pop
cmp
cmc    
cmc    
out
pusha  
addr16 push
in
pop
aas    
lfs
aas    
psrad
adc
insb
adc
xor
mov
int3   
cmp
push
stc    
test
sub
mov
pop
js
in
mov
ret    
je
jno
ds popf 
sub
xor
cmp
push
xor
clc    
push
xor
dec
test
add
mov
pop
lds
jbe
in
ror
push
mov
adc
and
sbb
push
lock daa 
push
daa    
test
push
add
mov
(bad)  
sbb
adc
js
jmp
adc
mov
scas
cmp
or
popa   
mov
cmp
ljmp
xchg
xor
push
sub
xlat
or
adc
xor
(bad)  
or
pop
jb
jno
shr
out
or
push
in
pop
aas    
lfs
pop
outsb
pop
fs aas 
js
dec
ja
sub
push
adc
push
in
pop
aas    
movzwl
stos
add
push
int
roll
inc
adc
xchg
and
sub
sub
in
mov
aam
neg
mov
sbb
out
pop
xor
es push
push
jnp
lock movsl
hlt    
(bad)  
xor
icebp  
mull
mov
rolb
fsub
jmp
push
cld    
pop
jnp
adc
jae
sub
insl
sub
cltd   
shrb
cmpsl
out
dec
jg
adc
out
dec
jg
jno
push
xor
pop
push
jle
leave  
imul
addr16 ljmp
pop
inc
add
sub
lock xor
decl
dec
add
outsl
dec
cmp
insl
dec
xchg
int
sbbb
stos
and
hlt    
adc
out
hlt    
andb
mov
out
dec
and
jnp
cmp
and
add
scas
cmp
or
popa   
mov
cmp
jp
push
inc
shlb
sarl
cmp
mov
add
fs aas 
js
dec
ja
xor
or
pop
lds
jbe
in
int
popf   
sub
and
jno
lods
es jno
and
push
xor
bound
sub
inc
inc
ret    
add
leave  
(bad)  
sbb
in
pop
xor
es push
sbb
imul
stos
jmp
cmp
jp
loop
xor
repnz decb
lea
dec
cmp
das    
out
test
dec
add
outsl
dec
cmp
insl
dec
ljmp
push
call
sub
(bad)  
(bad)  
out
or
push
in
pop
aas    
lfs
pop
outsb
pop
fs aas 
js
dec
ja
and
in
sbb
imul
jle
xor
push
in
outsb
shlb
adc
sub
or
and
add
scas
cmp
or
popa   
mov
cmp
rcrb
pop
sub
jae
scas
sarl
cmp
mov
add
fs aas 
js
dec
ja
xor
or
pop
lds
jbe
in
(bad)  
sbb
(bad)
ljmp
mov
shlb
test
aas    
shrb
xor
mov
mov
add
fsts
sbb
scas
sarl
cmp
xchg
and
mov
lock mov
fldt
dec
push
(bad)  
(bad)  
out
or
push
in
pop
aas    
lfs
pop
outsb
pop
fs aas 
js
dec
ja
and
inc
imul
push
pop
imul
jle
xor
sub
stos
xor
jmp
jbe
es push
in
ljmp
ret    
je
jno
ds popf 
sub
xor
cmp
sbb
xlat
pop
dec
dec
jnp
add
lret   
sub
and
push
jmp
fmull
jns
xor
add
jbe
gs adc
cmp
cmc    
icebp  
loopne
pop
jno
aam
test
ss push
ds in
ss aas 
or
cmp
scas
in
inc
adc
dec
loope
mov
test
add
or
fstpt
sbb
test
push
mov
divb
xchg
jmp
and
sub
lock das 
out
test
dec
add
outsl
dec
cmp
insl
dec
ljmp
js
sub
movsb
jmp
xor
ja
push
sub
cmp
pop
xchg
add
or
fdivl
aaa    
mov
inc
inc
ret    
add
leave  
(bad)  
sbb
push
xchg
cmp
mov
xor
(bad)  
sub
mov
sub
cmc    
mov
xor
mov
mov
adc
scas
sarl
cmp
sbb
and
xor
imul
nopl
sarl
cmp
mov
(bad)  
sbb
(bad)  
nop
push
cmpsb
add
fisttpl
pop
sbb
dec
cmp
in
aaa    
lods
sub
lock cs out
scas
ds dec
decl
dec
add
outsl
dec
cmp
insl
dec
ljmp
mov
ja
xor
dec
mov
jae
out
iret   
shrb
add
jnp
add
xchg
adc
es jge
aad
add
xchg
pop
push
aam
int
data16 movsb
shrb
gs gs icebp 
and
jge
int
jmp
out
inc
ret    
add
leave  
(bad)  
sbb
push
xchg
cmp
hlt    
mov
out
xlat
iret   
fdiv
mov
lret   
imul
cmp
and
jae
cs out
mov
pop
js
in
mov
ret    
je
jno
ds popf 
sub
xor
cmp
adc
push
jecxz
dec
imul
pop
cmp
mul
(bad)  
scas
add
sahf   
iret   
and
adc
pop
dec
jbe
in
int3   
xor
adc
or
sbb
loop
fstpt
sbb
out
pop
sbb
lret
out
hlt    
jo
mov
mov
jmp
imul
hlt    
stc    
xor
mov
mov
add
fsts
sbb
scas
sarl
cmp
mov
jae
jl
fild
aas    
js
dec
ja
sub
dec
rcl
negl
cmp
mov
outsb
xchg
call
jbe
jns
test
je
or
xor
sbb
dec
fildl
rcl
dec
pop
pop
jmp
fs aas 
js
dec
ja
and
fsubl
push
sbb
imul
jle
daa    
push
das    
mov
mov
iret   
sbb
mov
cwtl   
adc
pop
lds
(bad)  
out
jmp
push
cld    
pop
jnp
adc
jae
cmp
push
jne
pop
stos
(bad)  
push
jne
cmp
das    
inc
lock ret 
in
insl
loopne
(bad)  {%k3}{z}
fisttpll
pop
pop
lds
jbe
sbb
rcll
int
data16 movsb
shrb
gs gs icebp 
and
jne
insl
push
or
jno
ret    
add
leave  
(bad)  
sbb
and
push
xor
es push
xlat
iret   
fdiv
mov
push
sbb
ljmp
lds
pop
icebp  
add
push
lret   
mov
imul
jg
mov
in
mov
ret    
je
jno
ds popf 
sub
xor
cmp
push
xor
clc    
push
xor
dec
test
add
test
flds
adc
mov
fsubrs
negl
dec
pop
les
push
push
out
add
leave  
sbb
loop
pop
xor
iret   
faddl
sbb
mov
or
xor
lock
jbe
xor
ljmp
ret    
je
jno
ds popf 
sub
xor
cmp
push
xor
xor
push
cmp
mov
(bad)  
cmc    
gs int3 
dec
dec
jg
fisubl
add
xor
xor
(bad)  
out
xlat
(bad)  
cmp
dec
(bad)  
sti    
inc
jo
cmp
iret   
fdiv
mov
inc
push
xor
iret   
fdiv
mov
out
add
jg
adc
in
pop
lret
add
out
test
out
enter
sbb
dec
sti    
and
lea
mov
paddsw
pop
sub
arpl
leave  
push
std    
xlat
call
sub
dec
dec
push
outsl
inc
bound
push
outsb
push
dec
inc
je
inc
adc
xchg
cmp
out
push
dec
sub
in
push
lret   
mov
imul
lahf   
cmc    
mov
sub
pop
inc
sahf   
daa    
das    
shrb
aaa    
stos
cmpsb
jp
lods
sbb
(bad)  
cs inc
add
cld    
xchg
or
js
imul
test
and
(bad)
(bad)  
xchg
lds
mov
adc
add
pop
adc
sbb
mov
fdivp
test
add
cmp
pop
out
add
ds lret
dec
and
fucom
mov
stc    
mov
imulb
mov
ds inc
mov
mov
inc
leave  
xlat
les
hlt    
sub
push
(bad)  
and
insl
das    
dec
dec
dec
jp
jbe
xor
adc
insl
jp
push
smsw
inc
jnp
xor
jg
cmp
push
or
jo
inc
outsl
push
sbb
cmp
push
sub
add
inc
xorps
add
adc
jno
sbb
inc
or
jl
or
ja
sbb
aas    
ja
jb
popa   
cmp
das    
or
sub
jge
into   
sbb
in
roll
adc
mov
push
imul
(bad)  {%k3}{z}
leave  
movsl
push
sbb
inc
xchg
lods
ja
adc
sub
into   
cmpsb
sbb
push
push
jns
sar
sbb
int
add
adc
dec
jbe
cs inc
(bad)  
fisubl
std    
push
mov
or
mov
insb
out
imul
xchg
aad
and
gs xor
ret
imul
scas
and
dec
sub
inc
sbb
sarb
arpl
(bad)  
scas
add
jmp
bound
movsl
jb
push
or
mov
adc
pop
dec
push
pop
sbb
outsb
push
mov
add
sbb
jmp
shrl
mov
insl
push
xchg
add
inc
roll
lea
mov
push
xchg
ljmp
cmp
and
ror
adc
lods
rorl
psllw
mov
lcall
call
mov
insl
stos
mov
addr16 mov
push
push
push
sti    
mov
pop
cmp
push
stc    
pop
and
sbb
iret   
inc
xchg
loop
popa   
out
shrl
jbe
mov
stos
outsl
and
sub
push
jnp
sbb
xor
pop
mov
or
dec
fcmovu
sbb
jecxz
shll
sbb
push
push
jbe
(bad)
icebp  
(bad)  
(bad)  
call
inc
rcll
enter
iret   
fdiv
or
outsb
xlat
iret   
fdivp
mov
lcall
pop
negb
pop
in
push
push
jl
nop
rolb
cli    
out
aam
fdiv
mov
push
iret   
pop
testl
jle,pt
jle
ja
xchg
lods
cmp
or
cmc    
mov
out
xlat
dec
fdivl
repnz das 
repnz sub
cmp
push
inc
pop
inc
fs repnz dec
(bad)  
mov
cmp
je
inc
out
push
int3   
pop
(bad)  
jecxz
imul
push
cmp
ljmp
push
iret   
pop
hlt    
or
jb
pop
iret   
and
adc
aas    
ljmp
out
aam
fdiv
mov
push
iret   
fdivr
test
jnp
lcall
dec
out
jae
mov
iret   
fdivl
out
push
(bad)  
dec
loopne
push
in
add
xchg
in
sub
out
pop
cwtl   
sbb
dec
gs
enter
(bad)  
outsb
(bad)  
dec
(bad)  
mov
out
(bad)  
enter
push
arpl
push
pop
xor
(bad)  
mov
outsb
xlat
dec
fdivl
jmp
sbb
adc
mov
(bad)  
or
jb
mov
outsb
xor
iret   
pop
hlt    
or
out
test
ror
adc
cld    
mov
push
pop
cmp
imulb
or
sti    
out
aam
fdiv
mov
push
iret   
pop
loopne
rol
les
add
adc
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
pop
xchg
cmp
sbb
fucomi
stos
push
lock scas
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
or
inc
ja
mov
xor
inc
addr16 jmp
or
jg
mov
(bad)  
xor
pop
and
add
push
roll
fwait
iret   
aam
adc
aad
or
ja
jg
mov
shl
ficom
xor
xlat
mov
sarl
cmp
jmp
and
pop
and
aaa    
in
pushf  
sbb
rclb
push
lock sbb
scas
mov
cwtl   
fidiv
bound
sti    
xor
xor
inc
dec
ret
sti    
jle
mov
adc
lds
inc
adc
mov
sub
cmpsl
jp
cmp
stc    
aaa    
sub
jmp
sbb
cmp
or
mov
jp
loope
xorl
rorl
aad
sub
ja
cwtl   
add
aaa    
sbb
xor
pop
mov
mov
(bad)  
call
jnp
inc
repz push
pop
and
loop
insb
mov
mov
inc
dec
arpl
cmpb
push
pop
ret
popa   
icebp  
sub
aam
dec
decl
dec
add
pop
mov
xor
sbb
inc
mov
jmp
xor
aas    
lret
scas
sbb
push
push
jbe
ds pop
in
jae
popa   
fistpl
xor
add
xchg
add
add
shlb
(bad)  
mov
adc
aas    
adc
fstpt
adc
sarb
fwait
sub
cmp
sub
add
mov
push
inc
inc
adc
xor
pop
andl
jmp
xor
jne
insl
and
xor
jle
in
pop
aas    
movzwl
jb
cltd   
adc
outsb
xchg
call
jne
jns
test
je
or
xor
sbb
jecxz
leave  
rorl
pop
jmp
fs aas 
js
dec
ja
sub
je
jno
pop
aam
dec
out
xchg
sti    
and
(bad)  
je
mov
adc
mov
sbb
leave  
jno
ljmp
mov
and
add
xor
daa    
push
daa    
fstpt
sbb
out
xlat
iret   
fdiv
mov
jle
pushl
into   
(bad)  
out
xlat
iret   
fdiv
mov
lods
out
cmp
or
xlat
iret   
fdiv
mov
out
pop
test
and
dec
dec
cmp
out
lret   
xor
add
out
test
out
enter
mov
dec
sti    
and
lea
jge
fdivp
loope
jle
inc
sub
arpl
(bad)  
out
jae
ds push
imul
outsl
inc
bound
push
outsb
push
dec
inc
je
inc
adc
fucomp
ja
nop
xchg
fmull
(bad)  
jb
push
jae
out
sub
inc
in
les
(bad)  
enter
inc
sahf   
daa    
das    
shrb
aaa    
stos
cmpsb
jp
lods
sbb
(bad)  
cs inc
add
cld    
xchg
or
js
mov
mov
mov
jecxz
jg
stc    
xchg
dec
(bad)  
xchg
lds
sbb
mov
fwait
xchg
mov
popf   
add
mov
add
mov
cld    
das    
(bad)  
pushf  
int
imul
xor
adc
repnz lds
push
push
fdivs
lret
ret    
int
popf   
fs mov
xor
or
stos
cmpsb
mov
add
(bad)  
fdiv
mov
call
enter
enter
or
add
int
pop
imul
lock cld 
cmc    
lret   
not
mov
sub
aas    
test
ljmp
in
(bad)  
repz
cmc    
test
xchg
movsb
int
shr
pushf  
adc
(bad)  
xor
mov
xchg
mov
mov
ficom
cwtl   
lret   
mov
(bad)  
hlt    
mov
mov
inc
insl
push
inc
dec
(bad)  
dec
push
dec
dec
insb
and
gs das 
add
cmp
and
cmp
pop
jo
sbb
getsec 
sub
push
or
jp
jbe
dec
inc
mov
dec
ja
xor
sbb
cmp
push
dec
push
jo
inc
outsl
push
fisubl
lods
mov
add
aas    
rcl
mov
fdivl
les
dec
push
les
(bad)  
xlat
and
popf   
inc
pop
call
fs leave 
mov
mov
cli    
pop
dec
and
cmpsb
xchg
rcl
outsb
pop
adc
out
maxps
mov
les
pop
lea
xchg
cmpsb
mov
dec
jnp
aaa    
dec
xchg
addl
xor
cmpsb
insl
icebp  
or
mov
xor
popa   
xchg
fstl
test
pushf  
pop
cmpsl
lahf   
cwtl   
(bad)  
rorl
(bad)  
lret
mov
adc
jl
jge
stos
jno
in
cmpsb
addr16 int3 
cmpsl
mov
data16 ja
adcl
hlt    
jmp
dec
mov
aas    
push
call
push
xor
sbb
and
ret
jbe
mov
rorl
sbb
push
xchg
stc    
das    
enter
mov
int
inc
mov
push
mov
outsl
test
dec
subb
lock jns
into   
jns
das    
mov
push
into   
push
push
cmp
lods
jb
(bad)  
mov
mov
(bad)  
(bad)  
repnz mov
negl
fdivrl
rorl
fsts
jl
jge
mov
(bad)  
iret   
das    
shll
add
mov
dec
mov
sub
xlat
(bad)
jb
sbb
mov
daa    
jmp
sahf   
pop
les
subl
mov
pushf  
mov
push
shlb
divb
cmp
fist
dec
popa   
xchg
mov
gs out
pop
ret
lds
loop
loopne
(bad)  
mov
(bad)  
xlat
repz
aam
push
lret
xchg
scas
and
mov
jmp
xor
fcomi
sub
mov
rclb
pop
scas
and
pop
and
add
or
push
mov
stos
push
sti    
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
(bad)  {%k3}{z}
fidivrl
cmp
fdiv
and
clc    
push
inc
rcl
das    
adc
leave  
cmp
(bad)  
pop
add
lcall
jo
neg
lahf   
and
inc
pusha  
nop
mov
mov
and
mov
mov
jg
shrd
lods
push
aad
cmp
mov
mov
pop
lea
jno
imul
xor
cmp
cs xchg
stc    
(bad)  
movsl
lret
es loope
mov
in
push
les
insb
popf   
pop
mov
imull
aaa    
repnz pushl
xor
lret   
(bad)  
daa    
jl
scas
das    
ret    
inc
dec
add
sbb
sub
jae
inc
push
fldcw
mov
js
mov
mov
xor
icebp  
clc    
xlat
ret    
xchg
(bad)  
std    
mov
cli    
dec
fisttp
outsl
sub
jns
lock
jb
sbb
out
cltd   
std    
jl
mov
inc
hlt    
lds
add
push
fsubrs
mov
shrb
dec
adc
lds
ficompl
inc
mov
scas
popf   
or
inc
imulb
xlat
lret   
shrb
dec
jecxz
dec
outsb
jb
mov
jns
hlt    
mov
and
or
fstpt
jns
insb
or
xor
stos
add
out
mov
sbb
inc
inc
testb
or
adc
in
fdiv
mov
out
xlat
iret   
fdiv
mov
es or
sub
mov
out
xlat
iret   
fdiv
mov
addl
add
lcall
jo
neg
lahf   
and
inc
pusha  
nop
mov
mov
and
mov
mov
jg
shrd
lods
push
aad
cmp
mov
mov
pop
lea
jno
imul
xor
cmp
ret
(bad)  
movsl
lret
es loope
mov
in
push
les
insb
popf   
pop
mov
imull
aaa    
repnz pushl
xor
lret   
(bad)  
daa    
jl
scas
das    
ret    
inc
dec
add
sbb
sub
jae
inc
push
fldcw
mov
js
mov
mov
xor
icebp  
clc    
xlat
ret    
xchg
(bad)  
std    
mov
cli    
dec
fisttp
outsl
sub
jns
xor
push
in
sbb
out
cltd   
std    
jl
mov
inc
hlt    
lds
add
push
fsubrs
mov
shrb
dec
adc
lds
ficompl
inc
mov
scas
popf   
or
inc
imulb
pusha  
pop
(bad)
or
loope
mov
popf   
stos
and
into   
int3   
rcl
mov
sbb
scas
bound
mov
dec
push
rcr
and
cmpsb
xchg
in
cmp
add
jne
aaa    
cmpsl
and
ljmp
xchg
fisubl
dec
add
rcll
cmpsl
cmp
inc
fmul
repz mov
push
inc
inc
adc
iret   
jg
push
imul
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
je
cmp
or
xchg
fdivl
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
push
mov
mov
sub
sub
(bad)  
mov
inc
fbstp
insb
push
cs add
stc    
mov
pop
(bad)  
sub
fsubrs
jmp
mov
adcl
loop
push
xor
push
cltd   
(bad)  
(bad)  
push
sbb
and
icebp  
jne
mov
jecxz
add
movsl
jmp
pushf  
nop
push
jg
inc
cmp
or
dec
test
mov
cmp
ljmp
xchg
push
inc
ja
jle
pop
push
or
sub
jl
call
inc
cmp
out
or
outsl
mov
cmc    
sub
cli    
iret   
(bad)  
scas
and
mov
sbb
loopne
sub
cmpsb
daa    
insb
push
cli    
aaa    
push
or
pop
mov
(bad)  
sbb
push
fcmovb
sahf   
ret    
pop
adc
mov
adc
enter
js
xchg
dec
pop
imul
add
bswap
fdiv
mov
addr16 xchg
imulb
fldt
cmp
adc
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
sbb
out
xchg
pop
in
insl
dec
loop
mov
xbegin
xchg
es aaa 
mov
adc
mov
in
mov
mov
xlat
idivl
ljmp
mov
std    
or
push
rol
inc
xor
orb
jae
roll
rcl
std    
incb
loop
add
dec
dec
aas    
cmp
and
xchg
push
cmpsl
sti    
sub
mov
pop
push
jbe
push
ss cli 
cld    
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
addr16 pop
loop
lret   
mov
iret   
pushf  
add
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
jle
lcall
or
cmp
lds
stos
sbb
in
ret
add
sub
int3   
movsl
popa   
std    
cmp
mov
add
outsl
mov
(bad)  
scas
aam
inc
dec
imul
pop
das    
and
push
imul
jns
ss sti 
insb
out
pop
inc
fstpl
lea
mov
jl
in
int3   
and
or
push
stc    
pop
lods
dec
imul
mov
jns
mov
push
enter
pop
inc
mov
sarl
adc
sub
xchg
pop
pop
out
stc    
pop
das    
idivb
adc
xor
in
test
fwait
icebp  
das    
out
out
sahf   
rcl
dec
iret   
daa    
fnsave
sarl
cmpsl
jno
aam
and
jno
sbb
out
fwait
inc
gs pop
sub
ss inc
jecxz
mov
icebp  
das    
out
add
mov
icebp  
sbb
fbstp
push
lahf   
or
ret    
loopne
inc
cwtl   
xchg
fldt
(bad)  
popa   
sub
daa    
mov
sti    
inc
cmc    
sub
sbb
fdiv
popf   
sub
mov
jge
int3   
lods
mov
mov
xor
pop
jno
jmp
ds sub
mov
int
adc
inc
mull
leave  
push
(bad)  
jp
add
inc
xchg
inc
in
cmpsl
jl
mov
push
arpl
lahf   
sarb
aaa    
shr
mov
scas
mov
rcl
dec
int3   
or
(bad)  
sub
mov
shlb
into   
popf   
cli    
shrl
and
mov
add
xchg
adc
push
ss inc
jecxz
mov
or
cmpl
ljmp
out
push
or
adc
push
or
test
fcom
and
dec
mov
mov
dec
cmpl
rorb
test
stos
or
xlat
dec
in
addr16 jmp
or
lahf   
sarb
lds
jle
xchg
xchg
nop
xor
mov
and
mov
lock cmp
and
sub
lea
outsb
or
pop
enter
iret   
std    
mov
pushf  
into   
xchg
jle,pn
xor
(bad)
fcoml
lock
hlt    
jmp
adc
mov
sub
dec
stc    
mov
pmulhw
mov
scas
xor
or
in
xlat
mov
scas
shll
xchg
sahf   
or
arpl
icebp  
fcoml
rorb
in
adc
gs cli 
pop
and
jp
in
iret   
xor
scas
pusha  
aad
out
jl
and
imul
push
add
lcall
fwait
sub
and
iret   
out
lock lahf 
insb
adc
mov
hlt    
mov
aaa    
mov
mov
pmulhw
sub
or
mov
adc
mov
pushf  
ret
jg
leave  
aam
cmpsl
sahf   
jnp
adc
aad
stos
sub
ret    
jmp
dec
jecxz
(bad)  
pmulhw
(bad)  
adc
mov
fdiv
popf   
cmp
sub
pushf  
ret
jae
aaa    
lcall
iret   
fcoml
mov
jmp
push
add
iret   
mov
jp
pop
(bad)  
repnz fcoml
rcl
out
or
loope
jno
mov
in
fmul
xor
jnp,pt
sub
jl
and
addr16 mov
or
mov
xlat
iret   
mov
jp
arpl
icebp  
fcoml
shl
mov
outsb
pop
or
xor
sbb
or
icebp  
aad
xor
int3   
xchg
jnp
adc
aad
mov
sbb
add
mov
(bad)  
lock fcoml
rorb
in
adc
fcmovbe
pop
and
jp
icebp  
aad
xor
xor
addr16 call
lds
mov
pusha  
out
icebp  
mov
jge
mov
out
jne
sub
and
mov
mov
jl
lret   
mov
xchg
jge
or
mov
or
jp
idivl
jp
test
dec
enter
bound
xchg
mov
or
out
xlat
fldt
mov
nop
stos
cli    
cmp
(bad)  
xchg
xchg
sub
xchg
jge
out
mov
xchg
dec
imul
push
or
mov
xor
orb
scas
xor
stos
and
xchg
andb
push
lahf   
push
sub
dec
cmc    
mov
sbb
sub
(bad)  
jle
test
mov
pop
pushfw 
fwait
and
imul
pop
lret   
ss in
xchg
std    
orl
aas    
mov
dec
lret   
mov
xor
in
or
fldcw
or
jle
repz xor
stc    
mov
aam
fmull
test
daa    
inc
call
(bad)  
mov
ljmp
sub
adc
inc
cli    
adc
movsl
scas
rcrl
std    
js
aam
push
ljmp
test
dec
pop
fstpt
andl
in
cmp
(bad)  
rcrb
cli    
adc
addr16 data16 jg
outsl
jnp
adc
(bad)  
xor
add
inc
cltd   
add
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivr
gs xchg
sbb
in
hlt    
mov
xor
jb
or
mov
cmp
dec
fs mov
das    
sub
(bad)  
shll
adcl
out
cmp
ss stos
sub
jb
sti    
push
stos
mov
fmuls
pusha  
test
sbb
lret
lods
ss sbb
sub
dec
or
fs add
andb
and
mov
jecxz
leave  
adc
pop
ret
pop
push
fdivl
sub
or
repnz dec
adc
or
push
cli    
xor
cmp
sub
push
jmp
arpl
fsts
mov
xchg
data16 xlat
test
mov
lods
cld    
cwtl   
rclb
lds
aaa    
(bad)  
shr
(bad)  
jae
push
daa    
repz dec
pusha  
push
mov
in
(bad)  
sub
sub
mov
mov
fcmovnu
leave  
loope
(bad)  
jns
jge
stc    
xor
adc
out
and
sub
imul
mov
jnp
xlat
cmpsb
or
bound
rolb
loopne
xchg
mov
in
sarb
fcmovnbe
test
cmc    
addr16 lret
dec
jo
cld    
adc
push
in
loope
not
cmpsl
add
shlb
outsb
pop
fcomps
loopne
xchg
mov
push
and
xchg
rolb
repnz test
cmp
jp
addr16 adc
sbb
ljmp
stc    
xor
jno
jbe
data16 mov
inc
iret   
and
add
mov
ljmp
add
fdivr
es xor
pop
and
xor
sbb
lock jbe
lea
(bad)  
lea
ret
jmp
mov
mov
(bad)  
lods
mov
xchg
mov
xorl
push
ljmp
cmc    
mov
pop
out
dec
aas    
loopne
cld    
sarl
cmpb
fdivrp
scas
rcr
xchg
mov
sti    
cli    
fimul
int3   
ljmp
and
mov
push
leave  
divl
xor
aam
aas    
add
adc
push
inc
mov
mov
dec
xchg
xchg
(bad)  
aaa    
xchg
jp
push
fnsave
cltd   
pop
aad
adc
fwait
loopne
mov
aas    
mov
xchg
sub
lahf   
rolb
mov
js
hlt    
(bad)  {%k7}
pop
lahf   
push
fcompl
jae
or
sub
in
cmp
in
sbb
outsb
orl
loope
out
stos
mov
iret   
jecxz
fs mov
jbe
(bad)  
es jnp
out
mov
out
sub
ret    
dec
fstl
pop
mov
dec
push
mov
int3   
lret
xchg
mov
lahf   
cmp
cmpsl
add
iret   
out
push
and
int3   
adc
xchg
mov
cmpsl
cmpsb
neg
sub
ret
in
lahf   
test
sbb
jb
or
sbb
decb
jnp
sbb
ret
mov
xor
loopne
mov
xchg
jo
icebp  
mov
push
sahf   
rolb
dec
adc
dec
clc    
mov
xchg
std    
xchg
xor
jae
add
mov
fist
xlat
fist
psrad
push
repnz stos
repz inc
sti    
or
xor
or
pop
sbb
jg
(bad)  
jle
xchg
leave  
rcrb
test
mov
jno,pt
mov
les
sbb
fsubp
(bad)  {%k7}
hlt    
jae
sub
jl
popa   
in
or
fiadd
loopne
iret   
inc
jns
out
hlt    
roll
mov
insl
fwait
mov
and
fwait
ljmp
pop
dec
add
pop
adc
rol
out
mov
push
cmp
push
rorb
out
out
lods
mov
mov
fldt
jno
mov
les
jl
aam
fsubl
ds ds
ja
(bad)  
push
inc
ffree
imul
icebp  
mov
jecxz
lret   
sahf   
pop
mov
sbb
cwtl   
clc    
clc    
mov
sti    
imul
add
ljmp
out
or
shrl
add
inc
stos
jnp
stc    
(bad)  
ds clc 
aas    
add
or
lahf   
cltd   
pop
(bad)  
xor
inc
mov
xor
fsubl
fwait
sub
test
cli    
push
dec
and
(bad)
mov
stos
add
or
in
inc
inc
mov
ret
lock xor
inc
in
(bad)  
(bad)  
pop
mov
sahf   
or
cmp
loopne
xchg
jle
xor
pop
mov
cli    
xor
jle
(bad)  
imul
hlt    
ds ror
popa   
mov
or
daa    
mov
stos
mov
or
dec
pop
mov
pop
mov
mov
aam
clc    
movsb
call
push
daa    
add
inc
or
stc    
sarb
in
inc
fdivl
dec
or
cld    
jl
cmp
sti    
cmp
daa    
mov
xchg
ss sub
mov
in
int3   
repz jle
mov
in
sbb
add
inc
xor
loop
dec
call
inc
lahf   
rolb
mov
xchg
cmp
mov
xchg
adc
inc
mov
and
or
add
ror
pop
mov
mov
(bad)  
dec
in
cltd   
push
mov
sub
adc
jne
iret   
int
enter
add
bound
mov
lods
mov
imul
test
dec
repz xlat
iret   
push
mov
add
cld    
xor
pop
bound
call
and
shrl
or
frstor
xchg
add
stos
dec
push
or
call
shl
cmp
adc
outsb
inc
lods
mov
loope
fimul
montmul
cmpsb
sbbl
out
lods
lcall
and
add
or
(bad)  
sbb
dec
scas
jle
aaa    
adc
sub
mov
in
push
sbb
lahf   
punpcklbw
or
(bad)  
sti    
lret
insb
mov
adc
or
cli    
xchg
push
jnp
cmp
jb
stos
sahf   
addr16 dec
imul
gs dec
push
jp
push
jle
xchg
jb
daa    
sub
mov
fs push
or
xor
andb
(bad)
cmc    
xlat
into   
into   
inc
pusha  
sbb
push
in
xchg
lock outsb
imul
fs mov
dec
nop
jae
sbb
jecxz
aam
jecxz
xchg
rorb
jg
cmp
adc
xchg
aam
xchg
xchg
int3   
adc
push
push
push
mov
jp
mov
test
popf   
push
cmp
adc
dec
pushf  
jmp
mov
and
test
(bad)  
xor
mov
adc
ret
(bad)  
testb
push
int3   
sub
das    
insb
(bad)  
mov
in
rolb
mov
dec
imul
les
adc
(bad)  
scas
lods
dec
cwtl   
inc
lahf   
rolb
mov
subb
sbb
inc
push
sbb
mov
les
fs jecxz
aas    
nop
movsb
pop
in
shll
(bad)  
je
xor
add
int
jge
sbb
inc
push
adc
clc    
lahf   
pop
out
mov
pop
bound
fistp
loop
push
int
xorl
inc
sbb
or
xor
adc
ret
pop
fadds
cmc    
repnz sub
mov
dec
pop
roll
dec
je
fidivrl
cmp
lds
call
aaa    
cmp
ds add
pop
enter
push
or
xchg
jno
adc
push
cmpb
ljmp
dec
testl
lret   
bound
je
in
push
jo
push
enter
lret   
call
mov
cmc    
xor
stc    
lea
mov
movsb
sahf   
push
lahf   
rclb
or
push
dec
jmp
mov
jb
add
fldcw
ds sub
out
ret
inc
stc    
dec
mov
xchg
pop
jmp
sbb
test
push
or
int
inc
sti    
inc
inc
adc
inc
inc
jg
fptan  
movsl
addr16 pop
xchg
push
add
rorl
lods
sbb
(bad)  
cmp
mov
orl
mov
sub
mov
andl
popa   
in
jmp
jb
cmp
xor
lahf   
test
lahf   
xor
jb
int3   
mov
or
vunpcklps
test
sub
mov
mov
(bad)  
inc
lahf   
fsubs
fwait
sub
or
hlt    
push
das    
jnp
xchg
or
adc
xchg
test
xor
mov
cmpsl
mov
dec
sbb
inc
rcll
mov
mov
mov
test
mov
shrb
insb
mov
mov
sarb
inc
(bad)  
lea
mov
popf   
push
lret   
aas    
clc    
and
add
or
stc    
lea
stos
push
jmp
inc
dec
aas    
stc    
pop
lahf   
jge
outsb
cmpsl
aas    
mov
faddp
push
sbb
movsl
dec
aas    
xor
rolb
mov
push
in
(bad)
(bad)  
mov
out
jae
stos
push
ret
(bad)  
ret    
xor
push
mov
adc
xchg
inc
sarl
push
jle
xchg
call
xlat
lret
xadd
movsl
inc
rcl
cli    
daa    
daa    
addr16 xchg
xchg
inc
aad
(bad)  
cmp
pop
(bad)  
fisubr
(bad)  
das    
and
or
in
pop
sti    
mov
aam
data16 cld 
dec
sbb
incb
cmp
inc
pop
mov
jmp
ljmp
sub
jg
data16 int3 
(bad)  
pop
sub
and
mov
sbb
xlat
insb
sub
mov
lahf   
sub
mov
(bad)  
(bad)  
mov
mov
cs lret
push
lods
jl
test
inc
iret   
or
add
or
movsb
add
jnp
xor
cltd   
inc
out
lods
ss cmp
xchg
and
cltd   
(bad)  
dec
(bad)  
sbb
int
mov
movsl
fldl2e 
and
pop
(bad)  
xor
call
mov
mov
enter
dec
jecxz
jb
loope
(bad)  
mov
xchg
cmp
ret    
call
fcoml
mov
cwtl   
cmpsb
test
nop
jne
adc
loop
jns
mov
(bad)  
divb
inc
sub
loop
pslld
cmp
sbb
jmp
fst
or
sahf   
or
xor
out
loop
movsb
ret
incl
je
(bad)  
fistpl
dec
add
inc
dec
nop
mov
in
cmp
les
test
setle
xor
mov
xor
xorl
cmpsl
jnp
inc
sti    
cmc    
(bad)  {%k7}
(bad)  
sbb
jecxz
hlt    
mov
int3   
pop
xchg
and
fsubl
mov
cmpsb
mov
cmpsl
aaa    
jb
dec
dec
clc    
aas    
mov
pop
xor
in
mov
loopne
cmpsb
adc
lret
sub
jo
pop
cmc    
aas    
stos
adc
out
test
jge
mov
cmp
sarb
cld    
sbb
sub
jecxz
inc
fwait
test
sbb
mov
mov
test
clc    
lds
dec
or
and
dec
mov
and
fbstp
push
stos
bound
fbstp
out
inc
call
push
and
mov
ja
imul
pop
jmp
lret
pop
ret    
rclb
stc    
pop
lahf   
jle
lock aaa 
iret   
mov
loopne
cmpsl
sbb
xchg
jge
or
sub
ret
mov
or
ss
xor
adc
into   
cmp
clc    
adc
mov
gs xchg
mov
dec
fidivr
fwait
pop
nop
cmp
repnz xchg
inc
std    
mov
fidivr
or
inc
movsb
mov
and
in
int
cmp
imul
shll
dec
stos
insl
into   
addr16 push
mov
dec
sahf   
xchg
mov
xchg
clc    
mov
lock or
jbe
(bad)  
sub
xchg
shrl
push
call
mov
push
jmp
mov
mov
jp
mov
js
call
int
iret   
dec
add
xchg
dec
pushf  
sub
icebp  
enter
mov
lock cmpsb
jnp
enter
fwait
movl
rcrl
adc
jnp
push
xchg
pop
cmp
mov
xchg
repz mov
jmp
imul
cmp
stos
arpl
xchg
xor
jo
bound
cmc    
int3   
int3   
pop
xlat
rcr
mov
cmp
xchg
sub
xchg
cmpsb
ja
mov
mov
fistpl
dec
out
fwait
xchg
mov
arpl
add
push
lret
das    
and
cmp
add
mov
lret   
push
jle
and
adc
rorl
mov
and
and
inc
mov
adc
jbe
adc
pop
daa    
inc
adc
dec
ret    
xor
jl
sub
hlt    
in
clc    
cmp
mov
and
js
mov
dec
stos
pusha  
inc
(bad)  
insb
fwait
jae
in
sub
cmpsl
sub
or
xchg
rorb
mov
pop
sbb
jne
(bad)  
ss xchg
test
and
pop
jg
out
lods
adc
lods
sbb
aad
mov
(bad)  
icebp  
and
clc    
adc
push
xor
jne
jp
sbb
insb
repz cmp
call
rolb
stc    
xchg
test
outsb
sbb
mov
jle
dec
clc    
mov
push
sub
dec
popf   
xlat
add
or
xchg
aaa    
lods
gs mov
sub
ljmp
andb
xchg
mov
and
stos
loopne
fisttpl
push
mov
mov
mov
ljmp
sbb
push
push
movb
cwtl   
jle
loope
or
loope
push
js
mov
iret   
jp
xchg
xor
xchg
idivb
jg
cmpsl
(bad)  
aaa    
sti    
xchg
pop
orl
jp
xchg
jge
dec
clc    
mov
jo
ret
jae
in
ds mov
and
lods
push
fnop   
mov
sub
stc    
pop
sub
cmp
fiaddl
cmp
ret    
call
xchg
test
sahf   
dec
sti    
(bad)  
(bad)
xchg
imul
in
jae
into   
sub
dec
jae
rolb
lret   
mov
mov
sub
mov
pop
pop
icebp  
xlat
xchg
sub
jae
lods
adc
rorb
(bad)  
jno
sbb
mulb
jp
xchg
cmp
(bad)  
sub
jne
xor
(bad)  
jb
(bad)
stc    
xchg
scas
pop
mov
fstpl
pop
(bad)  
jo
jecxz
add
sub
adc
cs lret 
sub
mov
into   
addr16 push
lea
out
cmp
inc
jl
pop
mov
gs out
shrb
mov
adc
(bad)  
jns
add
dec
pop
in
add
scas
adc
and
fs mov
xor
scas
cmp
clc    
stos
pop
hlt    
int3   
je
inc
mov
cs xchg
xchg
sub
xchg
enter
(bad)  
mov
mov
or
jl
jp
xchg
stc    
pop
int3   
push
call
mov
cmp
xchg
mov
lock ret 
mov
mov
push
dec
cs ret 
mov
inc
stos
adc
push
lock or
imul
push
jb
or
mov
add
xor
enter
xchg
adc
clc    
mov
in
mov
imul
adc
adc
jno
inc
clc    
sahf   
inc
mov
imul
(bad)  
mov
je
jnp
inc
clc    
mov
push
or
(bad)  
int3   
lcall
or
jnp
jg
inc
xchg
sub
std    
mov
cltd   
mov
and
xchg
sbb
cwtl   
sti    
dec
mov
mov
xchg
int3   
test
pop
jne
sbb
sub
js
aam
jmp
das    
popf   
pop
call
leave  
mov
cmp
mov
mov
pop
popf   
push
fucomp
daa    
xor
pop
in
fcompl
ljmp
add
out
js
mov
dec
add
xchg
xlat
adc
orl
loop
jno
push
js
arpl
jmp
dec
pusha  
(bad)
jne
(bad)  
ss inc
sub
ljmp
iret   
jp
xchg
stc    
pop
int3   
xor
sub
clc    
mov
in
sub
pop
test
clc    
or
sub
mov
xchg
pusha  
cmp
ret    
call
pop
rcrb
lret
(bad)  
add
rcll
dec
ret    
xor
push
cmpsb
mov
shlb
cmpsb
mov
pop
mov
sub
gs xor
stos
hlt    
or
dec
pop
jbe
lret   
sbb
pop
jbe
jmp
(bad)  
mov
pop
adc
lods
xchg
imul
test
fstl
inc
pop
sbb
mov
jnp
(bad)  
jge
je
xor
ljmp
aaa    
cli    
mov
mov
(bad)  
aam
pop
sub
mov
xchg
xor
cmc    
xor
mov
ljmp
add
inc
mov
ss dec
and
mov
adc
repz cmp
push
js
arpl
cmp
repnz adc
xchg
sahf   
pop
jns
mov
fs lahf 
les
fdivrl
push
xlat
cmpsb
addl
jg
xor
and
jle
pop
inc
sub
jecxz
movsl
mov
xchg
pop
jmp
adc
cmpsb
loope
(bad)  
ja
push
push
int3   
dec
push
pop
lret   
mov
jnp
push
iret   
sub
lock gs dec
out
sub
inc
sub
push
fist
mov
push
mov
lret
ljmp
lds
mov
and
in
or
sbb
insb
add
xor
in
inc
testl
jg
push
and
je
mov
sbb
or
push
and
adc
arpl
or
xchg
inc
movsl
(bad)  
xor
pop
xor
inc
imul
xor
sub
ljmpw
hlt    
aaa    
data16 movsb
je
cmp
dec
xchg
pushf  
punpcklbw
fldenv
mov
dec
jb
es add
mov
jge
pop
mov
mov
leave  
repz xchg
shlb
xchg
inc
mov
xchg
inc
mov
inc
int3   
jg
lret
outsb
stc    
xchg
mov
and
cmpl
adc
mov
fldenv
out
fwait
xchg
mov
fdivrl
(bad)  
shrb
push
mov
shrb
dec
out
xlat
fdivrl
pop
lds
outsb
jge
icebp  
xchg
rolb
hlt    
pop
jg
push
lcall
aas    
jecxz
(bad)  
lret
in
ds and
cmp
ljmp
inc
sbb
jb
dec
or
sub
mov
fs mov
xor
push
xchg
inc
jmp
xchg
mov
mov
cmp
andl
sub
iret   
jp
jns
push
(bad)  
pushf  
mov
xchg
addr16 out
push
push
sti    
sbb
sub
clc    
xor
push
xchg
mov
mov
(bad)  
add
insb
cmp
push
in
or
jae
lods
adc
out
adc
xchg
pop
inc
pop
out
lret
(bad)  
ljmp
loop
loope
and
jmp
mov
lds
out
iret   
jp
cltd   
(bad)  
aaa    
jl
xchg
cmp
jp
jmp
mov
in
jecxz
es pop
(bad)  
das    
stc    
xchg
test
cli    
inc
rcrl
cli    
movsb
sbb
and
pop
(bad)  
jp
loope
xor
push
(bad)
sbb
cmc    
sbb
fcmovnbe
dec
mov
push
sbb
std    
ds pop
shr
lods
adc
sti    
mov
jg
bswap
mov
mov
xorb
sti    
iret   
jmp
mov
int3   
lods
adc
out
xor
hlt    
inc
add
std    
aas    
popf   
xor
pop
and
or
mov
int3   
and
jae
notb
rcl
in
inc
cmp
push
or
inc
scas
add
repz push
push
inc
sbb
inc
shrb
loop
mov
aas    
push
stos
lcall
cmp
ret    
call
xchg
sbbl
dec
mov
(bad)
int
mov
nop
out
repz mov
hlt    
sub
sub
aas    
repz dec
dec
jo
mov
pop
xlat
movsl
lahf   
(bad)  
cltd   
iret   
cmc    
(bad)  
sti    
fnstenv
lcall
out
add
rol
imul
les
mov
(bad)  
je
xchg
xchg
(bad)  
jo
(bad)  
movsl
sbb
adc
aad
cmp
rcl
test
repnz pusha 
mov
sbb
mov
xchg
vaddsubpd
jmp
cmpsl
(bad)  
loope
xor
mov
loop
adc
sub
nop
out
repz lret
or
dec
inc
ffree
mull
and
pop
mov
lods
(bad)  
xor
lods
mov
mov
mov
mov
cli    
dec
dec
jecxz
jb
dec
int3   
cwtl   
clc    
cmp
push
out
lea
out
dec
pop
mov
dec
leave  
in
inc
ffree
(bad)  
adc
mov
rolb
in
pop
in
push
movb
dec
aaa    
mov
cmp
(bad)  
fwait
pop
jno
cmp
push
aam
xchg
inc
in
aaa    
das    
(bad)  
ret    
xor
inc
pop
aad
mov
mov
ret    
sub
jmp
xorb
cmp
in
mov
mov
push
push
aad
lods
(bad)  
jne
jp
cmpsb
mov
out
lret
mov
loope
mov
rcl
iret   
xor
pushf  
stc    
cmp
cmp
mov
add
jge
in
shrb
or
sub
jnp
(bad)  
and
jnp
(bad)  
add
lods
ret    
imull
add
repz cmp
sub
add
shrb
or
cmpsb
test
inc
jo
and
popf   
sub
fidivrl
or
sub
cmp
sti    
push
stos
mov
repz popf 
cld    
mov
push
js
sub
xchg
shlb
je
sbb
push
shrd
roll
sub
push
xchg
(bad)  
xchg
xor
pop
dec
sub
rcrl
int
jge
or
sbb
int
xchg
dec
xor
ss
xor
sub
roll
aas    
jne
fsubrs
bound
cwtl   
pop
aam
hlt    
popa   
popf   
cmpsl
inc
inc
idivb
xor
xor
rcl
aaa    
jl
test
mov
cmp
out
push
xchg
xrelease mov
lea
lea
sub
or
test
dec
pop
out
enter
inc
daa    
out
enter
pop
pop
cmc    
fdivs
loope
test
mov
les
js
scas
jnp
lcall
push
xor
clc    
mov
jmp
inc
es data16 cmp
loopne
push
and
lret
mov
inc
jmp
dec
fwait
jp
cmp
out
popf   
gs ds inc
mov
cli    
js
cmp
xchg
ss out
mov
lcall
xor
bound
ljmp
sub
int
out
addr16 nop
xor
sahf   
fstpl
inc
jb
mov
jns
rorb
(bad)  
insb
and
cli    
dec
sbb
int
jmp
jns
pop
sub
ficompl
mov
rsm    
mov
add
pop
inc
out
push
out
pop
jge
out
cmp
inc
cmp
ret    
call
fsts
pop
mov
xchg
int3   
pop
dec
ljmp
(bad)  
int
out
outsl
jge
(bad)  
addr16 jmp
sbb
mov
(bad)  
mov
mov
cmp
xor
sub
jp
cmp
je
mov
or
jmp
aaa    
mov
enter
sub
jae
pop
pop
mov
mov
mov
add
dec
call
aad
pop
add
scas
adcl
je
adc
mov
test
lcall
dec
and
jp
jmp
stc    
sarb
jnp
dec
lock lea
movsl
jle
inc
xor
cmp
js
xor
(bad)  {%k7}
enter
inc
dec
fimull
in
lods
or
fistp
inc
ljmp
stos
lock pop
fdivr
pop
or
cmp
cmpsb
sbb
and
shlb
xchg
sbb
outsl
das    
push
push
lds
cmp
aaa    
push
inc
pop
cmc    
call
xor
fwait
jg
lock
ja
inc
(bad)  
cmp
fldcw
or
popf   
sbb
mov
cwtl   
dec
pop
jns
mov
in
mov
xchg
mov
mov
add
int3   
or
rcl
lods
pop
fldcw
fwait
cwtl   
shrb
rclb
popf   
xlat
cs hlt 
loope
nop
and
mov
fs xchg
or
inc
cmpsl
mov
mov
mov
cs sbb
xor
jbe
(bad)  
sbb
cwtl   
and
inc
ret
nop
push
inc
adc
dec
(bad)  
addr16 inc
data16 repz fdiv
and
push
je
lods
adc
push
or
push
jl
in
cmpsb
(bad)
jb
(bad)  
out
lock call
lahf   
arpl
sbb
sub
mov
xor
repnz and
(bad)  
mov
(bad)  
xor
in
ds push
mov
movsb
lahf   
xchg
fcomps
mov
lahf   
fisttpll
sub
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
dec
decl
push
jl
(bad)  
daa    
pop
cmp
jmp
mov
(bad)  
push
xlat
cltd   
cmp
stos
push
sub
cmp
pop
idivb
sub
xchg
lret
cld    
jbe
xor
adc
js
dec
xchg
ja
and
rcrb
sbb
test
add
pushf  
cwtl   
mov
fucomi
rclb
xchg
retw   
and
cmp
lcall
cltd   
dec
cmpsb
jbe
xor
jp
mov
incl
push
les
imul
mov
std    
add
gs xchg
lret   
ds
stc    
inc
into   
ret
(bad)  
stc    
adc
xchg
xchg
cs icebp 
push
inc
inc
inc
daa    
daa    
arpl
jecxz
mov
push
sbb
lock and
loope
push
xchg
dec
cmpsb
jbe
xor
sub
cs pop
js
inc
ret
jne
jnp
(bad)  
clc    
or
and
push
or
push
sub
push
lret   
xor
test
xor
jge
pop
aam
hlt    
imul
inc
sbb
sub
fst
mov
ret
imul
add
iret   
pop
dec
ljmp
(bad)  
int
pop
leave  
sti    
push
in
out
pop
aaa    
xor
jmp
scas
cld    
xchg
loope
(bad)  
push
jmp
out
cmp
bound
push
imul
jb
push
dec
in
rep stos
mov
sub
jnp
or
xor
xor
fldt
mov
test
xlat
cmpsl
jno
stc    
xchg
or
adc
mov
fsubrl
jp
jmp
scas
cmp
(bad)  
in
inc
jg
nop
dec
xchg
js
xchg
sub
loop
pushw
mov
scas
xchg
repz jne
xchg
cmp
imul
mov
imul
sbb
scas
je
jp
push
into   
(bad)  
inc
enter
call
dec
jnp
popf   
cmpsl
sbb
leave  
xor
lds
cmp
dec
jbe
inc
les
lods
ljmp
lret   
aad
sub
add
jle
addr16 push
fadds
pop
mov
cmp
cmc    
shr
loop
subl
loopne
add
fwait
jl
dec
jns
rorb
popf   
ljmp
sub
add
and
adcb
mov
imul
push
inc
jmp
aam
pop
aad
adc
jb
lretw  
or
shr
inc
iret   
xor
les
leave  
jne
jnp
jb
rcrb
addl
cli    
je
mov
dec
xorb
int3   
in
out
jnp
push
jmp
popf   
lcall
cmpsl
inc
pop
jbe
cmp
sub
lods
call
cmc    
into   
cmpsl
jnp
jb
rcrb
xorl
add
jecxz
cmp
dec
into   
add
(bad)  
add
imul
cmpb
shrl
call
xchg
jle
cmpsl
and
push
mov
lret
je
ljmp
out
and
pop
je
lret   
or
inc
imul
lea
push
lods
cmc    
inc
imul
push
adc
adc
inc
mov
cmp
repz push
dec
dec
mov
out
and
xchg
aam
popa   
clc    
push
fidivrl
sbb
stos
int
sbb
stc    
cld    
dec
sbb
sbb
movsl
dec
in
insb
les
mov
ss
xor
jb
cmp
push
enter
subl
xor
scas
icebp  
mov
nop
pop
lea
je
push
imul
loope
cmpsl
or
and
dec
cwtl   
inc
lahf   
sarb
nop
push
inc
inc
pop
sub
jmp
xor
add
jg
bound
cwtl   
pop
aad
ret    
(bad)  
cli    
inc
sub
jbe
jp
rol
out
jno
fwait
mov
aam
je
adc
push
jb
cmp
jb
sbb
pop
das    
pusha  
jbe
pop
js
pop
lret   
out
sbb
pop
jmp
faddl
or
lret
cs
lret
and
or
jnp
or
aam
in
out
pop
aaa    
xor
jmp
sub
xchg
(bad)  
fs pushf 
cmpb
aam
stos
imul
dec
mov
rcrb
xchg
movsl
mov
rcrb
adc
push
xor
xchg
ror
xor
xchg
mov
mov
nop
pop
mov
or
pop
jb
pop
sub
mov
loope
inc
jbe
mov
dec
push
(bad)  
cld    
fs sub
or
push
sub
push
les
mov
xor
iret   
pop
and
lret
sbb
cwtl   
jle
inc
xor
pop
int3   
push
lea
enter
jge
xchg
adc
cld    
fs sub
jle
cli    
das    
or
sbb
dec
outsb
je
cmp
inc
sar
out
xchg
jmp
fwait
in
mov
xor
and
fwait
xlat
mov
test
popa   
mov
push
fnstsw
pop
test
cmpsl
and
out
aam
repnz push
fidivl
int
ret
xor
cwtl   
movsl
cli    
cmpsb
insb
shlb
(bad)  
push
or
fidivl
icebp  
mov
stc    
jae
repnz iret 
mulb
rcrb
cwtl   
mov
sub
mov
notl
and
xor
dec
sub
cmp
lods
pop
xchg
jbe
add
out
in
mov
sbb
mov
jo
dec
lods
xchg
sahf   
jge
xchg
les
cvtps2pd
mov
mov
xchg
cltd   
out
push
inc
lahf   
rolb
iret   
lcall
inc
scas
aaa    
lea
push
shrb
andb
dec
pushf  
mov
sbbb
mov
or
inc
rcll
fdiv
test
out
add
ljmp
jbe
repz clc 
push
inc
(bad)  
test
leave  
mov
mov
push
sub
call
mov
mov
mov
fsub
mov
cmp
or
imul
xor
inc
shrb
mov
inc
xor
daa    
(bad)  {%k7}
in
decl
sub
(bad)  
int
inc
add
cmpsb
adc
adc
outsl
add
repnz scas
loopne
pop
xchg
push
xchg
repz aad
add
pop
pop
xor
xor
fiadd
das    
ret
or
stos
jnp
aaa    
cmp
sbbl
cmp
leave  
test
lahf   
dec
nop
mov
cmp
inc
scas
fistp
adc
addl
mov
rcll
lret
adc
sub
notl
xor
loop
into   
in
rcrl
lret   
aas    
clc    
adc
lds
scas
push
stc    
push
fucom
adc
push
lock mov
lock pop
push
xchg
or
pop
out
mov
adc
dec
rcrl
inc
lds
lret
cmp
ds mul
adc
outsb
aaa    
cwtl   
xchg
ret
aam
adc
push
sbb
adc
inc
in
add
ja
and
dec
push
sbbb
outsb
xlat
and
xlat
or
mov
ret    
int3   
into   
loopne
adc
in
mov
ret
cmp
shll
xchg
daa    
inc
fisubrl
push
add
ret
test
dec
imul
jnp
push
fcmovu
push
push
leave  
xor
std    
pop
fwait
mov
int
xchg
lods
cmc    
xchg
push
cmc    
fildll
lret
or
push
mov
jnp
(bad)  
xlat
dec
repnz cmpl
mov
repz cmp
mov
mov
(bad)  
push
pop
cmc    
sarl
xor
jbe
aas    
stc    
pop
mov
aas    
stc    
inc
mov
jb
inc
stos
sbb
sub
add
ja
lahf   
arpl
dec
push
jg
jo
jmp
mov
ret    
jmp
xor
xchg
lods
gs test
stos
add
ss inc
ret    
lahf   
add
mov
cld    
and
cld    
or
hlt    
mov
ret    
cmp
xor
sbb
sbb
push
jmp
xor
push
cmp
ds dec
repz in
sbb
aad
and
mov
pusha  
xor
adc
shrb
int
test
jl
push
sbb
xchg
inc
mov
fidivrl
sbb
sahf   
cld    
inc
pop
ljmp
dec
fwait
std    
(bad)  
sti    
dec
sub
fsubl
and
insl
stos
jle
(bad)  
xor
pop
ds mov
cmpsl
push
xchg
cltd   
jg
cmpsl
out
jg
movsl
pop
mov
jmp
mov
test
inc
(bad)  
movb
js
punpckhbw
scas
inc
enter
and
ss stos
pop
and
lods
mov
sbb
mov
or
icebp  
mov
nop
stos
cli    
xchg
push
inc
in
inc
dec
and
mov
dec
dec
pop
fstpt
andl
dec
inc
stos
dec
pop
jb
pop
and
lods
and
mov
(bad)  
cmp
mov
inc
or
ss popf 
cmp
scas
jbe
stc    
jge
fldcw
inc
int
sbb
push
sub
leave  
por
in
adc
jg
movsl
lahf   
rcl
outsb
(bad)  
es pusha 
and
iret   
cmp
and
test
adc
bound
int3   
jo
ja
xchg
lods
push
pop
das    
sarb
dec
lea
ret
jg
(bad)  
(bad)  
dec
sahf   
idivb
add
push
insl
in
(bad)  
mov
mov
jp
push
iret   
lret   
imul
adc
xchg
push
les
hlt    
int3   
xchg
or
push
movsb
je
daa    
cmp
rcl
test
xlat
fsubl
mov
sub
jne
hlt    
std    
pop
xchg
dec
pop
inc
lret
repz cmp
sbb
add
loop
jae
sbb
call
pop
in
rcll
mov
xchg
dec
and
push
dec
ja
cmp
pop
out
gs dec
ljmp
sub
iret   
pop
scas
(bad)  
stos
or
pop
pop
hlt    
or
femms  
cmp
lods
mov
cmp
jns
or
dec
jnp
jae
ljmp
or
adc
push
xchg
out
test
dec
xor
es jne
leave  
fisub
fstl
(bad)  
and
push
xor
mov
jbe
cmpsb
inc
or
lods
lock pop
xor
jbe
inc
jle
testl
lock push
mov
push
out
pop
cmc    
xor
inc
sbb
out
dec
and
push
stc    
les
aas    
repz xchg
addr16
fimull
bound
mov
mov
loopne
popf   
das    
or
xchg
mov
rolb
test
pushf  
sub
hlt    
clc    
into   
(bad)  
mov
mov
ret    
sti    
daa    
xchg
push
add
jno
xlat
lahf   
dec
push
lcall
arpl
pushf  
lahf   
fdivp
push
testb
sub
inc
add
or
mov
clc    
lret
add
(bad)  
xchg
lods
xchg
ret
addr16 xchg
ja
jbe
inc
js
iret   
es pusha 
and
push
xor
hlt    
xor
xor
xchg
in
jmp
in
inc
ss jnp
add
aad
push
mov
sub
flds
jle
(bad)
std    
xchg
sbb
sub
fcmovnbe
jae
xchg
(bad)  
jmp
mov
out
xlat
inc
push
and
xor
js
mov
mov
enter
daa    
psadbw
or
imull
daa    
xor
js
mov
mov
enter
daa    
psadbw
or
cmp
add
fistp
sbb
inc
xchg
ret    
mov
cs mov
imul
(bad)  
lret
pop
rol
fldcw
sub
popf   
stc    
(bad)  
fist
cmp
dec
clc    
cmp
or
xor
xchg
xor
adc
add
ljmp
les
mov
and
pushf  
push
mov
fstpl
cmc    
ret    
sub
push
call
xlat
inc
push
and
xor
js
push
fdivl
push
incb
stos
xor
(bad)
rcr
lods
sub
imul
xor
and
cmp
cmc    
xchg
cmpl
stc    
and
cmp
cmc    
xchg
pushf  
cmpsl
sbb
stc    
and
cmp
(bad)  
mov
rol
pusha  
push
stc    
ss out
dec
andl
fwait
jecxz
lcall
pop
je
es
jae
and
or
(bad)  
cltd   
addr16 iret 
pop
mov
test
pop
icebp  
sahf   
jb
push
stc    
adc
std    
dec
cmp
lock inc
xchg
inc
push
or
mov
movsb
mov
(bad)  
repz or
idiv
mov
dec
pop
cmc    
cld    
fs sub
or
push
or
movl
jl
cmp
adc
push
jbe
dec
pop
mov
outsl
in
jecxz
mov
sbb
jnp
jo
enter
ret    
pop
pop
(bad)  
fstps
cli    
adcl
(bad)  
push
adc
jbe
ss jl
iret   
pop
jg
inc
jp
repz dec
inc
push
clc    
cmp
pop
push
and
jno
xor
jbe
lret
push
cli    
not
xor
xor
sarl
dec
push
jl
inc
addr16 iret 
pop
pop
hlt    
mov
push
xor
add
add
xor
adc
gs cli 
push
jle
add
sub
and
jmp
test
bound
sti    
hlt    
gs and
test
ja
hlt    
pop
jg
inc
loop
xor
push
jmp
enter
test
cmp
fcmovbe
cld    
(bad)  
lods
das    
out
or
scas
jp
ds out
scas
inc
pop
addl
pop
mov
out
xlat
ret    
inc
(bad)  
xor
pop
fldt
sar
(bad)  
dec
(bad)  
sbb
mov
fnstcw
push
push
sti    
sbb
ds int
pushl
and
mov
or
fimull
fcomps
xlat
xchg
mov
js
dec
sub
xchg
pushl
fcomps
xlat
dec
(bad)
repz scas
movsl
push
je
aam
adc
loopne
mov
aas    
test
inc
fdivrl
(bad)  
jecxz
mov
repnz adc
add
jg
fdivl
lret
mov
cmp
mov
mov
cwtl   
jno
xchg
ficompl
lcall
push
stc    
ss leave 
mov
lea
xlat
cmpsl
sti    
mov
sti    
inc
mov
and
mov
sbb
xchg
add
sbb
xchg
mov
sbb
xor
(bad)  
icebp  
in
gs inc
push
cmc    
stos
jle
movsb
dec
pop
(bad)  
sti    
lahf   
sbb
pcmpgtb
dec
dec
jno
mov
repz mov
add
movsb
insb
lret   
outsl
xor
gs lahf 
cmp
out
fisub
popf   
mov
(bad)  
out
enter
insb
std    
aaa    
enter
psubd
or
fwait
push
stc    
cmp
loopne
lock mov
out
xlat
inc
imul
push
mov
fdivp
lods
or
int3   
mov
push
daa    
cli    
aam
incb
mov
iret   
jno
inc
push
dec
icebp  
push
les
mov
xchg
repz push
and
xor
dec
ljmp
pop
or
icebp  
pusha  
outsl
inc
sbbl
mov
mov
adc
aam
fs insb
cltd   
repz lea
leave  
push
dec
icebp  
push
fdivr
int
int3   
ret    
jmp
inc
jge
inc
dec
adc
ja
push
stc    
jp
sub
enter
(bad)
or
jge
sub
adc
fdivrl
inc
push
sub
(bad)  
mov
pusha  
jns
stos
repnz arpl
pop
mov
aam
pop
xchg
mov
xor
jb
pop
and
cmp
(bad)  
(bad)  
movsl
adc
sbb
rclb
or
mov
xchg
sbb
bound
cmp
jbe
inc
push
mov
mov
mov
fnsave
dec
push
xchg
out
std    
repz in
jbe
add
inc
pop
data16 mov
ds push
adc
fxtract 
xlat
sysret 
mov
sbb
xchg
xor
imul
sub
js
push
enter
cmp
fwait
call
pop
sarl
(bad)
jne
jmp
jecxz
mov
jle
mov
testl
xchg
mov
loop
stos
imul
lods
xchg
push
push
mov
int
sbb
lds
movsb
pop
rorl
and
or
fcoml
jno
push
pop
push
push
mov
(bad)  
iret   
sti    
inc
pop
insb
sub
lea
andb
notl
rcr
xchg
je
add
xchg
push
inc
dec
jno
je
sub
test
stos
inc
fnstcw
xlat
inc
lea
and
push
jns
push
dec
in
jae
icebp  
xorb
pop
mov
aam
pop
movsl
lahf   
xchg
pusha  
mov
lods
lods
and
iret   
fbstp
aam
leave  
fdivrl
data16 jg
call
push
bound
cmpsb
xchg
xchg
cltd   
ljmp
dec
mov
(bad)  
clc    
pop
aam
hlt    
popa   
test
or
cmpl
push
adc
jle
mov
enter
sub
sub
imul
xor
sub
sub
pop
dec
xchg
push
inc
(bad)  
stos
cmp
les
gs jg
add
xchg
push
push
xchg
push
(bad)  
adc
inc
int3   
jg
jp
inc
inc
cwtl   
lock add
mov
aaa    
add
jnp
and
imul
fcoml
(bad)  
mov
cwtl   
inc
pop
xchg
bound
(bad)  
push
inc
or
dec
data16 cmp
scas
push
shlb
test
mov
fisttpll
sbb
pop
pop
leave  
or
jle
repz sub
mov
mov
mov
fmul
fdiv
mov
aas    
pop
lea
mov
adc
nop
xor
jne
inc
data16 xor
out
or
dec
and
lods
sub
ja
ret    
decl
xor
add
insl
mov
sbb
cmp
pusha  
mov
or
popa   
xor
xchg
add
xor
mov
dec
or
jno
and
add
mov
push
(bad)  
push
test
push
pop
rcr
cmpsl
ffreep
outsb
rorb
push
cmp
pop
xchg
cld    
push
xchg
mov
dec
pop
rcrl
lret
add
test
pop
fsts
(bad)  
negl
xlat
(bad)  
jp
repz pop
lret   
ljmp
dec
inc
(bad)  
jo
sbb
jnp
fmuls
iret   
pop
mov
arpl
cltd   
add
(bad)  
mov
dec
mov
xor
cld    
cmpsl
mov
cmp
dec
xor
int3   
test
dec
(bad)  
xor
imul
pop
mov
pop
dec
and
push
push
push
leave  
and
sbb
push
bound
negl
lret   
or
jns
sbb
xor
xlat
inc
(bad)  
(bad)  
mov
mov
ja
nop
enter
outsb
rorb
nop
mov
adc
add
imul
(bad)  
mov
mov
ja
nop
enter
outsb
rorb
nop
movsb
aam
ffree
adc
imul
and
(bad)  
lret   
mov
popa   
xor
lods
fisubrl
pop
(bad)  
mov
out
fistpl
push
je
jno
jb
(bad)  
outsl
xchg
loop
mov
mov
repz mov
hlt    
mov
loopne
icebp  
fmul
mov
fmulp
cmpsb
pop
ss loope
pusha  
push
xchg
test
xlat
bswap
pusha  
daa    
push
xchg
out
enter
jp
pop
mov
lock ficompl
int3   
mov
sub
out
clc    
js
jnp
push
sbb
imul
xor
lcall
pop
pop
scas
lea
mov
mov
push
jnp
cwtl   
inc
push
jnp
ret
clc    
or
enter
int3   
(bad)  
loopne
les
cmp
mov
hlt    
add
xchg
mov
jnp
mov
add
fistl
mov
adc
mov
gs dec
repnz stos
pusha  
push
es or
jnp
shrl
push
(bad)  
jns
mov
sbb
xor
jmp
popf   
mov
xchg
cmp
jb
pop
and
cmp
lods
xlat
lds
ljmp
xchg
adc
or
(bad)  
or
sub
xor
xlat
dec
pushf  
not
jno
dec
decl
and
(bad)  
jl
sbb
cmp
xchg
icebp  
jge
loopne
xchg
add
ljmp
xchg
jg
mov
adc
cli    
lods
or
bound
and
add
es scas
cwtl   
pop
aad
ret    
mov
sarl
and
in
jmp
imul
mov
sbb
xor
ss mov
xchg
inc
inc
test
cmpsb
inc
test
push
mov
insl
mov
mov
leave  
mov
icebp  
mov
aam
mov
stc    
lret
or
mov
mov
or
out
mov
mov
nop
mov
hlt    
xchg
xchg
ret    
add
xchg
std    
out
scas
jle
iret   
pop
dec
or
in
cmp
mov
cltd   
jb
dec
or
dec
scas
sbb
mov
mov
daa    
cmp
stc    
sarb
ds clc 
aas    
add
hlt    
mov
jge
movsb
idivl
sbb
jns
hlt    
sub
mov
or
lahf   
sarb
flds
add
js
out
xchg
mov
or
cli    
inc
or
pop
cmp
scas
jbe
and
jbe
and
mov
inc
sub
adc
or
sbbb
stos
push
fwait
(bad)  
sti    
lret   
mov
popl
gs and
sub
fsubrl
mov
ss
xor
ficompl
sub
data16 cmp
ljmp
aad
cmp
or
lcall
mov
aaa    
inc
lret   
shr
jb
and
mov
call
sbb
mov
lds
mov
int
gs aad
push
sbb
stc    
rcl
jo
add
(bad)  
call
xchg
loopne
rcll
inc
lret
push
bound
in
lahf   
push
add
popf   
jbe
mov
testb
pop
jl
push
jl
jl
lret   
pop
ret    
pop
aam
ss
(bad)  
sub
outsl
(bad)  
and
xor
jmp
in
sbb
jg
movsl
lahf   
mov
(bad)  
movl
daa    
ds addr16 push
or
rorb
add
aad
lock and
rcll
mov
xlat
jnp
nop
cmp
mov
(bad)  
js
fisttpll
adc
sub
mov
sbb
push
mov
and
js
inc
int
sbb
push
dec
test
clc    
fwait
cmp
dec
popf   
jle
(bad)  
and
inc
out
xchg
negl
push
por
loop
icebp  
jg
test
mov
xor
add
test
out
push
fadds
in
loop
cltd   
push
inc
(bad)  
mov
xchg
pop
jmp
adc
add
out
sub
xlat
and
cs icebp 
mov
jg
xor
in
iret   
(bad)  
or
jnp
cld    
xchg
addr16
rolb
rclb
loop
cmp
rclb
loop
jle
jmp
in
adc
jg
xor
(bad)  
(bad)  
nop
stc    
jmp
fwait
aam
(bad)  
jl
push
jmp
dec
in
in
stc    
cmp
cmp
xor
or
add
cmc    
sbb
sub
dec
dec
pop
scas
loopne
ror
aad
inc
cmpsl
pushf  
dec
pop
xlat
scas
(bad)  
aam
pop
(bad)  
mov
push
mov
cmp
pop
lea
je
xchg
adc
mov
lods
jp
movsb
push
push
jns
std    
inc
push
add
xlat
push
pop
mov
enter
jl
inc
ret
adc
push
xor
mov
sub
add
das    
or
popf   
movl
aam
popf   
movsl
lret
loope
lahf   
adc
xchg
mov
int
out
sub
idivl
xchg
xchg
mov
mov
js
xchg
inc
repz addl
xor
(bad)  
pop
and
cmc    
xchg
enter
xor
imull
or
outsl
cmp
(bad)
mov
lea
rol
dec
jle
arpl
dec
notb
cmp
lea
push
mov
mov
push
mov
cmp
mov
xor
ficom
and
stos
xor
(bad)  
jg
dec
mov
test
fcompl
or
data16 icebp 
lahf   
pop
cmp
adc
fxtract 
xlat
sysret 
mov
sbb
xchg
xor
imul
sub
js
push
mov
fwait
call
pop
sarl
fisttpll
ror
mov
ficoml
test
adc
inc
sbb
add
add
fimul
pop
cmp
data16 mov
ljmp
movsl
mov
and
mov
jns
rorb
push
add
pop
imul
dec
and
cmpb
and
lds
in
rolb
mov
insb
stos
add
and
xor
mov
sub
mov
addr16 push
aam
fiaddl
pushf  
rorl
xor
ljmp
pop
into   
push
add
out
(bad)  
jno
xor
adc
popa   
les
sub
es fsubp
jo
movsb
jb
movsb
dec
push
push
mov
xchg
test
inc
test
into   
lahf   
test
pusha  
mov
mov
jle
out
mov
or
fist
sahf   
mov
inc
bnd js
(bad)  
rorl
mov
push
movsb
loop
dec
fdivr
xchg
mov
std    
cmpsb
jae
sbb
out
dec
fmuls
repz jnp
test
cmp
lea
(bad)  
lods
out
(bad)  
les
mov
add
sub
divb
xchg
sub
scas
stc    
stc    
mov
mov
sahf   
cmp
insl
cld    
stc    
mov
inc
or
mov
push
sbb
(bad)  
or
mov
stos
mov
out
(bad)  
les
hlt    
shl
daa    
popf   
jg
mov
push
in
inc
cmpsl
sub
mov
mov
sub
sub
icebp  
mov
jecxz
lret   
adc
insl
xor
lock icebp 
jno
push
(bad)  
push
pushf  
ja
mov
jo
cmp
xor
mov
mov
or
ss inc
aas    
or
clc    
cmc    
popf   
sub
and
mov
dec
jns
(bad)  
out
add
and
stc    
mov
mov
dec
jmp
adc
sbb
xchg
(bad)  
push
push
inc
dec
int3   
es pusha 
mov
add
into   
mov
outsb
add
ja
jnp
xchg
test
pop
push
fdivs
cmp
dec
adc
out
push
sub
in
call
pop
cmc    
mov
adc
jg
dec
jg
gs mov
dec
int3   
aam
arpl
hlt    
push
bound
subl
inc
daa    
arpl
(bad)  
xor
nop
mov
pop
arpl
inc
ljmp
mov
push
in
out
cmpsl
pop
and
mov
shll
or
xor
std    
cmp
aas    
mov
std    
(bad)  
lods
out
(bad)  
(bad)  
jmp
sahf   
loopne
mov
into   
cmp
pop
xlat
inc
pop
test
xchg
lcall
and
mov
sahf   
out
js
jmp
(bad)  
sar
(bad)  
hlt    
dec
cld    
lcall
or
out
cmp
cli    
in
adc
mov
hlt    
jmp
stos
jb
in
jnp
mov
push
daa    
lret   
dec
notl
out
jmp
into   
leave  
sbb
xor
cmpsb
mov
out
mov
std    
popf   
jecxz,pn
cmp
adc
mov
fisttpll
lods
push
add
test
idiv
cmp
rolb
call
aaa    
lahf   
xchg
xchg
mov
dec
outsb
je
cmp
cmpsb
mov
jbe
xor
push
iret   
sub
flds
loop
sti    
popa   
push
stc    
pop
mov
leave  
in
enter
insb
mov
add
push
hlt    
push
dec
sbb
mov
pushf  
aad
pusha  
add
or
dec
add
jmp
push
lods
mov
or
mov
adc
sahf   
fst
sbb
dec
leave  
mov
ds mov
cli    
mov
jno
add
insb
xchg
mov
loope
imul
dec
aas    
or
jg
mov
mov
arpl
push
mov
xchg
in
lods
sub
xchg
repnz loop
inc
test
loope
(bad)  
sbb
jge
mov
iret   
fildll
data16 test
pop
jae
mov
ret
aas    
sub
mov
lret
fsub
popa   
dec
add
icebp  
push
or
sub
or
ret    
andl
xchg
mov
fnsave
popf   
adc
pop
mov
xor
pop
xor
jge
test
ljmp
and
lret   
and
or
and
ds push
ret
mov
push
or
adc
sub
mov
iret   
into   
in
cwtl   
sub
pop
jecxz
push
cwtl   
adc
test
inc
pop
subl
pop
mov
mov
ret
in
sahf   
dec
mov
sbb
roll
mov
push
push
mov
rolb
gs cli 
push
push
pop
out
jo
xlat
popf   
mov
sti    
dec
xlat
iret   
enter
mov
and
xor
or
push
jno
add
loop
mov
mov
imul
xlat
cmp
push
mov
or
adcl
and
xchg
mov
or
ss inc
aas    
sbb
test
popf   
sub
out
fmul
xchg
fs dec
imul
push
pusha  
fdivp
mov
pusha  
sarb
or
js
cli    
mov
pop
fdiv
loope
aad
or
ret
mov
mov
pop
jbe
pusha  
xorl
jl
xor
jno
cmc    
fstl
enter
nop
mov
mov
push
pop
jge
pop
sahf   
in
lret   
inc
mov
(bad)  
test
mov
and
mulb
xor
test
xor
jno
mov
test
(bad)  
hlt    
lods
aad
loopne
lret   
mov
sbb
jle
shlb
and
lcall
adc
arpl
mov
test
repz push
add
lds
inc
ss pop
jns
xchg
cmp
ds add
mov
and
shrb
adc
push
mov
pop
js
stos
cmc    
mov
ja
xor
dec
xor
out
sti    
mov
repz cmp
mov
xchg
loope
jns
jg
out
sub
sbb
insl
jnp
jmp
(bad)  
mov
loope
test
inc
ljmp
es or
hlt    
push
or
inc
cmp
or
pop
mov
mov
pop
jbe
pusha  
xorl
jl
xor
and
lret
iret   
sub
mov
js
jno
or
call
inc
aas    
loop
inc
hlt    
popf   
sub
out
fmul
(bad)  
push
fucompp 
lea
push
cmp
(bad)  
mov
xorl
jge
lret   
pushf  
xor
pop
mov
leave  
push
int
popf   
dec
add
cmp
pop
push
lods
cmc    
inc
sbb
mov
mov
xor
ret
in
mov
sbb
roll
sub
enter
pop
hlt    
popa   
movsl
leave  
lock xor
xchg
and
and
sti    
ljmp
aam
mov
xorb
jmp
hlt    
lea
pop
cmp
out
add
jne
or
lods
sbb
or
(bad)  
jb
inc
mov
das    
iret   
fsubrl
jl
adc
arpl
and
arpl
xor
stc    
lea
mov
data16 jl,pt
and
sarb
inc
jge
jge
xor
cmp
pushf  
dec
jle
or
(bad)  
jne
or
lods
or
xor
hlt    
inc
(bad)  
rorl
dec
or
cmp
cmp
dec
dec
jne
jecxz
or
pop
adc
scas
cs sub
loop
and
and
xchg
mov
xor
or
mov
and
add
lea
cmpsl
mov
aas    
loop
mov
vmread
sub
mov
mov
lret   
mov
mov
cmc    
mov
jae
hlt    
xchg
xor
mov
mov
rclb
dec
inc
aas    
(bad)  
repz and
popf   
sub
loope
fucom
dec
add
ljmp
dec
xor
jns
inc
sbb
push
ljmp
and
jle
xchg
sbb
pop
lcall
xlat
or
inc
push
add
test
xlat
shrl
mov
inc
push
or
push
add
jmp
leave  
bt
outsl
sub
dec
dec
ds
in
mov
push
push
mov
pop
out
rol
adc
call
pop
xchg
xor
lds
repz in
scas
add
ja
dec
xchg
ljmp
dec
pop
inc
out
xor
aam
jg
adc
enter
hlt    
scas
jg
ja
xchg
(bad)  
jbe
push
adc
pop
cmp
call
push
mov
add
add
cmc    
lods
test
mov
leave  
(bad)  
fs imul
arpl
roll
or
mov
or
pop
mov
push
mov
add
icebp  
add
dec
and
jmp
and
mov
je
out
push
xchg
mov
loop
test
mov
jge
dec
and
pop
outsl
sub
xor
(bad)
and
pop
iret   
mov
in
stc    
shlb
sbb
fbld
mov
mov
sub
fwait
adc
out
xor
cmpsl
lcall
stos
mov
repz xchg
jl
push
mov
imul
and
pop
push
add
gs mov
mov
xchg
stc    
or
aas    
mov
outsb
in
sub
push
push
pushf  
ljmp
mov
fwait
stc    
adc
aas    
xor
ljmp
idiv
add
outsl
sbb
push
push
rol
xor
mov
pop
dec
popa   
mov
jle
dec
dec
nop
shl
sub
inc
mov
lods
movb
fs sti 
pop
push
test
adc
movsl
adc
lods
push
push
pmovmskb
sub
inc
mov
lods
movb
fs sti 
pop
push
test
or
dec
fidiv
nop
sbb
mov
pop
fs add
fild
out
lret   
fidivrl
inc
jbe
ret
loop
iret   
das    
jp
test
mov
cmp
fs sti 
pop
push
mov
cmp
int
jne
xchg
loop
mov
cmpsl
lods
jb
push
add
(bad)  
lock scas
push
jb
popf   
cmp
jbe
dec
sub
inc
dec
icebp  
add
int
enter
test
hlt    
push
orl
(bad)  
and
daa    
loope
jns
jg
cmp
inc
cwtl   
(bad)  
pop
movsb
cmp
inc
fcompl
(bad)  
(bad)  
mov
mull
jbe
or
sbb
sub
xor
jnp
mov
test
test
test
mov
icebp  
push
arpl
fimul
mov
movsl
pop
(bad)  
es insb
lea
imul
nop
les
sbb
xor
add
mov
jo
mov
ds pop
aaa    
cmp
pop
(bad)  
mov
add
int
int
das    
or
fmuls
xlat
inc
lea
dec
jne
jge
out
xlat
ret    
dec
rcll
cmp
pop
dec
or
cmp
stos
andb
sub
iret   
jmp
mov
mov
jg
fdivrl
adc
int
mov
jne
hlt    
push
test
xchg
push
fxch
pop
push
or
out
cmp
add
or
mov
sub
push
mov
fimull
lahf   
mov
xchg
dec
stos
nop
cmp
scas
(bad)  
cmp
out
scas
fimull
mov
leave  
dec
out
mov
incb
mov
xor
fdivs
call
and
dec
lss
fdivrl
les
mov
fsubrs
test
jp
sub
stos
mov
(bad)  
arpl
mov
mov
pop
jae
mov
mov
fnsave
dec
daa    
sub
adc
inc
xor
mov
les
mov
fstps
shll
cmp
(bad)  
jno
push
flds
and
cmp
mov
jecxz
and
xor
(bad)  
rcrb
(bad)  
(bad)  
jnp
jno
lods
push
or
inc
mov
jbe
mov
push
mov
jnp
jl
jecxz
in
sub
fstcw
fimul
push
push
loope
fucomi
lods
rorb
daa    
stc    
les
adc
jp
das    
cmpsl
sbb
inc
sbb
mov
iret   
cli    
jg
movsb
xor
rcl
jae
sub
mov
(bad)
push
adc
aaa    
xor
stos
in
add
mov
cmp
jno
mov
hlt    
push
cmpsl
xchg
cli    
dec
test
pop
mov
das    
arpl
sub
jmp
pop
xchg
cltd   
inc
iret   
lds
outsb
aas    
loop
pop
test
cmp
pop
xchg
add
fs out
out
xor
inc
mov
or
int
adc
loopne
cwtl   
(bad)  
dec
or
sti    
or
data16
fisubl
jb
int
mov
jae
xchg
or
fcomp
cs push
fprem  
mov
int3   
mov
insl
xor
adc
(bad)  
fdivrp
push
sub
inc
ret
adc
icebp  
dec
add
jnp
lgdtl
jp
iret   
bound
mov
icebp  
adc
inc
pop
push
pusha  
pop
or
test
push
lds
stos
or
iret   
fsubrl
popa   
pop
cmpsb
sub
push
test
jl
inc
dec
or
subb
mov
pop
je
loope
xor
mov
pop
lea
mov
sub
add
jmp
pop
cmp
push
cld    
call
cmpsl
test
ffreep
int
pop
push
lods
(bad)  
mov
call
loopne
out
rol
dec
icebp  
xchg
mov
push
cmc    
fisubr
jbe
dec
mov
out
push
outsb
std    
fbstp
or
inc
aas    
xchg
and
push
xlat
orl
ret
imul
imul
cwtl   
and
ret    
cmp
jmp
push
push
(bad)  
jno
jne
cmpsb
push
jmp
in
test
or
jmp
or
mov
mov
fisttp
push
push
inc
lock int3 
mov
(bad)  
dec
and
fdivr
loop
cmp
inc
adc
add
xchg
in
xlat
cmc    
dec
cli    
jge
sbb
xor
jg,pn
xchg
inc
jmp
mov
orl
mov
sbb
std    
lret   
xor
and
dec
(bad)  
pop
sti    
out
fcos   
xor
adc
fnstsw
cmp
addr16 lock mov
int
insb
into   
in
scas
fistp
cmp
mov
in
rol
loop
and
int
cltd   
stc    
xchg
cmp
pop
repz jp
outsl
test
test
inc
xor
mov
les
daa    
daa    
dec
rcrb
add
inc
lods
imul
mov
loope
lret
xchg
or
dec
sarb
out
rol
inc
mov
mov
cmp
lds
fucomp
pop
xchg
add
add
xchg
push
out
(bad)  
fisttpll
pop
mov
cmp
lds
loope
aaa    
jae
cmp
and
sbb
gs cld 
jl
push
cmpsl
ret
sti    
insb
(bad)  
mov
ljmp
scas
enter
cld    
aaa    
add
cmpsl
movsl
jae
je
mov
lret
xchg
or
adc
lods
jo
push
cmp
pushf  
scas
lock add
das    
cmp
xchg
xor
jle
into   
fxtract 
pop
xor
and
jbe
aam
jo
call
cltd   
cmp
pop
call
nop
sbb
pop
fnstenv
jmp
fcmovbe
inc
int
pop
repz out
aam
imul
not
ret
cmp
(bad)  
lods
push
sub
fstpt
sbb
repz adc
xor
or
dec
lock
(bad)  
mov
mov
sub
mov
mov
ljmp
enter
div
ror
imul
and
push
xor
mov
(bad)  
(bad)  
jne
icebp  
push
hlt    
mov
jns
xchg
xlat
pop
jo
fisubl
out
jl
push
andl
adc
mov
outsl
jne
push
or
cmp
outsl
jg
insl
gs push
mov
pop
fs fs or
sub
sbb
pop
outsb
dec
mov
jns
repz pop
rclb
cmc    
xchg
jno
xchg
xor
pusha  
pop
pop
out
lods
mov
or
cmpsb
lods
push
arpl
push
sub
push
les
or
(bad)  
fistl
mov
cmp
push
cmp
or
call
lods
outsb
(bad)  
imul
(bad)  
pop
push
iret   
in
(bad)  
mov
push
jnp
cmp
aas    
clc    
dec
or
lods
mov
xor
pop
dec
jns
(bad)  
push
xor
mov
mov
inc
dec
sub
vmovsd
mov
dec
or
dec
(bad)  
cmpsb
sub
mov
inc
sub
adc
jge
pop
insl
(bad)  
xor
orl
mov
mov
adc
mov
rolb
push
(bad)  
push
xor
mov
clc    
mov
(bad)  
fs or
loop
(bad)  
dec
mov
ret    
or
jo
dec
add
dec
iret   
jg
jg
mov
aas    
imul
aad
sub
lds
and
sbb
in
pusha  
jne
push
sarb
test
arpl
cmc    
xchg
movsb
icebp  
rolb
aaa    
xchg
test
cmp
aaa    
addr16 call
and
xchg
jmp
cs call
in
les
ss aas 
pop
fimul
inc
repnz push
fnsave
out
test
loope
pop
sub
fnsave
test
shld
popa   
xchg
ds repnz in
mov
mov
in
in
jns
test
icebp  
sub
xchg
sbb
jo
cmc    
add
or
je
iret   
(bad)  
dec
in
pop
cmpl
jae
jne
xchg
js
mov
jle
and
xchg
clc    
adc
inc
sub
rcr
fdiv
mov
aas    
pop
(bad)  
(bad)  
inc
sub
repz decb
popf   
fadds
mov
aaa    
daa    
test
lret
xor
ss dec
sub
lcall
test
mov
pop
push
inc
sti    
adc
xor
rolb
and
rcl
pop
je
sbb
add
xor
(bad)  
loope
(bad)  
pop
sub
lret
ss stos
scas
inc
push
add
jge
(bad)  
jns
je
stos
stos
mov
jg,pn
mov
adc
xlat
iret   
and
or
xchg
outsl
repnz dec
add
mov
outsl
adc
adcb
fsubrl
mov
xor
sbb
xchg
xchg
repnz mov
ds add
jmp
push
subb
icebp  
or
fistp
mov
imul
repz sar
jmp
dec
inc
inc
jbe
iret   
mov
cmp
cld    
sub
fstl
mov
cmc    
xchg
popa   
push
mov
pop
iret   
lahf   
jge
jp
xor
lahf   
js
xchg
nop
into   
icebp  
dec
cmc    
push
dec
fnstsw
ret
ret
and
(bad)  
jbe
ret
pop
loope
adc
push
icebp  
or
sub
lret
mov
fdivrp
push
xchg
jl
mov
dec
fnop   
and
fdivs
cmp
push
dec
fnstsw
ret
ret
gs xchg
dec
adc
ss out
daa    
mov
inc
sbb
fwait
and
icebp  
bound
rcll
stc    
lea
or
addr16
xchg
mov
inc
jb
cmc    
pop
out
js
aam
lret
mov
addr16 jmp
(bad)  
cmp
lea
mov
cmp
jge
ljmpw
dec
popa   
lods
and
repnz andl
cmp
icebp  
or
or
addr16
xchg
mov
xchg
fnsave
mov
mov
sub
icebp  
or
(bad)  
pop
scas
mov
(bad)  
push
fisttp
sbb
push
sbb
mulb
pusha  
rorl
into   
xlat
push
clc    
jl
mov
mov
sub
out
jl
js
pop
loope
pop
mov
incl
lea
mov
pop
enter
(bad)  
les
jnp
xchg
rorl
popa   
nop
mov
sub
icebp  
or
(bad)  
pop
scas
mov
mov
pop
fisttp
pop
xor
push
sbb
mulb
pusha  
rorl
into   
xlat
push
clc    
jl
mov
mov
sub
out
jl
push
pop
mov
incl
lea
mov
push
enter
(bad)  
les
(bad)  
aam
shr
aad
nop
mov
popa   
aaa    
jp
pop
dec
xchg
enter
(bad)  
out
xlat
iret   
fdivp
test
icebp  
scas
int3   
fdivr
mov
lods
jb
inc
arpl
popa   
adcl
inc
sub
inc
(bad)  
jle
out
mov
jbe
inc
dec
repz std 
dec
sub
lcall
push
fdivs
cmp
jge
cmpsb
mov
jbe
xor
into   
fisubrl
insl
int3   
scas
mov
mov
sbb
mov
add
inc
lcall
jecxz
les
std    
mov
jge
cmpsb
mov
jbe
xor
mov
mov
mov
sbb
mov
pop
movsbl
subl
jecxz
les
std    
mov
jge
cmpsb
mov
jbe
xor
ds
sub
scas
mov
mov
sbb
mov
pop
or
test
and
add
mov
jge
cmpsb
mov
jbe
xor
mov
scas
mov
mov
sbb
mov
pop
or
pop
adc
jecxz
les
std    
mov
jge
cmpsb
mov
es iret 
inc
pop
cwtl   
mov
xchg
pop
mov
or
in
fmul
pop
cltd   
lock
jmp
xor
jl
and
outsl
mov
cmp
jg
pusha  
imul
cmp
xchg
(bad)  
hlt    
movl
sub
pop
xchg
movsl
or
pusha  
scas
hlt    
fdivrl
pushf  
or
push
pop
dec
jge
dec
imul
adc
aaa    
mov
mov
xor
js
add
add
sbb
in
aas    
xchg
mov
mov
inc
fsubl
mov
int
ds mov
sub
dec
lahf   
adc
or
xor
mov
push
(bad)  
aam
sub
jbe
out
daa    
inc
mov
fwait
loop
or
and
ret    
pop
movsb
bound
sti    
mov
or
fstp
xchg
pop
mov
cmpsl
enter
sbb
adcl
lahf   
cli    
dec
jb
inc
aas    
pop
jae
cmc    
popf   
sub
popa   
rcr
(bad)  
or
mov
push
fistpl
loopw
add
insl
sub
xchg
push
push
lods
jae
add
jp
movl
std    
dec
(bad)  
scas
xlat
ss inc
sahf   
push
xchg
test
cmp
mov
test
jge
stos
and
sbb
(bad)  
out
push
fidivl
xchg
iret   
pop
adc
mov
and
push
mov
inc
push
icebp  
pop
ljmp
jp
(bad)  
jae
pop
cmp
aam
xor
or
pop
mov
pusha  
subb
jb
cmpsl
(bad)  
cmp
mov
stos
xchg
xchg
dec
insb
ja
adc
push
leave  
pop
mov
mov
mov
xchg
push
nop
mov
mov
bnd je
push
ja
test
mov
sub
outsl
(bad)
bound
jb
jbe
jae
outsb
adc
jo
pop
rcll
cmp
call
lods
jl
mov
mov
adc
pop
icebp  
nop
push
inc
inc
pop
sub
fcoms
adc
push
sbb
cmp
sbb
fwait
push
push
fucompp 
(bad)  
fcmovnu
test
jl
push
test
int
push
and
daa    
outsl
(bad)
bound
dec
icebp  
jbe
jae
outsb
adc
popa   
inc
in
sub
add
xchg
sbb
mov
and
jbe
lret
(bad)
lret
push
repnz pop
je
cmp
ret    
mov
push
fsubl
test
int3   
fild
sbb
fcompl
out
nop
aam
cmp
int
sbb
lods
jmp
mov
or
out
in
aam
or
aaa    
dec
aaa    
ja
pop
and
inc
bound
xchg
and
inc
iret   
daa    
rolb
jecxz
adc
inc
xor
jmp
xor
int3   
xor
mov
jecxz,pn
sub
aas    
in
sar
mov
(bad)  
mov
(bad)  
mul
out
enter
xor
lea
push
jo
aad
mov
cmp
push
sub
cmp
outsl
in
ds int
sbb
mov
dec
movsb
cmc    
mov
xchg
inc
sub
out
xlat
iret   
fdiv
stc    
imul
inc
inc
add
sbb
mov
push
test
push
cs scas
cwtl   
pop
inc
xchg
iret   
sbb
lret
pop
icebp  
nop
push
inc
inc
push
adc
jge
imul
jmp
notb
mov
call
mov
test
xlat
ds mov
clc    
aas    
add
or
cmp
sbb
adc
and
lahf   
mov
cmpsl
push
push
mov
enter
inc
(bad)  
cs push
paddusb
mov
push
cmp
hlt    
mov
pop
dec
popf   
or
adc
jo
repnz lods
push
xor
mov
fiaddl
mov
pop
(bad)  
xchg
movsl
dec
push
sub
cmp
outsl
(bad)
pusha  
insb
and
xor
cmpsb
mov
mov
xor
bswap
cmp
push
sbb
lret
xor
and
je
and
fs xchg
shll
mov
pop
(bad)  
mov
xor
fldl
xchg
aaa    
cmc    
mov
(bad)  
sub
inc
or
mov
cwtl   
mov
sti    
mov
aas    
mov
or
js
movsl
inc
sbb
dec
pusha  
xor
pop
frstor
push
mov
rol
and
aas    
jge
stos
and
fldcw
cmpsl
icebp  
xor
push
aaa    
rcrb
in
push
xor
(bad)  
mov
or
in
(bad)  
jnp
or
push
mov
inc
mov
fistpl
mov
dec
inc
push
sub
jns
sbb
cmp
ds lods
std    
mov
and
arpl
mov
mov
xor
push
dec
loopne
inc
mov
test
paddsb
scas
pop
mov
sbb
loopne
mov
es insl
sub
dec
cmp
ds mov
jecxz
xor
outsb
sar
inc
in
and
pop
pop
jne
stos
add
lcall
or
xchg
fmuls
sub
inc
ret
nop
push
inc
inc
push
adc
jge
add
push
pop
sub
jle
cli    
das    
or
jo
push
jb
pop
and
(bad)  
popl
xchg
inc
sub
ret
mov
and
aas    
dec
fldcw
push
aaa    
addr16 jmp
enter
in
mov
shll
jecxz
and
in
ret
sbb
jmp
and
inc
sub
in
repnz pop
cltd   
fdivs
mov
enter
cmp
push
mov
cmp
pushl
adc
ljmp
(bad)  
je
mov
cmp
mov
pop
adc
push
inc
int
and
call
pusha  
inc
add
je
jb
and
icebp  
mov
nop
pop
mov
or
inc
outsb
inc
ja
push
stc    
push
aam
(bad)
fidivl
pusha  
push
mov
push
outsl
xor
int3   
pop
mov
movsl
mov
adc
lea
test
in
xor
(bad)  
or
test
es out
(bad)  
mov
popf   
push
xchg
cld    
and
into   
aas    
jmp
or
mov
mov
xor
mov
ljmp
adc
mov
mov
cmc    
outsl
into   
ret
rolb
sub
iret   
fsubrl
insl
inc
ljmp
in
fimull
pop
ss push
lret   
mov
ss sub
xchg
test
inc
sub
ljmp
pushf  
imul
add
lds
lea
pop
test
and
adc
mov
loop
xor
(bad)  
rorb
xor
les
je
push
adc
cmp
xor
adc
push
mov
cmp
jle
dec
outsb
je
in
sub
cld    
adc
imul
sbb
mov
mov
ror
xchg
(bad)  
stc    
adc
push
in
(bad)  
cltd   
cmp
cli    
xor
xchg
jg
inc
std    
ret
pop
xchg
mov
jg
aas    
int3   
pop
add
sub
in
mov
mov
mov
(bad)  
pop
stos
adc
lds
les
stos
sbb
and
lods
out
(bad)  
jns
sbb
and
mov
inc
cmp
(bad)  
jge
mov
xor
sbb
pop
ja
incl
xorl
or
stc    
(bad)  
ljmp
push
sub
nop
test
test
mov
mov
insl
cmp
mov
mov
fidiv
psraw
inc
sti    
xlat
pop
lret   
jns
jle
sarb
adc
enter
shrb
xlat
mov
xchg
cmpsb
dec
jns
scas
pop
dec
mov
xchg
ret
cmp
and
jns
es pusha 
add
call
jecxz
mov
adc
mov
das    
lahf   
loop
(bad)  
cld    
into   
or
cmp
xor
lret
adc
(bad)  
jne
out
xlat
ret    
arpl
and
or
push
dec
fst
ds lahf 
cmp
jbe
out
sahf   
movb
addr16 xchg
lods
jne
imul
mov
(bad)  
cmp
xor
sub
les
jg
loopne
add
inc
mov
mov
imul
sbb
das    
sbb
mov
sub
hlt    
cmpsl
xchg
pop
dec
xor
ret
movsl
in
pop
mov
fnop   
mov
pop
loop
ret
iret   
pop
movsl
lahf   
mov
stos
adc
or
xor
int3   
cmc    
clc    
cli    
aam
xchg
inc
and
cli    
das    
or
popf   
movl
pop
fimull
fs mov
pop
sub
xor
pop
jle
pop
inc
mov
out
xlat
ret    
inc
(bad)  
jne
ret
mov
popf   
sub
popa   
loope
xor
(bad)  
bnd je
push
test
sbb
mov
int
or
push
dec
adc
outsl
sub
push
mov
mov
mov
pop
fdivs
mov
xchg
imul
sbb
adc
aas    
sti    
push
stos
ret
mov
adc
nop
out
cmp
loopne
out
push
dec
cmp
pushf  
int3   
jb
call
xchg
sbb
sarb
mov
sti    
mov
outsb
xor
dec
and
addl
in
xorl
arpl
mov
and
mov
push
gs pop
cmp
cmp
mov
or
sbb
repz or
push
add
test
cltd   
lea
fnsave
mov
mov
mov
cmp
nop
repz add
or
sub
push
lods
mov
mov
loope
ret    
sahf   
out
lcall
adc
fcomip
(bad)  
jno
sarl
jb
std    
lock cmp
jns
cmpsb
aas    
and
xor
lcall
nop
loope
int
outsl
repz ja
xor
outsb
pusha  
jae
push
jbe
add
std    
leave  
pusha  
outsl
mov
test
jbe
dec
fistpll
sbb
shl
aaa    
test
xor
mov
mov
fnsave
sub
cli    
cmp
repz daa 
das    
adc
(bad)  
jo
and
inc
imul
jg
xlat
adc
flds
lods
lret   
and
mov
inc
sub
movb
inc
dec
lahf   
or
scas
lea
mov
in
outsb
mov
sbb
push
push
ud2    
test
add
das    
push
fsubrl
fcmove
xor
out
or
sub
cwtl   
or
je
cmpsl
xchg
sarl
mov
add
jle
push
pusha  
add
jne
sub
adc
or
mov
mov
fimul
movsb
or
(bad)
(bad)  
jno
sbb
push
xchg
jp
mov
int3   
jns
gs push
mov
(bad)  {%k7}
lret   
dec
mov
clc    
inc
jle
ja
lods
sub
fsubrl
jle
adc
call
(bad)  
mov
mov
sub
xchg
out
push
insb
xlat
inc
xchg
xchg
rcpps
add
jp
dec
cmc    
(bad)  
clc    
mov
mov
and
test
push
(bad)  
jg
or
jl
mov
mov
add
scas
and
cli    
sub
test
(bad)  
mov
cmp
pop
mov
xchg
mov
or
inc
(bad)  
adc
cmp
push
xchg
push
into   
std    
pop
xchg
rcl
xor
cmp
cmpsb
xchg
pop
movsb
xchg
push
fdiv
sbb
out
and
lret
dec
pop
cmpsb
jno
lods
push
push
xchg
xchg
pop
inc
in
pop
outsl
and
decb
movsb
push
ret    
pop
pop
(bad)  
adc
push
in
pop
add
jle
xchg
cli    
push
sbb
iret   
cwtl   
movsb
add
jne
clc    
push
or
push
adc
cwtl   
dec
lods
sti    
cltd   
dec
cmpsb
jbe
xchg
fcompl
pushf  
jae
aam
jl
pop
lcall
je
sbb
daa    
daa    
mov
adc
inc
imul
lea
call
call
inc
mov
std    
mov
int
adc
sub
cmc    
mov
iret   
xor
lods
pop
xchg
xor
dec
fdivs
jg
xor
add
sub
pop
into   
xchg
popa   
jge
or
jmp
mov
jnp
outsb
jmp
clc    
sub
lea
and
jb
pop
sub
leave  
xchg
lods
mov
lcall
out
sub
mov
flds
cmpsl
dec
sbb
in
(bad)  
mov
dec
mov
nop
test
fisubrl
cmp
ss inc
mov
jno
aam
test
jp
inc
cld    
jg
add
jmp
dec
mov
mov
add
scas
stos
outsl
(bad)  
cs dec
repnz decl
jnp
inc
fnsave
cmpsb
dec
push
(bad)  
jns
mov
or
mov
cmp
and
js
xor
jge
xlat
inc
daa    
movsl
jno,pn
cmp
push
xor
cmp
sub
xchg
lods
roll
xchg
push
push
adc
fwait
test
sub
lods
ret    
aad
gs sbb
out
xchg
sbb
lret
inc
sub
or
mov
icebp  
mov
jne
mov
pop
push
mov
out
faddl
mov
cwtl   
push
lret
mov
psraw
(bad)  
mov
cltd   
pushf  
sbb
xchg
mov
xor
xchg
daa    
aas    
add
dec
out
jnp
(bad)  
jo,pt
enter
add
pop
(bad)  
adc
ficompl
daa    
(bad)  
and
cmp
int3   
je
and
iret   
movsb
mov
mov
fs fwait
scas
mov
std    
pop
push
popa   
lret   
xor
cwtl   
repz daa 
in
add
into   
scas
stc    
(bad)  
pusha  
or
sub
mov
mov
int
jge
out
xlat
ret    
mov
outsl
cmp
faddl
ret
hlt    
xchg
mov
cmpsb
lret   
mov
mov
sar
or
insb
push
(bad)  
scas
ret    
stc    
out
in
(bad)  
cmp
add
ljmp
push
push
cmp
(bad)  
pop
iret   
sub
divl
test
fwait
sub
xchg
mull
mov
cmp
mov
cmp
hlt    
lcall
pop
int3   
cmp
mov
loope
mov
add
dec
mov
xlat
mov
or
rorl
cmp
pop
sub
pop
mov
and
loop
(bad)  
cmp
or
lahf   
sarb
(bad)  
fcomps
inc
stos
std    
jae,pt
push
push
lret   
ret    
add
test
push
sbb
jge
insb
inc
mov
adc
aas    
enter
shll
rcrl
cmp
adc
mov
ljmp
pop
lret
imul
inc
iret   
and
adc
xor
and
call
(bad)  
pusha  
pop
and
cmp
sbb
imul
jmp
add
cld    
lods
and
push
adc
push
jmp
cmc    
or
jne
aas    
icebp  
rorb
sbb
mov
jle
pop
aam
xchg
push
out
xchg
mov
xor
pop
adc
or
nop
test
mov
movl
fs sbb
pop
iret   
lret
fisttpl
pop
aas    
push
aas    
mov
and
or
ja
testl
inc
mov
fistl
cld    
jp
push
cwtl   
lret
xor
scas
inc
xlat
shrl
aam
and
lahf   
repz out
or
push
out
aam
movsb
sbb
mov
es iret 
(bad)  
jle
and
loop
(bad)  
outsl
push
inc
dec
adc
sbb
jge
jge
in
mov
ljmp
xchg
rcr
jmp
arpl
out
xlat
ret    
dec
sbb
push
dec
loopne
add
xor
cmc    
popf   
sub
and
(bad)  
xchg
mov
gs xor
and
xor
xorl
push
jbe
data16 in
jg
in
add
inc
test
pop
and
aam
mov
add
gs xor
sbb
insb
lret   
xor
xorl
mov
das    
cmp
cmp
push
inc
aaa    
gs mov
inc
jle
imul
push
out
cld    
scas
arpl
sbb
mov
inc
push
xchg
mov
dec
xor
push
data16 stos
out
loop
test
daa    
int
int3   
jge
enter
push
inc
rolb
cmc    
xor
leave  
push
sub
add
daa    
inc
mov
jp
mov
icebp  
mov
push
jo
cmc    
cmp
sahf   
sub
sti    
push
les
mov
sbb
js
mov
cltd   
bound
pop
mov
mov
loope
imul
push
bound
les
enter
or
or
gs or
js
dec
test
cmp
popa   
test
mov
xchg
mov
imul
cmp
sbb
sti    
push
pop
mov
or
push
xchg
mov
jnp
in
imull
jne
xor
jbe
clc    
aas    
add
sbb
push
jae
jo
les
adc
gs cld 
sub
(bad)  
xor
jb
inc
add
cmp
inc
push
mov
lret
dec
fwait
in
fistpl
cmp
inc
mov
mov
movsb
push
es mov
jb
inc
arpl
dec
push
enter
inc
jbe
dec
dec
ljmp
lahf   
jge
cmp
pop
jb
dec
ljmp
(bad)  
int
(bad)  
cld    
dec
lea
pop
jne
sbb
(bad)  
and
mov
mov
cltd   
push
int3   
fldcw
inc
or
stos
ja
push
int
aam
test
aas    
mov
or
ljmp
leave  
mov
mov
push
lods
cmp
aam
(bad)  
dec
sub
mov
fadds
xchg
mov
adc
xor
scas
xchg
mov
or
xchg
sub
ja
jne
and
lds
addr16 cltd 
addr16 mov
fnsave
add
out
roll
out
(bad)  
or
ss pop
out
(bad)  
leave  
(bad)  
inc
mov
cmc    
(bad)  
outsl
popf   
cwtl   
in
push
mov
lret
push
sbb
push
or
fimull
mov
adc
andb
ret    
jo
push
rorb
push
and
sub
push
mov
jbe
and
sbb
test
inc
es scas
sbb
andb
out
xlat
dec
pushf  
mov
sbbb
mov
xchg
pop
xchg
mov
iret   
and
in
xchg
ljmp
add
loop
(bad)  
out
sub
xchg
out
xlat
ret    
dec
into   
xchg
lcall
sbb
(bad)  
and
or
xchg
jecxz
or
xor
stos
inc
sbb
cmpsl
fwait
mov
push
loop
fs sub
jae
xchg
shrb
sti    
push
mov
pop
cmp
out
sti    
or
jle
(bad)  
dec
sub
mov
lcall
rcll
in
cmc    
sub
rclb
rclb
lea
push
stc    
inc
mov
xchg
ret
aaa    
cmp
sub
sahf   
xor
repz les
push
xlat
mov
sub
bound
sarl
jb
enter
rcrb
ficom
mov
cmp
mov
test
push
jg
inc
daa    
inc
mov
adc
stos
mov
sbb
jb
and
lds
and
push
xlat
sbb
in
loopne
les
fcoms
sbb
dec
divb
xlat
repnz mov
fwait
test
enter
add
mov
mov
in
mov
mov
in
add
repz add
mov
push
push
xor
std    
xchg
inc
pop
xchg
push
les
jp
sbb
movsb
fildl
(bad)  
mov
inc
xor
fnstenv
fdivs
and
inc
std    
repz add
mov
bound
outsb
in
dec
cmp
repz add
mov
dec
mov
(bad)  
xor
push
rorb
and
imul
in
push
(bad)  
mov
sbb
shl
aaa    
test
loope
xlat
dec
fdivr
xchg
ds out
fnstenv
sbb
and
xchg
imul
(bad)  
mov
adc
pop
push
mov
arpl
mov
ret    
jg
mov
out
popa   
std    
dec
shlb
addr16 inc
jo
mov
or
fimul
fdivs
add
adc
mov
pop
fmuls
std    
(bad)  
(bad)  
xor
xor
out
stc    
std    
mov
mov
sbb
add
repnz xchg
dec
push
adc
dec
push
aam
adc
idivl
les
(bad)  
int3   
fsubrs
(bad)  
jb
or
add
imul
jp
xor
in
mov
dec
es or
negb
xor
push
movsl
push
icebp  
daa    
mov
jne
jbe
mov
fnsave
ror
add
fsub
and
push
cld    
out
iret   
lds
push
inc
add
sahf   
mov
mov
and
pushf  
or
mov
rol
pusha  
push
stc    
ss push
cli    
pop
sbb
and
out
sub
ret    
sub
push
sbb
iret   
pop
enter
daa    
ds movd
pop
mov
sahf   
cmp
and
rcr
repnz cmp
xor
cmp
aam
pop
xchg
xchg
add
cmp
xor
cmp
aam
push
mov
pop
(bad)  
sub
add
sub
(bad)  
jle
cltd   
mov
fisttpl
adc
jmp
add
lea
loop
test
mov
stos
seta
fucomip
ret
jmp
out
mov
cmc    
roll
nop
xchg
ds stc 
arpl
loop
std    
(bad)  
(bad)  
mov
cwtl   
lods
cmc    
int3   
mov
dec
mov
and
jle
movsb
aam
ffree
mov
stc    
pop
lret
ljmp
out
pop
daa    
fs scas
add
stc    
call
push
faddp
mov
push
ret
fistpl
jmp
dec
inc
ds
lret   
nop
enter
cmpsl
movsl
jmp
testl
aas    
les
mov
sti    
cli    
xor
test
out
sahf   
sub
add
imul
mov
pusha  
daa    
mov
xchg
sbb
(bad)  
cmp
pop
(bad)  
pop
loope
mov
cmc    
cli    
(bad)  
(bad)  
inc
(bad)  {%k7}
shr
out
add
mov
fwait
ss loop
sbb
addr16 mov
inc
mov
rcl
add
push
sbb
or
fcomps
cmpl
jg
into   
shrb
xchg
push
ss or
mov
adc
in
cmp
int3   
mov
inc
and
jge
xlat
inc
push
and
xor
js
cmp
cmc    
sub
stos
std    
(bad)  
daa    
jmp
sbb
sub
xchg
cmp
and
fdivrl
shlb
pushf  
or
test
mov
test
pop
test
ret
add
sbb
fwait
add
int
pop
mov
mov
sbb
lahf   
inc
pop
aaa    
xor
jp
push
test
mov
cmpsl
mov
out
pusha  
dec
adc
mov
(bad)  
fs pop
pop
arpl
mov
mov
aam
xor
sub
xor
or
dec
and
add
stc    
push
stos
mov
mov
popa   
outsb
in
lcall
fdivrl
pop
jecxz
jb
cmpl
scas
lea
ret
cmp
popa   
push
aad
fdivp
xor
and
cmp
cmp
mov
xlat
inc
push
and
xor
js
mov
or
push
icebp  
mov
push
push
adc
xchg
cmpb
cmp
push
mov
or
push
imul
inc
sub
dec
sarl
aam
fcomip
xor
and
cmp
add
push
sub
(bad)  
or
lar
ljmp
imul
inc
push
and
xor
js
das    
cmpsl
in
stos
push
loopne
ret
and
iret   
pop
enter
daa    
ds punpckhbw
fidivl
adc
or
movsl
cmpsl
pop
imul
dec
jns
lret   
cmp
cmp
fcomip
xor
and
cmp
cmp
rorl
(bad)  
hlt    
xchg
hlt    
mov
jmp
mov
add
cmpsl
jl
js
sub
xchg
cmp
ljmp
mov
in
sub
xchg
dec
jmp
int3   
inc
sub
fdivl
outsb
mov
repz mov
and
int
pop
add
xor
(bad)  
clc    
and
bound
sbb
jb
inc
arpl
jns
dec
loope
gs push
call
push
imul
cmp
sub
mov
mov
mov
les
dec
mov
into   
test
push
lcall
push
and
xor
js
stos
inc
(bad)  
std    
xchg
add
out
xlat
inc
call
or
addl
cmpl
ret    
sub
push
dec
popa   
test
push
and
xor
js
pop
mov
aas    
push
jae
out
xlat
inc
call
jae
xchg
push
or
mov
(bad)  
daa    
pavgb
pop
lock mov
pop
cmc    
ret    
sub
push
dec
jb
(bad)  
lods
out
ficoml
sbb
lret
pop
inc
push
test
ret    
and
cmp
(bad)  
mov
rol
pusha  
push
stc    
fsubrs
popl
pop
adc
adc
pop
mov
test
out
and
test
addr16 lret 
pop
and
arpl
outsb
hlt    
repnz sbb
jo
cmpsb
mov
(bad)  
sbb
fs fwait
aad
and
adc
sub
sub
jmp
cmpsb
sbb
pop
lahf   
jge
data16 aas 
mov
sbb
mov
and
mov
adc
add
vhsubpd
ret
mov
insl
push
repnz adc
xor
inc
jbe
ds push
push
aam
adc
mov
jp
mov
mov
sub
adc
inc
push
in
out
push
xlat
lcall
addr16 adc
cmp
stos
lret
and
ret
ret
lahf   
jge
bound
fisttpl
aam
lret
and
cmpsl
sarl
(bad)  
call
mov
in
inc
cs pop
testl
jp
xor
into   
pop
cli    
pop
pop
jmp
or
jb
inc
xchg
shlb
pusha  
xchg
or
subb
cmc    
(bad)  
mov
std    
ds jmp
mov
xchg
leave  
jnp
mov
shrl
sbb
call
out
mov
dec
jmp
jo
and
hlt    
push
aam
mov
roll
mov
mov
sub
(bad)  
(bad)  
rcrb
stos
lret
add
imulb
push
je
adc
mov
xor
out
cmc    
rorl
iret   
je
or
or
jns
ljmp
cmp
or
stos
lret
sahf   
(bad)  
addr16 shl
add
cmpsb
call
add
or
jg
ret
inc
out
xchg
std    
test
pop
into   
mov
dec
stc    
lea
mov
rcl
add
and
fs inc
jb
adcl
dec
push
jns
ljmp
adc
inc
sub
lods
repz sub
cmc    
repz jl
cli    
cmpsb
popa   
mov
icebp  
iret   
stos
hlt    
repnz decl
enter
xchg
aaa    
lods
ds repnz mov
(bad)  
lods
ret    
lahf   
xchg
pop
push
out
mov
js
add
(bad)
jmp
cli    
mov
(bad)  
(bad)  
push
les
repz mov
or
mov
(bad)  
iret   
sub
cmc    
inc
sbb
jmp
xchg
jnp
mov
ljmp
(bad)  
out
sti    
scas
popf   
negl
stos
cmc    
mov
jb
fsubrp
insb
cmp
inc
inc
enter
lods
shll
ja
mov
ljmp
cmp
inc
jns
inc
daa    
xorl
or
push
jle
sbb
in
loopne
iret   
(bad)  
dec
fcoms
pop
xchg
sar
xchg
pop
dec
ljmp
(bad)  
int
out
pop
psrlw
sub
stos
fs pusha 
pop
sti    
mov
pushf  
jo
call
cmc    
mov
jns
xor
ds
adc
push
fdivs
fisttp
inc
in
leave  
iret   
xchg
and
sub
lock sub
jle
fist
lret   
mov
mov
mov
nop
dec
and
jp
jmp
xor
sbb
push
stos
sub
jg
jb
js
imul
dec
mov
jae
and
fdivl
fwait
stos
push
pop
mov
fmuls
mov
mov
cmc    
mov
or
popa   
cmp
pop
(bad)  
rcll
subl
adc
jae
or
sub
add
mov
cmpsl
push
push
adc
fcomps
jle
fsub
test
ficompl
lcall
inc
imul
xor
lds
out
enter
insb
cmc    
dec
pop
cmp
in
cmpl
and
lahf   
cltd   
mov
cmp
hlt    
shll
dec
bound
lock add
stos
scas
xor
fsub
push
inc
fcoms
pop
dec
sbb
pop
dec
ljmp
(bad)  
int
out
fwait
cwtl   
jecxz
arpl
(bad)  
dec
and
fdivr
clc    
jle
repnz sub
addr16 mov
in
push
fs inc
lahf   
cmpsb
in
inc
rcl
mov
mov
popf   
cmc    
lret   
ja
xchg
mov
push
cwtl   
out
fldenv
xchg
pop
jae
and
mov
push
ss enter
fs add
fwait
sbb
cmpsb
pop
int3   
scas
mov
xchg
mov
in
cmp
cwtl   
inc
imul
(bad)  {%k5}
inc
cmpsl
repz push
mov
xlat
fsubrl
jno
xchg
ficompl
lcall
and
call
adc
orb
mov
jae
sbb
jge
repnz cmp
dec
lock int3 
lods
sbb
stc    
leave  
decl
mov
mov
sbb
in
loopne
push
data16 cmp
adc
cwtl   
sub
sbb
pop
mov
js
jge,pn
sub
cmp
in
(bad)  
rcl
pop
divl
lret   
scas
fiadd
dec
mov
aas    
fdivp
pop
pusha  
(bad)  
fwait
cwtl   
scas
xor
in
pop
in
cmp
cli    
test
pop
mov
into   
movsl
mov
gs sub
clc    
mov
fwait
es sub
jbe
rcr
push
setnp
jns
mov
sbb
les
cmp
(bad)  
xor
pop
mov
test
push
add
ret    
lret
jbe
mov
aaa    
rorb
xchg
les
dec
lods
and
xchg
fisttpl
mov
pushf  
pop
iret   
xor
xchg
cwtl   
cmpl
rcll
inc
mov
in
mov
imull
xor
mov
push
dec
test
repnz xchg
loop
xchg
mov
pop
fisttp
or
pop
divb
scas
inc
lock xchg
add
or
daa    
lods
push
sub
out
fld
and
rcrl
dec
out
mov
jg
mov
clc    
adc
inc
sub
gs xchg
add
sbb
lea
or
jo
mov
mov
pslld
cmp
mov
push
and
daa    
out
mov
jl
je
cwtl   
pop
aad
ret    
(bad)  
cli    
inc
sub
in
mov
xchg
lcall
mov
lret   
mov
or
inc
mov
mov
and
or
into   
test
xor
xchg
or
mov
dec
out
jne
xor
sub
inc
ret
cwtl   
jle
inc
pop
sub
xor
pop
lret
sub
jecxz
es dec
lock jbe
mov
inc
inc
or
sbb
fwait
push
les
lods
push
and
jle
sub
out
sub
lahf   
dec
imul
lds
or
sbb
test
dec
orl
jns
(bad)  
scas
cwtl   
mov
add
jg
ret    
mov
add
sub
imul
and
js
and
outsl
data16 out
ja
pop
mov
fnstsw
addl
jae
iret   
es pusha 
and
adc
movsl
and
test
leave  
inc
shll
bnd ja,pn
xchg
lods
test
loopne
sar
dec
sub
lea
sahf   
bswap
mov
xor
or
ja
xchg
jle
push
aam
cmp
mov
mov
loopne
ror
dec
pop
inc
inc
lea
and
fisub
adc
pop
pop
js
iret   
enter
mov
cmp
jg
cmp
pop
jne
pushf  
jbe
push
push
cmc    
push
sub
push
clc    
pop
aad
ret    
mov
push
fcompl
inc
arpl
stc    
xor
dec
ror
lahf   
mov
push
cmp
inc
lea
and
lret   
aas    
clc    
ret    
test
int3   
adc
fsts
push
mov
and
pop
or
xchg
stos
dec
mov
outsl
movl
fs adc
cmpsl
jge
or
push
xor
inc
push
lea
test
leave  
inc
dec
sbbb
xchg
lods
subb
adc
add
jg
cbtw   
mov
inc
test
sub
xchg
(bad)  
mov
sarb
lea
out
mov
pause  
jo
jno
sbb
imul
jg
sub
adcl
sbb
shrb
and
xchg
daa    
into   
fidivl
jne
aam
fcomps
adc
add
rcr
fnstsw
enter
jnp
pop
xchg
add
push
mov
xchg
and
jg
out
push
cmpsb
decl
pop
push
adc
fistpl
push
mov
aam
inc
js
cwtl   
das    
push
inc
dec
adc
loop
pop
int
xchg
dec
decl
push
xor
ja
arpl
mov
out
sub
xchg
ja
pop
cmpsb
shll
(bad)  
mov
lock xor
fwait
repz adc
sbb
mov
nop
lea
and
mov
out
repz out
mov
mov
ret
sub
inc
push
jmp
jne
aas    
sti    
push
stos
cli    
cmp
jbe
icebp  
cmp
lods
dec
mov
sbb
lea
and
sub
mov
xor
test
rclb
pop
pop
leave  
das    
(bad)  
push
and
hlt    
mov
and
or
mov
pop
jmp
lcall
push
push
push
pushf  
xlat
fwait
add
in
in
xchg
dec
xor
xorl
shrl
ds mov
(bad)  
jecxz
aam
sti    
popf   
push
sbb
sbb
insb
pop
out
dec
dec
sbb
out
or
sub
movsb
ljmp
xchg
xchg
jns
clc    
adc
add
xor
rorl
jp
dec
jno
sbb
(bad)  
notl
repz fdiv
or
mov
neg
notb
fdivp
jo
inc
daa    
daa    
dec
ljmp
daa    
mov
out
add
ret    
pop
(bad)  
out
sti    
or
(bad)  
leave  
inc
enter
test
xor
icebp  
cmp
imul
xor
mov
sbb
jnp
or
dec
pop
xor
cmpsl
ds xor
or
femms  
sti    
imul
sub
in
mov
mov
paddusb
and
rcll
inc
call
in
out
movsl
imul
cmc    
loope
inc
xchg
(bad)  
cmpsb
notl
or
xchg
jbe
pop
jno
push
pusha  
es sub
mov
adc
xchg
adc
jo
js
xchg
sub
outsl
pop
pop
nop
mov
xchg
or
hlt    
lods
rclb
testb
lods
bound
jp
xchg
divl
lds
push
sub
mov
mov
outsb
(bad)  
xlat
jo
sub
cmp
ljmp
dec
add
jle
je
jo
inc
imul
and
adc
mov
popf   
sub
and
imul
cmp
add
loop
test
jae
inc
or
adc
fisubrl
sub
in
adcb
jns
dec
mov
adc
pop
push
dec
push
xchg
test
aaa    
ljmp
insl
add
xor
inc
popa   
or
sar
aas    
sub
loop
or
pop
pop
pop
xor
add
(bad)  
rcrb
jae
leave  
fildll
loopne
add
inc
pop
je
inc
mov
imul
adcb
sub
pushf  
push
pop
add
jg
shl
sub
fdivl
jae
push
inc
inc
fsub
push
mov
jg
popa   
push
loope
xor
jno
subl
inc
lods
mov
cs xor
jmp
xor
inc
lods
flds
dec
push
jge
sbb
sbbl
xor
lds
cmp
and
xchg
pop
xlat
cmovs
out
sub
sbbl
jns
dec
imul
movsl
dec
jbe
xchg
loope
jno
testl
insl
insl
outsl
int
add
loop
add
scas
pop
jmp
mov
xor
xchg
add
pop
sti    
mov
popa   
dec
loopne
daa    
lock push
xchg
daa    
mov
sahf   
dec
pop
jns
mov
push
jae
scas
inc
sahf   
mov
jp
mov
xor
call
adc
mov
lds
ret
push
pop
lea
je
stc    
pop
lret
and
mov
cs fwait
and
jg
pop
stos
popa   
test
and
xchg
das    
mov
cmp
fisttpll
imul
and
cmp
lret
sbb
nop
push
inc
inc
sbb
add
push
xor
lds
lock adc
xor
loope,pt
sbb
cmp
xor
jg
bound
cwtl   
pop
lcall
push
sub
cmp
ds mov
bound
int3   
shll
aam
add
sbb
pop
dec
jge
inc
loop
xor
sub
inc
xchg
xchg
loop
inc
sbb
or
sub
xor
mov
xor
test
pop
push
jbe
xor
fsubrp
pop
inc
dec
rcll
arpl
lock dec
cld    
adc
inc
xor
xor
lahf   
js
cmp
popa   
mov
ret
pop
imul
test
mov
(bad)  
addr16 push
aam
lret
(bad)  {%k5}
ljmp
fdivs
jbe
jmp
addr16 js
cld    
adc
dec
inc
or
jo
addr16 jns
cmp
inc
nop
fcmovnu
push
lods
and
xchg
in
jae
inc
repnz
in
sbb
mov
lds
lahf   
jge
data16 pop
iret   
mov
jne
sbb
test
xor
stc    
lea
mov
addr16 enter
adc
sub
das    
rclb
inc
or
in
fs test
cmp
lods
lds
mov
inc
bnd js
lea
xlat
into   
(bad)  
(bad)  
mov
jecxz
sbb
insl
stos
adc
popf   
pop
lahf   
es out
gs ds inc
mov
push
das    
add
push
mov
out
mov
lret   
jno
push
das    
mov
psubusb
addr16 push
jge
cmpsb
mov
es iret 
inc
or
mov
jl
and
imul
aad
inc
adc
aam
cs mov
fisttpl
and
mov
jmp
xchg
dec
outsl
test
mov
sub
mov
and
test
cmc    
fdivs
icebp  
(bad)  
jae
jge
outsb
popa   
rol
mov
arpl
push
sbb
and
inc
push
xchg
dec
and
cmp
push
sahf   
test
imull
jecxz
ljmp
adc
push
aad
inc
or
les
jecxz
call
fnstcw
and
aas    
(bad)  
iret   
mov
mov
rorl
xchg
sub
push
xchg
sub
rcrb
mov
test
(bad)  
insb
sbb
adc
hlt    
jae
or
adc
jmp
rcr
and
xor
in
inc
ret
(bad)  
inc
movsl
ljmp
mov
(bad)  
xor
mov
daa    
daa    
sub
xchg
mov
dec
mov
mov
loope
mov
imul
mov
fsubl
jb
(bad)
pop
jle
mov
ljmp
sub
push
je
cmp
and
mov
nop
cmp
mov
fistp
xor
sbb
mov
cmc    
cli    
fistp
fisubl
push
push
cld    
insl
sbb
push
verr
inc
dec
test
xchg
push
jmp
ret    
cmp
aam
les
mov
gs ljmp
lods
dec
outsl
imul
jbe
jno
jb
or
clc    
fist
inc
mov
or
pop
dec
mov
call
fdivrl
(bad)  
sbb
leave  
mov
rcll
(bad)  
ss sub
aad
lods
jb
dec
pusha  
inc
cli    
mov
cmpsl
lcall
xchg
lea
shr
stos
dec
test
mov
loopne
out
lds
sbb
adc
add
push
sub
imul
jl
das    
movsb
mov
xchg
incl
or
mov
jne
cmpsl
adc
(bad)  
hlt    
outsb
addr16 sub
jle
jne
cmpsb
sbb
mov
inc
mov
push
lods
cmp
and
fistpl
add
clc    
dec
mov
sarb
ljmp
and
and
iret   
enter
int
cltd   
fnstsw
int3   
sub
and
sbb
and
and
cmc    
inc
mov
ja
(bad)  
shrl
or
lds
sbb
decl
out
cs int
xchg
shlb
cmp
mov
leave  
or
in
jle
les
or
mov
add
int
mov
icebp  
mov
push
cli    
push
pop
jns
jmp
in
je
jg
test
mov
mov
cltd   
loopne
jecxz
ljmp
mov
xchg
xor
mov
test
sub
(bad)  
pop
pop
sbb
jo
sub
cs into 
cmpl
(bad)  
aaa    
test
jle
sahf   
dec
and
cmp
cmpsb
in
mov
(bad)  
fist
psrad
mov
hlt    
out
flds
and
sti    
(bad)  
inc
xchg
nop
cwtl   
ret
pop
cmp
push
mov
sbb
lcall
les
xor
xchg
pop
pop
stc    
sarb
pop
arpl
sub
lods
sbb
jno
and
cmp
pop
call
xchg
adc
sahf   
jl
ljmp
xchg
andps
je
sbb
std    
cmpsb
jae
inc
pop
js,pt
fmuls
sub
je
xor
(bad)  
fisttp
(bad)  
rorb
pop
fwait
or
cmc    
mov
arpl
or
add
sbb
(bad)  
std    
xchg
inc
pop
xchg
push
les
rcrb
xor
pop
(bad)  
decl
jg
out
mov
decb
mov
adc
and
lock push
loope
cmp
(bad)  
out
sti    
xchg
or
fwait
stc    
mov
sub
dec
mov
jnp
(bad)  
and
icebp  
cltd   
imul
shrl
ret
dec
ljmp
(bad)  
int
andb
jmp
push
xor
mov
jecxz
inc
(bad)  
mov
mov
add
sub
cmp
sbb
add
fs sbb
pushf  
pop
cmp
daa    
jmp
pop
testl
and
lahf   
sarb
xchg
add
mov
dec
ja
sub
inc
aam
lret   
add
ret    
pop
clc    
sbb
cld    
fs sub
je
ljmp
fmuls
push
jge
cmp
cmp
mov
iret   
enter
xchg
test
sub
cmc    
icebp  
rdtsc  
ljmp
sbb
into   
test
xor
std    
in
jecxz
dec
(bad)  
jmp
fs and
mov
shll
out
xlat
ret    
mov
(bad)  
push
pop
into   
idivl
jle
add
roll
jp
inc
aas    
in
jge
les
jp
shll
sbb
mov
xchg
sub
mov
lods
mov
inc
adc
idivl
adc
mov
fdivr
and
or
fsts
pop
xchg
pop
loop
cmpsb
in
adc
fist
addr16 inc
or
les
jecxz
call
add
jg
(bad)  
mov
aam
mov
in
add
ds push
xchg
mov
loop
pop
(bad)  
cmp
hlt    
out
(bad)
in
stos
adc
inc
or
sbb
xchg
enter
mov
cmp
and
pop
xchg
(bad)  
xchg
pop
dec
ljmp
(bad)  
int
repnz bound
lods
lods
cmc    
xchg
pop
dec
ljmp
(bad)  
int
daa    
lret   
popf   
sub
mov
or
cld    
xchg
shrl
mov
mov
dec
jg
jns
mov
cli    
je
jnp
rolb
leave  
daa    
movsl
mov
ret
sub
daa    
and
lret
or
lods
jb
push
or
or
sti    
jno
cltd   
shl
pop
xor
ret
pop
or
push
add
push
jecxz
test
iret   
popf   
inc
fisttpl
cld    
aam
push
aam
add
cli    
push
lods
aas    
dec
push
pop
jb
pop
and
inc
xchg
rorb
outsb
rclb
and
aas    
push
(bad)  
jo
mov
dec
adc
nop
mov
mov
adc
mov
dec
ljmp
test
inc
test
cmp
aad
int3   
lods
sbb
push
dec
pop
jb
lcall
pushf  
(bad)  
int
add
push
sub
add
shrb
and
test
sti    
ret
in
push
fprem  
jno
and
adc
pop
mov
push
enter
stos
scas
je
stc    
sbb
add
cmp
(bad)  
push
in
push
mov
cmp
mov
scas
daa    
out
mov
bound
scas
mov
addr16 enter
xlat
add
vpmacssww
enter
fdivs
lea
jp
sub
fstpt
sbb
mov
jo
cli    
xchg
addr16 enter
mov
iret   
jns
xchg
movsb
sar
lea
push
rcr
cmp
leave  
int3   
mov
pop
mov
into   
mov
test
and
lea
out
int3   
mov
ret
lds
(bad)  
dec
add
jnp
mov
push
xchg
loop
push
int
subl
sarb
push
(bad)  
or
cwtl   
mov
inc
xor
popf   
xor
mov
mov
adc
mov
icebp  
bswap
fcomip
sub
fs dec
push
xchg
stos
xchg
sub
xchg
addr16 xchg
mov
repz mov
sti    
mov
adc
jbe
jns
xchg
jge
xchg
jo
dec
xlat
xchg
popf   
and
popa   
pop
into   
jnp
inc
xchg
loopne
xor
int
mov
inc
into   
jg
pop
in
aam
xchg
scas
dec
int3   
outsb
or
pop
aaa    
mov
flds
adc
insb
sbb
pop
repz dec
sbb
push
adc
fnstsw
lret
insb
lods
add
popf   
add
(bad)  
jmp
aam
push
jecxz
repnz sub
mov
imul
xor
mov
ret
push
out
jmp
mov
test
mov
(bad)  
xchg
mov
lahf   
push
xor
insb
fiadd
enter
(bad)  
mov
xor
pushf  
call
xor
test
lahf   
cmp
cld    
sarl
pop
lret
popa   
and
repnz fstp
les
jmp
pop
out
xor
call
shrl
test
mov
mov
adc
gs cld 
sub
cmp
cmpsl
mov
aas    
add
cmpsl
xchg
bound
clc    
insb
mov
mov
push
mov
ja
push
test
sub
jns
out
ja
int
out
mov
out
addl
(bad)  
mov
cwtl   
xor
cwtl   
lahf   
pop
ss push
cmp
fisubr
pop
loope
xor
push
scas
cmp
pop
cmpsl
dec
jge
adc
push
cmp
mov
cmpsl
icebp  
fidiv
mov
lods
mov
into   
aas    
rcll
xchg
dec
in
fmull
int
or
icebp  
pop
or
inc
xchg
jle
pushf  
inc
lahf   
movsb
push
mov
pop
cltd   
fdivs
sub
cmc    
inc
sbb
andl
mov
cmpl
dec
sbb
mov
add
dec
movsl
pop
adc
add
stos
aam
(bad)  
icebp  
and
aaa    
push
les
inc
mov
popf   
sbb
(bad)  
cli    
push
cld    
jp
dec
cmova
xlat
dec
sahf   
icebp  
pop
cmp
xsha256
cmpsb
xchg
popa   
or
mov
pop
mov
jp
sub
movsl
notb
fnsave
test
das    
iret   
lds
icebp  
mov
dec
out
mov
fidivr
mov
clc    
or
scas
dec
cmp
sarl
push
in
out
cmpsl
pop
sbb
mov
sarb
inc
mov
mov
jle
je
inc
push
mov
cmpsl
lea
in
xchg
sub
xor
push
and
inc
push
xchg
pusha  
jp
push
sldt
(bad)  
rcll
and
cli    
fbld
insl
jbe
sub
xchg
out
rcl
mov
mov
push
add
jmp
cmp
fwait
outsl
lret
outsl
jge
(bad)  
jg
pop
lahf   
test
or
xchg
lods
insb
test
jl
das    
sahf   
negl
xchg
add
stc    
pushf  
(bad)  
mov
push
lock sbb
sbb
stos
mov
and
mov
(bad)  
fwait
inc
dec
outsb
or
cmp
out
cltd   
push
fdivs
jo
sbb
fistpll
(bad)  
fsts
xor
lret
sub
jmp
cmc    
(bad)  
rorl
hlt    
insb
out
stc    
test
mov
cs aad
fistpll
push
and
lret
cmpl
cltd   
jns
xchg
(bad)  
cld    
xchg
xchg
adc
shrd
jne
loope
ret    
mov
jecxz
add
out
(bad)  
xor
push
sub
int3   
lret
outsl
cmp
out
fdiv
mov
popf   
fistpll
(bad)  
jmp
test
addr16 push
fcomps
rorl
cmp
or
cmp
idivb
jl
sbb
inc
in
js
jg
iret   
fwait
cwtl   
pop
jno
jae
cld    
(bad)  
add
cmp
mov
into   
cmp
leave  
movsb
xchg
mov
jmp
rcll
cmp
loopne
xor
xchg
enter
std    
dec
xor
xchg
add
pop
xchg
or
test
mov
ljmp
pop
xor
fs mov
(bad)  
sti    
push
pop
daa    
pop
push
lock pusha 
in
jno
into   
ja
std    
(bad)  
sbb
dec
inc
lods
test
xor
std    
cmp
shr
or
pop
xor
mov
cmp
loope
ja
push
scas
call
fcomps
rcll
adc
(bad)  
ror
pop
xor
iretw  
(bad)
jo
and
js
out
es
jp
call
fwait
(bad)  
std    
xchg
inc
jnp
cmpsb
rcr
sub
clc    
ss test
out
stc    
std    
xchg
inc
jnp
cmpsb
(bad)  
jno
shl
cmc    
(bad)  
jecxz
dec
push
xor
jmp
sub
cmpsb
rorl
xor
dec
ljmp
jno
ror
enter
jmp
push
mov
(bad)
or
xchg
pop
sub
fsubrp
std    
ljmp
pop
dec
push
fcomps
rcrl
sbb
ja
out
fimul
fdivs
mov
mov
in
std    
(bad)  
repz dec
push
mov
rcll
mov
dec
inc
shr
and
(bad)  
js
incb
orl
mov
and
in
inc
cmpb
stc    
in
(bad)  
fwait
cwtl   
sti    
test
sub
inc
mov
mov
xor
(bad)  
test
mov
fnstsw
(bad)  
rcll
jg
psraw
lods
mov
roll
out
rclb
imul
cmp
mov
std    
mov
jge
lods
mull
xchg
dec
lods
dec
inc
ss jbe
enter
in
div
out
fstps
jne
and
out
jl
imul
mov
dec
(bad)  
ja
int3   
push
xlat
inc
pop
test
pop
mov
test
jg
(bad)  
mov
fdivr
adc
mov
mov
in
lahf   
lret   
inc
icebp  
in
into   
pop
dec
lahf   
jge
dec
rcl
or
cmp
cmpsb
in
cmp
lcall
inc
imul
inc
out
push
or
adc
outsb
aaa    
sti    
lahf   
mov
inc
cli    
adc
insl
xchg
sbb
leave  
mov
xchg
(bad)  
fcoml
inc
int
call
jle
jmp
cmc    
arpl
xchg
add
stc    
adc
stos
mov
enter
adc
rol
out
mov
push
add
pop
or
flds
or
dec
mov
jmp
cwtl   
mov
cmp
test
xchg
add
xor
push
outsl
lret
mov
fdivr
push
insb
icebp  
roll
and
mov
and
mov
std    
xchg
cmc    
pop
or
push
outsb
xlat
ss cmc 
mov
loope
xchg
out
pushf  
xchg
mov
nop
stos
mov
stc    
inc
sub
sub
xchg
push
mov
aaa    
repz jmp
sahf   
adc
jp
sbb
inc
into   
gs icebp 
je
push
xchg
ficompl
inc
ds cltd 
leave  
movsl
test
dec
(bad)  
addr16 sbb
in
and
mov
mov
pop
in
out
out
lds
lea
(bad)  {%k2}{z}
(bad)  
lods
adc
add
and
sti    
mull
(bad)  
adc
pop
pop
sti    
in
sahf   
(bad)  
pop
fisttpl
push
jo
xchg
push
xor
mov
adc
inc
aaa    
push
scas
or
shlb
popf   
add
arpl
les
in
mull
fs test
add
lcall
jg
bound
xchg
sahf   
sbb
sub
dec
mov
cmp
or
cmp
out
jl
cli    
jle
push
test
icebp  
je
or
pusha  
scas
adc
jle
xlat
cmpsb
or
(bad)  {%k2}{z}
int
(bad)  
jb
lcall
ds mov
mov
and
lods
arpl
(bad)  
jp
inc
xchg
jle
mov
int
inc
inc
test
out
cmp
sahf   
imul
fsubrl
mov
inc
stos
hlt    
jb
jo
sti    
xchg
ds inc
sub
ret
dec
repnz out
mov
xchg
xchg
sarb
adc
out
ds iret 
ja
fwait
popf   
xor
adcl
popa   
clc    
cmp
pop
push
ljmp
out
(bad)  
pop
mov
mov
jle
lea
test
xor
sbb
test
into   
fcoms
sbb
pop
ds mov
xlat
repnz
adc
and
mov
cli    
cmc    
xchg
enter
push
mov
or
add
lcall
cmpsb
mov
jmp
sbb
sbb
mov
mov
cmp
ret    
jb
aaa    
adc
sti    
fs push
add
mov
(bad)  
bnd ret
xor
inc
cmpsb
xor
sarl
xor
jns
dec
and
inc
(bad)  
mov
arpl
cmp
jge
mov
jecxz
push
(bad)  
fcomps
mov
cwtl   
jno
xchg
ficompl
lcall
shrl
push
or
jle
or
cmp
sub
xlat
sahf   
jo
push
rorb
xor
insl
and
hlt    
mov
frstor
test
pop
fdivr
mov
or
mov
ljmp
mov
daa    
aam
mov
dec
xchg
pop
stos
test
sbb
fdiv
mov
mov
(bad)  
adc
es pop
or
or
orl
inc
xchg
mov
ljmp
(bad)  
out
sti    
test
clc    
fwait
add
js
stos
cmc    
mov
jno
(bad)  
out
insb
cmp
inc
inc
enter
movsb
fisubl
ja
sub
jecxz
mov
cmp
inc
aas    
sub
inc
mov
leave  
mov
xor
fidivr
test
mov
jge
adc
mov
test
push
int3   
repnz fcomps
aam
add
arpl
scas
in
xchg
inc
hlt    
push
or
sbb
xchg
mov
shll
out
sub
out
push
loop
insl
cmp
(bad)  
es out
call
test
mov
mov
aaa    
adc
in
popa   
jae
cmp
xor
test
pop
iret   
jg
mov
rclb
pop
xchg
mov
imul
inc
mov
out
sub
mov
int3   
add
int
lea
xor
scas
nop
adc
mov
aad
inc
(bad)  
jge
fcoms
cmpsl
ja
or
mov
sbb
and
insb
data16 in
iret   
sub
ds pop
out
sub
out
out
pop
(bad)  
js
(bad)
and
mov
test
jns
fcoms
pop
(bad)  
push
sarl
mov
jg
stos
repnz imul
inc
mov
cltd   
lret
push
xchg
es jmp
fbstp
addr16 xchg
es jmp
(bad)  
in
push
pusha  
jp
roll
mov
test
lahf   
dec
xlat
xchg
neg
jg
bound
std    
repz lret 
mov
arpl
mov
ja
mov
mov
inc
(bad)
ret    
xor
scas
or
movl
(bad)  {%k2}{z}
mov
jmp
repnz repz fwait
mov
sub
fimul
fcomps
aam
pushf  
loopne
pop
mov
je
decl
mov
or
(bad)
pop
test
rcl
fnstsw
fiadd
jmp
adc
push
cmp
(bad)  
jmp
lcall
mov
sbb
inc
jge
in
xchg
mov
sbb
sarl
lahf   
xor
sbb
iret   
dec
inc
das    
jle
sub
push
mov
je
es pop
add
jbe
pop
cmp
lcall
mov
pop
rorb
nop
jns
scas
aad
xchg
push
femms  
mov
movsb
xor
xor
insb
push
sub
nop
adc
cmp
addl
xor
scas
loopne
pop
add
fisttpll
(bad)  
dec
aas    
mov
test
fwait
out
cmpsb
repnz adc
(bad)  
mov
rorl
jle
add
bound
data16 fisttpll
push
jecxz
xorb
popf   
cwtl   
mov
je
xchg
pop
adc
push
mov
or
inc
sbb
cmp
repnz sti 
xchg
ds out
popa   
push
mov
mov
mov
in
push
push
lds
cmp
loope
imul
jns
jmp
shlb
sti    
jmp
mov
test
dec
sar
jb
sub
lret   
stos
sar
sti    
pop
fwait
xor
and
cmpsl
mov
lock cmp
imul
xor
mov
fdivp
cmp
imul
xchg
mov
loop
cld    
inc
sbb
rorl
pop
fwait
xor
loopne
js
and
lods
push
mov
pop
push
imul
outsl
sub
lds
das    
mov
sub
jg
jp
cmpsb
adc
inc
cwtl   
and
lahf   
sbb
pop
ret
inc
(bad)
int
movsb
sub
add
sti    
sbb
ds
mov
or
dec
adc
stc    
std    
xchg
add
std    
xchg
add
push
test
mov
dec
pop
pop
ffree
lea
adc
cmp
adc
push
sub
pop
adc
fwait
decb
cld    
lahf   
xchg
inc
mov
inc
test
icebp  
aas    
les
gs je
dec
or
fimul
(bad)  
mov
ja
xor
push
push
insl
jl
in
ja
addr16 sbb
loopne
jbe
iret   
pop
iret   
fwait
xchg
dec
add
fs cld 
movsl
push
std    
mov
lods
mov
(bad)  
addr16 push
fcomps
pop
fcomps
arpl
add
push
xor
xor
sbb
daa    
imul
std    
cmovle
ds std 
js
xchg
test
inc
jbe
popf   
jnp
sub
and
imul
out
mov
push
mov
pop
lds
loopne
xlat
push
push
xacquire xchg
jns
cwtl   
lret
lods
lcall
lcall
add
push
jecxz
aaa    
out
imul
popf   
and
xchg
add
std    
xchg
add
push
scas
sub
sbb
sbb
pop
pop
outsl
sub
scas
ret    
xor
lcall
sub
mov
rcl
stc    
cltd   
dec
lods
cmc    
xlat
icebp  
je
push
test
mov
gs pop
idivl
cmp
(bad)  
addr16 push
fdivr
or
aad
movsb
push
mov
xchg
neg
jg
(bad)  
(bad)  
jo
xchg
(bad)  
out
stc    
std    
xchg
inc
pop
xchg
push
les
shrb
add
pop
(bad)  
decl
jg
out
mov
decb
mov
lods
mov
and
mov
adc
push
addr16 adc
mov
mov
push
sbb
(bad)  
lock pop
push
in
pop
outsl
sub
negl
das    
stos
mov
lods
cmpsb
outsb
lahf   
je
and
dec
lods
rorl
repz fdiv
mov
call
pop
arpl
arpl
cli    
dec
fdivr
xchg
ds out
push
xchg
je
sbb
jecxz
std    
cmpsb
jae
pop
sub
sub
sub
add
adc
fcomps
fild
push
mov
mov
test
or
les
in
out
punpckhbw
mov
lds
test
aaa    
movsb
cld    
les
aam
cmp
insb
pop
cmpsl
jno
sbb
out
or
sub
arpl
cmpsb
xor
and
fdivp
xor
mov
push
out
xor
xor
loopne
xor
std    
mov
repz in
xor
insl
mov
shrl
inc
pop
test
xor
fwait
test
testb
lods
xchg
mov
imul
cmpsb
and
xchg
in
repnz push
mov
test
dec
pop
jns
mov
sub
lods
scas
add
dec
or
and
and
std    
(bad)  
xor
das    
stos
loopne
cwtl   
mov
test
sub
and
add
sarl
mov
bound
mov
mov
mov
imul
sbb
fnstcw
cmp
movsl
dec
test
jne
fcoms
sbb
std    
jge
pop
dec
divb
xlat
repnz jecxz
fwait
(bad)  
mov
outsl
jo
inc
cmp
pop
fwait
enter
inc
fldcw
xchg
mov
add
aad
fimul
movsb
or
mov
inc
sub
out
fldcw
jae
mov
dec
mov
mov
mov
jns
outsl
jo
mov
insl
or
cmp
mov
ja
jns
rorb
ds push
insl
and
mov
xchg
in
pop
and
push
into   
(bad)  
jl
arpl
lret   
mov
sub
lods
scas
add
dec
or
xor
fildll
cld    
push
jecxz
mov
rorb
pop
inc
mov
adc
xor
xor
jno
and
(bad)  
sarb
push
insb
pusha  
clc    
mov
daa    
in
inc
into   
leave  
mov
pusha  
add
jle
pop
inc
fwait
push
ret    
pop
pop
lea
je
adc
pop
add
sbb
js
ja
push
dec
push
cmp
lret
insb
in
push
das    
xor
push
jmp
in
sbb
jg
movsl
lahf   
push
daa    
ror
(bad)  
lret
int
jns
xor
mov
xchg
push
cld    
aas    
loopne
or
pop
push
in
dec
in
inc
push
jg
mov
sbb
jg
mov
dec
clc    
cmpb
mov
or
xchg
push
out
and
xor
daa    
outsl
arpl
cwtl   
jle
inc
das    
sub
(bad)  
out
mov
fwait
sub
jbe
push
adc
jge
pop
or
cmp
and
adc
in
outsl
stos
inc
and
sub
jbe
push
adc
jge
pop
or
mov
ss stos
xor
add
(bad)  
(bad)  
mov
gs jns
iret   
mov
ja
push
dec
push
cmp
divl
or
adc
xchg
cmp
inc
into   
leave  
mov
pusha  
add
jle
pop
inc
fwait
push
push
fucompp 
icebp  
cwtl   
jle
inc
das    
sub
fcmovnb
and
pop
sub
fwait
sub
jbe
push
adc
jge
pop
or
or
jo
dec
adc
lods
inc
data16 clc 
xor
push
jbe
add
insb
out
fidivrl
out
pop
mov
or
addr16 push
cmp
lret
sbb
or
or
shrl
enter
inc
jg
rclb
mov
fcoml
fadds
sbb
pop
insb
scas
lret
sti    
mov
mov
adc
call
add
inc
dec
xchg
lods
faddl
shlb
dec
out
lahf   
pop
jl
push
jl
enter
cs dec
mov
test
and
pop
popl
jge
cmp
adc
cmp
aam
outsl
jl
sub
push
js
mov
pop
enter
lret   
std    
sbb
mov
cld    
cmc    
(bad)  
or
sub
mov
stos
mov
in
je
xchg
adc
cs dec
mov
and
fwait
repz rcrb
push
ss jg
fnop   
inc
adc
cmp
cli    
mov
and
fdivs
ljmp
(bad)  
movl
xor
sbb
fnop   
inc
adc
xor
dec
imul
daa    
iret   
mov
pop
in
sar
mov
sub
mov
sub
add
xchg
inc
xchg
ret
xlat
bound
xor
jae
mov
(bad)  
ficomp
lods
dec
pop
daa    
aad
cmpl
scas
push
dec
rorb
mov
test
mov
dec
pmaxsw
mov
rcr
mov
mov
pop
push
jg
mov
lock mov
ljmp
push
arpl
mov
mov
and
mov
dec
aaa    
mov
imul
rorl
xchg
lea
jp
jecxz
and
add
push
imul
ljmp
xchg
test
(bad)  
out
xlat
ds mov
sarb
push
adc
sub
pop
pop
mov
jle
pop
jbe
jge
stos
call
or
test
mov
repnz push
xor
loope
xlat
push
(bad)
je
push
xchg
pop
and
pop
outsl
repnz xor
cltd   
adc
pop
aad
lds
jbe
or
sub
inc
(bad)  
icebp  
out
cmp
cmp
jmp
mov
dec
mov
cli    
int3   
dec
dec
dec
push
pusha  
mov
jmp
mov
pop
mov
mov
dec
cltd   
andl
sbb
cmp
cmpsb
xchg
addr16 jp
push
sbb
ret
cmpsl
fstp
lcall
(bad)  
mov
pusha  
xor
jle
adc
ja
sbb
inc
lods
cmpl
and
sbb
inc
lods
movsb
xchg
inc
lahf   
out
xlat
rep movsb
mov
xchg
mov
mov
repnz cmp
enter
dec
cmp
inc
cli    
adc
mov
ret    
repnz sti 
ficoml
xchg
or
mov
ret    
sub
call
sbb
mov
scas
mov
loop
sub
adc
push
inc
ja
push
stc    
push
pop
inc
loop
mov
hlt    
push
loop
xor
insb
lret   
sbb
xor
enter
pushf  
pop
jne
adc
jmp
scas
loop
xor
insb
lret   
sbb
xor
arpl
mov
mov
movsb
mov
cmpsl
fstpl
loop
pop
ror
adc
mov
dec
push
(bad)  
insb
lret   
sbb
sbb
cld    
adc
xlat
or
hlt    
xor
xchg
pop
and
or
jb
inc
arpl
jecxz
out
xchg
pop
test
mov
dec
ljmp
(bad)  
int
jle
sahf   
mov
mov
fdivl
push
push
inc
enter
xchg
lcall
xchg
js
test
mov
jmp
and
(bad)  
push
sub
negb
aam
mov
dec
mov
stos
sar
clc    
push
(bad)  
data16 test
es push
add
adc
les
fwait
cwtl   
mov
nop
or
out
or
xchg
jecxz
mov
inc
outsl
xor
rcrb
mov
mov
shrl
in
sahf   
adc
ret
imul
mov
leave  
pop
imul
fisubrl
hlt    
push
mov
in
pushf  
xchg
mov
ret    
or
sub
dec
fnstsw
push
cmp
daa    
push
dec
mov
xchg
mov
sub
sub
mov
and
sub
popf   
jne
aas    
test
scas
lret
cmp
cmpsl
loope
aad
fist
psrad
icebp  
jno
lds
add
and
mov
cmpsl
inc
mov
daa    
aam
or
mov
lock fidivrl
int3   
sarl
push
movsb
mov
push
lds
cmp
mov
xor
gs jg
ss
outsl
cmp
data16 adc
pop
subl
(bad)  
xchg
mov
adc
xor
outsl
jae
fdivl
out
sub
ja
pop
mov
aaa    
pop
mov
add
mov
test
cli    
orl
fstpl
mov
jbe
fisubrl
dec
xchg
or
and
pop
xchg
dec
jb
xchg
leave  
shlb
scas
bound
outsl
lcall
hlt    
pop
mov
jp
fnstsw
shr
lea
sbb
add
pop
jb
lds
xchg
int
cmp
push
push
sbb
(bad)  
jl
aam
or
pushw
dec
push
cmp
aas    
mov
add
jnp
mov
sti    
dec
or
add
rclb
fwait
rcrl
ss sub
dec
fstps
xor
repz jl
adc
xor
sarb
outsb
mov
iret   
sbb
mov
and
inc
push
sub
lea
mov
(bad)  
rcrl
addr16 xchg
lods
andl
aaa    
int
(bad)  
push
mov
jns
rorl
ja
add
fwait
out
jl
push
andb
lea
cwtl   
mov
add
push
(bad)  
push
lahf   
mov
jae
push
dec
fisubrl
xor
ss inc
aas    
lret
cmc    
popf   
sub
mov
fs inc
imul
jbe
mov
adc
stos
testb
push
repnz arpl
mov
sbb
(bad)  
insb
scas
xor
xor
stos
inc
stc    
les
push
adc
jp
lods
dec
mov
mov
mov
jmp
xor
insl
into   
popa   
stc    
jmp
in
xlat
ret    
dec
mov
push
xlat
pop
lret   
std    
cmpl
adc
lock
or
popf   
repnz enter
aad
xor
cld    
jle
jecxz
je
xor
(bad)  
(bad)  
pusha  
(bad)  
jb
js
dec
test
push
or
ljmp
jb
inc
test
ljmp
jl
lcall
aad
jne
stos
adc
xor
dec
scas
or
xor
jbe
sarb
ljmp
jmp
pop
adc
ja
pusha  
mov
jnp
imul
dec
adc
mov
insl
fistp
dec
fxch
das    
test
xchg
jl
repz lahf 
mull
add
cmp
add
aas    
(bad)  
inc
popf   
lods
test
and
call
lock push
stos
sbb
addr16 icebp 
das    
rorb
cmp
rcrl
xchg
sbb
call
int3   
(bad)  
sub
daa    
push
mov
xchg
cwtl   
xor
sub
fldt
rolb
mov
mov
icebp  
cmpsb
jnp
enter
lock mov
es ds sub
add
test
pop
jo
and
mov
insl
fwait
mov
ss
xor
sub
push
inc
inc
enter
test
jg
test
mov
imul
out
sti    
push
mov
(bad)  
sti    
add
pop
add
jmp
lock std 
bound
sbb
arpl
rcl
jge
pop
fmull
pop
jbe
mov
loop
dec
mov
inc
out
test
andl
test
fmull
hlt    
pusha  
dec
shrb
cmp
lock ret
les
ja
push
pop
jp
push
inc
popf   
pop
div
xor
loope
or
stc    
inc
cmpsl
xor
loope
cmpsl
aaa    
cmpsb
jbe
jne
pop
out
sbb
mov
pop
add
mov
push
push
mov
sbb
rclb
mov
in
aam
jns
or
add
cmp
dec
xor
push
pop
and
daa    
jne
mov
(bad)  
mov
js
sysenter 
notl
fstpl
pop
or
lods
jae
fsubrl
jp
and
pushf  
(bad)  
and
jne
and
add
xchg
mov
sub
movsb
std    
pusha  
aas    
push
fisttpl
cmc    
xchg
(bad)  
jo
or
xchg
sub
or
sub
or
push
push
das    
or
jae
xchg
icebp  
mov
jecxz
sbb
insl
push
repnz adc
shll
movsb
loop
stc    
aaa    
testl
roll
jecxz
rcl
or
push
shlb
pop
fdivr
push
dec
test
out
adc
gs aas 
push
test
jl
stos
and
icebp  
sub
outsl
jge
rorb
mov
add
aas    
or
push
shlb
out
xlat
ret    
outsl
cmc    
push
(bad)  
push
pop
ficoml
mov
and
sti    
cmc    
pusha  
cmp
mov
mov
or
mov
(bad)  
lods
das    
(bad)  
aas    
mov
shlb
or
fcompl
ficompl
lcall
jo
call
pop
adc
mov
add
stc    
add
and
rol
pop
pop
sub
outsl
cmp
out
fdiv
mov
mov
lret
in
insl
stos
push
lcall
stos
cmc    
mov
pop
shrb
xor
out
sti    
mov
jb
or
pusha  
sahf   
test
std    
mov
insl
popa   
ss stos
xor
jecxz
ljmp
or
push
xchg
out
fldcw
or
stos
sub
outsl
jmp
add
sub
sub
addr16 in
jge
or
jmp
sub
inc
sub
fwait
es sub
or
pop
pop
sahf   
dec
pop
jns
mov
pop
sbb
xorl
cmpsb
in
outsl
sub
es int
jg
push
push
sub
cwtl   
stos
or
mov
sbb
fsts
adc
stos
mov
sub
push
sub
movsl
mov
pop
push
adc
cmp
not
pop
fstpl
push
pop
ret
jg
lea
aad
dec
dec
icebp  
aas    
movsl
pop
jne
fsubrl
fcomps
inc
adc
faddp
xor
jecxz
imul
sub
mov
std    
push
adc
mov
data16 cs scas
dec
inc
repz push
and
dec
push
mov
scas
fisubr
xor
aas    
lcall
ds mov
arpl
out
(bad)  
lret   
arpl
cmpsl
adc
push
ret    
or
jp
cmp
xor
ss out
shr
jo
mov
sbb
sbb
sti    
outsl
int3   
jl
(bad)  
test
sub
testl
mov
jmp
inc
push
jecxz
adc
mov
(bad)  
insb
push
inc
ja
push
stc    
push
aam
mov
mov
data16 insb
call
pop
ret
jbe
clc    
aas    
add
or
lahf   
insl
decl
iret   
mov
or
addr16 push
cmp
in
xchg
mov
adc
rep movsl
in
mov
pop
inc
lret
fisttpl
jne
mov
jge
ror
enter
insl
popa   
int3   
test
dec
sbb
jl
mov
(bad)  
(bad)  
xor
icebp  
mov
nop
stos
mov
(bad)  
ret    
mov
xchg
mov
repnz xlat
in
pop
je
sbb
iret   
push
aad
shr
mov
cltd   
fsubs
jno
out
and
roll
pop
shr
jo
mov
sbb
sbb
out
xor
cwtl   
pop
or
es sub
testl
mov
sub
sub
inc
add
jp
lods
dec
inc
test
pop
and
stc    
(bad)  
ds clc 
aas    
add
or
lahf   
cltd   
push
lds
iret   
mov
or
addr16 push
cmp
divl
mov
shr
movsl
jmp
jnp
sbb
jl
andl
(bad)  
aaa    
adc
cmpb
mov
lods
pushf  
stos
xchg
(bad)  
imulb
mov
dec
or
push
inc
subb
mov
fdivp
push
stos
(bad)  
dec
femms  
xchg
out
xor
sub
sub
mov
pop
lds
adc
test
mov
lahf   
int
jae
dec
ret
sub
(bad)  
sub
fbld
cmpsl
(bad)  
clc    
pop
ret
jbe
clc    
aas    
add
or
lahf   
jns
in
iret   
mov
or
addr16 push
cmp
divl
xchg
insl
popa   
repnz adc
divl
xlat
add
out
push
ds imul
and
push
iret   
pop
iret   
fwait
cwtl   
into   
addr16
jno
mov
mov
adc
mov
add
pop
mov
inc
sarb
mov
lcall
and
lret
es
jg
pop
lahf   
jge
mov
sub
enter
ret
hlt    
ss mov
ja
dec
pop
fstpt
xorl
inc
cmp
lahf   
sub
out
lods
stos
enter
test
mov
add
or
scas
and
mov
or
inc
les
out
notl
jb
(bad)  
lods
out
idivb
xchg
bound
gs mov
js
jnp
lods
sbb
out
push
int
loope
or
jnp
(bad)  
dec
test
aaa    
imul
sub
mov
xor
dec
insl
dec
in
shrl
stc    
xchg
push
jb
rclb
repnz idivb
aam
js
dec
jne
neg
mov
and
mov
sbb
mov
call
out
(bad)  
lods
out
idivb
xchg
bound
gs mov
js
jnp
pop
jae
loop
int3   
test
cmc    
sbb
js
cwtl   
stos
mov
pop
inc
fwait
iret   
mov
pop
jle
repnz das 
cmp
and
mov
icebp  
pusha  
lods
dec
inc
inc
cmp
pop
and
jbe
and
aas    
dec
push
mov
int
rcl
mov
outsl
in
(bad)  
dec
cmp
in
scas
(bad)  
dec
shlb
dec
inc
inc
cmp
xchg
pop
and
pop
inc
lret
repnz das 
cmp
and
push
cmpl
inc
inc
cmp
pop
and
jbe
in
ss sbb
jne
lea
mov
cmpsl
and
and
pop
cmp
mov
adc
inc
push
(bad)  
mul
dec
adc
int
shlb
sub
xor
xchg
add
lea
scas
sbb
imul
scas
push
stc    
push
push
inc
lods
leave  
dec
lods
out
dec
mov
sub
out
xlat
iret   
sub
loop
xor
insb
lret   
sbb
mov
cmp
lods
mov
(bad)  
xor
fisttp
in
lds
push
inc
dec
repz daa 
mov
enter
adc
push
(bad)  
insb
lret   
sbb
sbb
flds
jle
not
(bad)  
sub
jg
pop
dec
mov
fucomi
mov
je
pop
dec
std    
mov
pop
out
lret
pop
aaa    
(bad)  
cltd   
mov
mov
out
mov
sbb
das    
iret   
dec
stos
mov
push
cli    
pop
icebp  
dec
fistl
outsb
lods
movsb
pop
xor
sub
or
pop
cmpsl
(bad)  
clc    
pop
aad
ret    
mov
loope
mov
imul
insl
(bad)  
(bad)  
mov
loope
cli    
pop
xchg
xchg
push
loope
push
cli    
cmpsl
icebp  
push
mov
ljmp
ss or
sti    
inc
xor
xchg
jno
push
test
cmp
push
test
mov
dec
push
cmp
ss pop
lock push
add
cmpsb
dec
fsubrs
and
(bad)  
ds clc 
aas    
add
or
lahf   
icebp  
and
lret
fcomps
add
sub
dec
jb
push
(bad)  
xor
and
push
subl
pminsw
aaa    
das    
rclb
(bad)  
xchg
jmp
outsb
shll
push
push
or
lret   
adc
pop
loopne
(bad)  
jg
lods
dec
mov
adc
outsl
(bad)  
inc
push
dec
jp
mov
test
icebp  
enter
pop
fldenv
mov
rcll
pop
adc
xchg
or
dec
xor
(bad)  
aas    
ret
bound
mov
xchg
mov
je
sbb
std    
arpl
cmpsl
flds
in
enter
cli    
das    
or
jo
push
lea
cmpsb
gs out
and
sub
jecxz
cwtl   
pop
aad
adc
decl
dec
jl
mov
cmp
ret
xchg
enter
sbb
lret   
pop
repz jp
cmp
data16 sti 
iret   
or
mov
in
sbb
mov
xchg
inc
jg
push
and
(bad)  
adc
out
push
add
or
xchg
cld    
dec
lea
sub
ficomp
dec
mov
pop
dec
lahf   
push
decl
ret
mov
out
lods
mov
rcrl
inc
mov
verr
mov
cmc    
cli    
fisttp
dec
sub
gs push
fucomp
sub
and
add
lods
push
sub
jae
cmpsb
int
outsl
(bad)  
adc
xlat
and
pop
cmp
or
pop
push
push
les
iret   
stc    
push
pop
and
rorl
outsl
sbb
aam
pop
push
test
sarb
sbb
cmpsl
pop
loopne
pop
divl
cmp
mov
xchg
lock sbbl
push
inc
(bad)  
jae
sub
int
mov
daa    
outsl
mov
stos
inc
adc
xlat
inc
lea
mov
push
sbb
fbstp
mov
sti    
dec
sub
inc
stos
jae
mov
dec
in
roll
xor
leave  
xchg
push
xor
cmp
xor
hlt    
cmpsb
dec
js
or
jg
nop
xor
fdivrl
lcallw
xchg
lds
sbb
test
push
stc    
push
push
jns
pop
iret   
out
(bad)  
jb
movl
push
verr
inc
push
test
xchg
dec
mov
dec
push
xchg
(bad)  
mov
cwtl   
and
cmpsb
jbe
inc
js
iret   
adc
aad
in
pop
push
cmpsl
cmpsw
jecxz
fcoml
fsubrs
push
jbe
pop
hlt    
mov
mov
jp
sbb
cmp
aam
les
mov
ret    
xchg
(bad)  
lea
imul
imul
cmp
sti    
inc
mov
shll
pushf  
out
xlat
ret    
insb
mov
mov
es in
repz ss inc
push
xor
(bad)  
lock out
(bad)  {%k2}{z}
call
in
mov
push
jg
and
lcall
adc
lret
lock scas
loopne
es mov
(bad)  
inc
jg
push
stos
push
and
or
scas
dec
scas
dec
and
pop
dec
lret   
inc
lret
idivl
lret
bound
je
and
push
push
add
jns
pop
ret
daa    
cmp
pop
cmp
cmp
mov
push
imul
pusha  
xchg
jmp
repz or
push
(bad)  {%k2}{z}
(bad)  
or
enter
ret
test
jge
and
xchg
mov
and
iretw  
xchg
and
xchg
mov
sbb
lock pop
stos
dec
shl
pop
shrb
or
in
pop
dec
jl
mov
cmp
ret
nop
push
inc
inc
push
(bad)  
xchg
roll
sbb
lahf   
push
sub
push
push
fucompp 
lea
xor
pop
xchg
inc
out
pop
(bad)  
testb
addr16 and
jo
sahf   
jecxz
adc
pop
aas    
push
fldt
lsl
scas
incl
push
adc
aaa    
xor
inc
cmp
pop
popf   
inc
addr16 inc
xchg
loop
mov
cmp
sub
mov
cmpl
xor
call
aam
fcomps
rorl
sub
pop
adc
xchg
dec
iret   
(bad)  
cs and
mov
xor
mov
stc    
repnz adc
(bad)  
(bad)  
lea
test
add
inc
cmpsb
jbe
outsw
xor
leave  
or
jl
fiadd
out
add
mov
aad
jg
data16 add
into   
(bad)  
dec
mov
sub
fld
xchg
xchg
sbb
mov
fdiv
xchg
inc
in
mov
inc
mov
mov
lods
push
icebp  
mov
(bad)  
mov
mov
jg
lahf   
(bad)  
mov
pop
jb
cmc    
mov
pop
jb
clc    
mov
mull
dec
pop
xorb
ja
xchg
lods
xor
stos
in
outsb
shrl
insl
cli    
inc
or
lcall
mov
popf   
aas    
dec
mov
popf   
xor
test
in
sbb
cmpsb
cwtl   
mov
mov
xor
cs xor
in
imul
push
sub
data16 out
clc    
inc
sub
xchg
fiaddl
fcomps
mov
incl
lods
mov
pusha  
mov
inc
insl
imul
xchg
sbb
jmp
mov
je
xorb
cmp
cmp
scas
jbe
cld    
in
xor
mov
stc    
sarb
ds clc 
aas    
add
pop
lret
mov
mov
movl
inc
test
inc
lea
enter
lods
out
jge
popa   
mov
push
dec
imul
inc
sti    
fwait
and
leave  
jns
mov
push
adcb
gs cld 
sub
(bad)  
xor
outsb
push
repnz cmp
enter
inc
add
js
lods
(bad)  
xor
(bad)  
push
out
sbb
inc
ljmp
test
cld    
jle
inc
jecxz
repz sub
pop
(bad)  
mov
leave  
mov
xchg
lret   
outsb
mov
cmp
js
add
nop
aad
or
mov
or
push
in
ficomp
jmp
push
scas
imul
repz scas
lahf   
mov
movsl
dec
mov
or
int
push
(bad)  
xor
cmpsl
sub
pop
arpl
loopne
popf   
das    
or
insl
out
cltd   
adcl
(bad)  
inc
or
repz cld 
ljmp
push
cmp
xor
push
jg
cmp
out
pop
daa    
and
inc
cmp
outsb
rcll
(bad)  
lcall
xor
aaa    
xchg
adc
sub
cmp
sarb
rclb
jnp
adc
jg
pusha  
add
add
cmpsl
xchg
aam
imulb
mov
ja
mov
hlt    
pslld
pop
popf   
roll
out
pop
daa    
push
jne
inc
fdivr
push
sbb
dec
jns
fnstcw
(bad)  {%k2}{z}
(bad)
xor
dec
stos
pusha  
cmp
push
in
mov
cmp
aam
les
cmpsl
enter
pop
mov
dec
cmp
pop
mov
mov
std    
xchg
(bad)  
(bad)  
mov
mov
cld    
sub
lods
ret    
aad
cmpsl
jmp
ljmp
inc
jg
jbe
pusha  
pushf  
es push
fidivr
dec
in
jbe
inc
repz or
xchg
das    
push
out
(bad)  
in
call
shrb
sub
pop
insb
shld
(bad)  
mov
rolb
mov
sti    
das    
or
popf   
mov
cmp
int3   
clc    
push
xchg
scas
add
xchg
mov
or
les
jecxz
call
mov
rcr
mov
or
jo
flds
sarl
dec
pusha  
mov
(bad)
(bad)  
lods
das    
mov
cmp
add
jmp
cld    
int3   
sarl
jp
inc
aas    
mov
xor
loopne
add
push
fisttpl
divb
jno
sub
test
jl
xchg
sub
jmp
test
or
fs in
cmp
jae
mov
nop
and
mov
dec
lods
cwtl   
ss dec
loope
jnp
ret    
inc
sub
or
adc
sti    
adc
push
xchg
adc
fwait
xor
call
shrl
int
sub
jbe
(bad)  
ljmp
ds iret 
dec
inc
mov
enter
aaa    
cltd   
adc
cwtl   
sbb
stc    
inc
in
notl
pop
outsb
lcall
pop
sub
xor
pop
lret
test
jp
out
jle
mov
dec
xacquire xchg
stc    
or
sbb
pop
cltd   
in
mov
lahf   
push
lock lret
xor
push
jno
ja
lret   
mov
sub
add
loop
ds push
mov
mov
aas    
sub
nop
or
shrb
lahf   
mov
in
bound
subl
adc
insb
or
mov
aas    
sti    
push
stos
mov
icebp  
je
push
test
mov
mov
and
test
or
js
pop
or
(bad)  
mov
push
adc
dec
cmp
lods
arpl
inc
(bad)  
pop
push
(bad)  
popf   
addr16 enter
test
divl
push
mov
sub
rcrl
outsb
stos
cmpsl
push
(bad)  
negb
inc
mov
inc
sub
iret   
mov
mov
cmp
out
sti    
xchg
add
popa   
(bad)  
xchg
(bad)  
push
and
aam
pop
icebp  
daa    
nop
inc
sbb
pop
sbb
iret   
mov
xorl
mov
cmpsb
sti    
int3   
insl
xchg
pop
xchg
aas    
out
xchg
pop
fcompl
aas    
insl
push
verr
inc
and
les
iret   
cmp
mov
lea
fnsave
dec
sub
xchg
mov
(bad)  
cwtl   
addr16 enter
inc
xor
gs or
out
ljmp
dec
mov
mov
enter
mov
adc
int
inc
and
dec
xchg
push
aad
das    
xor
pusha  
jp
push
push
mov
mov
faddp
and
cltd   
pop
pop
cmpsl
xchg
jl
mov
xor
cmp
push
sub
divl
sub
fwait
test
cli    
fist
fs daa 
mov
test
cmpsl
mov
es push
cltd   
idivb
mov
mov
popa   
(bad)  
rcrb
jno
or
adc
insl
jb
sti    
dec
and
and
int3   
cmp
and
lods
addr16 into 
das    
or
mov
repnz adc
(bad)  
aam
(bad)  
clc    
push
jg
push
mov
(bad)  
scas
daa    
pop
pop
adc
adc
xchg
shll
out
imul
mov
std    
mov
cs popa 
cmpsl
jle
mov
cmc    
cli    
fisttp
in
xchg
(bad)  
push
sub
mov
cmc    
xorl
pop
push
ja
arpl
cmp
inc
sbb
add
xor
add
cmp
or
mov
mov
test
movsb
stos
jae
sub
mov
mov
fisttp
test
mov
gs push
pop
pop
hlt    
xor
add
out
sbb
icebp  
mov
(bad)  
mov
dec
adc
lods
imulb
les
loope
xor
das    
aad
icebp  
cmp
in
cmp
mov
js
fnstcw
and
aas    
(bad)  
fnsave
add
mov
roll
ret    
pop
fstp
lea
popa   
cli    
inc
mov
scas
lahf   
cmp
daa    
dec
xor
mov
js
pop
push
lods
xchg
jb
pop
sub
pop
rcr
add
jp
and
iret   
enter
fimull
pop
lcall
lea
pushl
inc
jecxz
daa    
out
cmpsb
movsl
dec
movsl
cmp
add
test
enter
test
jbe
push
dec
fwait
out
dec
cmp
test
jo
addr16 xchg
sub
jb
adc
rclb
(bad)  
and
xor
cmp
sub
pop
test
subl
mov
mov
(bad)  
out
cli    
mov
data16 cld 
les
pop
mov
mov
cmp
iret   
test
test
sub
and
imul
or
gs cld 
sub
lods
ret    
aad
movsl
dec
or
insb
push
pop
mov
or
jmp
cli    
add
loopne
mov
push
aas    
iret   
dec
(bad)  
das    
mov
inc
scas
(bad)  
and
jl
xor
int3   
das    
and
mov
jmp
repnz or
fidivr
cmpl
lcall
mov
stos
mov
push
adc
(bad)  
ffreep
cmp
adc
js
js
mov
adc
js
hlt    
icebp  
enter
pop
and
prefetcht0
mov
xor
sub
or
adc
pop
mov
out
out
pusha  
push
stc    
ss push
jnp
xchg
adc
add
ljmp
stos
clc    
xchg
sbb
jp
punpckhbw
dec
leave  
fdivrl
(bad)  
and
and
imul
(bad)  
out
sub
sub
cmp
stc    
jge
xlat
inc
or
sbb
stos
mov
mov
ds
out
sub
sub
cmp
stc    
jge
xlat
inc
or
sbb
stos
inc
xchg
xor
add
scas
pop
mov
fsubrs
cmpsb
mov
sub
sub
mov
mov
dec
imul
mov
mov
mov
mov
dec
(bad)
clc    
aas    
add
jbe
test
xor
stos
in
add
lods
or
mov
in
pop
lret
js
aam
inc
jne
les
(bad)  
sub
mov
cmp
and
aam
xor
call
jg
cli    
mov
test
test
fldt
loopne
inc
addr16 pop
add
mov
mov
std    
xchg
ret
mov
and
cmpsl
cmp
jle
fstpl
jp
inc
or
sub
cmp
adc
sub
ret
mov
and
cwtl   
out
xchg
imull
inc
(bad)  
out
leave  
por
clc    
jo
jg
test
jg
scas
in
mov
insl
mov
ret
sahf   
jb
push
cld    
insl
sbb
lahf   
enter
into   
out
inc
mov
sti    
inc
sub
ret
mov
in
mov
test
and
sub
pop
push
cmp
fmull
fdivs
popa   
(bad)  
mov
lcall
out
fs push
incl
stc    
mov
out
rcll
jo
mov
push
push
xchg
dec
mov
push
or
mov
das    
and
sahf   
ficompl
out
inc
es data16 cmp
push
sbbl
stc    
test
stos
mov
and
push
std    
mov
aas    
mov
stos
hlt    
mov
cmp
mov
push
fisttpl
cmc    
xchg
sub
xchg
sub
pop
fwait
sub
mov
xchg
ja
push
call
cmc    
mov
nop
and
imul
lret
pop
jae
jmp
test
and
sbb
les
iret   
or
cld    
cmp
repz mov
lods
lret
popf   
roll
out
pop
daa    
std    
ret    
mov
movsb
mov
dec
xchg
cmp
int
mov
fisttp
es
dec
and
mov
fildll
and
out
pop
inc
lcall
add
cli    
fbld
push
add
pop
mov
sbb
cmp
mov
fbld
(bad)  
outsb
or
cmc    
sti    
outsb
mov
imul
lods
mov
cmp
adc
push
lret   
and
cmp
iret   
imul
aad
into   
aas    
lods
ljmp
sarb
ljmp
imul
mov
xor
lcall
test
fwait
(bad)  
hlt    
mov
add
int
cmc    
xor
in
out
cmp
pop
push
fstpt
jne
dec
sbb
jmp
insl
and
and
mov
out
jne
inc
pop
(bad)  
jmp
adc
mov
inc
les
sub
cltd   
cmp
stos
(bad)  
data16 icebp 
dec
mov
dec
mov
mov
mov
popf   
cli    
xor
insb
jmp
je
(bad)  
lret   
sub
jge
or
jmp
(bad)  
xchg
push
(bad)  
ss int
push
push
pop
cmp
imul
cmp
xlat
inc
mov
lods
addl
add
call
mov
jbe
mov
and
jne
stos
pop
pop
mov
in
pusha  
lret   
lahf   
mov
xchg
(bad)  
mov
inc
pushf  
cmp
jno
test
xchg
pop
shlb
cli    
xchg
push
(bad)  
mov
fucomip
addr16 pop
xor
test
aam
jg
shr
in
daa    
fwait
sub
stos
cmp
dec
xor
push
(bad)  
push
scas
(bad)  
ret    
sub
jb
lret   
mov
cmpsl
mov
cmp
push
fidivr
jmp
mov
mov
mov
loop
mov
(bad)  
jbe
mov
int
sti    
sarl
push
sbb
mov
mov
cmp
sarb
aas    
mov
or
mov
and
mov
jl
add
xor
or
mov
jae
mov
push
cmp
stc    
(bad)  
sar
ds adc
out
push
cmpsb
decl
jg
sbb
fwait
cwtl   
inc
test
in
aam
ret
xchg
insb
jle
jnp
fmulp
push
xor
dec
dec
in
arpl
pushf  
mov
sti    
push
pop
mov
jne
push
jb
jl
mov
xchg
dec
fdivrp
call
mov
fsubl
subl
cld    
lret
lret
jp
out
inc
jbe
pushw
xor
scas
cwtl   
pop
pop
outsl
push
push
es mov
ret
xor
(bad)  
fldl
inc
mov
pop
and
dec
rcr
push
lods
push
ss push
cmc    
mov
or
jae
icebp  
jno
sub
aaa    
sub
push
icebp  
mov
popa   
mov
imull
icebp  
int3   
aaa    
jl
mov
push
es out
push
mov
adc
pop
rorl
and
mov
std    
push
(bad)  
push
loopne
movsl
mov
dec
or
dec
jl
cld    
jge
fs push
leave  
inc
or
insl
sbb
loopne
sti    
repz decl
ret    
sub
or
sub
dec
ja
cmp
sub
stos
push
sar
xchg
push
loopne
or
jb
jns
leave  
push
inc
sbb
xchg
aam
xchg
cmpsb
aaa    
(bad)  
sti    
pop
cld    
lods
jb
push
cmp
fldcw
xchg
jnp
faddl
je
dec
sub
in
icebp  
adc
add
lret   
cld    
jle
unpcklps
mov
adc
dec
push
cmp
sahf   
adc
xchg
pop
arpl
push
out
and
syscall 
mov
mov
xchg
sarb
rclb
sub
mov
das    
jge
ret    
in
insb
test
cmp
es
out
sub
insb
lret   
cmp
das    
and
dec
add
leave  
fdivrl
push
cmp
or
push
adc
in
add
sub
(bad)  
addr16 lret 
pop
and
decb
add
cmp
in
dec
jmp
test
or
test
int
int3   
xchg
or
push
mov
sti    
xor
popa   
rcl
fwait
hlt    
pop
xor
std    
push
enter
jmp
jno
shll
aas    
icebp  
data16 idivb
bound
mov
dec
ljmp
(bad)  
int
repnz mov
imul
jge
lcall
in
mov
cld    
imul
scas
mov
stos
mov
mov
addr16 mov
sub
int3   
pop
lock pushf 
(bad)  
fidivl
jge
subl
je
hlt    
mov
adc
imul
push
xlat
push
out
cmpsl
pop
jmp
dec
jo
xor
movsb
dec
(bad)  
roll
(bad)  
outsb
adc
pop
dec
movsb
sbb
repz mov
sub
dec
or
xor
mov
in
xchg
data16 sti 
aam
adc
cltd   
adc
mov
lret   
hlt    
insl
xchg
pop
cmp
lret
enter
mov
mov
repz push
fsubl
and
out
sub
insb
lret   
cmp
sub
adc
sti    
dec
adc
mov
das    
sbb
mov
(bad)  
daa    
ds punpckhbw
sub
clc    
ret
repz jne
icebp  
repnz mov
data16 imul
pop
(bad)  
cltd   
sbb
rorb
mov
mov
(bad)  
enter
adc
xchg
outsl
int
cwtl   
adc
cmpsb
out
fmuls
hlt    
insl
xor
and
sub
enter
mov
mov
mov
mov
in
fdivrl
add
(bad)  
out
sub
insb
lret   
cmp
das    
sbb
push
inc
sbb
inc
xchg
mov
std    
das    
sbb
mov
(bad)  
daa    
ds punpckhbw
mov
push
lret   
jne
icebp  
repnz xchg
je
pop
mov
int3   
jmp
pop
(bad)  
cmpsb
jmp
inc
xchg
icebp  
jmp
dec
fbld
in
fcomps
mov
mov
fwait
test
int
lods
scas
sbb
add
(bad)  
mov
lahf   
adc
icebp  
add
mov
mov
test
int
dec
mov
jno
or
mov
mov
pusha  
lds
dec
add
leave  
fdivrl
push
cmp
not
sbb
mov
(bad)  
daa    
ds
aad
inc
sub
add
sub
addr16 mov
adc
pop
xchg
cltd   
faddl
in
cmp
mov
dec
mov
into   
sub
shll
stc    
(bad)  
(bad)  
jo
add
dec
cmc    
sahf   
loop
iret   
daa    
icebp  
lretw  
pop
dec
jo
scas
lcall
stc    
(bad)  
ror
sub
push
xor
sbb
jmp
stc    
ss fdivrp
or
lea
dec
or
fdivrl
push
cmp
jb
or
and
js
jmp
cmovns
sar
mov
lahf   
(bad)  
std    
loope
shll
pop
jae
xor
mov
jns
mov
xchg
pop
xchg
or
mov
std    
push
xor
scas
ljmp
(bad)  
lahf   
push
int
sbb
mov
push
dec
xchg
fimull
int3   
mov
and
fs
repz enter
or
out
and
dec
das    
cltd   
rcrb
(bad)  
jne
popa   
fdivl
cmpsl
pop
addl
sub
mov
repz sti 
add
insb
mov
ficompl
lcall
dec
test
(bad)  
lods
lret
jp
push
test
bound
cltd   
fsubs
(bad)  
jne
push
or
push
stc    
out
mov
xchg
or
jge
xchg
pop
mov
stc    
int
outsb
(bad)  
pop
cmp
xchg
loop
push
int
xor
mov
jmp
cli    
cmp
cmpl
push
lcall
into   
loope
cmp
fsin   
jbe
rcl
in
lahf   
sub
sub
leave  
test
mov
imul
(bad)  
dec
es push
(bad)  
leave  
lods
sbb
inc
sbb
enter
inc
push
mov
lret
icebp  
fucom
jp
pop
stc    
lods
jp
lods
mov
daa    
cmp
mov
or
outsb
icebp  
dec
aam
test
mov
jb
(bad)  
out
and
clc    
aas    
add
or
lahf   
insl
push
cmc    
(bad)  
xor
add
sbb
int
rorb
add
lods
or
fwait
cmp
xor
xchg
pop
and
lods
sub
sub
or
add
mov
xchg
aas    
sub
push
iret   
mov
pop
fnstsw
(bad)  
pop
stos
push
(bad)  
or
pop
iret   
fwait
xchg
dec
add
fs cld 
movsl
push
std    
mov
mov
rdtsc  
mov
and
cmp
ljmp
mov
repnz dec
lret
test
daa    
ds mov
stos
fcomps
fs pop
fdivrl
(bad)  
rcl
push
rclb
cmc    
loope
sbb
add
leave  
and
adc
mov
adc
getsec 
xchg
adc
sub
push
inc
mov
addr16
call
add
stc    
je
or
push
call
adc
dec
jo
cmp
pusha  
push
outsb
mov
jbe
jns
add
xchg
add
adc
or
icebp  
jmp
jb,pt
cmp
inc
xchg
push
cmp
mov
xor
rcl
push
out
iret   
add
popa   
sub
cltd   
sbb
out
jl
ret    
xchg
jns
lods
and
loop
push
sub
outsb
cltd   
js
mov
stc    
fdivr
sub
stos
rorl
dec
test
jns
jmp
mov
hlt    
stc    
addr16 add
les
repnz in
cmp
ljmp
sbb
xchg
test
mov
in
clc    
lahf   
jnp
fcoms
mov
fisubl
bound
das    
mov
iret   
daa    
test
lea
mov
mov
in
ss dec
fisubr
loope
(bad)  
fadd
mov
add
adc
push
sbb
mov
icebp  
test
adc
lcall
rcl
xchg
fstl
inc
xchg
dec
(bad)  
rorl
and
xor
push
jbe
cmp
outsl
push
or
fs jns
push
ja
and
enter
xchg
cmp
mov
sarb
fidiv
lds
enter
xor
dec
push
cmc    
or
fiadd
cmp
push
mov
repz int3 
mov
in
sti    
ss
negb
(bad)  
push
cmp
call
inc
js
repz enter
adc
(bad)  
out
xlat
das    
inc
sub
sub
les
js
cmp
shll
fdivs
out
add
iret   
lret   
outsb
cmpsb
push
std    
cmp
(bad)  
out
lods
imul
addr16 push
fdivr
stc    
jno
add
fidivr
lahf   
sbb
xchg
mov
sbb
or
pop
dec
divb
xlat
repnz mov
jge
imul
mov
mov
fmulp
or
icebp  
push
or
jno
stos
lret
int
divb
(bad)  
push
cwtl   
pop
mov
cltd   
(bad)  
xchg
call
jmp
mov
push
scas
mov
inc
jecxz
jne
stc    
mov
mulb
iret   
movsb
adc
inc
pop
arpl
adc
push
pop
cmp
aas    
sub
aaa    
movd
sbb
std    
xchg
inc
fisttpl
aam
scas
pushl
fnstenv
jbe
and
cmp
add
xchg
and
sbb
mov
mov
call
dec
popa   
xchg
ret    
push
pop
addr16 jmp
lcall
jl
adc
sub
in
mov
popa   
push
out
xlat
lret
mov
fwait
stc    
mov
sub
or
inc
fcomps
push
cmc    
xor
std    
jmp
dec
out
sub
std    
movsl
cli    
dec
mov
les
fdiv
xchg
call
enter
inc
inc
into   
fucomip
(bad)  
daa    
or
enter
push
and
div
rol
push
pop
fnop   
push
dec
loope
outsb
or
dec
outsb
cmc    
mov
pop
push
lds
insb
vmovaps
les
cwtl   
push
mov
enter
pop
loopne
jo
pop
lret   
adc
mov
pop
and
xchg
sti    
mov
aam
mov
pop
mov
cs dec
ss or
scas
pop
sub
in
pop
xchg
xor
cwtl   
cvtps2pi
stc    
mov
iret   
xchg
adc
mov
jae
pop
pop
mov
inc
pop
cmp
out
in
push
(bad)  
movd
sbb
test
add
xchg
cltd   
into   
inc
dec
cmp
xor
push
(bad)  
icebp  
lock mov
push
jle
push
imul
pushf  
imul
add
(bad)  
aaa    
xlat
lock sub
xchg
roll
pop
fs jb
(bad)
xchg
jle
cltd   
nop
adc
cmp
xchg
cmpb
or
lcall
mov
fnstcw
roll
dec
pop
and
push
xchg
mov
loop
add
dec
and
pop
fwait
cwtl   
push
xor
cltd   
or
add
repnz in
out
push
or
fcmovnbe
mov
fcomps
cmp
hlt    
ret    
sub
cmpsb
sahf   
jl
inc
sbb
add
cli    
sbb
(bad)  
xor
mov
or
xchg
add
dec
mov
push
pop
movb
test
paddsb
scas
pop
mov
sbb
std    
jb
shrd
sar
add
dec
bound
call
into   
or
test
jge
lcall
mov
and
cli    
out
mov
inc
pop
lahf   
add
push
xor
rorl
pusha  
add
cmp
ror
mov
test
stos
adc
inc
mov
out
mov
(bad)  
adc
mov
lea
jmp
mov
lods
mov
mov
jmp
ror
ja
mov
out
dec
xchg
stc    
aad
push
jl
sbb
and
ljmp
mov
(bad)  
or
mov
test
outsb
adcl
out
jb
stc    
ss cs int
push
test
xchg
push
lds
insb
pop
push
sbb
fmuls
std    
jne
xor
xor
es data16 cmp
loopne
(bad)  
mov
or
push
xchg
mov
loop
xorl
fwait
test
shlb
int3   
pop
mov
push
jo
jns
jmp
jb
pop
and
cwtl   
stos
mov
pop
inc
xchg
int3   
(bad)  
jl
pushf  
add
push
pop
mov
mov
xchg
pop
sub
dec
xchg
push
cmp
inc
lret
and
xchg
shrl
xlat
loopne
sbb
lret   
out
repz jl
add
xor
fmul
mov
mov
cmc    
cmp
xor
int
lahf   
sarb
mov
stos
sub
xlat
mov
lea
mov
or
cmp
loop
jp
xor
add
jne
fsubrs
add
cmc    
adc
cmp
sti    
loopne
rolb
in
adc
inc
jecxz
mov
roll
out
pop
daa    
jo
fldenv
xchg
roll
test
mov
cmp
ds iret 
ficomp
addr16 out
sbb
psubd
or
pop
xchg
gs add
fmull
inc
data16
mov
(bad)  
pop
cwtl   
movsb
add
jne
adc
loopne
jg
or
aas    
inc
sub
mov
dec
and
add
dec
add
add
and
inc
xchg
out
in
jo
jecxz
(bad)
int
mov
cwtl   
sbb
jbe
ja
jo
cli    
xchg
addr16 enter
or
add
adc
mov
xchg
stos
adc
push
add
mov
scas
push
in
call
and
scas
dec
mov
mov
inc
and
cmpsb
pop
aaa    
mov
add
mov
adc
(bad)  
adc
ja
push
stc    
jp
sub
enter
xor
out
xor
pop
enter
ljmp
push
imul
or
test
aad
imul
movd
enter
fdivrp
push
sub
ret
cld    
lods
jb
inc
arpl
ljmp
in
test
lds
in
(bad)  
out
into   
(bad)  
fsts
or
sti    
iret   
jmp
mov
mov
fdiv
sub
ss jl
bound
adc
pushf  
(bad)  
pop
dec
ljmp
(bad)  
int
push
cmp
std    
mov
or
out
dec
mov
mov
add
scas
adc
(bad)  
lock dec
ret
mov
iret   
mov
jecxz
pop
ds es int
jbe
sub
mov
aad
es sti 
pusha  
push
insl
(bad)  
mov
sub
fwait
das    
cmp
xchg
cld    
inc
xchg
dec
sub
stos
cmpsb
(bad)
clc    
(bad)  
xor
mov
lea
xlat
inc
push
pop
mov
call
xor
pop
push
and
xor
test
insb
rolb
push
jne
(bad)  
push
mov
mov
ds int3 
fdiv
or
jno
or
sarb
push
insb
pusha  
add
push
inc
cld    
or
fbld
negl
pop
xchg
ret    
xor
add
pop
hlt    
inc
ret
iret   
je
cmp
out
dec
paddsb
cmp
flds
xchg
ror
pop
rcr
pop
xchg
ret    
xor
add
pop
hlt    
pavgb
out
ds enter
xor
and
jg
xor
mov
int
lods
sbb
stc    
push
mov
jge
(bad)  
fs int
fist
pop
push
addr16 into 
clc    
pop
dec
ljmp
(bad)  
int
aas    
scas
lea
cmpsb
mov
push
cmp
arpl
adcl
xor
mov
mov
in
ja
sub
pop
jl
add
out
pushl
dec
pop
movsb
pop
mov
in
rolb
mov
sub
cmp
repz push
push
ret
add
shlb
jecxz
repnz adc
or
mov
arpl
arpl
fimull
loop
into   
outsb
push
iret   
pop
xor
and
xor
in
cmpsl
and
jbe
adc
adc
les
push
dec
adc
pop
push
lods
rolb
test
mov
std    
popf   
dec
mov
call
aaa    
negl
mov
arpl
mov
cmp
clc    
cmpsb
in
jae
jmp
fbld
(bad)
arpl
xlat
lds
in
sarb
jnp
repz out
aam
cmp
or
not
rorl
mov
xchg
cmp
push
push
cltd   
mov
jo
in
push
lahf   
sbb
ret    
outsb
test
in
outsl
fimul
xchg
stos
cmp
(bad)  
xchg
cmpsl
outsl
(bad)  
mov
add
(bad)
mov
adc
lret   
or
fs int
xchg
jbe
xchg
cwtl   
inc
iret   
xchg
xchg
adc
and
add
in
pop
dec
ljmp
(bad)  
int
inc
lahf   
test
xor
ror
lret   
inc
in
sub
xor
pop
rorl
jecxz
movsb
fs sub
lret   
add
mov
cli    
cmpsb
pop
std    
sub
mov
jns
and
xorl
pushf  
jb
xchg
cmp
push
mov
xchg
leave  
psrad
in
mov
mov
cmp
adc
pop
lret   
mov
mov
xorl
mov
fdivl
xor
push
shr
scas
int3   
lods
ljmp
cmpsb
into   
fdiv
mov
(bad)  
fdivrs
cmp
pop
pop
adc
(bad)  
shr
aaa    
(bad)  
out
popf   
xchg
ror
mov
out
mov
xchg
movsb
jmp
out
push
iret   
dec
sub
scas
leave  
adc
in
jmp
aaa    
add
cmp
(bad)
(bad)  
stc    
cwtl   
stos
xor
xchg
jns
mov
es mov
rcrb
adc
and
dec
std    
inc
xchg
or
lock ss push
arpl
nop
mov
rolb
adc
sub
jmp
adc
lods
iret   
jb
insl
xor
int
(bad)  
adc
push
std    
xchg
add
std    
xchg
add
lods
mov
inc
mov
mov
xor
push
jne
das    
dec
mov
and
fistpll
jge
mov
pop
fiaddl
pop
jo
and
mov
cmp
mov
fidivl
mov
jae
outsb
adc
cmp
scas
sub
and
stos
lcall
add
mov
lcall
xchg
repnz stos
sbb
xchg
pop
cmpsb
cmpsl
cmpsl
imul
loope
fdivrl
negl
ds mov
sbb
add
lds
lods
(bad)  
push
pop
(bad)  
push
setno
into   
lods
adc
pop
out
daa    
sub
mull
mov
in
es out
adc
mov
pop
gs xchg
mov
ret    
ljmp
aad
inc
jecxz
jne
lds
mov
pop
shlb
js
iret   
adcl
xor
in
cmpsl
ret
stc    
cwtl   
test
addr16 mov
test
fdivp
dec
shlb
inc
rcr
pop
push
adc
sbb
jb
dec
arpl
fcomi
jp
adc
xchg
xchg
cmp
(bad)  
dec
xlat
cmp
sbb
sahf   
arpl
(bad)  
lret   
adc
mov
inc
stc    
shlb
sub
pop
ret
inc
iret   
ja
pop
xor
test
int
fisttp
mov
inc
cld    
(bad)  
shl
jle
fsubs
and
xchg
push
sbb
sar
ror
xor
sbb
testl
rclb
sarb
rolb
or
sub
xor
icebp  
inc
iret   
add
add
inc
inc
mov
(bad)  
in
and
dec
movsb
lret   
pushf  
repz xor
imul
adc
pop
loop
outsb
fisubr
mov
je
call
ljmp
sbb
adc
subb
mov
inc
out
into   
xor
int
cmpsl
cmp
js
mov
xchg
lret   
xchg
out
sbb
sub
sub
add
icebp  
sahf   
jb
ret
ret
addl
ss cmp
xchg
out
pop
jb
jle
pusha  
jmp
(bad)  
xor
iret   
cmpsb
shl
aad
loope
cmp
mov
out
dec
imul
repnz adc
push
lods
rcrb
pop
sub
aad
push
push
test
adc
lahf   
jae
loopne
sbb
das    
jl
adc
cmpsl
adc
inc
das    
jne
int
push
add
cmpsl
dec
xchg
movsl
push
mov
fs dec
imul
or
lea
mov
xlat
sbb
repnz cmp
int
subl
sub
mov
and
fwait
ljmp
lods
sbb
sbb
cli    
jmp
inc
pusha  
dec
push
call
adc
or
jns
jp
(bad)  
mov
loope
mov
adc
icebp  
out
sub
(bad)  
jg
adc
nop
add
ret
ja
jno
mov
sub
nop
outsb
mov
(bad)  
xor
sbb
jl
mov
mov
mov
xor
xlat
jecxz
pop
adc
cltd   
jns
lods
lcall
push
pop
sbb
les
cld    
(bad)  
out
sub
xor
in
pop
popl
test
mov
and
mov
and
sbb
mov
pop
jae
mov
pop
pop
mov
lret
call
pop
(bad)  
mov
sbbl
in
(bad)  
or
adc
inc
mov
adc
nop
test
cmp
les
das    
or
sbb
xor
scas
hlt    
int3   
pusha  
outsl
inc
rclb
cmpsb
setp
aaa    
sub
add
ret
in
mov
pop
cwtl   
lods
xchg
js
mov
sub
inc
push
ret
lods
dec
es push
into   
sub
jl
(bad)  
divl
test
inc
push
sub
roll
dec
(bad)  
cmpsb
in
push
stc    
(bad)  
loop,pt
xor
icebp  
xchg
js
lods
lcall
nop
lret
add
mov
fildll
or
lds
in
mov
xchg
aam
and
mov
add
js
test
mov
mov
repz cmp
cmp
push
xchg
adc
pop
adc
gs cli 
push
xlat
mov
test
push
push
sub
test
fnstsw
pop
test
xchg
arpl
idivb
fsubr
and
or
xchg
sti    
adc
sub
and
test
aaa    
lea
xchg
sti    
sbb
mov
sbbb
mov
or
mov
pop
(bad)  
xor
ss fwait
das    
cmp
clc    
inc
(bad)  
cmp
cmpsl
and
je
lods
ret    
jne
fbld
or
loop
xchg
aaa    
push
fwait
cmc    
in
inc
sub
sub
adcl
sbb
addl
fnstsw
lods
lahf   
pop
ret
inc
mov
push
fadds
ljmp
roll
(bad)  
insb
pop
cli    
push
stos
test
jae
or
sub
push
std    
xchg
inc
xchg
xchg
fcmovb
test
jp
push
xchg
scas
add
js
lcall
call
jge
cmp
cmpsl
cmpsb
adc
fcomps
loope
fsub
test
ficompl
lcall
and
fprem1 
push
ja
lret
fnstsw
inc
jnp
mov
mov
add
scas
(bad)  
jne
(bad)  
jbe
std    
xchg
inc
xchg
xchg
fcmovb
xchg
(bad)  
adc
fldl
imul
ja
iret   
cmpsl
test
sar
hlt    
popa   
popf   
cmpsl
jecxz
or
xchg
fs jnp
bound
dec
out
sub
ret
cmp
(bad)  
push
cmp
mov
ljmp
inc
adc
out
mov
ljmp
xchg
and
js
pop
test
and
cmp
jmp
fldl
rcrb
outsl
stc    
mov
outsl
xchg
(bad)  
push
mov
cmpsb
sbb
jnp
into   
dec
loope
iret   
ds mov
out
mov
cmp
mov
ljmp
or
jle
and
adc
sub
jns
stos
dec
sbb
sti    
jg
pop
addr16 enter
sub
mov
lcall
xchg
xor
or
jp
out
arpl
pop
jp
lret   
jecxz
push
in
jbe
xor
frstor
push
rcl
mov
jae
and
xor
pop
ljmp
adc
fdivl
mov
out
dec
cltd   
push
ret    
cltd   
movsl
pop
fnop   
and
repnz in
lar
and
test
jle
(bad)  
decb
pusha  
orl
sbb
in
scas
xchg
into   
dec
pop
mov
mov
out
dec
lds
cmp
and
iret   
movsb
fisub
mov
std    
mov
call
inc
inc
stos
inc
pop
and
ljmp
incb
pusha  
push
add
dec
mov
sub
inc
shrb
std    
out
lock subb
mov
inc
movsl
xchg
jecxz
lret
mov
or
mov
(bad)  
mov
jmp
xchg
xor
std    
fsts
push
jge
sbb
js
cs pop
or
inc
sub
pop
jecxz
push
mov
xor
sti    
sub
mov
pop
dec
push
rclb
aad
ret    
mov
push
fsubl
inc
faddl
lds
and
test
lods
lahf   
ds pop
sti    
ss outsl
cmp
xchg
xchg
sub
hlt    
out
lods
adc
jo
daa    
ds mov
fisubrl
jle
js
add
cmp
xchg
out
outsb
fldln2 
aaa    
mov
fwait
and
in
or
fimull
call
xor
vsubss
ja
lret
inc
popa   
xchg
scas
jno
jle
or
cmpsl
or
xchg
xchg
add
test
mov
sub
out
fdivl
lret
inc
data16 jbe
loop
mov
dec
sub
add
push
adc
add
jle
dec
xor
and
push
cmp
hlt    
xor
push
xor
divl
imul
sbb
or
mov
repnz arpl
hlt    
xor
ljmp
pop
pusha  
cmp
test
mov
dec
ds
sub
mov
imul
das    
xchg
(bad)  
fdivrs
pop
scas
ds xchg
sbb
or
inc
adc
imul
aas    
int3   
mov
xor
out
lods
sti    
out
shll
(bad)  
outsl
(bad)  
les
lods
mov
jnp
or
aad
stos
adc
push
lock add
das    
or
and
movsl
pop
idivl
jl
mov
movsb
icebp  
add
xor
xchg
cltd   
mulb
cmpsb
mov
mov
(bad)  
rclb
imul
mov
scas
clc    
pop
aad
or
jb
inc
imul
ficompl
stc    
jle
mov
cmc    
pop
int3   
(bad)  
out
xor
jle
sub
jecxz
loope
and
add
jecxz
movsl
jmp
int
cld    
movsl
outsb
inc
or
xchg
inc
es data16 cmp
xchg
test
sub
or
dec
pop
jns
mov
and
out
push
mov
aas    
loopne
add
insl
jbe
mov
push
push
in
inc
les
clc    
je
cmp
in
stos
lret
push
add
dec
jno
test
push
dec
jbe
test
mov
lret   
gs lahf 
add
mov
(bad)  
adc
inc
iret   
cmpsb
les
js
dec
push
repnz adc
mov
(bad)  
lods
out
negb
stos
add
je
je
repz xor
cwtl   
stos
xor
and
dec
movsb
aam
daa    
movsl
push
loope
push
scas
cltd   
push
pushf  
inc
out
pop
fsubrl
jge
xlat
inc
pop
test
xor
fwait
lcall
cwtl   
inc
sbb
push
xor
or
mov
out
fwait
test
ret
aam
ficompl
out
mov
stos
seta
std    
xchg
add
jg
fdivr
and
jp
sub
std    
xchg
add
mov
orl
mov
xchg
pop
std    
(bad)  
mov
adc
mov
sahf   
fsqrt  
lock
sarl
out
popf   
gs cmp
adc
mov
mov
test
test
scas
btrl
gs cmp
mov
sbb
mov
repnz sarl
out
mov
stos
scas
(bad)  
movsb
jg
sub
mov
push
std    
xchg
add
add
fwait
test
fimull
stos
icebp  
ds imul
fcomps
dec
xor
and
hlt    
xor
std    
mov
jb
ljmp
(bad)  
std    
mov
insl
jl
aaa    
inc
fcom
cmp
loop
fwait
test
rcrb
std    
inc
lea
out
out
mov
ret
(bad)  
out
ficompl
loop
push
push
sbb
sti    
inc
les
cmp
into   
sbb
andb
mov
lds
cmp
fiadd
ret
sub
idiv
dec
mov
cwtl   
je
mov
hlt    
mov
dec
cmp
jns
stc    
repnz adc
fcoml
and
cmp
decl
mov
outsb
ficomp
orl
aam
inc
add
mov
in
adc
fistl
leave  
push
sub
mov
stos
cli    
stos
add
ret
push
or
and
mov
cmpsl
jbe
push
xchg
xchg
ljmp
mov
xor
test
stc    
in
or
inc
xchg
pop
mov
ja
jg
testb
pop
fldl
imul
jp
push
stos
pop
dec
and
aad
stos
adc
fiaddl
sarl
or
mov
sarb
insl
cmc    
xor
addr16 pop
bound
sbb
mov
lret
ret
(bad)  
out
xchg
std    
insb
xor
lahf   
rolb
mov
test
mov
jle
insl
(bad)  
mov
fisttp
mov
fsubrl
out
mov
rcl
fnsave
jmp
pop
xor
out
mov
fisub
in
ret    
fwait
shrl
inc
shll
cli    
xlat
inc
pop
mov
cmc    
push
(bad)  
ja
adc
pop
loop
sbb
(bad)  
cmp
(bad)  
fisttp
xchg
sub
jno
push
and
movsl
push
std    
pop
jnp
mov
mov
pop
xor
call
and
mov
xor
push
les
lods
inc
xlat
xor
fisttpl
fdivr
inc
rcr
out
mov
jae
fistl
adc
rol
inc
imul
mov
outsl
mov
dec
jns
lea
(bad)  
xor
pop
mov
nop
sbb
mov
xchg
add
sub
jns
rorb
jle
insl
and
fnstcw
daa    
mov
fdivl
sub
sbb
add
addr16 not
es std 
xchg
popl
pop
adc
adc
roll
loope
and
xchg
add
inc
adc
mov
lcall
mov
loop
xchg
(bad)  
loope
repz xlat
iret   
push
mov
add
cmpsb
ja
mov
cmpb
enter
aas    
addl
push
fsubs
fildll
daa    
aas    
sbb
fistpl
or
mov
fist
bound
shr
jg
mov
cmp
ja
add
mov
cmp
push
push
fdivl
mov
mov
lock adc
mov
icebp  
mov
push
ds ss mov
and
xor
sub
gs mov
adcl
rorl
lahf   
loopne
or
insb
sti    
stc    
cmpl
pop
insl
pop
(bad)  
int
(bad)  
adc
mov
rorl
sarl
push
icebp  
cmpsb
repnz leave 
push
jp
ljmp
cltd   
nop
jmp
popa   
fdivl
sarl
push
in
scas
rorb
mov
sub
les
js
cmpsl
loop
fstpl
loope
mov
daa    
sub
movsl
push
jp
ljmp
fild
psubsb
(bad)  
mov
mov
(bad)  
repz mov
add
stos
dec
sbb
jg
xchg
arpl
js
outsl
sub
lock push
mov
pop
sub
cmp
pop
xor
insb
test
pop
and
push
push
divb
lret
sub
inc
and
push
rol
fistpl
out
jns
cmp
jp
or
lods
push
(bad)  
or
cmp
dec
rorb
pop
jbe
mov
scas
jbe
mov
adcb
rol
adc
movsl
lahf   
mull
or
and
inc
lea
loopne
pop
and
out
sub
hlt    
push
dec
lcall
sbb
lret
lcall
mov
shl
rcrb
lcall
pop
not
imul
add
pusha  
stos
(bad)  
data16 cmc 
jl
push
sub
add
dec
mov
cmc    
xor
mov
fwait
mov
sbb
jne
push
pop
sbb
mul
xor
inc
jmp
and
iret   
inc
add
cld    
push
stc    
jp
push
jle
test
(bad)  
sbb
addr16 push
aam
outsl
xchg
int
fisubr
push
arpl
lcall
inc
movsl
(bad)  
push
aaa    
add
mov
in
lcall
lods
pop
jecxz
jp
jmp
jo
xchg
ja
test
outsb
push
mov
add
sbb
outsb
inc
ja
cmpsb
stos
sub
(bad)
xchg
push
insb
(bad)  
and
xchg
sub
lods
mulb
and
push
gs jmp
add
push
sbb
std    
mov
adcl
(bad)  
out
or
mov
or
xor
sub
pop
cmpsl
jae
add
sub
repz pop
pop
out
ds cs
dec
test
sbb
es dec
dec
mov
(bad)  
dec
and
fsubs
ret
add
(bad)  {%k2}{z}
test
imul
mov
popa   
sbb
cmp
or
movsb
jb
aam
adc
out
dec
mov
pushf  
jno
mov
js
or
pop
(bad)  
lock cli 
arpl
hlt    
xchg
rcrl
xor
sbb
xlat
std    
add
xlat
cmpsl
out
cmpsl
fiadd
sub
sub
or
or
jmp
mov
int
daa    
(bad)  
in
hlt    
push
subl
xchg
add
cmp
out
inc
jnp
mov
fwait
loop
xorl
push
jecxz
ljmp
pop
ret
cwtl   
ja
cmp
les
pop
cwtl   
dec
mov
adc
dec
mov
push
inc
ja
mov
mov
sub
insl
enter
cmpsb
movsb
ljmp
nop
(bad)  
(bad)  
aad
outsb
add
jg
std    
pop
mov
in
and
push
iret   
adc
inc
xor
mov
cld    
lods
rolb
adc
xchg
push
imul
push
clc    
sbb
xor
pop
push
pushf  
sbb
push
cld    
loope
lea
xor
out
loop
fsubrl
or
stos
adc
xor
mov
or
xchg
int3   
jmp
imul
mov
roll
(bad)  
aaa    
sub
inc
adc
int
iret   
mov
jno
popf   
jnp
shrl
test
sbb
hlt    
lea
add
daa    
test
aam
ds das 
xor
mov
mov
push
cwtl   
test
mov
int
lea
loope
icebp  
psubq
movsb
add
mov
std    
or
iret   
loope
xchg
(bad)  
cmp
add
int
cld    
fcmovu
movsl
xchg
jg
jge
(bad)  
mov
xchg
fwait
das    
repnz push
and
das    
nop
test
decl
xor
jle
loop
lods
mov
mov
mov
xchg
call
ds push
mov
jle
das    
and
and
(bad)  
sarl
aam
mov
fisttpll
xchg
sub
inc
xor
lea
jmp
jmp
xor
sub
std    
imul
(bad)  
sub
fs mov
push
adc
mov
cwtl   
leave  
mov
add
fcomps
cmpsb
lea
orl
nop
int3   
into   
mov
sub
test
sub
mov
lcall
call
jge
jecxz
xor
inc
pushf  
mov
cmp
mov
jo
xchg
ficom
loop
pop
mov
xor
mov
jnp
aad
and
and
mov
fnstsw
test
or
(bad)  
lods
cmpsb
dec
sbb
rorb
test
and
popa   
add
jno
jbe
sub
mov
aaa    
cs ret
outsl
jns
scas
jno
test
les
js
jge
repnz adc
sti    
(bad)  
addb
cmp
and
iret   
pop
dec
jge
push
fstpt
dec
jge
jl
or
sub
mov
enter
setg
mov
adc
dec
adc
mov
out
cmp
test
cmp
cmp
jbe
and
out
sub
push
popl
aas    
hlt    
jmp
add
jnp
hlt    
inc
jle
mov
sub
jns
aaa    
shrb
repnz enter
mov
lea
test
ror
mov
dec
adc
scas
sub
repnz std 
cwtl   
stos
xor
pop
xchg
sahf   
xchg
movsl
mov
ss jns
xlat
inc
xchg
xchg
jmp
dec
pop
inc
jb
mov
cmpsl
aas    
fisubr
xor
mov
scas
inc
jmp
pop
jns
int
shr
or
xchg
mov
sti    
stc    
test
(bad)  
jmp
sbb
push
xchg
mov
mov
sub
jmp
push
dec
test
inc
adc
push
and
push
iret   
mov
xor
scas
mov
mov
adc
das    
fldcw
push
cld    
push
cli    
cmp
lock xchg
add
or
xor
cmc    
mov
inc
ror
mov
sub
pop
int3   
mov
push
jbe
popa   
pop
xchg
sarb
push
fdivr
sbb
sbb
pop
lea
dec
pop
fwait
aam
lahf   
or
jno
cwtl   
gs
clc    
pop
mov
clc    
je
shrl
mov
imul
test
stos
aam
and
xchg
jbe
and
mov
jbe
pushl
jo
adc
mov
adc
into   
sub
outsb
xchg
(bad)  
mov
stc    
lea
mov
clc    
je
mov
jae
int3   
(bad)  
ljmp
push
xor
jno
cwtl   
jo
adc
mov
shll
mov
and
es xchg
jbe
std    
cli    
(bad)  
outsl
mov
ret
(bad)  
lret   
andb
xchg
aam
lret
out
iret   
out
hlt    
xor
stc    
cmpl
(bad)  
dec
daa    
shrl
stc    
lea
mov
movsl
dec
stc    
lea
jmp
stc    
ret
pop
or
data16 jle
mov
cld    
sbb
ja
aam
rcll
mov
mov
mul
mov
les
int
mov
fldl
or
addl
movsb
add
xchg
push
or
call
aam
xchg
es jno
sub
pushf  
sti    
pop
fidiv
inc
sbb
roll
cltd   
add
into   
jnp
stos
dec
cli    
mov
mov
das    
fistl
test
or
xchg
mov
inc
imul
add
cs inc
fsubrl
outsb
test
mov
sub
cmp
or
mov
repz in
pop
or
(bad)  
fdiv
mov
aaa    
das    
inc
sub
loop
inc
inc
test
cld    
jle
pop
clc    
mov
push
pop
in
movsb
or
jmp
es jno
and
addr16 sub
ret
mov
or
push
lods
(bad)  
int
out
std    
lcall
cmp
sbb
adc
xchg
cmp
out
mov
(bad)  
idivl
icebp  
or
test
iret   
jl,pn
or
lods
jb
jp
xor
(bad)  
mov
std    
int3   
inc
out
xchg
inc
bound
sbb
xchg
mov
ljmp
(bad)  
int
out
xchg
add
mov
negl
xchg
stc    
lods
ds icebp 
in
xchg
add
pop
sbb
push
xchg
scas
add
mov
les
jecxz
repnz adc
out
and
mov
push
iret   
cmpl
(bad)  
fwait
repnz scas
rolb
pop
or
jl
ja
dec
add
sahf   
out
xchg
out
add
lock aaa 
mov
jge
enter
(bad)  
lods
mov
xor
outsl
loopne
cmc    
mov
shll
cli    
jge
push
mov
bound
in
and
push
jecxz
sub
pop
lods
sbb
repz or
sub
ds push
mov
jle
call
push
push
stos
push
pop
clc    
sbb
es sbb
insl
and
je
xlat
inc
pop
test
push
adc
mov
xlat
fadds
lds
dec
sub
mov
loop
mov
ss
mov
mov
pop
and
add
repz jno
mov
out
pop
sbb
dec
push
aaa    
jbe
mov
mov
imul
data16 fxch
inc
dec
push
mov
fincstp 
repz pop
popa   
or
jp
aaa    
testb
rol
out
xchg
pusha  
xchg
jg
enter
mov
addr16 push
fcomps
xchg
push
inc
(bad)  
(bad)  
dec
mov
push
adc
clc    
mov
gs cltd 
test
scas
div
pop
mov
(bad)  
pop
pop
rorl
pushf  
lock cwtl 
fsubrs
pop
xor
iret   
pop
iret   
fwait
test
addr16 or
inc
leave  
data16 cld 
or
mov
xor
cmc    
xor
test
mov
sbb
sbb
xchg
push
mov
xlat
inc
pop
test
sahf   
or
stc    
fnstenv
inc
repz fdivrl
(bad)  
lods
pop
pop
shll
cli    
movsl
adc
push
mov
pop
int3   
mov
mov
out
xchg
cwtl   
push
and
jecxz
imull
out
xor
in
call
xchg
lcall
shrb
jp
pop
jecxz
test
lcall
cmp
push
and
dec
int
xor
pop
sub
pop
iret   
imul
add
lods
aam
sub
mov
and
es sbb
imul
jecxz
(bad)  
dec
lret   
mov
ret
mov
pop
dec
push
push
in
lret   
xchg
sub
fnstcw
or
dec
les
sahf   
mov
in
into   
pop
fiadd
ss in
inc
pop
mov
addr16 push
mov
sarl
mov
vmovsd
adc
mov
inc
xor
fimull
(bad)  
mov
cld    
out
mov
dec
jmp
scas
loope
aad
jnp
jns
rorb
jnp
insl
and
inc
jge
loopne
push
push
push
pop
aam
outsb
hlt    
or
push
cmpsl
subl
repz add
js
out
repnz and
push
aas    
es int
cmc    
xlat
or
jmp
pop
jns
mov
and
lock scas
add
sub
sub
hlt    
or
ret    
data16 and
or
nop
clc    
adc
inc
sub
icebp  
mov
jecxz
sbb
jge
repnz adc
stc    
lea
mov
mov
shlb
dec
stc    
lea
repz xor
scas
add
sbb
mov
test
and
mov
add
orl
jmp
aam
cwtl   
fsub
push
iret   
lahf   
jge
inc
sbb
mov
mov
jecxz
cmp
dec
pop
pushf  
jnp
clc    
and
inc
dec
lss
sti    
pop
push
adc
ficomp
aaa    
push
lods
dec
(bad)  
rorl
mov
hlt    
das    
or
test
lea
mov
xchg
pop
int
sub
xor
mov
sbb
bound
cld    
(bad)  
dec
lcall
inc
or
mov
fdivp
cmp
stc    
lea
ret
je
(bad)
mov
into   
aad
dec
lcall
jmp
lea
ret
jp
aam
(bad)  
(bad)  
xor
mov
xchg
push
in
inc
mov
fs dec
imul
inc
sub
ljmp
jb
ret
jp
icebp  
xchg
inc
lea
sub
or
jmp
push
les
sub
jge
inc
pop
fidivrl
mov
loop
cmp
dec
pop
mov
push
mov
mov
mov
jae
mov
cmp
mov
iret   
xchg
leave  
cmpsb
mov
repz std 
movsl
popa   
push
loope
roll
jbe
leave  
mov
bsr
das    
jl
ss
or
push
loop
push
cmpsl
jmp
movl
xchg
in
mov
in
ret
mov
cmp
(bad)  
fldcw
xor
pop
loop
test
leave  
mov
lea
(bad)  
lods
and
movsb
rorb
lock in
mov
pop
jmp
sub
in
mov
dec
mov
test
ret
fdivr
cmpsl
daa    
push
sub
scas
or
mov
fwait
int3   
js
and
adc
inc
xchg
lea
mov
cmc    
(bad)  
sbb
add
daa    
ret
setg
js
add
inc
(bad)  
or
int
sbb
lods
sbb
pop
int
adc
sbb
xchg
sti    
xlat
lea
clc    
cwtl   
mov
push
out
fcomip
cli    
enter
js
ret
sbb
adc
(bad)  
jo
push
das    
dec
clc    
cwtl   
mov
push
lock fcmovne
addr16 xchg
inc
negb
popa   
(bad)  
int3   
test
(bad)  
icebp  
mov
jg
xor
cmc    
mov
mov
mov
lea
dec
push
pop
mov
mov
push
jmp
fcmovu
mov
sbb
imul
outsb
mov
mov
cld    
lods
jb
push
or
sub
fidivr
aas    
in
sti    
int
pop
sub
leave  
adc
adc
(bad)  
xrelease xchg
(bad)  
rol
inc
cmp
out
stc    
std    
mov
shrl
imul
push
lds
cmp
pop
sub
out
fnstenv
lea
jo
je
and
or
jmp
ss lahf 
rclb
lods
rorl
and
jp
in
cmpsl
fdiv
xor
adcl
mov
push
jae
mov
xchg
jbe
inc
mov
or
cmp
and
jbe
adcb
sbb
dec
push
mov
push
xchg
shrb
test
es iret 
and
out
xchg
aaa    
pop
(bad)
pop
jns
mov
fwait
(bad)  
add
lds
stc    
test
or
mov
gs loopne
jno
mov
(bad)  
fwait
int
sbb
lcall
(bad)
call
pop
adc
cmp
neg
aad
mov
adc
das    
and
jle
or
ja
xlat
mov
in
insl
or
push
or
sub
stc    
(bad)  
mov
lock mov
sub
xchg
add
(bad)  
and
mov
jbe
push
fdivrl
mov
in
stos
test
sbb
cmc    
aam
fwait
fs scas
inc
xlat
imul
push
add
sarl
add
sbb
mov
push
sbb
(bad)
sub
or
add
in
xchg
cmp
mov
sbb
and
loop
js
xlat
dec
nop
ljmp
fdivl
ficompl
lea
iret   
cmc    
add
or
ret
sub
aad
(bad)  
addr16 push
aam
sub
shr
mov
cld    
mov
xchg
loop
jecxz
mov
ret
into   
fistpll
xor
lret
fild
(bad)  
jne
and
negb
js
add
sbb
es pop
mov
lods
insl
shll
aad
daa    
pusha  
lahf   
stc    
pop
(bad)  
pop
out
(bad)  
das    
push
mov
mov
mov
inc
scas
add
inc
test
sub
scas
fdivr
add
in
and
add
add
xchg
out
sub
pop
jmp
jp
icebp  
xchg
rorb
in
(bad)  
fwait
cwtl   
lcall
add
lods
mov
(bad)  
sahf   
lret   
mov
dec
mov
stc    
xorl
ljmp
push
int
xorl
repz jae
or
jmp
pop
rcll
and
mov
cltd   
sub
dec
or
in
cmpsl
shrb
adc
aas    
std    
mov
sarb
pop
sbb
lahf   
adc
int
push
fisubr
mov
int
xchg
cld    
xchg
xchg
add
cmp
xchg
stos
mov
icebp  
lea
fstpl
push
ja
leave  
jns
mov
sub
pop
into   
mov
mov
lahf   
sarb
nop
push
inc
inc
push
xor
int
arpl
or
out
fwait
nop
sub
inc
xor
lea
aam
inc
mov
push
pop
fdiv
xor
arpl
pop
or
push
outsb
xlat
cmp
lock ret
cld    
lods
loop
movsl
(bad)  {%k2}{z}
lock add
das    
cmp
inc
bound
sar
sbb
sub
int
mov
lcall
test
adc
sub
mov
imul
clc    
xchg
lds
or
push
mov
in
(bad)  
into   
cwtl   
fldcw
sbb
(bad)  
or
call
sti    
ss and
js
pushw
xchg
in
add
mov
shll
push
jmp
movsb
lret   
(bad)  
in
xlat
in
fisubrl
add
sub
cmp
pop
jb
out
push
in
push
add
jmp
xor
jg
xchg
sarl
movsl
cmp
out
test
in
les
mov
leave  
(bad)  
cmp
inc
or
loop
push
adc
(bad)  
fstl
jno
iret   
mov
xor
xor
aaa    
xchg
loopne
out
xor
mov
lea
cmpsl
cli    
or
(bad)  
dec
jns
lea
jmp
and
push
add
cmp
mov
out
test
xchg
popa   
adc
test
dec
testb
popf   
mov
jl
mov
cmc    
xor
xor
push
adc
xchg
lods
addr16 ret
and
das    
nop
cltd   
jno
and
sub
(bad)  
sub
lods
aad
jae
fistp
ss mov
(bad)  
lea
stc    
inc
jb
pop
xor
rcrl
inc
sub
pop
push
je
cmp
(bad)  
pop
fisttpl
divl
mov
rolb
cmp
lds
aam
xor
mov
notl
mov
iret   
es inc
adc
mov
rcrl
outsl
adc
outsb
out
push
stos
mov
cmp
iret   
cmp
mov
mov
mov
roll
mov
xchg
loope
ss inc
pop
sub
stc    
push
movsb
(bad)  
adc
push
(bad)  
in
mov
mov
lods
jo
push
aam
sti    
shrb
mov
addr16
je
out
mov
call
mov
stos
(bad)  
(bad)  
int3   
mov
(bad)  
inc
fnstcw
ja
popf   
jbe
lock cmpsb
ret
lret   
stos
mov
or
xor
mov
jle
and
mov
std    
out
sub
hlt    
popa   
loopne
xchg
call
jmp
cmpsl
jmp
fnstcw
pop
jns
mov
into   
(bad)  
scas
add
out
dec
repz mov
movd
cmpsl
adc
dec
pop
mulb
mov
loope
add
fistpl
mov
or
imul
repz pushf 
iret   
push
jno
mov
adc
(bad)
xor
cmp
outsl
push
sbb
fwait
cmp
pop
mov
int3   
adcl
sti    
inc
mov
jge
sbb
pusha  
adc
xchg
xchg
ja
movsl
pusha  
ss mov
lods
push
push
sub
inc
pusha  
enter
popa   
mov
repz xor
imul
stos
jecxz
lahf   
cltd   
and
push
out
aam
sbb
cs dec
and
outsb
(bad)
aad
idivl
mov
push
int
stos
xchg
jmp
adc
punpckhbw
jmp
jg
add
lahf   
pop
push
(bad)  
ret
mov
fsub
repnz push
dec
mov
xchg
dec
(bad)  
mov
jp
mov
mov
xlat
cmpsb
mov
cld    
sbb
and
xchg
mov
dec
mov
dec
ds in
push
mov
push
cmpsl
lods
test
jns
int3   
popa   
mov
adc
xor
incl
mov
lock out
test
hlt    
imul
inc
sbb
fstpt
test
mov
push
xchg
scas
add
sbb
pop
jecxz
call
sbb
pop
jo
and
mov
cmpsl
inc
shl
mov
pop
daa    
xchg
mov
aad
xchg
jns
test
gs rorl
das    
adc
xchg
rclb
pop
jae
pop
jns
mov
adc
add
adc
pop
dec
and
jns
fnstenv
test
dec
jmp
pop
into   
imulb
pop
andb
sbb
out
or
sub
push
stc    
lea
mov
jecxz
(bad)  
rorb
cltd   
(bad)  
mov
pop
dec
fsubl
sarb
inc
mov
jg
push
call
pushf  
push
stc    
lea
mov
xlat
inc
lock jbe
cs push
push
aam
lret
mov
scas
cmp
movsl
adc
lea
mov
mov
mov
lret
fcoml
sbb
aaa    
js
ja
xor
mov
fimull
fmull
cmpsl
push
jle
dec
fistp
jp
lahf   
push
jo
cmp
xchg
cwtl   
es cmp
push
in
xchg
mov
cltd   
sub
or
arpl
stos
mov
int
mov
or
aaa    
(bad)  
mov
xchg
ficompl
test
insl
cwtl   
sbb
call
pop
adc
ds in
rolb
mov
js
fcompl
fcompl
insb
pop
dec
(bad)  
mov
or
sub
push
test
pusha  
je
xlat
inc
pop
test
push
adc
dec
fildll
ds and
adc
mov
addr16 push
fcomps
mov
loop
inc
in
pop
cmp
out
mov
push
iret   
add
ret    
adcl
loope
jecxz
fist
pop
divl
add
ljmp
(bad)  
int
out
outsl
jge
ret
dec
mov
fidivr
dec
in
gs inc
add
repz inc
jle
out
sub
inc
sub
mov
ret
and
daa    
(bad)  
sub
arpl
rorl
mov
repz pop
lds
mov
and
cs sbb
cmpsb
les
data16 int3 
(bad)  
pop
sub
push
scas
out
std    
(bad)  
loopne
repnz xlat
inc
pop
test
push
adc
dec
pop
xlat
aad
xchg
inc
mov
mov
adc
popf   
inc
loop
adc
xchg
int
inc
out
in
lods
push
dec
lret   
test
(bad)  
jne
sbb
xchg
cmp
jge
jbe
outsl
cmc    
pop
(bad)  
and
dec
xchg
out
push
sbb
dec
mov
stos
cltd   
imulb
and
bound
inc
imul
stc    
push
push
mov
jmp
push
mov
sbb
or
movsb
or
adc
aas    
lahf   
nop
scas
das    
stos
iret   
pop
iret   
fwait
test
addr16 or
je
push
test
push
add
mov
and
and
mov
push
iret   
add
jns
rorb
js
sub
xchg
sub
data16 and
(bad)
fwait
sbb
mov
or
rcll
or
fildll
or
push
(bad)  
sbb
adc
push
jmp
or
in
(bad)  
and
adc
inc
sti    
pop
or
jmp
sbb
cmp
fwait
and
sub
hlt    
cmpsl
adc
int3   
(bad)  
mov
add
fs adc
imul
adc
mov
loope
lahf   
sbb
cmp
mov
add
das    
sar
fwait
loope
jle
in
mov
stos
insl
mov
loope
test
loope
pop
jecxz
jne
xor
test
adc
cmpsl
rorb
fdivs
repz jno
jle
dec
outsb
je
out
mov
sub
psubd
or
jo
push
lea
sti    
jecxz
out
ret
jg
icebp  
cwtl   
jle
dec
add
inc
shrl
cwtl   
shr
bound
lods
cmp
inc
jbe
push
aad
aaa    
mov
andl
in
scas
cwtl   
pop
aam
hlt    
popa   
test
or
test
loope
fucomip
xor
lret
rolb
mov
mov
das    
ret
dec
mov
fisub
test
mov
(bad)  
jo
test
and
outsb
or
in
jle
iret   
imul
les
out
mov
lea
inc
les
sub
lds
sbb
lret   
stos
sbb
inc
or
sbb
adc
negl
lret
aas    
cmp
int
imul
repz push
ljmp
test
cmp
adc
xchg
test
push
minps
sbb
andb
mov
movsb
adc
fcoms
mov
out
nop
pusha  
(bad)  
cmp
mov
lea
ss jae
das    
jmp
sbb
lahf   
pop
and
fwait
daa    
push
cmc    
ds lods
xlat
jno
and
fcoml
inc
or
popf   
into   
fwait
jmp
or
aas    
cld    
pop
adc
fsubrl
mov
mov
and
sub
lods
inc
jge
inc
lods
xor
inc
mov
lahf   
dec
rcr
dec
sarb
cmp
xlat
inc
xchg
xchg
aad
xor
icebp  
fstps
add
mov
cmp
mov
loope
mov
sbb
or
pop
aam
adc
ja
shr
or
cmp
xor
stos
adc
and
or
iret   
out
mov
jmp
imul
movsb
insb
xor
fild
adc
jno
mov
mov
sub
pop
xchg
lret   
les
pop
inc
cmp
mov
sbb
cmp
push
cmp
in
cmc    
fldenv
inc
outsb
sub
pmaxsw
and
lcall
lcall
andl
lret   
jne
mov
jo
pop
cmp
sbb
enter
mov
(bad)  
test
imul
repz jl
cli    
xchg
jb
ret
mov
xchg
push
push
mov
scas
btrl
popf   
pop
fbld
sbb
add
jno
out
lret
aam
lret
ja
ja
inc
repz add
(bad)  
loopne
xlat
sbb
nop
dec
lcall
movsb
loop
stos
fdiv
xchg
jl
cmp
int3   
push
les
stc    
pop
or
int
sub
cmp
out
enter
or
popl
jb
in
mov
cmc    
scas
stos
mov
pop
xchg
dec
mov
mov
inc
cltd   
cmpsb
mov
mov
mov
cmpsb
dec
popf   
or
dec
and
stc    
std    
inc
mov
mov
fisttpll
insb
fwait
mov
add
repz push
(bad)  
xchg
movsl
cmp
rorb
sbb
push
ljmp
lods
mov
push
cmp
insb
push
outsb
inc
(bad)
ficom
xor
mov
fimul
mov
pop
scas
ss out
and
push
ss mov
xor
push
lea
lods
stos
pop
daa    
add
ss inc
pushf  
xor
xor
push
lea
mov
addl
loop
add
inc
test
ds
dec
ljmp
xor
jno
jmp
call
fwait
bound
int3   
sub
(bad)  
push
div
pop
cltd   
mov
jbe
jmp
(bad)  
dec
jno
lods
pop
push
ja
mov
(bad)  
(bad)  {%k2}{z}
(bad)  
fcompl
xchg
std    
cli    
adc
jmp
test
lahf   
sub
inc
imul
xor
int3   
push
fimul
aam
lret
mov
jbe
stc    
lea
mov
xchg
jae
pop
(bad)  
das    
fimul
mov
inc
popa   
shrl
lea
mov
loopne
inc
xchg
or
add
mov
mov
jns
roll
fstpt
aaa    
(bad)  
rcrb
inc
(bad)  
shll
inc
dec
xorb
cmp
fstp
ret    
flds
(bad)  
(bad)  
icebp  
or
add
pause  
xor
lods
sub
jecxz
je
cmp
jle
nop
sbb
and
repnz sub
xchg
and
popa   
fsts
es jno
popw
ds push
mov
mov
(bad)  
(bad)  {%k2}{z}
aad
rorl
aam
bound
imul
xor
lods
loope
fisttp
and
push
or
jp
push
jle
push
jmp
xchg
inc
decb
sub
pop
pop
lret
push
out
jle
push
mov
dec
push
bound
ds mov
dec
lods
mov
xchg
lcall
popa   
fistp
fimul
push
or
xchg
cmp
outsl
add
pop
xor
adc
lahf   
jge
jp
mov
fisttpl
dec
fmull
hlt    
sbbb
push
mov
dec
mov
sbbb
sbb
jle
sti    
xchg
scas
sbb
fwait
cwtl   
xchg
repz push
add
dec
int3   
sub
fsubs
(bad)  
stos
push
xchg
movsb
into   
in
cmpsl
jns
ljmp
mov
addr16 jg
or
xchg
(bad)  
jp
jp,pn
repz xchg
out
(bad)  
cmp
lods
xor
repz dec
idiv
mov
adc
mov
les
fldcw
pop
mov
(bad)  
js
inc
push
jnp
movsl
fwait
test
addr16 or
push
movsl
adc
inc
sub
lods
stos
insl
sbb
mov
nop
cmp
aam
sbb
add
enter
xor
dec
mov
hlt    
or
mov
push
iret   
push
mov
add
cltd   
aad
lds
mov
mov
pop
mov
(bad)  
leave  
jecxz
mov
call
mov
push
push
(bad)  
cmp
lea
inc
scas
test
ja
mov
js
movsb
outsl
mov
(bad)  
mov
cld    
push
push
out
les
(bad)  
sbbl
data16 jno
push
adc
jnp
ret    
sub
js
or
mov
ds sti 
inc
and
xchg
mov
push
add
cmp
mov
mov
in
sub
pop
mov
xor
inc
and
cli    
add
movsb
cld    
inc
or
xor
push
enter
idivb
cltd   
leave  
xor
sbb
popf   
mov
(bad)  
mov
mov
adc
setge
imulb
push
mov
jmp
mov
mov
mov
or
cmp
ds push
dec
inc
es iret 
ss clc 
mov
mov
dec
call
xor
inc
mov
loop
or
sbb
add
jge
inc
sbb
push
fmulp
lds
rcrb
call
pop
addl
mov
cwtl   
and
inc
mov
push
adc
mov
mov
daa    
sub
cmp
mov
lods
jecxz,pt
jmp
sub
shrb
push
xor
mov
jne,pn
pop
xor
ljmp
mov
pop
out
push
int
fmuls
sbb
pop
insb
sbb
cmp
out
mov
inc
jae
iret   
pop
leave  
mov
push
rcrl
cmp
movsl
cltd   
ror
jno,pt
ss mov
nop
rclb
dec
cmp
pop
mov
and
xchg
jge
mov
sub
and
mov
scas
(bad)  
int
add
and
js
test
mov
mov
int
paddd
in
cli    
aam
lcall
adc
(bad)  
loope
sub
out
ds insb
out
fisubl
sbb
mov
push
adc
iret   
data16 aam
push
and
jp
lret   
sub
add
add
jnp
or
cmpsl
mov
xchg
dec
test
xlat
ds mov
sahf   
inc
stos
jb
pop
je
cwtl   
fisttpl
pop
pop
pop
cwtl   
sar
test
jmp
iret   
inc
xor
in
lea
mov
hlt    
lret
mov
cld    
lea
cmp
or
lea
imul
dec
jmp
or
divl
movb
jae
jae
js
(bad)  
sub
lret
negl
movsb
js
test
mov
outsl
(bad)  
or
jo
mov
push
dec
jb
xchg
leave  
das    
adc
es dec
sbb
jb
mov
popa   
popf   
les
xor
mov
into   
inc
dec
movl
fprem1 
dec
fcom
inc
hlt    
jecxz
rorl
push
jns
scas
iret   
xlat
add
test
das    
fimul
xor
inc
int3   
jg
jp
mov
jl
inc
call
or
pop
into   
(bad)
and
jge
in
inc
xor
loop
add
test
and
insb
repz xchg
hlt    
or
push
into   
insb
pop
mov
subl
fmull
lret
push
xor
xlat
lret
je
sbb
imul
xchg
int
in
lret
fdivr
inc
les
sub
jle
cltd   
pop
or
add
cmp
dec
pop
sub
dec
cld    
lahf   
fimul
mov
cltd   
inc
mov
dec
in
and
jbe
(bad)  
mov
push
mov
iret   
fdivs
or
fmull
(bad)  
divb
add
xchg
aam
pminsw
and
add
cs sub
sti    
dec
pop
fstpt
and
inc
ljmp
addl
or
(bad)  
push
std    
jae
xlat
enter
fistpll
cmpsb
pop
cmp
mov
mov
aam
pusha  
dec
in
lods
loop
push
int
jns
xchg
daa    
inc
mov
cld    
jnp
cs
iret   
ret    
xchg
or
mov
sub
pusha  
fisttpl
mov
mov
mov
mov
outsl
pop
or
xor
mov
cmp
mov
xor
(bad)  
aaa    
inc
mov
or
loopne
lcall
les
movl
andl
movsb
mov
xchg
data16
mov
pushf  
lcall
les
ret    
ljmp
fiadd
or
lret   
pop
inc
arpl
sahf   
(bad)  
scas
subb
mov
jge
call
stc    
(bad)  
push
xlat
push
or
push
addb
repz lret 
xchg
mov
sub
shlb
daa    
cmp
mov
in
test
in
jnp
stc    
jo
dec
or
jmp
call
pop
arpl
pop
inc
add
dec
add
jno
insb
rol
ljmp
add
(bad)  
mov
lods
jp
jp
fidivr
or
lcall
in
cltd   
xchg
cmpsl
jl
stos
cmp
movsl
mov
push
out
dec
bound
popa   
pop
pop
(bad)  
movsl
or
daa    
rorb
fisubr
add
stos
sbb
mov
std    
mov
dec
inc
repnz lret
(bad)  
mov
xor
movsb
sbb
mov
outsb
sti    
test
xor
inc
es data16 cmp
ljmp
inc
add
push
adc
mov
xor
bnd ret
mov
orb
push
iret   
pop
cltd   
sub
repnz or
mov
in
out
add
fdiv
cmpsb
cltd   
and
fwait
ds push
adc
jbe
sub
pop
jmp
pop
inc
ret    
inc
stos
cli    
fisubrl
mov
pop
cmc    
add
loop
mov
pop
std    
lahf   
push
push
mov
or
lods
lret
cltd   
sti    
arpl
cs mov
les
imul
jbe
cli    
aam
push
push
outsb
mov
and
pusha  
lds
sbbl
add
scas
fucomip
and
dec
repnz lahf 
mov
add
cmc    
jle
mov
xchg
cwtl   
dec
push
(bad)  
jns
rorl
dec
or
cmp
fild
pop
dec
dec
ljmp
jbe
sar
xor
mov
cmp
comiss
imul
push
hlt    
cmp
mov
or
lahf   
shl
pop
dec
mov
mov
adc
cltd   
xchg
sub
mov
into   
out
sahf   
test
push
pop
push
push
mov
xor
mov
xchg
mov
ljmp
mov
fild
das    
jmp
(bad)  
hlt    
mov
fidivl
mov
addr16 pop
ret
movsl
in
in
pop
lcall
xor
(bad)  {%k2}{z}
call
lods
insl
shrl
xchg
clc    
lcall
stos
ja
aam
pop
jle
pop
pop
ret
imul
add
jbe
iret   
pop
mov
xor
bound
decl
mov
mov
adcb
pop
sub
divl
cmp
inc
lret
lds
andl
out
cmpsb
inc
dec
mov
push
push
(bad)  
repz mov
loop
psubsb
(bad)  
aam
push
push
fdivs
xchg
stc    
mov
js
into   
lds
jbe
imul
lea
in
push
cmp
mov
leave  
cmp
mov
xchg
mov
xor
fldcw
xor
pop
push
and
(bad)  {%k6}
dec
sub
popa   
pop
push
mov
int3   
add
inc
mov
sub
mov
pop
inc
lret
jmp
je
xchg
xor
fisttpll
jl
xchg
and
xor
mov
loope
enter
rcr
mov
push
stc    
(bad)  
ds clc 
aas    
add
cmpsl
push
(bad)  
jae
xchg
cwtl   
ret    
pop
mov
lods
aad
in
jns
in
add
xchg
xor
lods
or
lahf   
sarb
nop
push
inc
inc
xchg
stos
inc
cld    
iret   
inc
fldenv
inc
(bad)  
push
and
mov
mov
sbb
sub
aam
insb
cli    
pop
or
(bad)  
fldcw
leave  
daa    
inc
data16 fs adc
and
jmp
jp
into   
out
xchg
shrb
fiadd
cmp
jnp
jnp
and
addr16 mov
jmp
xor
idivb
mov
pusha  
jp
das    
ret
jne
ss ds
mov
int3   
jmp
mov
fdivrl
icebp  
mov
jecxz
lret   
adc
jl
xor
xor
cmc    
adc
xlat
dec
movsb
xchg
and
xor
sbb
movsl
outsb
(bad)  
pop
mov
sub
cmp
clc    
in
mov
in
sub
ss jg
adc
sub
cli    
lret   
ds mov
out
fsubrs
sahf   
xor
push
arpl
rorb
sub
xchg
mov
push
or
stc    
cmp
out
adc
inc
and
sub
repz scas
hlt    
adc
sahf   
ljmp
dec
daa    
or
fcmovnb
mov
mov
cmp
mov
es jbe
dec
daa    
fisubrl
inc
fcmovnb
xchg
push
testl
jbe
dec
daa    
iret   
(bad)  
xor
rcll
es or
dec
daa    
xor
push
fcmovnb
push
lahf   
(bad)  
pop
jmp
jle
mov
es jbe
dec
daa    
popf   
movsl
add
shrl
(bad)  
pop
pop
(bad)  
xchg
or
dec
daa    
mov
fcmovnb
(bad)  
push
xchg
or
dec
daa    
repz mov
push
stos
(bad)  
pop
scas
sbb
es jbe
dec
daa    
fs iret 
ret
lcall
fimul
mov
es jbe
dec
daa    
inc
fdivl
xchg
(bad)  
pop
xchg
es jbe
dec
daa    
mov
mov
xchg
(bad)  
add
or
adcl
out
test
sub
hlt    
dec
push
cli    
insl
mov
push
inc
mov
fs ljmp
(bad)  
lea
loop
xlat
sahf   
js
ss stc 
mov
pop
ds sbb
and
out
dec
fsubl
ret
aam
or
xor
sbb
pop
xchg
push
out
xor
testl
add
std    
mov
push
inc
dec
pusha  
je
imul
push
adc
test
sub
iret   
cmp
sbb
jl
push
adc
arpl
mov
push
add
add
(bad)
push
sub
adc
test
bound
push
sub
in
(bad)  
or
ds push
sub
xor
or
(bad)
jge
insb
or
in
pop
push
push
(bad)  
movsl
pmullw
ja
adc
aas    
adc
inc
pop
pop
inc
dec
adc
push
sbb
pand
call
pop
sub
lret   
jb
and
xlat
sahf   
adc
mov
cmp
arpl
bound
mov
aaa    
loop
mov
stos
ret
movsl
gs jbe
push
adc
imul
iret   
pop
scas
imull
hlt    
push
pusha  
adc
xor
mov
and
mov
xchg
bound
and
(bad)  
into   
addb
jb
iret   
sub
lret   
jp
(bad)  
in
cli    
lcall
cmp
lea
int3   
sarb
shlb
fwait
(bad)  
jp
sti    
sub
rorb
sub
mov
rcrb
addl
(bad)  {%k6}
fidivr
stc    
ret    
out
mov
push
adc
mov
lret
xor
cmpsb
inc
fidiv
icebp  
ret    
(bad)  
int3   
dec
dec
xchg
and
and
lods
or
and
cmp
mov
out
int3   
sarb
shlb
lahf   
(bad)  
ds popa 
outsb
in
mov
aad
aaa    
mov
lea
test
aaa    
xor
push
popf   
(bad)  
lock and
rcrb
rolb
mov
push
inc
(bad)  
and
cmp
jae
rolb
mov
mov
cmp
ret    
call
push
xchg
cltd   
xchg
or
xchg
mov
adc
(bad)  
mov
mov
in
cmp
add
lock sti 
xor
movsl
mov
xchg
cmp
jae
rcr
shll
lods
mov
adc
xchg
inc
and
and
insb
mov
pop
iret   
cmp
dec
mov
pop
out
lret   
xchg
xor
sti    
int
pop
out
orl
out
stos
lret
push
sbb
push
sub
movsl
dec
cmp
lods
in
mov
loopne
cli    
jnp
jne
in
(bad)  
mov
mov
fucomi
cld    
mov
mov
or
sti    
cmc    
sbb
fcoms
xorb
jecxz
and
jo
jg
(bad)  
xor
hlt    
pop
jno
adcl
je
mov
(bad)  
inc
inc
bnd ret
outsl
push
sti    
andl
ljmp
(bad)  
fucomi
cld    
lea
mov
test
repnz andl
shlb
or
scas
adc
xlat
sub
mov
mov
(bad)  
mov
sbb
cld    
clc    
lds
mov
cld    
jmp
out
pop
xor
push
push
adc
cwtl   
lods
rcrl
rcr
in
out
in
test
cmpsb
mov
mov
mov
rclb
mov
lods
dec
mov
rcl
fwait
xor
shr
lods
in
xor
bnd call
pop
(bad)  
xor
stc    
rcr
cmp
push
or
sub
pop
mov
loopne
and
incb
xchg
sub
mov
sub
(bad)  
cmp
xchg
cwtl   
adc
outsb
mov
mov
movsb
cld    
inc
sub
(bad)  
icebp  
fdivrl
xchg
pop
or
jo
dec
aaa    
xchg
inc
out
pop
and
jp
mov
xor
pop
rcrb
cmp
xchg
inc
out
cmp
xchg
(bad)  
leave  
xchg
sbb
pop
pushf  
sbb
jp
inc
leave  
(bad)  
xor
ret    
hlt    
stc    
imul
insl
(bad)  
mov
loope
pushf  
das    
or
sub
ds push
mov
or
mov
mov
dec
pop
add
add
lods
add
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
dec
xor
cmp
jbe
or
nop
xchg
call
mov
stc    
or
jb
lcall
pop
cmp
or
outsl
(bad)  
mov
xchg
std    
add
sub
sbb
fildl
xor
ds inc
sarb
jo
pushf  
push
adc
stos
pop
rcrl
and
je
push
sub
lret
jb
leave  
mov
cli    
xor
lret
jb
shll
ret
(bad)  
xchg
sbb
(bad)  
and
mov
sahf   
add
add
mov
int3   
or
lahf   
dec
stos
stos
lock lods
mov
push
jb
les
arpl
mov
push
mov
mov
imul
add
cmpsb
lcall
pop
add
add
cli    
push
ljmp
jecxz
ljmp
mov
hlt    
or
out
and
inc
rcrb
adc
push
(bad)  
xchg
inc
add
stos
and
icebp  
lret   
cmp
icebp  
sub
fwait
test
shr
or
movl
notb
imul
jmp
mov
mov
lea
popl
pop
loop
cli    
cmpsl
cmp
jl
xor
addr16 mov
movsl
fwait
test
rorb
jns
iret   
mov
sbb
adc
je
or
pop
es
pop
iret   
adcl
xor
mov
(bad)  
aaa    
shll
xor
cld    
rcrb
or
xor
jbe
inc
sub
inc
(bad)  
dec
arpl
push
mov
cmpsl
sbb
mov
insl
sub
ja
xor
sub
sbb
inc
inc
jl
xchg
adc
adc
(bad)  
push
fs lock mov
push
pop
repnz aad
nop
(bad)
mov
stos
rcrl
sti    
dec
test
inc
iret   
sbb
push
push
jmp
jmp
push
cmpsb
or
in
enter
jae
push
pusha  
sahf   
cli    
(bad)  
les
clc    
out
pop
adc
push
mov
adc
pop
stc    
imul
or
mov
cli    
clc    
cwtl   
es leave 
push
jae
mov
mov
cwtl   
es leave 
push
xchg
mov
fnstsw
ret
lds
push
lcall
repz dec
cmc    
enter
or
inc
jecxz
jno
(bad)  
addr16 adc
cwtl   
es cmc 
push
imul
jg
ret
lret   
in
out
es push
lcall
repz dec
cmc    
enter
push
andl
out
ja
addr16 adc
cwtl   
es icebp 
push
je
mov
jg
ret
sbb
es push
lcall
repz dec
cmc    
enter
repnz pop
jbe
cwtl   
das    
jbe
enter
addr16 adc
cwtl   
lea
aam
xchg
push
xor
addr16 adc
out
test
out
mov
adc
pop
stc    
imul
or
mov
cli    
clc    
cwtl   
mov
jb
out
or
fdiv
push
clc    
cwtl   
mov
jb
cmpsb
loopne
push
ret
pop
fdivrp
out
es push
lcall
repz dec
cmc    
enter
lret
mov
das    
or
es clc 
cwtl   
data16 mov
jbe
cmpsb
mov
out
leave  
daa    
cs popf 
cld    
out
es push
lcall
repz dec
cmc    
enter
into   
dec
bound
sbb
lods
inc
div
clc    
cwtl   
data16 mov
jp
ss sub
(bad)  
aam
or
add
dec
dec
(bad)  
or
les
jecxz
sbb
fdivl
add
in
mov
(bad)  
push
clc    
pop
nop
ja
iret   
aad
pushf  
sti    
push
cmp
dec
sbbl
faddl
push
and
int3   
in
cmp
(bad)  
sahf   
dec
pop
jns
mov
nop
pop
pop
in
ret
or
push
jno
cmp
mov
mov
sbbb
sbb
int
jmp
add
dec
jge
into   
or
sub
push
test
add
mov
pop
pop
ljmp
pusha  
lock int3 
pop
push
dec
dec
push
hlt    
adc
(bad)  
dec
cmc    
jmp
fadds
enter
mov
mov
imulb
rol
ss push
pop
inc
adc
(bad)  
lds
adc
jnp
xor
in
push
jo
dec
in
std    
xor
sub
sub
fwait
sbb
xor
leave  
jle
daa    
shrl
push
pop
movsb
adc
rcll
cli    
sub
sbbl
adc
dec
pop
pusha  
aam
scas
cmp
lods
jecxz
push
push
add
loopne
ret    
lds
jg
xchg
xor
push
or
xchg
xor
ja
xchg
xchg
or
outsl
pop
out
mov
test
push
lret
roll
mov
test
(bad)  
iret   
pop
sub
es rorl
ret    
cmp
or
(bad)  
dec
jmp
mov
fidivl
leave  
das    
pusha  
in
test
add
xchg
into   
pop
xor
iret   
fdivp
mov
hlt    
mov
hlt    
mov
and
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
and
iret   
fdiv
xor
out
sub
call
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
rcrb
iret   
in
hlt    
dec
aaa    
mov
mov
fdivl
or
mov
cmp
dec
fs mov
dec
lcall
lds
dec
xor
lret
sbb
add
loop
pop
jle
mov
push
lret   
sahf   
loope
roll
jle
in
pop
mov
(bad)  
iret   
sbb
mov
dec
into   
out
test
sbb
xlat
enter
(bad)  
out
xlat
iret   
fdiv
dec
inc
scas
xlat
iret   
fdiv
les
add
inc
insb
test
xlat
iret   
faddl
push
jl
clc    
out
xlat
iret   
xor
in
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
inc
lods
sub
sub
out
add
xor
jg
push
inc
lcall
jo
neg
lahf   
scas
(bad)  
les
mov
mov
and
sbb
lea
outsb
jnp
lods
adc
mov
fnstenv
rolb
sbb
sub
jne
jno
imul
xor
daa    
jmp
nop
or
xlat
xchg
call
jle
test
cmpl
push
pop
or
loop
(bad)  
out
(bad)  
leave  
(bad)  
ss scas
bound
jae
cmp
(bad)  
cmp
jne
sbb
push
test
jle
cmp
lods
jecxz
push
push
fadds
mov
or
loop
pusha  
lock int3 
pop
push
dec
dec
lock add
fisttpl
icebp  
and
xlat
enter
(bad)  
outsb
xlat
dec
fdivl
loope
dec
in
js
ret    
jmp
jp
jae
lret
or
mov
adc
mov
out
xlat
iret   
pop
hlt    
or
outsb
rorb
and
push
push
and
sbb
or
inc
add
aas    
xor
cmp
fdiv
mov
push
iret   
pop
clc    
or
push
pop
out
divb
dec
push
adc
jecxz
or
scas
or
add
mov
sbb
cmp
loop
(bad)  
cmc    
mov
inc
cmp
test
(bad)  
out
push
(bad)  
jecxz
mov
clc    
je
add
jecxz
jne
loop
movsl
andb
push
lea
es jecxz
je
pop
sbb
rorb
leave  
movl
or
mov
jbe
lea
(bad)  
xor
les
leave  
lea
stos
cmc    
aam
mov
out
xchg
dec
pushf  
hlt    
mov
out
adc
cwtl   
pop
rolb
loope
andl
sbb
shrb
jl
pop
dec
ffreep
push
sahf   
adc
(bad)  
leave  
inc
pop
iret   
xchg
aaa    
rolb
and
push
pop
clc    
popf   
hlt    
add
fs dec
imul
(bad)  
sub
int3   
jbe
fimull
test
sub
out
(bad)  
in
dec
in
mov
dec
loop
pushf  
mov
mov
shlb
dec
xchg
xor
mov
test
in
fsubrl
insb
je
dec
jo
xlat
jge
or
jmp
aaa    
in
push
cmpsl
dec
cmp
int3   
(bad)  
jle
jp
stos
cmc    
js
xlat
inc
out
das    
(bad)  {%k6}
(bad)  
add
sar
lods
mov
push
int3   
repnz fdivr
adc
cmp
lods
push
int3   
shll
inc
push
mov
inc
out
imul
push
mov
mov
lcall
inc
sub
ret
loop
lret
popf   
jg
sub
push
bound
jp
in
fnsave
(bad)  
ret    
cmc    
leave  
lcall
lods
(bad)  
mov
imull
imul
jne
scas
popf   
jg
sub
push
bound
push
test
adc
dec
fadd
test
clc    
(bad)  
mov
mov
push
add
sbb
(bad)  
hlt    
xor
in
dec
ret    
sbb
leave  
leave  
clc    
repz mov
(bad)  
mov
imull
imul
pop
jl
(bad)  {%k6}
fldenv
add
xchg
inc
ffreep
mov
jecxz
cmp
mov
ja
sbb
sbb
inc
out
imul
push
mov
mov
lcall
leave  
mov
mov
rcll
lea
leave  
loope
je
xor
and
leave  
scas
sti    
mov
xchg
repnz
jnp
or
mov
rcll
jl
(bad)  
rcl
mov
mov
pop
fwait
stos
inc
pop
jns
mov
adc
sub
fstpt
push
hlt    
iret   
mov
xchg
cld    
push
sub
adc
inc
xor
mov
hlt    
stos
dec
sbb
rcll
mov
jmp
mov
jle
repnz cli 
ficomp
lret
sbb
cmp
xchg
xor
xchg
mov
mov
nop
lret   
mov
int
mov
inc
push
call
push
jne
(bad)  
push
adc
jmp
int3   
fdiv
or
jno
push
fucompp 
and
adc
add
inc
inc
daa    
daa    
mov
jmp
clc    
in
pop
out
sbb
call
(bad)  
xchg
les
clc    
in
repnz fsts
decl
mov
dec
and
cmp
(bad)  
mov
xor
sub
jl
ds cltd 
dec
dec
xor
mov
push
jg
in
push
xchg
push
call
sti    
pop
cld    
lods
dec
cld    
je
xlat
and
popf   
jnp
mov
sub
xchg
repnz pusha 
fnstcw
or
jmp
lods
test
fwait
aam
(bad)  
xchg
or
push
xor
or
mov
xchg
iret   
cmpsl
pop
cmp
sbb
(bad)  
push
fsubrp
mov
ja
sub
or
call
fwait
add
xchg
fs inc
fstps
bound
outsb
lods
in
push
(bad)  
imul
insb
aam
test
mov
sbb
and
pop
xchg
loopne
cmp
test
(bad)  
fild
sub
push
or
mov
lock pusha 
mov
mov
call
(bad)
mov
out
sbb
test
mov
mov
mov
cltd   
stos
and
je
cmpl
ficomp
dec
dec
mov
xor
(bad)  
xchg
dec
adc
dec
insb
or
mov
mov
push
fcompl
call
pop
and
lahf   
adc
mov
movsl
push
dec
push
stos
add
cmp
dec
pop
jns
mov
out
mov
mov
sbb
dec
adc
jge
xlat
cmpsl
in
scas
lods
jecxz
(bad)  
push
xor
dec
and
jns
push
sub
clc    
jno
and
jne
pop
movsb
roll
pushf  
rcrb
dec
aad
(bad)  
sub
mov
cmpsl
fnstsw
ja
push
xchg
mov
(bad)  
cli    
and
mov
jb
sahf   
(bad)  
xchg
xchg
and
cmp
lcall
call
push
(bad)  
daa    
push
mov
cmc    
cmp
mov
in
dec
test
sub
shll
les
push
pop
xchg
inc
jns
cwtl   
mov
ds cs jg
pop
dec
ljmp
(bad)  
int
notl
jo
push
rorb
cs
es jne
jb
jns
lahf   
rol
or
fiaddl
hlt    
repnz test
or
pop
add
xchg
adc
inc
repz dec
sbb
mov
insl
aam
(bad)  
cmp
pop
push
pop
imul
lcall
mov
les
adc
dec
push
ja
std    
aaa    
and
adc
dec
repnz lea
rorb
ror
stos
(bad)  
pop
popf   
fnstenv
jb
xor
inc
sub
stc    
int
push
nop
jnp
cmp
or
adc
inc
jg
and
push
imul
dec
fldl
sbb
pop
stc    
pop
fsubrl
xchg
sbb
jp
and
test
clc    
test
jg
xor
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
aas    
test
ror
repnz xlat
(bad)  
insb
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
inc
lods
stos
lea
and
imul
cmp
cmp
pop
xchg
test
or
jmp
mov
dec
cmp
mov
movsl
pop
add
popl
mov
(bad)  
lret   
shrl
jns
rorb
mov
addr16 sub
(bad)
aam
and
inc
or
es sbb
xchg
enter
jno
add
ret
push
neg
jbe
(bad)  
sarb
leave  
movsb
push
pop
inc
and
push
dec
ss add
sub
pop
mov
ljmp
add
repnz lods
sti    
nop
or
inc
dec
scas
(bad)  
mov
jl
mov
loope
jge
mov
dec
jno
xlat
out
mov
adc
lcall
xor
xchg
inc
ljmp
jb
pop
pop
mov
cltd   
push
pop
cli    
add
das    
push
adc
addr16 dec
cmp
push
mov
(bad)  
jo
out
(bad)  
out
int3   
arpl
push
imul
in
decl
hlt    
xchg
mov
icebp  
mov
xchg
add
mov
xchg
add
mov
std    
icebp  
mov
inc
inc
sub
fimull
scas
mov
pop
pop
mov
or
faddl
push
mov
ds lret
xchg
(bad)  
(bad)  
mov
xor
mov
test
push
shll
pushf  
lea
loopne
out
outsl
lods
mov
sub
xchg
fsts
in
inc
add
push
ret    
leave  
xor
push
mov
popf   
push
jb
inc
loop
in
sub
xchg
push
aad
sub
mov
repnz add
pop
scas
jl
xlat
cmpsl
fwait
stos
xchg
test
xchg
(bad)  
sarl
stc    
(bad)  
xlat
cmpsl
test
adc
push
lock mov
imul
jnp
testl
push
ret
outsb
or
ja
jecxz
test
mulb
push
faddl
popf   
aam
icebp  
bound
push
movsl
xchg
ja
enter
sbb
push
(bad)  
cmp
repz clc 
mov
jmp
mov
jb
daa    
cwtl   
xchg
xor
or
shrl
insb
das    
out
cld    
mov
fsubrl
incl
sub
push
enter
jno
ss
or
outsb
test
das    
in
mov
fcoml
cld    
push
pop
and
xchg
gs dec
sbb
jo
outsb
test
and
cmpsb
popf   
stos
lea
faddl
popf   
aam
icebp  
bound
push
movsl
xchg
ja
enter
imul
test
(bad)  
repz clc 
mov
jmp
mov
jb
daa    
cwtl   
xchg
xor
or
loope
test
das    
out
cld    
mov
fsubrl
incl
sub
push
enter
add
push
pop
test
outsb
test
das    
in
mov
fcoml
cld    
push
pop
and
xchg
jne
sub
nop
leave  
outsb
test
and
cmpsb
popf   
stos
lea
faddl
popf   
aam
icebp  
bound
push
movsl
xchg
ja
enter
jns
cs das 
mov
(bad)  
repz clc 
mov
jmp
mov
jb
daa    
cwtl   
xchg
xor
or
icebp  
outsb
test
das    
out
cld    
mov
fsubrl
incl
sub
push
enter
push
and
pop
mov
in
mov
fcoml
cld    
push
pop
and
xchg
inc
dec
cmp
lock sbb
imul
cmpsb
popf   
stos
lea
faddl
popf   
aam
icebp  
bound
push
movsl
xchg
ja
enter
dec
inc
ds aas 
cwtl   
sbb
repz clc 
mov
jmp
mov
jb
daa    
cwtl   
xchg
xor
or
add
insb
das    
out
cld    
mov
fsubrl
incl
sub
push
enter
popa   
and
daa    
test
outsb
test
das    
in
mov
fcoml
cld    
push
pop
and
xchg
sbb
push
and
(bad)  
repz clc 
mov
faddl
popf   
aam
repz data16 sbb
cltd   
nop
ja
enter
jge
add
mov
das    
out
cld    
cmpsl
mov
pop
push
fdivrl
out
pop
es pushf 
mov
xor
or
and
lret   
mov
das    
in
mov
nop
pop
pop
fsubrl
in
or
(bad)  
fist
icebp  
mov
add
xchg
(bad)  
and
icebp  
stos
les
outsb
addl
inc
scas
pusha  
jmp
xchg
int
sbbl
iret   
scas
cwtl   
pop
(bad)  
clc    
jmp
cmp
test
sahf   
sub
lods
add
sbb
dec
and
cmp
cmpsl
add
fdiv
mov
mov
pop
mov
pcmpeqw
xor
loop
sub
mov
add
cmp
movsl
pop
repnz shl
stos
mov
call
jg
add
(bad)  
lock add
add
inc
xor
cmp
mov
stos
les
outsb
addl
inc
scas
pusha  
jmp
xor
cmp
cwtl   
out
lcall
iret   
scas
cwtl   
pop
(bad)  
clc    
jmp
cmp
test
sahf   
sub
lods
add
or
push
js
sarl
add
fdiv
mov
mov
pop
mov
pcmpeqw
xor
loop
sub
mov
adc
cmp
movsl
pop
repnz shl
stos
mov
call
jg
add
(bad)  
lock add
popa   
ss jo
imul
icebp  
stos
les
outsb
addl
inc
scas
pusha  
jmp
push
insl
cmp
cwtl   
out
lcall
iret   
scas
cwtl   
pop
(bad)  
clc    
jmp
cmp
test
sahf   
sub
lods
add
cmp
push
cmpsl
add
fdiv
mov
mov
pop
mov
pcmpeqw
xor
loop
sub
mov
loop
add
andl
iret   
mov
lea
add
(bad)  
lock add
add
pusha  
jno
cmp
mov
stos
les
outsb
addl
inc
scas
pusha  
jmp
jno
cmp
cwtl   
out
lcall
(bad)  
xchg
rol
add
push
(bad)  
lahf   
(bad)  
cmp
lahf   
dec
adc
inc
adc
mov
in
mov
bound
ret
dec
or
jne
in
sbb
push
dec
jge
(bad)  
mov
mov
fsubrl
ljmp
push
enter
pop
sub
ja
jg
test
and
neg
outsl
pop
xlat
lods
cwtl   
pop
fmul
cmp
and
jl
inc
imul
add
add
sub
jp
(bad)  
repnz mul
xchg
insl
(bad)  
mov
cmp
jl
call
pop
or
xchg
adc
hlt    
jo
mov
pop
jmp
lock push
sub
jl
ret    
pop
dec
sub
inc
les
iret   
mov
lea
cmp
(bad)  
lock add
popa   
xorb
jecxz
xchg
push
out
jno
movsb
(bad)  
into   
cmc    
sub
out
pop
mov
and
js
je
xchg
xchg
stos
int3   
mov
mov
insl
cltd   
sahf   
daa    
sub
sbb
outsl
or
push
xchg
inc
fmuls
iret   
xchg
jne
cmp
mov
adc
pop
repnz loopne
push
out
jns
(bad)  
leave  
cld    
sub
loopne
lock mov
ror
pop
or
push
mov
pop
je
pushf  
sbb
xlat
xchg
mov
mov
jmp
pop
dec
push
or
push
jle
fstpt
movsl
pop
(bad)  
mov
inc
push
faddl
popf   
aam
into   
bound
sub
dec
cmp
xchg
insb
das    
out
mov
call
pop
sub
mov
dec
or
pop
xor
dec
pushf  
pop
jp,pn
out
aam
in
cwtl   
nop
(bad)  
nop
or
cli    
sti    
cmp
fdivrp
(bad)  
cmp
rorl
jns
pop
stos
dec
jno
stos
in
mov
hlt    
push
fisubrl
out
jbe
pop
dec
jle
inc
fwait
ja
mov
imul
inc
je
jmp
mov
aam
int3   
sbb
xchg
ja
enter
add
push
dec
mov
test
jbe
nop
pop
push
fdivrl
loopne
add
xor
or
mov
bound
fwait
lea
fsubrl
jmp
sbb
inc
imul
test
andl
lahf   
nop
inc
push
fcoml
jecxz
push
and
xchg
inc
dec
cmp
imul
inc
je
jmp
mov
aam
int3   
sbb
xchg
ja
enter
jno
fild
cmpsl
outsl
test
test
jbe
nop
pop
push
fdivrl
loopne
add
xor
or
mov
insb
andl
fwait
lea
fsubrl
jmp
sbb
inc
sbb
push
(bad)  
adc
pusha  
inc
arpl
xchg
repnz scas
fdivrs
fwait
(bad)  
jae
inc
xchg
jne
sub
sbb
pop
inc
je
jmp
mov
aam
int3   
sbb
xchg
ja
enter
popa   
and
out
and
gs inc
jbe
nop
pop
push
fdivrl
loopne
add
xor
or
fldt
insb
andl
fwait
lea
fsubrl
jmp
sbb
inc
dec
inc
xlat
jno
outsl
test
andl
lahf   
nop
inc
push
fcoml
jecxz
push
and
xchg
gs dec
sbb
jns
outsl
test
in
inc
je
jmp
mov
aam
int3   
sbb
xchg
ja
enter
push
and
incl
(bad)  
outsl
test
test
jbe
nop
pop
push
fdivrl
loopne
add
xor
or
stos
outsl
test
andl
fwait
lea
fsubrl
jmp
sbb
in
stc    
cli    
xchg
xchg
or
jb
insl
lahf   
lock subl
mov
adc
and
jp
subl
rcl
push
adc
fcomip
add
cmp
lcall
stos
ret
mov
idivb
push
js
pop
pop
test
lret
arpl
loopne
fnstenv
inc
sub
sbb
push
out
sub
rcll
mov
icebp  
mov
nop
daa    
lret   
dec
inc
jb
add
cmpsl
sti    
cmpsb
movsl
cmp
mov
(bad)  
insb
jp
sbbb
imul
xlat
inc
mov
bound
jb
ja
scas
fadds
nop
stos
ret
in
divb
sub
pop
pop
pop
in
es aam
cmp
sub
pusha  
das    
mov
sbb
xchg
or
fist
in
ja
mov
pusha  
cmp
fcmovnb
pop
mov
cmpsb
les
js
lods
icebp  
repnz adc
std    
inc
push
sbb
and
lods
mov
les
inc
sub
gs push
or
out
push
or
jp
insb
push
xlat
fdivl
(bad)  
hlt    
dec
sbb
cmpsb
lret
push
mov
push
fdivrl
gs iret 
adcl
aaa    
pop
dec
ljmp
(bad)  
int
cmpb
push
(bad)  
insb
jl
roll
mov
inc
xchg
add
mov
stc    
(bad)  
xchg
nop
gs push
fs or
fist
js
or
les
jecxz
mov
add
inc
outsb
mov
inc
roll
sbb
stos
(bad)  
cmp
ret
inc
(bad)  
(bad)  
insb
pop
test
mov
or
sub
arpl
movsb
xor
and
mov
pop
repnz inc
sub
dec
pop
jns
mov
lock lcall
outsl
lcall
dec
out
pop
dec
inc
xchg
sub
dec
mov
push
mov
mov
dec
mov
loopne,pt
adc
arpl
mov
pop
jmp
jecxz
loopne
stos
(bad)  
jle
ret    
fs cmp
dec
push
in
lods
push
movsb
pop
or
int3   
(bad)  
enter
(bad)  
cmpsb
pop
push
pop
add
ja
sbb
shl
cmp
stos
xor
add
or
nop
into   
xor
int
mov
xchg
mov
jl
xlat
inc
xchg
lcall
inc
mov
(bad)  
fimul
imul
push
not
outsl
scas
stc    
nop
xchg
mov
mov
insl
or
and
xchg
pop
pop
inc
hlt    
sbb
xchg
mov
popl
add
mov
(bad)  
and
push
dec
fcmovne
jp
sahf   
and
subl
pop
pop
gs mov
rcll
lcall
popl
call
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
cmpl
xlat
(bad)  
insb
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
xchg
movl
lea
add
or
aad
and
movsl
outsl
mov
or
mov
es call
stos
addr16 or
cmpsb
xchg
and
xchg
pop
pop
popf   
inc
push
rcll
xchg
pop
data16
ds mov
add
sahf   
icebp  
pop
lret   
jp
sahf   
es jl
jae
subl
pop
pop
mov
mov
popl
and
mov
and
sti    
inc
mov
test
xor
jne
adc
mov
test
divl
test
data16 sarb
lods
adc
xor
fisttpll
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
lahf   
xchg
sti    
std    
call
sub
mov
xor
mov
out
mov
scas
(bad)  
les
(bad)  
pop
sub
or
aaa    
xor
ss and
test
ss sbb
push
std    
clc    
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cmc    
xor
and
xor
loop
mov
iret   
and
aam
jb
es aaa 
mov
hlt    
imul
aas    
pop
xor
addb
(bad)  
push
js
outsb
aad
sub
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
mov
scas
sti    
fcoml
and
not
lahf   
cmpsl
aam
jb
into   
adc
mov
add
fcoms
jns
(bad)  
dec
fcomip
lcall
popa   
sbb
sbb
or
cmp
rorl
es mov
sarb
jnp
xlat
add
inc
mov
fcomps
bound
enter
pop
sub
cmc    
icebp  
cpuid  
icebp  
xchg
or
int3   
mov
cmpsl
jo
nop
andb
pop
(bad)  
ss pop
dec
ljmp
(bad)  
int
out
lahf   
sub
push
stc    
pop
sub
cmpb
(bad)  
dec
pop
test
xor
inc
mov
rolb
clc    
pop
sub
rclb
lcall
pop
mov
and
imul
addr16 cmp
outsl
and
imul
les
sbb
outsb
cmp
mov
ds rol
(bad)
or
enter
jbe
or
mov
and
(bad)  
mov
lret   
ss pushf 
das    
or
sub
nop
stos
testb
pop
icebp  
das    
popa   
mov
pusha  
and
xchg
fsubrl
(bad)  
int3   
inc
(bad)  
cwtl   
stos
inc
jg
fistpl
aaa    
xor
add
add
xchg
add
outsl
stc    
mov
outsl
xchg
(bad)  
cmp
(bad)  
mov
mov
repnz jecxz
lret   
adc
cmp
mov
xchg
adc
cmpb
das    
push
js
mov
loope
lods
dec
stc    
pop
test
adc
(bad)  
mov
sarb
fimul
xlat
mov
mov
add
inc
stos
rcll
sub
das    
jmp
lea
popf   
sbb
arpl
ds aam
pop
sub
inc
movsl
inc
mov
lret   
jecxz
dec
jnp
clc    
cmp
fcomps
daa    
aad
cmc    
(bad)  
mov
push
(bad)  
mov
jp
xlat
add
pop
decl
iret   
fdivl
stos
rcll
jl
aam
pop
jle
xchg
call
imul
jb
outsl
loop
or
dec
cmp
jae
lea
cld    
sub
(bad)  
xor
cmp
sub
pop
or
pop
test
xlat
cmp
mov
mov
loopne
xchg
jge
popa   
push
xchg
rcrb
sub
stc    
pop
into   
addr16 xchg
pinsrw
jl
loopne
push
stc    
pop
sub
fldl
dec
pop
test
icebp  
xlat
cmp
sti    
fs inc
imul
add
xchg
mov
jg
ljmp
jb
xor
pop
jecxz
sbb
int3   
push
adc
adc
imull
sti    
or
push
mov
pop
rcr
sub
lret   
or
xor
into   
in
out
les
cli    
jno
sub
mov
sbb
xchg
mov
ficom
sbb
es mov
cmp
pop
call
loope
test
adc
and
pop
loop
pop
outsl
iret   
rcll
fsubp
push
cmp
and
push
rorb
divb
es xor
pop
lahf   
rol
std    
mov
insl
push
repnz lret
xchg
gs sti 
movsl
mov
ljmp
mov
imul
push
lds
cmp
test
fnstenv
cmp
cmp
mov
getsec 
mov
or
mov
push
mov
or
daa    
sub
mov
inc
dec
lods
dec
fdivp
test
ljmp
mov
push
xchg
es
popf   
cwtl   
sbb
or
rcrb
dec
shl
jno
clc    
jae
sub
inc
and
jae
rcll
testb
xchg
mov
xorl
(bad)  
fisttpll
jge
jae
sub
(bad)  
cmp
xchg
ja
push
in
mov
pop
lock dec
(bad)  
rorl
hlt    
imul
inc
sbb
mov
imul
inc
push
(bad)  
xor
or
divb
xor
cmp
ljmp
popa   
add
loopne
xlat
cmp
bound
mov
cmc    
xor
pop
sbb
mov
fdivrl
(bad)  {%k6}
clc    
ror
je,pn
insb
add
bound
jg
jae
into   
fdivrl
bound
mov
pop
outsl
sub
adc
mulb
cs
dec
mov
cmp
aaa    
xchg
aas    
in
repz sub
xchg
cmp
push
pop
mov
sahf   
int
mov
jae
push
insb
lock fisubrl
mov
dec
gs inc
xchg
mov
and
jb
jge
xor
(bad)  
pushf  
ds lret 
mov
push
in
mov
xor
mov
mov
or
push
push
lds
cmp
adc
lret   
mov
jno
xchg
popf   
(bad)  
sub
dec
bound
lret   
pop
bound
push
sbb
cs xchg
mov
mov
stos
push
jbe
stos
insb
(bad)  
out
and
inc
adc
push
in
test
out
shlb
and
jg
xchg
sbb
dec
popa   
cwtl   
stos
mul
rcl
shrl
mov
mul
std    
inc
sbbb
fisub
imul
mov
fisttpll
insl
dec
jne
and
sub
jbe
data16 and
sbb
xchg
sub
fldcw
xchg
ja
mov
out
push
jae
xchg
push
inc
dec
adc
aaa    
mov
mov
add
loop
leave  
pop
pop
stc    
fcomi
test
xor
mov
push
fstps
jbe
sub
pushf  
movsl
outsb
test
inc
es data16 cmp
loopne
pop
jmp
hlt    
sbb
mov
cmp
hlt    
mov
xor
and
es data16 cmp
xchg
test
pop
or
ficom
xor
out
js
aas    
popa   
je
xchg
addr16 fwait
negb
fstpt
jbe
in
sub
sbb
or
mov
shld
js
fwait
movsl
push
ljmp
(bad)  
mov
mov
add
scas
push
pop
js
(bad)  
test
ret    
jle
leave  
lret   
(bad)  
in
dec
push
mov
leave  
psrad
jo
jo
mov
mov
int
cwtl   
mov
push
sbb
jno
pusha  
mov
xchg
jnp
adc
sarb
jae
cltd   
fisubr
sti    
pop
iret   
test
sub
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cmpsb
push
stc    
push
es mov
push
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
or
pop
(bad)  
xor
inc
int3   
pushf  
adc
fstps
lret   
sbb
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cmc    
xchg
jo
hlt    
mov
out
xlat
iret   
fcompl
insl
jae
xor
pop
inc
(bad)  
pop
iret   
jg
xor
cmp
(bad)  
scas
mov
mov
(bad)  
sub
sarb
push
out
or
out
sub
jbe
cmp
cmp
push
aad
or
dec
fs inc
inc
push
jp
dec
outsb
and
or
mov
jo
or
inc
je
icebp  
inc
dec
push
push
int
push
leave  
movsb
imul
rorb
jno
je
jmp
mov
loopne
pop
push
inc
xor
jae
frstor
das    
add
cmp
jns
mov
cmc    
out
jp
gs insb
clc    
ss imul
cmp
int3   
cmovs
cmp
cs sub
lds
stos
rol
dec
cld    
or
mov
test
add
imul
enter
iret   
fdiv
mov
push
insb
dec
sub
iret   
fdiv
mov
out
xlat
iret   
fdiv
cmp
mov
mov
lods
ja
sbb
dec
mov
roll
out
enter
into   
lahf   
out
push
dec
sti    
and
lea
adc
adc
insl
push
stc    
arpl
ds scas
or
ljmp
inc
push
outsl
inc
bound
push
outsb
push
dec
inc
je
inc
adc
rorl
sub
and
sub
xchg
inc
es dec
jbe
jae
jl
mov
clc    
mov
jns
inc
(bad)  
mov
clc    
or
push
sbb
or
jbe
push
push
daa    
fdivrl
aaa    
enter
push
mov
push
add
cmp
(bad)  {%k6}
lret   
stos
leave  
outsl
in
ss jno
dec
add
or
or
in
popf   
jo
lock xchg
(bad)  
inc
pop
push
ds mov
inc
lret   
push
and
add
hlt    
mov
out
xlat
iret   
faddl
jns
jne
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
stos
test
(bad)  
mov
lret   
push
or
and
aam
jb
es aaa 
mov
test
mov
jbe
push
jg
aaa    
cmp
sub
or
mov
mov
adc
jno
sub
cmp
jg
xor
pop
bound
adc
pop
jbe
push
jo
add
pop
inc
outsb
ja
ja
in
jge
aaa    
adcb
fdivs
adc
inc
inc
sub
pop
fwait
xor
inc
adc
push
inc
add
or
fwait
xor
inc
adc
push
inc
add
or
adc
xchg
(bad)  
inc
pop
push
ds mov
and
flds
jle
xchg
cmp
mov
xchg
adc
jle
(bad)  {%k6}
xlat
imul
add
jp
add
movsl
add
nop
test
in
movsb
add
test
mov
or
popf   
mov
aaa    
or
repz lret
dec
(bad)  
dec
mov
in
cld    
jl
(bad)  
les
aam
cs mov
and
enter
pusha  
push
push
mov
add
test
mov
outsl
xchg
(bad)  
cmp
sbb
sub
mov
imul
pop
add
dec
cli    
cld    
jg
ficom
mov
jbe
mov
test
push
jge
mov
stos
push
ret    
pop
fstp
lea
fsts
add
lcall
lret   
or
int3   
sti    
in
jmp
aas    
das    
and
xor
jmp
jno
cmp
movsb
jecxz
ds xchg
add
cmp
ds xchg
cmp
inc
xchg
sbb
mov
stos
dec
dec
sub
mov
cli    
sub
jle
pop
mov
in
(bad)  
notb
sub
stc    
prefetch
pushl
mov
adc
mov
mov
(bad)  
fxch
cmc    
stos
(bad)  
in
negb
jecxz
dec
push
imull
rcll
xorl
xor
xchg
fcomp
mov
mov
push
jb
pop
and
mov
aas    
jo
or
lea
iret   
aaa    
xor
mov
shl
cmp
call
ljmp
dec
push
inc
pusha  
clc    
jmp
adc
add
out
clc    
insl
lcall
insl
jne
jnp
(bad)
js
inc
mov
gs cld 
sbb
inc
js
jp
mov
cmc    
jecxz
or
jge
and
sti    
das    
or
mov
push
sub
sarb
or
(bad)  
cmp
inc
pop
outsl
outsl
cwtl   
sub
inc
mov
roll
sub
pop
mov
or
jns
or
movb
inc
(bad)  
cmp
in
sarb
adc
push
scas
xchg
rcrb
repz pushw
xchg
xlat
and
mov
aas    
pushf  
sbb
arpl
arpl
push
sbb
sbb
ds push
mov
das    
fs jns
cmp
fistpll
in
int3   
out
daa    
dec
mov
fxam   
fsubrs
cltd   
(bad)  
out
daa    
insl
fcompp 
pop
les
lret   
and
cmp
mov
jp
xlat
jmp
hlt    
sbb
inc
stos
rcll
mov
les
js
jge
mov
fstps
imul
inc
push
aas    
test
aas    
into   
outsl
nop
repnz
repz lock pop
mov
data16 and
es data16 cmp
subl
(bad)  
pop
rcrb
and
out
sub
inc
imul
popl
lds
mov
test
aas    
les
insb
adc
pop
test
mov
mov
inc
cmpsl
in
jae
mov
aad
std    
stos
pusha  
mov
out
sub
mov
xchg
and
adc
push
fcoml
fs push
rorl
and
insb
ds sub
inc
dec
xchg
inc
add
sub
jns
mov
fs mov
popa   
mov
cmpsl
(bad)  
mov
loope
fmulp
out
rorb
rolb
insl
jmp
aad
shr
lds
cli    
add
mov
push
or
stos
test
mov
jp
xor
xacquire xchg
xorl
adc
mov
mov
roll
lods
nop
push
fildl
sti    
cwtl   
push
mov
cs add
push
sbb
fistp
lea
test
and
dec
mov
add
inc
(bad)  
out
inc
sahf   
ljmp
or
(bad)  
fwait
sub
and
out
mov
push
pop
mov
dec
outsl
mov
stc    
mov
fimul
cmp
mov
and
mov
cvtps2pi
icebp  
jmp
add
fs loope
fdivp
push
cltd   
shr
rolb
inc
or
pop
(bad)  
fldenv
add
inc
sub
(bad)  
xlat
mov
fstpt
mov
mov
aaa    
mov
jge
add
adc
out
and
shrb
xlat
imul
movsb
insb
lret   
inc
mov
arpl
pop
add
inc
mov
shlb
jp
aam
inc
sub
inc
les
adc
ss
xor
ficompl
pusha  
and
es data16 cmp
ljmp
adc
fdivrp
cwtl   
stos
dec
xor
lea
(bad)  
arpl
mov
(bad)  
gs pop
cmpsl
in
shl
or
shll
frstor
or
dec
aam
(bad)  
mov
in
sarb
in
pop
mov
jle
data16 test
sbb
xor
lret
sbb
sti    
mov
dec
pop
hlt    
mov
push
(bad)  
gs push
in
pusha  
mov
sbb
(bad)  
gs push
cld    
bound
mov
inc
jl,pt
mov
dec
xchg
(bad)  
loope
repz xlat
iret   
push
mov
add
fdivs
andb
test
and
bound
mov
add
dec
xor
cli    
jge
xlat
iret   
lret   
pop
movsl
std    
or
mov
add
xchg
insb
loop
push
leave  
ss jae
lock int3 
(bad)  
mov
cmp
rol
(bad)  
dec
pushw
dec
push
cmp
adc
je
cmp
add
jle
mov
cli    
mov
inc
dec
(bad)  
mov
dec
dec
fdiv
push
cltd   
clc    
dec
push
(bad)  
mov
stc    
popf   
mov
jg
movsb
insb
lret   
inc
lret
dec
pop
hlt    
mov
scas
sub
jbe
jge
jbe
into   
push
stc    
(bad)  
ss stos
cmp
jp
mov
mov
fstpl
add
cmp
mov
mov
adc
out
sti    
cmpsl
in
stos
inc
dec
or
call
testl
add
mov
fs push
or
(bad)  
mov
cmp
int3   
adc
aas    
cmp
xor
mov
popf   
push
arpl
push
xchg
mov
cmp
sub
xchg
in
mull
or
xor
push
mov
fwait
(bad)  
and
sub
xor
sbb
insl
push
ret
data16 and
(bad)  
xor
and
imul
xchg
lcall
pushl
rcrl
lahf   
mov
pop
dec
ljmp
(bad)  
int
(bad)  
mov
sub
add
shrl
jae
push
rorb
inc
jl
es pop
cmpsb
insl
jnp
pop
lahf   
shl
sarb
xchg
lret
push
mov
popf   
js
movsb
das    
aam
inc
push
lods
repz adc
lods
or
push
jp
mov
pop
and
jbe
les
sahf   
es mov
stos
or
and
loope
xchg
xchg
mov
popl
bound
mov
cmpsb
and
ljmp
(bad)  
push
sbb
les
mov
ss add
pushf  
or
call
mov
les
mov
les
ljmp
inc
cli    
inc
mov
int
in
(bad)  
mov
mov
test
clc    
sub
jle
mov
imul
aam
pushf  
pop
fcomip
jne
lahf   
in
fidiv
js
iret   
addr16 inc
int
push
movsl
aam
(bad)  
or
(bad)  
out
mov
out
or
and
sub
testb
outsl
mov
cltd   
jle
int3   
scas
aas    
pop
cmp
mov
dec
and
add
les
js
sub
cld    
cli    
inc
push
xchg
andb
int
in
or
movsb
mov
test
pop
sahf   
push
jle
mov
shl
pushl
pushf  
pop
arpl
jmp
fdivp
test
pushf  
iret   
mov
push
movsl
aam
(bad)  
in
mov
(bad)  
out
dec
adc
add
and
ja
out
jo
or
int3   
scas
aas    
xlat
xor
mov
dec
mov
ss add
(bad)  
imul
adc
and
int
in
xchg
dec
mov
test
lods
cmp
arpl
pop
test
subl
inc
pop
pusha  
dec
and
jecxz
hlt    
mov
pushf  
or
add
ja
jbe
jb
cld    
lods
(bad)  
or
push
pop
mov
xchg
ss jle
mov
sub
hlt    
lahf   
(bad)  
cmp
adcl
jns
sub
adc
and
adc
xchg
xor
(bad)  
cmp
adcl
push
mov
jmp
pop
dec
arpl
xor
xchg
push
sub
push
push
je
sbb
inc
or
insb
clc    
xor
push
je
sti    
mov
inc
xor
dec
scas
loop
fnsave
sbb
fs jmp
mov
ljmp
and
sarb
aaa    
jl
or
dec
push
pop
push
or
mov
or
inc
shll
add
xor
dec
scas
loop
and
dec
ja
mov
mov
iret   
fsubl
mov
nopl
or
repnz cmpsl
cmp
je
repz jb
mov
(bad)  
out
loop
fstpl
cmp
movl
push
iret   
push
add
add
je
and
stc    
imul
stos
sub
xor
scas
or
jge
adc
outsl
and
push
stc    
(bad)  
ds clc 
aas    
add
enter
lods
dec
sub
cwtl   
cli    
jnp
pop
mov
divl
or
data16 std 
popa   
xor
add
inc
cmp
scas
or
xor
cmp
push
sub
cmp
push
stc    
or
sahf   
int3   
data16 out
xchg
pushf  
and
inc
imul
jmp
out
pop
or
sub
mov
sub
aas    
loop
ds scas
mov
(bad)  
or
xor
adc
jae
inc
cli    
pop
mov
(bad)  
rcrb
imulb
cld    
sti    
mov
dec
movsl
aam
(bad)  
mov
dec
sti    
out
je
(bad)  
shlb
lods
iret   
outsl
mov
lds
add
xchg
mov
leave  
add
scas
aas    
popa   
(bad)  
push
fadd
push
out
dec
arpl
(bad)  
emms   
les
xor
iret   
loope
sbb
movsb
mov
in
fs data16 adc
xlat
popf   
mov
popf   
mov
and
cmc    
lods
shl
cmp
lahf   
in
fmulp
xlat
mov
int
movsb
pop
sbb
movsl
aam
(bad)  
xor
nop
in
shlb
outsl
popa   
pusha  
mov
vpsllq
into   
(bad)  
into   
out
dec
xchg
dec
add
scas
aas    
pushl
scas
jmp
jb
ja
inc
into   
mov
dec
loope
in
xlat
ret
ret
cmp
outsb
mov
stc    
enter
mov
pop
sbb
mov
std    
push
ja
shrl
inc
lods
inc
lahf   
in
ficom
push
lods
iret   
sti    
iret   
sub
mov
(bad)  
mov
inc
sti    
out
mov
repnz daa 
mov
mov
int3   
ja
add
fcoml
add
scas
aas    
jge
pop
rol
xchg
xchg
out
or
inc
into   
xor
xor
push
leave  
(bad)  
fsubrp
inc
sub
dec
in
pop
outsl
call
push
lea
hlt    
mov
and
sbb
mov
test
in
inc
lahf   
in
(bad)  
or
test
out
inc
dec
imulb
inc
add
aam
(bad)  
cmp
lret
fcoms
and
outsb
arpl
mov
and
int3   
mov
add
push
push
call
inc
xchg
aas    
inc
stos
(bad)  
mov
fcoms
(bad)  
xor
adc
in
sbb
jg
adc
test
xlat
or
ret
in
push
push
je
sbb
je
xor
push
pop
sub
nop
notb
xor
mov
add
inc
fcoml
cmp
aaa    
mov
or
(bad)  
or
sti    
clc    
mov
xchg
pop
sbb
je
test
and
xchg
leave  
fnstsw
xor
sub
sub
adc
icebp  
xchg
and
mov
ret    
push
fdiv
lds
das    
aam
sbb
adc
pop
dec
(bad)  
dec
imul
(bad)  
out
ljmp
xor
gs pop
push
rorb
es dec
push
outsb
inc
jne
xor
adc
mov
loope
pop
repnz and
imul
sbb
fs sbb
loopne
cmp
xor
(bad)  
sub
int
push
inc
or
lret   
jo
fcomps
push
(bad)  
scas
sbb
cmpsb
fildll
out
push
dec
fs push
in
frstor
(bad)  
xchg
leave  
notl
iret   
fdivrl
insl
or
cmpsb
fildll
out
push
dec
fs push
adc
call
notl
iret   
fdivrl
insl
or
ret
sub
out
and
mov
aas    
and
push
sbb
and
push
dec
fs aas 
fisttpll
or
xchg
and
mov
xchg
in
and
push
dec
fs and
adc
icebp  
xchg
and
mov
movsb
adc
aas    
mov
out
push
dec
fs push
ss mov
xlat
xor
push
pop
push
sub
ljmp
adc
imull
and
mov
fbld
femms  
mov
sub
xchg
addl
(bad)  
adc
es xor
pop
jle
xor
inc
out
aas    
loopne
in
inc
iret   
iret   
sub
subb
sbbb
out
fs mov
or
in
insb
cmp
out
jb
cmp
sub
or
fdiv
mov
out
(bad)  
leave  
in
hlt    
imulb
and
xor
mov
addr16
dec
loop
or
in
dec
lret   
inc
int3   
jg
jp
pop
mov
lock ficompl
inc
lahf   
fsubrl
insb
je
xlat
dec
pop
dec
jle
or
jmp
aaa    
test
loop
mov
jnp
or
enter
(bad)  
and
cmc    
mov
or
mov
mov
int
in
(bad)  
mov
mov
movsl
xchg
out
(bad)  
imul
sub
nop
sbb
arpl
call
pop
adc
mov
les
js
insl
popa   
repnz adc
cmp
je
push
xchg
scas
add
imul
push
cwtl   
stos
mov
mov
push
scas
out
fnsave
daa    
aad
lds
out
nop
mov
lods
push
jae
shrl
or
(bad)  
mov
sbb
and
xchg
shlb
call
inc
or
outsl
ljmp
cld    
les
(bad)  
icebp  
mov
xor
lods
movsl
pop
fsubrl
jb
xlat
inc
(bad)  
loopne
mov
push
mov
data16
push
pop
push
daa    
add
jb
mov
sbb
push
xchg
(bad)  {z}
fisttpl
mov
jmp
(bad)  
dec
sbb
jb
jne
(bad)  
mov
cs
flds
(bad)  
sub
push
sub
scas
out
cmp
mov
fisttpl
xchg
sbb
out
insb
cs ffree
ljmp
mov
lods
leave  
sarl
xchg
xchg
xor
ja
sub
loope
cli    
lea
xor
rclb
and
stos
xchg
(bad)  
cmpsb
adc
nop
pop
mov
mov
in
icebp  
aad
mov
std    
adc
lcall
fsts
ret
scas
out
in
movsb
inc
mov
lods
sub
jns
rorb
ret
sub
(bad)  
pop
jg
data16 and
stos
(bad)  
dec
es sbb
cwtl   
clc    
rorb
push
dec
fiaddl
add
push
ds cmp
and
lcall
negb
push
andb
push
dec
out
sbb
pop
popa   
jb
add
jae
or
sub
push
mov
repnz pop
jo
and
mov
bndstx bnd2,-0x3ec77b53(%edx)
cmpsb
mov
stos
(bad)  
(bad)  
cld    
inc
mov
popf   
xor
divb
test
sar
cltd   
mov
xchg
test
adc
in
fldl
sti    
cmp
scas
repnz
dec
les
gs add
loope
in
push
inc
mov
pop
fcoml
pop
add
popa   
fdiv
xchg
(bad)  
cmc    
xchg
xor
sbb
push
push
xchg
mov
es insl
dec
std    
dec
enter
mov
mov
shl
mov
sub
shrb
push
push
xchg
mov
mov
dec
aas    
mov
into   
movsl
adc
cmp
add
aad
push
cmp
in
out
pop
mov
cmp
out
fldcw
clc    
jmp
add
inc
sub
test
sbb
mov
or
(bad)  
push
(bad)  
sub
and
inc
ret
(bad)  
in
mov
cmpl
xor
jns
and
stos
out
dec
(bad)  
mov
xchg
gs jbe
call
push
fidivl
add
scas
xor
cli    
ret    
pop
inc
mov
dec
test
xor
mov
cmp
in
sbb
das    
mov
addr16 mov
popf   
xor
out
inc
mov
push
fmuls
xor
mov
cmp
xor
mov
pusha  
fidivrl
pop
fcoml
je
jb
aam
(bad)  
scas
imul
push
cltd   
mov
out
idivl
dec
fdivl
cmp
stos
lds
dec
aaa    
out
jp
not
sbb
cltd   
mov
adc
cmp
je
aas    
mov
jnp
stos
pop
ret
and
outsl
push
sub
xchg
add
xor
fildl
ja
add
sahf   
repz aaa 
and
push
and
and
outsl
push
stos
pop
mov
or
mov
inc
adc
mov
adc
(bad)  
xchg
movsl
out
xor
xor
cmpsl
fadds
pop
pop
out
test
leave  
test
adc
sbb
sub
aad
sub
dec
imul
or
mov
dec
bnd jnp
stc    
in
or
xor
inc
xor
imul
mov
scas
or
jbe
add
sub
int
sub
cld    
data16 jae
and
inc
mov
arpl
mov
gs cmc 
push
cmpsl
and
sub
in
dec
sbb
pop
fcompl
dec
andb
out
dec
call
les
adc
inc
and
jnp
leave  
fs ja
dec
add
in
fsubrl
mov
imul
ljmp
popa   
jbe
adc
gs xchg
xchg
stos
adc
shll
fdivr
sub
and
das    
popa   
stc    
push
jae
sub
fstl
push
sbb
xor
daa    
loop
mov
outsl
iret   
sub
test
call
inc
int3   
leave  
test
mov
and
imul
aaa    
shlb
fidivr
cld    
lcall
mov
stc    
in
mov
mov
pop
scas
in
cmc    
sbb
movsb
pop
rcr
cmc    
pslld
mov
rol
xchg
mov
rolb
and
fwait
aaa    
mov
dec
dec
inc
loope
lret   
jp
(bad)  
dec
out
inc
stos
xlat
enter
test
inc
xor
and
mov
jp
js
xlat
inc
out
fcoms
test
and
mov
in
cmpsb
imul
mov
cmp
push
pop
jne
idivl
leave  
xchg
pop
inc
fsubl
(bad)  
cwtl   
test
fdiv
pop
dec
xor
mul
sbb
call
popw
aaa    
outsl
add
push
loop
inc
in
rorb
adc
les
mov
test
dec
adc
jo
fcmovb
pop
and
or
push
sbb
cmp
jb
aad
addr16 xor
xor
jno
dec
(bad)  
mov
cmp
stos
shr
dec
sbb
imul
aaa    
add
pop
fs jp
(bad)  {z}
(bad)  
xor
ret
mov
inc
sbb
imul
aaa    
pop
add
outsb
xlat
imul
lret   
push
mov
and
test
loop
mov
stos
stc    
(bad)  
ss pop
dec
push
cltd   
fst
(bad)  
movsb
cld    
cli    
jg
outsb
(bad)  
and
sub
mov
inc
sbb
int
(bad)  
dec
aaa    
out
jbe
mov
xchg
jl
pop
inc
jmp
repnz addr16 aam
xor
imul
mov
inc
mov
push
xor
ficom
jl
pop
inc
push
(bad)  
mov
scas
jle
je
cmp
inc
sbb
rcrl
push
(bad)  
and
pop
sar
sbb
mov
(bad)  
aam
inc
cmpsb
mov
stos
(bad)  
(bad)  
push
push
fsubs
mov
mov
stos
sar
clc    
sbb
sbb
inc
jmp
push
inc
je
or
mov
and
mov
push
xor
mov
in
les
nop
push
sbb
leave  
fcompl
sub
iret   
movsb
cmp
dec
dec
and
jns
add
mov
inc
arpl
dec
push
xchg
mov
outsb
mov
xchg
cs daa 
mov
repnz mov
pop
(bad)  
mov
push
and
pop
and
jno
jp
push
add
int3   
test
push
inc
and
sub
aad
out
sbb
mov
insl
sub
sbb
dec
aad
faddp
xchg
xor
jne
rolb
stc    
mov
or
xchg
pop
pushf  
fdivs
(bad)  {z}
aad
ficomp
rcll
mov
jnp
clc    
icebp  
pop
and
das    
stos
lods
imul
pop
addr16 icebp 
mov
jbe
cli    
mov
or
adc
lret   
sarl
je
cmc    
jo
jmp
dec
cli    
sub
or
mov
pop
aam
into   
xchg
or
(bad)  
stc    
sub
(bad)  
in
jp
into   
shl
push
adc
mov
or
pop
ret
inc
mov
test
mov
addr16 push
fdivr
pop
jecxz
dec
sahf   
dec
pop
data16 loop
pop
dec
adc
test
xchg
pop
dec
adc
push
pop
lret
imul
mov
test
test
test
aas    
push
scas
xchg
fdivs
push
push
frstor
cmp
(bad)  
and
icebp  
movsb
test
hlt    
xchg
xor
push
fadds
mov
mov
adc
lret   
push
cmpsl
push
xchg
les
mov
mov
loop
push
and
xchg
icebp  
test
pop
call
adc
lds
mov
push
test
(bad)  
mov
pop
movsl
data16 das 
call
pop
sub
push
xchg
(bad)  
mov
or
out
ror
fcomip
popf   
cmp
sub
not
iret   
mov
jp
imul
fdivl
mov
rolb
adc
mov
(bad)  
sarl
(bad)  
insb
pop
jle
cmp
sbb
or
sub
sbb
out
or
sub
fisubrl
aam
mov
jmp
dec
inc
push
loope
mov
fdivr
push
loopne
dec
xchg
nop
cmp
cmp
or
movsb
pop
inc
inc
push
ja
inc
dec
call
cwtl   
jno
xchg
ficompl
cltd   
xor
data16 das 
call
pop
adc
and
rcl
push
verr
lds
inc
mov
push
(bad)  
mov
mov
addr16 jp
jbe
cvtps2pd
mov
pusha  
jo
insb
push
xchg
rcr
sti    
dec
lock dec
stc    
shl
push
inc
push
verr
(bad)  
jl
idivb
push
verr
mov
addr16 jp
jbe
cmovg
aas    
ktestw
pusha  
jo
insb
push
xchg
shlb
stc    
shl
mov
fdiv
mov
out
xlat
iret   
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
int
cs daa 
sub
cmpl
insb
jno
jmp
outsb
neg
lahf   
scas
(bad)  
les
mov
mov
and
xor
lret   
add
stos
ljmp
hlt    
xlat
iret   
fdiv
test
out
pop
out
add
inc
xlat
arpl
iret   
push
das    
add
loope
test
or
mov
adc
mov
ja
xchg
jns
mov
sbb
sbb
jl
outsb
xor
call
shll
ss jb,pt
inc
das    
cs and
jno
sub
(bad)  
fnstenv
mov
mov
imul
cmp
and
mov
add
pop
out
and
in
xor
xor
int
and
shrb
or
pop
jmp
sub
inc
daa    
and
movsl
mov
sbb
inc
daa    
and
pop
rclb
adc
dec
orl
rorl
inc
jmp
add
dec
adc
stos
or
invlpg
fiadd
pop
cmp
adc
cld    
scas
test
jb
cmp
add
add
inc
add
inc
pop
enter
mov
shlb
mov
(bad)
movsl
or
pop
jle
and
sub
movsb
fwait
adc
mov
les
mov
aas    
mov
mov
popa   
and
loop
push
inc
adc
(bad)  
aaa    
bound
push
icebp  
xor
adc
popa   
cmc    
das    
in
roll
mov
push
repnz
xor
inc
fsub
test
push
and
es data16 cmp
adc
adc
les
dec
mov
fisttpll
cmp
sub
stos
dec
fsts
and
pop
adc
testb
fbld
and
test
dec
hlt    
adc
rorl
imul
adc
(bad)  {z}
lret
sub
jle
cmovae
mov
shlb
mov
(bad)  
jne
arpl
mov
xor
jle
and
sub
into   
adc
cmpsl
jbe
popa   
cmpsl
popa   
jns
rorb
cmp
pusha  
push
addr16 sbb
fcomip
xchg
(bad)  
and
inc
cmp
inc
das    
cs and
jno
sub
(bad)  
mov
les
adc
pop
and
xchg
add
jae
sub
sub
fcoms
pop
or
fs
enter
in
out
jl
and
popa   
(bad)  
call
shr
jecxz
sbb
insl
mov
int3   
shll
scas
add
fcoml
or
les
jecxz
loope
cwtl   
int
out
mov
dec
jmp
or
mov
inc
es data16 cmp
loopne
(bad)  
ror
jp
push
mov
arpl
mov
jg
jo
std    
(bad)  
lods
out
push
sub
add
pop
mov
push
std    
xchg
add
mov
stc    
mov
push
mov
movsb
out
push
adcb
iret   
les
mov
cltd   
cmpsl
notb
mov
repnz fistpll
aaa    
imul
lcall
xor
stc    
and
lahf   
xor
and
fwait
test
into   
(bad)  
fldl
inc
lea
aas    
push
test
and
jle,pn
lret
dec
dec
aad
mov
sub
movsb
add
xchg
cmpl
mov
jae
cltd   
lds
jp
fs
enter
out
sbb
lods
cmp
inc
push
ud2    
cmpl
mov
cmpsl
jle
push
inc
addr16 push
bound
addr16 pop
aad
pop
dec
ljmp
(bad)  
int
and
adc
js
fyl2xp1 
in
leave  
fstps
jge
out
push
fsts
pop
repnz fdivr
into   
outsl
pop
mov
shl
mov
lds
mov
arpl
mov
sti    
aam
cmpsl
in
jge
imul
xchg
(bad)  
stos
es jle
add
js
pushf  
push
je
stos
mov
icebp  
es ffreep
or
or
icebp  
getsec 
jne
inc
push
fidivl
mov
push
xchg
scas
add
cmpl
pop
jecxz
repnz and
cmp
test
cmpl
mov
ficompl
cltd   
xor
push
das    
call
pop
adc
inc
sub
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
in
adc
in
(bad)  
scas
inc
iret   
insb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
adc
fisttpl
sbb
xor
outsl
push
aas    
cmp
fwait
mov
pop
out
fildl
push
and
(bad)  
loop,pt
sub
sub
mov
fiaddl
out
lret
sub
xchg
test
sub
sub
ret
in
pop
mov
jle
xchg
outsl
fnstcw
lret
sbb
adc
cltd   
mov
repz lds
mov
xor
(bad)  
mov
mov
out
push
(bad)  
jecxz
dec
call
lret
dec
insb
mov
aas    
je
xchg
xlat
lret
sbb
and
mov
loopne
dec
nop
mov
scas
nop
xor
pop
aam
hlt    
roll
mov
into   
xor
sub
int
(bad)  
lret   
mov
mov
dec
push
imul
outsl
mov
mov
loop
add
sub
add
dec
dec
pushf  
fsubrs
inc
imul
mov
dec
inc
adc
sbb
xlat
lods
add
mov
out
xlat
or
sbb
xchg
ret    
iret   
pop
mov
psubsb
mov
sbb
enter
rcll
sbb
hlt    
mov
addr16 xchg
mov
xchg
mov
add
outsl
aas    
xchg
pop
mov
push
jae
mov
mov
and
iret   
negb
std    
mov
test
loope
jle
add
mov
jno
imul
sbb
or
mov
insl
or
jae
mov
mov
and
iret   
negb
std    
dec
cmp
(bad)  
jle
repz mov
outsb
xchg
leave  
push
out
ljmp
lret
push
btc
cmpsl
dec
insl
or
jae
mov
mov
and
iret   
negb
std    
and
push
jle
add
mov
jl
lret   
add
(bad)  
call
fwait
sub
popa   
insb
xchg
pop
push
jb
pop
stos
(bad)
mov
and
pop
push
push
or
das    
arpl
aaa    
test
repz scas
fcoms
icebp  
test
jp
or
sbb
addr16 inc
bound
add
mov
daa    
fistp
dec
ret    
fs jae
dec
push
aas    
pusha  
loop
lds
dec
test
add
cmpsb
fdivrs
ret    
imul
adc
icebp  
test
jp
or
jge
xor
xchg
adc
inc
inc
fidivrl
push
xor
add
call
add
js
pushf  
sub
inc
repnz adcl
and
dec
lret
inc
jg
push
xchg
or
push
and
add
xchg
lea
push
insl
(bad)  
mov
lret
bound
inc
int3   
(bad)  
cmp
or
pop
and
jnp
or
sbb
clc    
xchg
out
mov
shl
xor
lret
hlt    
push
pop
pop
pop
push
lcall
cmp
inc
inc
idivl
jae
dec
push
aas    
pusha  
loop
movsl
dec
adc
mov
mov
fnstcw
mov
jge
jle
dec
pop
and
cmp
xorb
add
inc
scas
push
push
dec
loopne
mov
sbb
dec
jne
inc
int3   
(bad)  
cmp
or
push
and
sti    
rolb
add
xor
call
adc
and
(bad)  
mov
mov
push
jae
mov
mov
and
iret   
negb
std    
dec
aas    
xchg
pop
test
or
imul
ljmp
sub
mov
mov
pushf  
pop
fldt
xchg
adc
cs call
dec
or
(bad)  
xor
movsl
add
xor
out
scas
ljmp
sub
push
pushf  
popf   
ret
cmpsl
dec
insl
or
jae
mov
mov
and
iret   
negb
std    
and
inc
and
inc
jno
inc
add
sub
sbb
pop
push
jb
pop
stos
(bad)
mov
and
pop
push
push
or
das    
arpl
sub
movsb
add
or
pop
pop
jg
fldenv
lret   
stc    
jle
inc
add
sbb
(bad)  
pop
dec
scas
fdivr
fistpl
or
aad
imul
xor
aaa    
in
pop
loop
es inc
shlb
pop
sub
xor
adc
sub
pop
cmp
jmp
inc
imul
mov
adc
cs call
dec
or
(bad)  
sti    
ret    
leave  
jb
rep lods
sub
cmp
fcmovbe
pusha  
jnp
sub
(bad)  
hlt    
lds
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
test
mov
aaa    
mov
jle
xor
pop
in
jno
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
fcmovbe
push
cmc    
mov
push
mov
daa    
test
out
mov
scas
(bad)  
les
mov
mov
and
outsb
xchg
notl
adc
add
stos
lock and
or
out
in
sub
and
ljmp
movsl
out
loope
mov
jo
lret
flds
adc
inc
out
fild
mov
push
pop
clc    
xor
int
adc
xor
rcll
dec
jns
inc
(bad)  
addr16 pop
out
int3   
or
push
int
in
int3   
test
dec
sbb
cmp
repnz xlat
(bad)  
call
jae
adc
rorb
or
and
push
sub
cmp
jbe
cltd   
cmp
iret   
push
push
std    
inc
adc
data16 jecxz
mov
push
leave  
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
(bad)  
adc
aam
mov
rclb
dec
push
push
adc
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
repz xchg
push
push
mov
insl
dec
loop
mov
xbegin
xchg
es aaa 
mov
adc
mov
in
mov
lods
pop
and
loopne
pop
push
xor
clc    
adc
ja
rorl
mov
lret   
mov
hlt    
mov
out
xlat
pop
and
jp
xlat
iret   
fnsave
push
jnp
ja
sbb
(bad)  
out
xlat
lahf   
les
add
hlt    
mov
out
xlat
iret   
fdiv
mov
out
or
hlt    
add
ret
insb
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
xchg
mov
mov
call
leave  
shl
iret   
jno
adc
in
(bad)  
mov
mov
sbb
adc
fsubrl
nop
outsl
lret
xlat
(bad)  
fdiv
(bad)  
sbb
cmc    
(bad)  
cld    
hlt    
out
cwtl   
mov
pushf  
cwtl   
mov
jb
sbb
in
(bad)  
or
jecxz
pop
jmp
sbb
(bad)  
sahf   
xlat
stos
dec
sub
leave  
xchg
fcmovne
and
bound
out
fcoml
sbb
sbb
inc
sbb
jbe
jl
mov
push
push
sbb
bound
and
out
mov
fcompl
jecxz
dec
mov
dec
push
or
lret
rorl
mov
mov
ja
cmp
outsl
and
mov
outsl
in
mov
xchg
adc
pop
(bad)  
pushf  
fs pop
stos
xor
aad
add
add
dec
stos
pusha  
adc
les
mov
mov
pop
push
bt
fwait
xor
xchg
dec
in
adcl
enter
inc
cmp
xor
jmp
xchg
popf   
int3   
sub
pop
adc
lea
xchg
sub
lock add
xchg
aas    
cmp
imul
vpaddsb
and
pop
push
mov
mov
loope
xchg
iret   
out
das    
adc
inc
inc
ljmp
or
or
jle
cmp
(bad)  
jns
push
cmp
add
aas    
rcl
iret   
fmul
mov
or
lret
stos
cli    
xchg
ficompl
sub
es data16 cmp
cmp
xchg
push
xchg
fdivl
inc
aam
or
adcl
mov
cld    
pop
fildll
jg
adc
jnp
push
sbb
scas
push
les
mov
push
rorb
inc
pop
iret   
stos
adc
lods
es mov
int
fldt
data16 notb
data16 mov
movsl
push
bound
bound
addr16 mov
pop
cmp
(bad)  
idivb
mov
iret   
dec
mov
loope
sbb
inc
xchg
jecxz
push
fidivrl
out
mov
out
pop
inc
rcll
mov
xchg
in
or
mov
idivl
popf   
inc
scas
jle
nop
enter
jae
jecxz
psubusb
mov
(bad)  
xor
mov
mov
je
xor
mov
in
rcrl
fisttpll
mov
mov
mov
inc
sbb
fstpl
xchg
leave  
scas
in
ss adc
scas
add
leave  
push
sbb
jecxz
call
(bad)  
xlat
mov
pop
xor
and
jb
push
lds
push
(bad)
sbb
sub
adc
mov
mov
sub
push
mov
or
jecxz,pn
iret   
mov
xchg
mov
movsl
or
inc
or
sub
dec
jle
inc
ja
mov
xchg
push
mov
cld    
lods
ret
stc    
xchg
jb
add
(bad)  
out
and
lods
loopne
lea
(bad)  
mov
sub
loop
add
pop
sub
movsb
mov
rorl
mov
sub
js
push
fs pop
imul
stos
ret    
in
pop
mov
jle
cs xor
aaa    
pop
jle
sbb
loopne
dec
mov
dec
out
xchg
mov
fnstsw
mov
pop
lret
call
stc    
xor
test
dec
iret   
cwtl   
es dec
scas
or
test
push
sbb
mov
jns
xchg
imul
adc
xor
sbb
mov
lds
(bad)  
nop
int3   
push
push
jno
adc
pusha  
(bad)  
movsb
in
or
dec
mov
nop
int3   
sbb
adc
jp
hlt    
or
push
jmp
and
adc
ret
iret   
stos
or
dec
mov
loop
cld    
xchg
fsqrt  
or
hlt    
mov
fidivl
mov
jge
(bad)  
je
mov
cmp
push
mov
mov
data16 mov
in
cmp
imul
add
jl
and
xor
pop
jecxz
repnz and
xchg
push
lds
pop
dec
pop
or
(bad)  
fbld
xchg
push
cmp
push
and
ds mov
ds lods
xlat
dec
vminsd
aam
sub
in
mov
add
test
jnp
lcall
add
sbb
xchg
fsub
jmp
mov
inc
xor
arpl
push
mov
mov
gs pop
cmp
pop
lahf   
and
push
xchg
cs xchg
hlt    
or
(bad)  
repz push
insb
push
jecxz
cmc    
in
(bad)  
or
and
jae
(bad)  
xlat
dec
(bad)  
outsb
lods
ljmp
test
(bad)  
jne
cmp
loope
push
pop
test
outsb
dec
fistl
dec
push
cmp
pop
cli    
(bad)  
jnp
int
adc
jb
test
inc
inc
pusha  
enter
inc
stos
or
stos
or
ss or
inc
xor
or
sahf   
cmp
push
movsb
and
test
xlat
dec
(bad)  
outsb
lods
ljmp
clc    
daa    
lds
pop
test
xchg
and
pop
aad
mov
nop
popa   
les
xlat
(bad)  
xor
pop
repz adc
mov
test
loop
dec
enter
xchg
xchg
push
jmp
movsb
push
push
xor
pop
cmpsl
mov
enter
pop
dec
pop
or
lea
cli    
xchg
push
cmp
(bad)  
int
ds mov
ds lods
xlat
dec
lret   
ja
jne
cmpsb
jp
repz mov
in
sub
dec
and
xor
stos
jle
test
xlat
dec
(bad)  
outsb
cli    
jns
sub
outsb
xchg
ret
mov
push
lahf   
pop
mov
cld    
sbb
sub
adc
xchg
hlt    
or
aas    
aaa    
arpl
(bad)  
jmp
mov
jecxz
xchg
ret    
sbb
xor
push
mov
iret   
pop
sub
into   
adcb
cmc    
or
das    
shlb
jne
ss xchg
jecxz
lock cmpsl
roll
leave  
psrad
repz cmp
or
mov
lea
mov
cmpsb
jle
insl
adc
cmpsb
dec
pop
(bad)  
dec
cmp
sbb
scas
lahf   
or
mov
or
push
mov
daa    
mov
inc
xor
sldt
test
add
int3   
lods
sbb
stc    
and
data16 ss sti 
push
pop
adc
adc
addr16 in
jae
jns
inc
out
lahf   
mov
cmp
mov
fwait
ljmp
js
imul
addr16 push
aam
sar
jb
je
(bad)  
sub
and
scas
pop
push
push
mov
pop
jo
shrb
sldt
pop
jmp
sbb
pop
xorb
rclb
add
je
das    
sbb
cmp
xor
jmp
nop
mov
mov
in
cs lret
cmp
jo
add
push
dec
dec
int3   
addr16 bnd jmp
inc
inc
jl
cmpsb
fdivrs
push
inc
scas
mov
ret    
repz test
aas    
into   
dec
jmp
xchg
xor
jl
test
stc    
dec
cltd   
fdivrl
mov
iret   
add
inc
int3   
leave  
test
xchg
(bad)  
mov
mov
(bad)  
pop
imul
xchg
jl
(bad)  {z}
xlat
daa    
fadds
mov
fiaddl
iret   
fistp
ljmp
xchg
(bad)  
pop
sub
and
jmp
mov
push
lahf   
or
xchg
xchg
(bad)  
mov
scas
aas    
into   
lahf   
jge
(bad)  
xchg
mov
xchg
cmp
arpl
add
pop
jmp
sbb
inc
mov
ret    
and
adc
shll
sub
mov
mov
xchg
les
in
dec
push
dec
pop
fs out
mov
xchg
cltd   
mov
lods
cltd   
xchg
mov
(bad)  
and
out
dec
in
pop
cltd   
jle
pop
cmc    
fidivrl
adc
clc    
jno
mov
(bad)  
sbb
movsl
frstor
sbb
mov
adc
inc
ss jb
aaa    
add
outsl
inc
sbb
je
jbe
iret   
fdiv
imull
or
lea
sahf   
mov
ret
xchg
into   
lret
addr16 nop
js
xchg
imul
sbb
and
es data16 cmp
loopne
pop
jae
cmp
stos
mov
nop
stos
inc
je
mov
mov
mov
fyl2xp1 
jl
xchg
popa   
nop
fldpi  
mov
add
mov
inc
cmp
add
adc
icebp  
je
es pop
aas    
xchg
int
jmp
xchg
mov
imul
mov
xchg
sub
imul
cmp
pop
andl
xchg
clc    
lods
xlat
jbe
dec
out
and
loope
out
cmc    
movsb
xchg
cltd   
cmovnp
rcl
fyl2xp1 
mov
cmpsb
popf   
bound
in
test
mov
lods
mov
cs pop
notb
movsl
int
test
mov
std    
fwait
out
scas
lods
cmp
roll
or
les
jecxz
dec
mov
pop
imul
inc
push
fdivrs
jns
rorb
add
mov
mov
jae
cmpsl
ffree
jmp
xchg
mov
ja
test
cmp
jo
adc
in
dec
xchg
push
sbb
popa   
outsl
lcall
dec
rcrb
or
stos
inc
dec
and
jns
jmp
xchg
loop
push
int
jns
xlat
pop
and
jp
jmp
out
hlt    
aas    
aam
dec
inc
pop
dec
out
push
inc
xor
in
shlb
jb
sti    
fldl
or
int3   
out
les
out
stos
mov
mov
(bad)  
ja
adc
sbb
jl
mov
fdivrp
cmp
lods
in
popf   
mov
mov
pop
xchg
xlat
mov
mov
sti    
pushf  
dec
fmull
pop
xchg
xlat
mov
mov
adc
movsb
test
or
test
rcrb
cmp
gs out
jl
pop
iret   
ja
stc    
sarb
pop
arpl
rolb
lcall
rorl
sbb
cmp
loop
insl
jecxz
(bad)  
push
push
mov
(bad)  
test
flds
xor
into   
pop
ficompl
mov
push
jge
or
jb
add
roll
(bad)  
mov
popl
adc
lock cmp
mov
jnp
fdivs
aad
jnp
test
adc
dec
test
test
flds
incl
movsb
cs pop
inc
in
jmp
ljmp
arpl
xchg
add
std    
xchg
add
push
(bad)
cmpsb
test
loope
iret   
pop
jecxz
mov
adc
rclb
movsl
push
fcomps
pop
fcomps
jecxz
lock jg
ja
in
lahf   
hlt    
or
inc
aaa    
inc
cmpsl
iret   
movsb
movsl
out
or
push
dec
int3   
(bad)  {z}
xlat
out
dec
pop
cltd   
pop
jbe
sar
sbb
dec
jp
push
xchg
cmpsb
pusha  
cmp
jle
sbbl
jp
push
(bad)  
notl
mov
movsl
test
jg
push
sti    
sbb
ds enter
mov
(bad)  
cwtl   
stos
xor
cmp
int
rcl
aam
test
stc    
pop
sahf   
adc
movsb
push
mov
sbb
mov
daa    
(bad)  
mov
daa    
(bad)  
mov
lret   
or
cmpsb
mov
imull
sarb
out
outsl
cmpsl
mov
mov
add
sub
or
pop
loope
repz add
test
mov
lock cmpsb
loop
stc    
ret
xor
fnstcw
pushf  
and
xlat
dec
lret   
stc    
mov
std    
xchg
add
push
fistl
pop
mov
aam
xchg
iret   
pop
jg
(bad)  
jmp
jns
jnp
mov
xchg
pop
mov
push
je
jbe
xor
push
(bad)  
iret   
push
imul
xor
push
aas    
rcl
jo,pt
inc
xor
movups
xor
rclb
dec
push
outsb
push
movups
aas    
jge
cmp
hlt    
mov
jb
xor
xlat
fnsave
inc
ss jb
aaa    
pop
jle
inc
add
and
out
mov
imul
adc
inc
int3   
jg
enter
and
inc
xchg
faddl
sarl
(bad)  
insb
pop
int
in
aas    
sbb
or
sub
adc
loop
scas
(bad)  
mov
adc
and
adc
jmp
nop
movsl
xchg
xor
test
push
fsubr
lock in
nop
pop
add
pop
stc    
(bad)  
mov
call
(bad)  
xlat
dec
(bad)  
outsb
cli    
cmp
addr16 jg
jo
leave  
pop
adc
xor
es pop
mov
mov
xchg
sub
mov
mov
jno
xchg
ficompl
cltd   
xor
dec
das    
call
pop
adc
imul
push
xchg
test
mov
test
std    
sub
(bad)  
push
repz dec
out
xchg
in
pop
aas    
je
fcmovbe
(bad)  
popa   
fidivr
popf   
push
adc
imul
outsb
mov
fcoms
and
es data16 cmp
ljmp
inc
out
cmpsl
mov
les
jb
jg
adc
push
arpl
or
sbb
cmovno
inc
jae
(bad)  
jg
loopne
add
sbb
xchg
(bad)  
xchg
dec
add
inc
sti    
(bad)  
xlat
mov
daa    
mov
hlt    
or
mov
pop
jae
jle
pop
cmpsb
mov
inc
cmp
xor
jmp
cwtl   
dec
jb
pop
mov
mov
es lock xchg
sbb
and
(bad)  {%k1}{z}
xchg
jecxz
pop
xchg
xor
jecxz
lock push
orl
pop
and
es sbb
jae
dec
or
stc    
movsl
add
data16 lahf 
cmp
cmp
loope
mov
push
jecxz
jae
push
lds
push
fisttpl
imul
loopne
sbb
lock inc
xchg
push
fistpll
dec
mov
mov
add
scas
cs lret 
fist
dec
xor
mov
es gs mov
cli    
cmp
lahf   
mov
sub
addl
andb
out
dec
sub
cmpsl
sub
mov
jns
int
cmpsl
xchg
rorl
adc
jb
xchg
pop
add
cmp
push
mov
out
lds
xchg
sub
jb
adc
jbe
or
jecxz
lock push
cltd   
loopne
es iret 
daa    
sarb
jne
out
xor
out
xor
scas
out
push
and
pop
clc    
sbb
dec
mov
push
inc
xor
pop
dec
adc
pop
xchg
xlat
mov
test
lcall
in
in
pop
lcall
cmp
cmp
les
out
outsl
loop
cmc    
rcrl
int3   
cmp
lock push
les
fnsave
jb
bound
add
jge
or
jns
ret
jp
push
lahf   
pop
xchg
pop
out
xor
in
cmpsb
sub
mov
xor
jmp
dec
inc
or
mov
xorl
sbb
pop
(bad)  
jecxz
out
fwait
gs push
call
jge
lcall
out
adcb
cmc    
mov
sarl
jg
pop
sarb
mov
(bad)  
sbb
andl
cmp
and
push
stc    
cltd   
dec
std    
and
adc
movsb
es pop
incb
dec
mov
lret   
andl
jg
bound
in
lret
(bad)  
imul
adc
fcoml
xor
push
scas
rcll
adc
movsb
sbb
addr16 std 
loop
(bad)  
daa    
mov
push
xchg
mov
ljmp
lods
in
cmpsl
jbe
mov
lds
pop
pop
and
sub
scas
std    
popf   
shlb
gs xor
lods
nop
fcmovu
xchg
lcall
dec
fs mov
in
std    
inc
rcl
inc
dec
(bad)  
xor
xchg
shl
push
cmc    
jge
out
lods
jb
or
clc    
icebp  
lahf   
outsl
mov
pop
cmpsb
jns
xchg
pop
iret   
dec
std    
inc
rcl
inc
dec
(bad)  
xor
pushf  
and
(bad)  
xchg
int
adc
and
pop
iret   
imul
loop
cmp
xlat
inc
out
sub
sbb
lods
mov
negl
inc
mov
(bad)  
pop
(bad)  
fnstsw
ljmp
inc
cmp
(bad)  
mov
loop
lds
in
or
xor
outsl
cmpsl
or
std    
divb
leave  
dec
leave  
mov
mov
in
pop
movsl
jl
push
mov
sub
adc
test
addr16 and
ljmp
dec
repz add
iret   
movsb
mov
mov
push
jmp
adc
ds out
and
jle
lcall
shlb
cs mov
cmp
cs scas
jb
pushf  
mov
or
(bad)  
mov
xlat
adc
movsb
insl
call
(bad)
xor
xor
add
sbb
and
jb
leave  
xchg
sub
sub
mov
and
cmc    
jo
xlat
pop
(bad)  
movd
ds dec
sub
pop
fisttpll
xchg
aad
inc
incl
pop
jbe
mov
pop
lds
dec
jp
xchg
inc
int
cmpsl
in
pop
dec
mov
and
aaa    
mov
inc
or
out
(bad)  
mov
mov
add
scas
shlb
mov
mov
stos
jle
mov
push
ljmp
cld    
inc
sub
inc
cld    
lods
jo
int3   
aas    
fdivs
pushf  
scas
lock ficompl
aas    
add
inc
pop
data16 in
lea
adc
sarl
outsb
mov
or
pop
sbb
dec
mov
or
or
(bad)  {%k1}{z}
cmp
jmp
push
addl
aam
ffreep
add
push
fdiv
lret   
fidiv
stos
dec
in
popa   
sub
push
mov
imul
cmp
sub
xchg
or
mov
les
cmp
pop
mov
mov
sbb
mov
inc
aad
add
add
cs xchg
jecxz
lock dec
pop
lahf   
arpl
mov
fsubr
fwait
cmpsl
in
sarl
or
(bad)  
ja
ja
mov
xor
jno
daa    
aam
or
fimull
jne
xchg
stos
xchg
dec
push
enter
push
sub
gs insb
cli    
bound
fildll
int3   
or
scas
add
sub
xor
pop
jecxz
pusha  
mov
xchg
xchg
les
jl
cmp
aam
cmp
pop
adc
mov
push
mov
addl
aam
dec
add
pusha  
or
(bad)  
imul
(bad)  
imul
cmp
push
mov
andl
xchg
cwtl   
push
xlat
lods
or
nop
mov
sub
xchg
out
in
(bad)  
pop
jge
xchg
xchg
nop
xor
and
rep movsb
xor
adc
pusha  
add
test
stos
add
insb
sub
arpl
out
pusha  
and
push
mov
dec
sub
and
cmc    
pop
xor
cmp
shl
outsl
xor
dec
adcl
movsb
mov
sbb
xlat
lcall
mov
stos
data16 jp
bt
fnop   
dec
mov
icebp  
pop
repnz adc
movsb
push
pop
scas
mov
loop
rcrb
jo
or
xchg
lods
adcl
decl
imul
add
xchg
popl
cld    
inc
xor
mov
mov
(bad)  
adc
pmaddwd
sti    
xchg
xor
fidivr
cmp
dec
or
aaa    
test
xor
mov
xchg
mov
lods
(bad)  
loope
jnp
fstpl
movsl
outsb
loope
lea
cmp
push
in
clc    
jbe
cmp
or
lcall
lock push
adcl
push
jmp
dec
fistp
sub
cld    
(bad)  
rorl
add
cmp
cld    
jle
popf   
and
aam
mov
inc
es data16 cmp
outsb
jge
or
hlt    
xor
(bad)  
rcll
xlat
lods
scas
mov
arpl
mov
push
fidivrl
mov
xchg
mov
sbb
enter
rorb
mov
notb
mov
or
out
in
mov
shr
hlt    
mov
out
jl
and
jnp
out
xlat
repnz push
dec
fisubr
ja
inc
subl
(bad)  
out
scas
cmp
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
enter
push
adc
(bad)  {%k1}{z}
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
xadd
mov
out
ror
fdivp
ds cli 
rclb
mov
(bad)  
out
mov
sub
aas    
inc
push
mov
test
inc
lahf   
fdivl
int
xchg
movsl
push
jmp
inc
call
div
push
cmp
sbbl
pop
mov
test
xor
jo
insb
dec
outsb
adc
aad
out
call
fcomps
loopne
adc
push
and
sbb
adc
call
movsb
or
mov
jmp
pusha  
jne
jno
iret   
cmp
into   
fwait
test
(bad)  
mov
std    
xchg
add
dec
ljmp
sub
jnp
mov
loop
xlat
xor
sub
xchg
inc
icebp  
leave  
and
stos
stos
mov
scas
gs xor
cmpsb
mov
popf   
inc
fcomi
nop
cs out
mov
jle
aas    
lret   
movsb
push
jae
cmp
mov
mov
mov
loop
cwtl   
stos
xor
mov
nop
mov
or
inc
push
jns
xchg
mov
loopne
pusha  
iret   
(bad)  
dec
test
loope
push
xchg
decl
mov
loop
cwtl   
stos
xor
mov
outsl
jge
mov
test
flds
jmp
lahf   
sbb
dec
lret
in
fsubrl
mov
xor
inc
adcb
lods
inc
cmp
flds
jbe
sbb
or
sub
push
std    
xor
aam
fcomp
mov
add
fdivr
mov
imull
and
push
int
lret   
mov
lods
out
out
rcrl
loop
cwtl   
stos
xor
mov
pop
ficompl
cmp
mov
add
xchg
mov
loop
inc
xchg
test
adc
inc
sub
mov
push
test
dec
out
fcoml
mov
sarb
dec
cmp
lods
out
xchg
push
out
pop
jne
(bad)  
mov
ret
push
stos
mov
xchg
xchg
xchg
cwtl   
sbb
cmc    
inc
push
ja
mov
inc
push
xchg
xchg
inc
rorb
scas
clc    
lcall
jecxz
xchg
jl
fs sub
sahf   
sbb
mov
jp
cmp
pop
orl
dec
inc
pmulhuw
(bad)  
sub
sarl
jmp
jmp
int3   
jmp
aam
js
mov
xchg
das    
xor
movsb
addr16 enter
or
jae
aam
dec
pop
test
mov
ds mov
or
push
rorl
jo
out
mov
aaa    
add
test
xchg
mov
out
lahf   
nop
int3   
loop
nop
push
(bad)  
or
aad
cmc    
mov
ja
nop
aaa    
sub
fdivrl
mov
jmp
ljmp
outsb
push
fcoms
adc
mov
test
xchg
pop
push
iret   
cmp
lret
pop
fist
movsb
add
xor
mov
(bad)  
loopne
je
inc
fisttp
neg
xchg
push
femms  
loopne
icebp  
mov
por
mov
movsb
mov
lods
fmul
adc
aas    
or
cmpsb
out
inc
test
out
adc
popf   
fsqrt  
or
hlt    
mov
fidivl
mov
jge
sub
jp
imul
push
or
sbb
xlat
ds mov
mov
test
push
jg
movsl
jle
xchg
stc    
dec
enter
out
push
cmc    
sub
jns
inc
jl,pt
mov
push
xchg
(bad)  
loope
repz xlat
iret   
push
mov
add
fdivs
cmp
sti    
push
pop
mov
iret   
popf   
ss fwait
das    
cmp
(bad)  
jecxz
sub
mov
insb
daa    
lret
push
pop
mov
jo
jns
(bad)  
mov
fiaddl
jne
sub
or
loop
xchg
repnz sbb
lock ret
mov
bnd je
push
or
dec
mov
insb
lret   
xor
(bad)  
pop
pop
aad
push
sub
xchg
scas
jo
sti    
(bad)
icebp  
cpuid  
(bad)  
flds
mov
cmp
mov
add
and
shlb
push
pop
in
ret    
fwait
or
loop
dec
(bad)
fcomps
cld    
xor
stos
and
jno
(bad)  
pop
dec
icebp  
sub
out
adc
push
and
sbb
in
mov
(bad)  
je
push
rorb
mov
fnop   
data16 fwait
push
and
fxch
sub
mov
mov
mov
jb
pop
add
(bad)  
jecxz
in
mov
lret
inc
out
ljmp
inc
pop
mov
mov
cmp
loopne
pop
test
cmp
mov
movsl
lods
xchg
sub
pop
cmp
loopne
and
mov
mov
mov
sub
pop
add
scas
outsb
loope
divl
dec
and
fwait
cs pop
xor
inc
leave  
mov
dec
inc
lods
xor
pop
sti    
scas
xchg
mov
ret    
ljmp
fs cmc 
push
cli    
lods
add
jnp
pop
and
(bad)  
mov
jle
pop
adc
jle
ss pop
pop
adc
push
mov
shrb
sub
jl
pop
jecxz
mov
pop
(bad)  
jae
scas
fcoms
(bad)  
xor
dec
cmp
mov
mov
mov
call
mov
call
in
or
and
xchg
cmp
movsl
pop
int3   
(bad)  
mul
fldt
gs hlt 
or
sub
jbe
insb
cmc    
in
xchg
add
aad
push
movsl
adc
test
cmp
sahf   
mov
ljmp
inc
es in
push
dec
xor
shld
aas    
into   
xchg
xor
ja
movsl
adc
mov
and
sub
lds
ss mov
arpl
mov
lret   
(bad)  
test
imul
enter
aam
or
je
and
jnp
lret
in
insl
or
xlat
fisttpll
(bad)  
(bad)
lock mov
fldlg2 
sbb
cmc    
sub
pop
push
stc    
sarb
and
cli    
push
sub
int3   
pop
fstpl
test
cli    
ret
(bad)  
cmp
fisubr
lcall
lods
cmc    
sub
pop
pop
cltd   
mov
push
or
fldl
push
jno
inc
repnz xor
add
xor
sahf   
jno
mov
push
je
cmp
imul
mov
jp
or
push
mov
sti    
mov
or
sbb
aaa    
mov
aaa    
addl
mov
jae,pt
mov
mov
jb
stos
cmpsl
fsubrp
push
xor
jb
dec
shrl
mov
mov
mov
cwtl   
lea
scas
pop
(bad)  
cli    
ret
scas
repz lret 
or
(bad)  
cmc    
loop
lea
lahf   
hlt    
addr16 out
int
sbb
sub
cltd   
lret   
lock cmp
mov
inc
stos
adc
mov
lea
sub
(bad)  
sub
adc
sbb
subb
xlat
insl
pop
in
cli    
jne
lahf   
xorl
mov
pop
push
cmp
jb
arpl
mov
inc
divl
dec
mov
lock mov
mov
insb
sbb
sub
loope
and
xor
out
push
int
adc
jbe
es jo
stc    
(bad)  
ss inc
dec
sub
xsaves
imull
sub
mov
cmpl
bswap
pop
jae
and
or
fisttpl
aam
loop
pop
xchg
or
lret   
cmp
daa    
pop
dec
add
pop
pusha  
js
sub
jmp
inc
sub
add
jecxz
push
mov
or
out
int
adc
jbe
es xor
push
and
iret   
inc
push
cmp
flds
adc
pop
sub
lahf   
mov
jne
repnz
jmp
xchg
aam
lds
jmp
or
(bad)  
lods
jno
sbb
not
mov
test
out
xchg
(bad)  
or
aaa    
mov
mov
xor
mov
(bad)  
dec
mov
mov
std    
aam
or
not
jno
jnp
push
dec
rcrl
lahf   
das    
cmp
mov
sbb
repz adc
sti    
scas
popa   
fistpll
or
test
sti    
pop
mov
pop
dec
hlt    
dec
iret   
daa    
les
shrl
inc
inc
movlps
lret   
and
inc
(bad)  
hlt    
or
or
test
cmp
inc
mov
in
dec
push
orl
(bad)  {%k1}{z}
ljmp
aam
mov
sub
repz sarl
out
xchg
xchg
or
rcrb
mov
or
xlat
mov
das    
mov
in
xchg
test
jp
push
rorb
bound
jl
ret
pushf  
adc
fdivl
pop
ja
push
push
xchg
icebp  
mov
push
(bad)  
xor
ds sbb
insl
jns
movsl
push
repz stc 
ds pop
incl
jns
lods
(bad)  
cwtl   
gs
clc    
pop
aam
hlt    
popa   
test
mov
data16 das 
dec
mov
scas
fsubl
or
in
inc
sahf   
daa    
daa    
pop
push
xlat
(bad)  
call
mov
in
in
enter
cs repz repz fdiv
xor
in
out
rorb
or
xor
popf   
pop
int3   
sub
mov
pusha  
push
in
ret
enter
(bad)  
mov
jns
negb
lock pop
test
not
or
xchg
leave  
jne
mov
sti    
ja
pop
movl
nop
ja
jnp
sti    
repz sarl
and
test
fisubl
mov
rcrl
dec
hlt    
dec
into   
daa    
lds
shrl
iret   
mov
add
jl
ret
pushf  
adc
fdivl
pop
ja
push
push
xchg
icebp  
mov
pop
mov
test
mov
fwait
imul
dec
push
orl
(bad)  {%k1}{z}
ljmp
aam
mov
and
add
(bad)  
dec
aas    
add
int3   
popa   
pop
jnp
adc
pop
cmpsl
ss push
push
leave  
jne
mov
sti    
ja
pop
movl
sub
or
test
sti    
pop
mov
pop
dec
hlt    
dec
iret   
daa    
les
shrl
(bad)  
jmp
repz xor
sub
addr16 and
sti    
popa   
repz mov
mov
adc
mov
in
cmpsl
mov
loope
test
loope
pop
jecxz
ljmp
lds
fcomps
push
dec
fcomp
fistl
jmp
mov
mov
cmpsb
mov
ret    
mov
sbb
push
cmpsl
adc
fidivr
jae
sub
lods
sbb
sbb
inc
dec
call
scas
popf   
cmp
cltd   
lcall
ljmp
pop
jns
xchg
sub
add
xchg
test
test
aad
test
fimul
bound
dec
push
test
int3   
icebp  
mov
jecxz
sub
and
ljmp
push
lea
je
cmp
or
jmp
shl
xor
or
mov
fisubl
in
les
jle
cmp
ss pop
(bad)  
and
xlat
cmc    
mov
sbb
std    
and
aad
mov
jbe
and
scas
mov
fisubrl
dec
ljmp
dec
fistp
push
ret
cmpsb
movntq
push
cmp
xchg
dec
and
es data16 cmp
loopne
mov
test
(bad)  
or
xchg
pop
or
push
je
add
push
mov
cltd   
xor
lret
cmp
adcl
icebp  
or
js
lret   
dec
inc
pop
bnd jl
scas
or
dec
(bad)  
rcll
jle
pop
lcall
mov
in
int
mov
mov
add
jae
imull
adc
pushf  
push
jle
mov
sub
lahf   
mov
or
inc
jle
cmpsl
call
mov
xchg
jae
iret   
inc
sbb
mov
xchg
test
negb
sub
fwait
divl
aam
mov
fs jp
fildl
rolb
notb
pop
xor
jo
loope
cmpsl
aas    
xchg
dec
lahf   
jg
std    
repz add
cmpsl
aam
or
dec
ja
xorl
or
or
push
jo
hlt    
sbb
dec
pushf  
sub
push
lods
cmpsl
in
(bad)  
scas
cltd   
sbbl
and
rcrl
fldt
hlt    
xchg
loopne
add
aas    
into   
xchg
xor
pop
(bad)  
mov
(bad)  {%k1}{z}
fsts
cli    
lret
popf   
jne
into   
dec
xchg
test
xorl
in
je
dec
and
and
jno
xchg
ficompl
dec
or
xor
or
mov
es jp
sub
iret   
movsb
loop
inc
nop
dec
and
jns
fstpt
icebp  
scas
lahf   
hlt    
xchg
xchg
mov
aaa    
pop
xchg
xchg
mov
and
leave  
fidivr
bound
sbb
test
mov
mov
xor
jl
repnz sbb
jmp
ss xchg
popf   
cmp
sub
into   
xor
out
lahf   
dec
and
xchg
jnp
adc
inc
(bad)  
xlat
cmp
mov
test
insl
scas
push
mov
leave  
sbb
roll
add
pushl
les
int3   
stos
scas
lcall
lret
outsb
test
es data16 cmp
loopne
push
int3   
xchg
or
inc
adc
aaa    
jl
js
dec
movsb
loop
stc    
aaa    
and
ret    
lea
fstl
xchg
iret   
jo
dec
fdiv
fisttp
test
push
mov
fisttpl
notb
sbb
dec
pop
or
movsl
leave  
sti    
loop
mov
loop
adc
roll
sti    
popa   
iret   
jle
jb
pop
xor
push
push
jle
and
or
fnstcw
mov
stc    
rolb
pop
stos
ret
mov
push
lea
adc
mov
test
sbb
sbb
add
lods
shll
xor
orb
lock rclb
push
dec
jmp
cltd   
mov
sub
add
enter
div
or
lea
fs
mov
cs cmp
adc
je
and
shl
or
andl
pop
insb
sub
adcb
jmp
cmp
sub
mov
push
inc
enter
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
jbe
sbb
cld    
mov
sub
(bad)  
xchg
out
test
enter
into   
lahf   
out
push
dec
sti    
and
lea
test
(bad)  
xor
lods
sub
(bad)  
inc
jbe
dec
dec
ljmp
jbe
sar
xor
fist
(bad)  
rcrb
daa    
popf   
ret
mov
lret   
fbstp
out
(bad)  
je
out
arpl
(bad)  
je
sbb
cmp
mov
or
xlat
iret   
push
mov
add
fdivs
cmp
sti    
inc
mov
xlat
xor
ret    
pop
shlb
jno,pt
push
das    
pop
dec
lea
xor
out
lds
das    
jne
(bad)  
rolb
cli    
popf   
and
call
mov
das    
push
add
or
insw
fnstenv
jns
adc
fldcw
pop
adc
aaa    
sti    
inc
push
cmp
mov
mov
flds
les
mov
and
outsb
repnz dec
adc
movsb
and
and
lret
or
cmp
xor
in
adc
xchg
shrb
push
ja
xor
push
and
mov
sbb
adc
ret    
mov
cmp
mov
test
popf   
das    
or
rcrb
rclb
adc
in
cmpsl
movsl
popa   
pop
pushw
pop
sarl
adc
fdiv
aaa    
jns
xor
popf   
mov
pop
dec
jne
cmp
mov
cs call
add
mov
adc
movsb
fcmovnbe
xlat
cs ror
les
std    
mov
mov
jl
xchg
sub
lock pop
fidivrl
pop
mov
jbe,pt
xchg
and
and
movsl
push
push
mov
daa    
aam
or
and
sbb
int3   
inc
out
xchg
dec
bound
cmp
dec
ljmp
(bad)  
int
xor
adc
fisubl
jge
xor
mov
popf   
ret
ret
or
sub
pop
sbb
or
sub
push
test
mov
and
sub
(bad)  
into   
xchg
add
push
pusha  
add
add
arpl
lods
or
aaa    
xchg
or
les
xor
push
or
xchg
dec
(bad)  
dec
lret
or
lds
aas    
movsl
mov
int
packuswb
sub
cmpsb
xlat
mov
test
mov
cmp
push
sbb
adc
call
push
sub
cmp
xchg
dec
cmp
loopne
in
or
std    
decl
jle
mov
test
dec
pop
(bad)  
jno
rorl
aaa    
and
shr
out
in
(bad)  
imull
pusha  
jp
and
fcomi
je
ret
add
jmp
les
jecxz
pusha  
mov
add
xorl
jecxz
cli    
push
outsb
inc
ja
es iret 
ds dec
push
cmpsb
xor
cmp
cs dec
rolb
dec
(bad)  
rcll
enter
(bad)  
rcrl
jmp
enter
mov
lea
movl
xchg
push
ds push
mov
xchg
aas    
cltd   
in
pop
arpl
mov
pop
sbb
adc
popf   
cld    
in
push
inc
add
lret   
mov
sub
sbb
es
out
dec
xor
add
push
lret   
add
repnz push
fistl
icebp  
scas
je
jp
fs
enter
stc    
out
sbb
lods
cmp
inc
push
verr
imul
jb
add
inc
pop
data16 hlt 
rcll
pop
out
test
pop
imul
ds pop
out
rorl
mov
sub
add
fldlg2 
(bad)  
mov
or
xchg
push
iret   
cs
daa    
mov
lods
cmp
popf   
les
jp
mov
cmp
cmpsb
in
lcall
dec
fyl2xp1 
cwtl   
pop
add
(bad)  
lods
sahf   
ss inc
push
repnz loope
idivl
xlat
cmpsl
popl
dec
jecxz
mov
sub
icebp  
and
cld    
pop
les
test
sahf   
dec
pop
jns
mov
negb
push
mov
mov
mov
pushf  
adc
mov
adc
ret    
sub
cmpsl
cmp
outsb
mov
jl
cld    
or
sub
push
xchg
loop
push
push
imul
in
(bad)  
fucom
add
pop
cmp
adc
xlat
(bad)  
hlt    
popf   
cmp
sub
mov
iret   
sub
cmc    
cmp
push
xchg
int3   
cmp
or
nop
ret
pushf  
mov
std    
mov
pop
mov
adc
idivb
ficompl
daa    
inc
mov
sbb
arpl
popa   
xchg
pop
dec
ljmp
(bad)  
int
dec
ret
mov
adc
jae
sahf   
or
jns
mov
sbb
hlt    
mov
cmp
(bad)  
je
mov
rolb
mov
repz das 
add
test
xchg
pop
dec
ljmp
(bad)  
int
dec
ret
push
rcr
(bad)  
jne
inc
(bad)  
stos
loopne
or
sub
pushf  
cwtl   
jno
xchg
ficompl
dec
adc
ds sbb
out
mov
pop
dec
add
xchg
pop
lea
mov
cmp
aam
or
subl
mov
lods
sub
bound
push
les
addr16 lahf 
xchg
repz adc
jl,pt
(bad)  
cli    
bound
cmp
int3   
shrl
sub
or
push
mov
xor
pop
cmp
iret   
inc
mov
cmpsl
out
(bad)  
outsb
lods
lcall
mov
in
add
divl
xor
aam
cmp
cmp
xor
lahf   
jo
xlat
pop
(bad)  
sub
lods
insb
or
mov
cwtl   
je,pn
jl
imul
aam
xor
ret    
scas
xlat
xor
or
pop
sbb
cmp
xor
jmp
jnp
pop
xor
in
mov
rcrl
in
clc    
jmp
jp
dec
icebp  
mov
cli    
int3   
jns
sbb
jmp
int3   
or
les
punpckldq
dec
add
jns
bound
fdivrs
cltd   
jo
(bad)  
cld    
test
pop
int
adc
cmp
jle
jmp
xor
lret   
sbb
das    
cltd   
or
scas
push
jb
cltd   
inc
(bad)  
pop
adc
sbb
xlat
push
rcrb
jae
(bad)  
jo
aam
inc
decb
cmpb
ss sub
lret   
xor
inc
popf   
cli    
mov
pop
push
movsl
das    
pop
stc    
int
or
jp
push
fnsave
fwait
mov
mov
inc
sbb
xlat
inc
pop
icebp  
movl
cltd   
pop
movsb
xchg
push
into   
push
dec
(bad)  
jle
sub
or
aam
lret
lds
gs cs
dec
dec
fstpl
hlt    
xor
test
stos
inc
rcrl
stos
lret
cmp
leave  
cs
push
in
pop
movaps
push
dec
and
xlat
push
out
push
out
or
mov
into   
sub
(bad)  
into   
imul
enter
ds dec
rclb
xchg
aaa    
scas
loop
dec
pop
and
inc
dec
push
nop
dec
xor
(bad)  
mov
insl
in
pusha  
repz inc
jo
mov
cmp
ret
inc
rcrl
or
xor
adc
dec
loope
cmp
mov
dec
push
out
neg
fidiv
jmp
shrl
imul
inc
les
out
jp
mov
lret
call
mov
inc
fsubs
jg
fwait
dec
ljmp
ja
aaa    
jo
repz js
sub
or
jle
or
jmp
mov
dec
enter
(bad)  {%k1}{z}
stc    
(bad)  
imull
aam
dec
out
stos
sub
jo
rorb
push
mov
insb
cmp
lret
pop
push
cmp
(bad)  
pop
enter
jge
stos
(bad)  
neg
dec
or
mov
inc
or
imul
lret
sti    
inc
aad
push
aam
fdivrs
inc
imul
or
xlat
push
shlb
(bad)  
mov
loope
sub
push
adc
mov
jg
or
push
outsl
inc
flds
scas
ja
add
dec
or
xchg
(bad)  
cmpsb
mov
xchg
cmp
insl
mov
(bad)  
aam
pop
jnp
rcrb
aad
cmc    
mov
addr16 icebp 
add
adc
push
arpl
repz sub
bound
pop
pop
out
inc
mov
std    
lock xchg
cmp
xorl
aaa    
xchg
dec
mov
push
push
dec
push
jae
leave  
cmpb
cmc    
xor
mov
mov
jb
mov
adc
or
pop
aam
fdivr
or
pop
and
cmpsb
out
rorb
mov
xor
mov
inc
adc
bound
push
sti    
dec
fstpl
push
and
add
mov
inc
fidivr
je
icebp  
push
and
loop
xor
inc
rcrl
ljmp
adc
pop
sbb
dec
or
mov
inc
(bad)  
sub
pop
mov
mov
test
sti    
jno
movsl
add
sub
outsb
pop
(bad)  
sub
cmpsl
mov
lret   
sbb
sub
imul
xchg
pop
(bad)  
and
enter
lds
gs mov
push
ja
popf   
lods
cmp
adc
lea
outsb
sahf   
inc
popf   
je
xor
adc
fbld
and
movsb
mov
mov
nopl
jg
or
sub
movsb
xor
cmpps
cmp
mov
mov
push
movzbl
or
push
cmpsl
and
sub
call
popa   
adc
mov
mov
jo
and
popf   
mov
loope
cmp
(bad)  
sub
inc
pop
sub
lcall
hlt    
adc
xor
xor
jno
jns
out
sub
and
pop
flds
psrad
push
rcr
sub
and
xchg
and
in
ljmp
addr16 dec
dec
push
shr
adc
aaa    
push
data16 sub
pushl
add
xor
insl
lea
or
cvtpi2ps
adc
inc
jb
xchg
cli    
addr16 dec
dec
push
rcrl
sub
rcll
int
jl
fcoms
js
cmpsb
(bad)  
mov
notb
pop
xlat
out
or
pop
jecxz
xlat
cmovs
dec
enter
sub
frstor
hlt    
or
mov
movl
adc
xor
out
aad
adc
je
mov
push
arpl
xor
push
(bad)  
outsb
sti    
test
xor
xchg
pusha  
mov
cs mov
jecxz
sbb
insl
popa   
repnz adc
xor
inc
mov
test
lahf   
jge
push
mov
fisubr
(bad)  
das    
lods
sub
inc
sbb
lds
pop
addr16 enter
cmp
rcl
adc
je
imul
jp
jmp
into   
inc
jle
das    
push
jecxz
stc    
mov
aaa    
cltd   
push
push
lock fldcw
fdivr
push
inc
gs arpl
pushf  
lock test
adc
xlat
pop
push
iret   
arpl
push
jbe
mov
(bad)  
mov
call
data16 cmpsb
ja
(bad)  
mov
push
aam
mov
or
sub
mov
addl
(bad)  
jle
mov
mov
sbb
inc
lea
add
inc
popf   
xor
jl
inc
xchg
jno
int3   
cli    
push
or
jo
(bad)  
clc    
mov
rorb
fwait
sub
and
test
jb
aaa    
pop
jg
lods
aam
xor
sub
pop
jb,pn
or
jae
or
jae
leave  
xor
jo
scas
dec
jecxz
sbb
clc    
adc
mov
and
sbb
mov
out
jle
jbe
push
jle
ss pop
pop
adc
mov
cwtl   
mov
nop
clc    
arpl
fcomps
imul
cmpsl
les
(bad)  
arpl
mov
cmp
fidivr
pop
and
lock lret 
cwtl   
jge
cli    
sahf   
or
xor
ret    
jbe
das    
lret
data16 xlat
cmpsl
pusha  
mov
repnz outsl
iret   
jns
dec
jg
enter
mov
mov
lea
dec
mov
adc
sub
mov
adc
sub
pushf  
xchg
xor
adc
inc
and
push
das    
cltd   
or
cltd   
pop
xor
jae
mov
testl
ficompl
inc
jp
jno
mov
call
push
cmp
mov
jne,pn
jns
rorb
pop
out
leave  
cmp
jno
xor
sub
mov
imulb
loope
cld    
std    
cmp
mov
test
mov
or
lret
sub
xor
lcall
stos
outsl
jb
jo
mov
(bad)  
cld    
test
ds add
nop
sub
mov
dec
xlat
mov
xor
pop
adc
push
sbb
jg
dec
mov
dec
sarb
and
or
sub
(bad)  
iret   
in
decb
orb
pushf  
pop
adc
and
and
mov
jne
insb
cmp
push
les
jmp
ret    
pop
std    
sahf   
int3   
enter
mov
and
aam
push
jecxz
cmp
push
je
lods
(bad)  
sub
or
(bad)
(bad)  
cld    
push
dec
sahf   
aad
clc    
flds
ds or
call
std    
push
jecxz
push
sbb
ja
rolb
loop
cmpsb
mov
stos
xchg
mov
lret   
sti    
ret
jns
xchg
lret
sbb
sub
lods
push
xchg
xorl
mov
jno
test
ds into 
outsl
nop
insb
mov
(bad)  
test
ficompl
cmc    
divl
mov
dec
pop
jnp
(bad)  
push
cmp
data16 jmp
js
popf   
dec
(bad)  
push
es
cld    
push
dec
sbb
pushf  
neg
andl
movsl
ds or
push
rolb
and
int
jb
jns
mov
cli    
or
mov
lret
stos
icebp  
jns
sub
out
mov
inc
adc
int3   
lods
sbb
push
movsb
clc    
adc
inc
xor
cmpsb
mov
fwait
sub
and
mov
imul
enter
pusha  
push
cwtl   
inc
sbb
in
xor
mov
cmp
(bad)  
in
(bad)
movsb
ljmp
aaa    
and
out
adc
imul
enter
pusha  
push
cwtl   
pop
mov
mov
ret
addb
test
call
jmp
cli    
js
pop
in
jnp
adc
repz hlt 
enter
das    
bound
insl
adc
pop
rcrl
pop
jl
daa    
addr16 sub
imul
sbb
cmp
cmp
aas    
xchg
test
stos
(bad)  
or
push
jb
adc
pop
rcrl
pop
push
xor
out
cmp
jge
or
ljmp
xlat
iret   
mov
jp
mov
jbe
stc    
xor
js
int
cmp
mov
or
cmpsb
mov
cmp
in
gs gs adc
xor
jo
scas
mov
jecxz
(bad)  
sub
xor
fcmovnb
or
mov
lret
lods
add
cli    
sbbl
daa    
mov
je
jb
push
cmp
xlat
ds mov
sti    
or
inc
pop
imul
leave  
cmp
xchg
jp
push
les
pop
test
stos
or
mov
movsb
xchg
inc
lea
jg
imul
aam
lret   
push
mov
fcmovnb
(bad)  
aaa    
cli    
sub
dec
or
sub
repz or
xchg
or
xorl
push
inc
ficompl
mov
xor
shrb
test
lret
mov
leave  
mov
stc    
and
lret
inc
xchg
fwait
jns
fwait
das    
xlat
push
cld    
xlat
push
rcrb
lods
lods
out
add
shrb
mov
fistl
sbb
rorl
sbb
rcll
sub
add
(bad)  
rep lods
adc
mov
(bad)  
adc
ret
dec
pop
imul
sahf   
les
lret   
xor
in
(bad)  
inc
out
enter
rcrl
imul
fild
jnp
and
orb
jge
lea
pop
xor
sub
mov
repz
cmp
dec
fisttpll
dec
rcll
aaa    
mov
bound
add
and
lret   
ss jecxz
cmp
mov
cmp
xor
scas
dec
scas
lea
dec
pop
cmp
sub
orl
adc
fcoml
and
push
sbb
cmp
cmp
sbb
mov
jl
data16 sub
cmc    
sub
pusha  
std    
xor
popf   
cmp
sub
cmpsl
mov
mov
daa    
cmp
ret    
fcoml
and
push
sbb
cmp
pushf  
cmpsw
ret    
sub
ljmp
insb
inc
or
aaa    
inc
adc
lea
mov
push
pop
out
or
push
push
sub
adc
inc
jb
lea
inc
push
cmp
ss push
add
cmp
cwtl   
call
fmuls
cmpl
pusha  
jle
xor
and
lds
fs loopne
pushf  
sub
aas    
ret    
xchg
jl
adc
outsl
push
push
fs pop
or
aad
sub
decb
sub
das    
jle
not
fldcw
test
(bad)  
outsb
clc    
cmp
and
sbb
iret   
pop
in
push
leave  
pusha  
pop
std    
jp
push
stc    
xchg
out
aam
push
bt
sub
lds
stos
addr16 out
pop
out
and
scas
loopne
(bad)  
out
sub
push
ud1    
(bad)  {%k1}{z}
(bad)  
xor
mov
cmp
sbb
xor
and
jnp
movsb
(bad)  
pop
mov
xor
mov
cmp
cmpsl
pushf  
xor
xor
dec
lahf   
hlt    
jmp
loope
andl
pop
sub
add
les
enter
out
mov
push
pop
sahf   
test
sti    
xor
ret
add
pop
mov
dec
ljmp
(bad)  
int
div
mov
lods
inc
pop
imul
sub
mov
loop
scas
out
imul
clc    
in
jno
dec
pushf  
fsubrs
inc
jg
add
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
inc
sub
pop
hlt    
mov
xchg
sbb
movzwl
getsec 
test
(bad)  
sub
sarb
push
outsl
sub
sbb
test
iret   
mov
or
cmpsl
fisubrl
or
sti    
push
pop
lret
arpl
fwait
das    
cmp
cmp
jle
inc
lcall
jmp
pop
sub
dec
adc
push
lock add
scas
push
adc
cmpsl
mov
pop
cmp
mov
ds add
mov
das    
lock outsb
movsb
cmp
push
sub
pop
addl
sub
mov
mov
ret
or
fucom
mov
add
js
mov
iret   
push
stc    
(bad)  
ljmp
sbb
test
pop
repnz pop
xchg
dec
cld    
or
sub
add
pop
cli    
adc
add
add
adc
loope
mov
jl
fildl
(bad)  
(bad)  
int
xchg
inc
xor
fs add
push
ja
es iret 
inc
pop
popf   
lea
ret
out
(bad)  
aam
divl
(bad)  
bnd je
adc
xor
insb
jbe
test
mov
imulb
jae
aaa    
rorb
sub
dec
dec
int
loope
inc
add
jbe
lods
sahf   
cld    
or
leave  
and
inc
imul
inc
xchg
test
jne
mov
movsb
(bad)  
dec
inc
sbb
fucomi
nop
cli    
shl
cmp
gs jbe
scas
jecxz
xchg
sbb
inc
and
(bad)  
sbb
adc
lea
nop
push
stc    
(bad)  
ds clc 
aas    
add
je
push
mov
push
add
fdivs
dec
out
xor
gs stos
clc    
dec
scas
or
push
mov
pop
adc
aas    
cmp
stc    
(bad)  
ljmp
fs jae
jmp
bound
ljmp
or
mov
out
test
lock int3 
or
pop
in
pop
and
pop
mov
mov
cmpsl
adc
push
les
inc
pop
and
and
inc
add
pop
fs mov
cmpsb
outsb
(bad)  
adc
scas
test
js
mov
stc    
ror
out
icebp  
mov
dec
ss repz les
sahf   
es aam
aad
subl
pop
pop
jmp
mov
popl
mov
mov
call
ljmp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
call
push
das    
fidiv
and
not
lahf   
cmpsl
aam
jb
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
xor
mov
xor
pop
pusha  
pop
jo
cmc    
ret
jno
xchg
xor
icebp  
ffree
mov
jns
int
les
or
aaa    
xchg
addr16 fwait
inc
jns
int
les
int
mov
(bad)  
pop
xlat
cmpsl
int
fimull
fcoms
mov
leave  
or
adc
fdivrl
enter
ret    
pop
pop
(bad)  
ja
je
out
aam
enter
lods
stos
iret   
mov
and
mov
(bad)  
or
xchg
(bad)
stos
loopne
(bad)  
iret   
out
pop
(bad)  
popf   
popa   
push
mov
jnp
cmp
push
mov
outsb
ficom
push
(bad)  
mov
cmc    
mov
mov
pop
inc
lret
xchg
cmp
mov
xchg
adc
push
out
add
imul
add
cltd   
outsl
imul
int
outsb
cli    
jno
fild
xchg
jns
sub
inc
push
fsts
out
cmc    
lret
test
das    
icebp  
or
lock inc
jnp
leave  
cmc    
add
inc
jnp
icebp  
stc    
add
in
cwtl   
out
fcomps
or
and
shr
dec
cmpsl
lds
fistp
test
das    
icebp  
or
lock inc
jnp
leave  
cmc    
add
inc
jnp
icebp  
stc    
add
in
cwtl   
out
fcomps
or
and
shr
dec
cmpsl
(bad)  
xchg
(bad)  
dec
mov
testb
fdivr
or
hlt    
mov
fidivl
mov
addr16 pop
aad
ret    
sbb
cwtl   
fbstp
push
sbb
sbb
ds push
mov
test
lods
ret    
jne
leave  
ljmp
gs loope
or
loop
xchg
sub
inc
sub
inc
les
xor
in
ljmp
enter
sbb
in
mov
mov
xchg
jbe
adcl
mov
mov
mov
pop
ret
adcb
int3   
mov
mov
xchg
mov
roll
mul
nop
into   
repz pop
lret
push
inc
ds push
mov
ds mov
mov
in
sbb
idivl
lret   
fwait
(bad)  
out
xchg
dec
fdiv
mov
imul
pusha  
jp
dec
push
fcomps
pop
pushf  
out
pop
(bad)  
addr16 test
out
jecxz
sub
mov
loop
les
iret   
xchg
lahf   
inc
js
imul
stc    
pop
fwait
test
(bad)  
mov
cli    
mov
arpl
mov
cmc    
xchg
cmp
or
lcall
clc    
sub
or
stc    
cwtl   
test
add
pop
xlat
inc
pop
test
sbb
scas
fist
cmp
daa    
test
movsl
outsb
lahf   
jae
inc
and
es data16 cmp
mov
movsb
push
inc
ss
(bad)  
shll
ljmp
mov
inc
jne
enter
and
jnp
jns
rorb
mov
into   
fwait
test
(bad)  
dec
hlt    
xchg
fwait
xchg
jb
ds into 
fwait
test
mov
hlt    
xchg
xor
push
mov
ja
aas    
daa    
jns
je
add
out
testl
fwait
test
jae
mov
scas
push
cmp
or
daa    
adc
and
adc
sub
dec
stc    
shl
dec
(bad)  
out
fdiv
pop
cmp
insb
mov
cmp
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
sbb
hlt    
dec
aaa    
mov
mov
fdivl
or
mov
cmp
dec
fs mov
(bad)  
cmp
jne
ss pushf 
shl
stos
lock or
mov
jp
push
imul
xlat
cmp
mov
arpl
or
loope
push
jb
std    
adc
stos
inc
inc
mov
pcmpeqb
aad
jns
add
je
push
lea
out
mov
add
out
pop
mov
xlat
add
addr16 inc
cltd   
push
fldenv
fmull
out
aad
shrb
mov
dec
insl
and
inc
push
mov
out
int3   
daa    
clc    
fimul
call
(bad)  
lods
add
test
call
sub
shrb
lcall
fistl
push
cs mov
jp
mov
lods
call
mov
and
aam
xchg
cmpsb
movq
inc
repnz cmc 
mov
cmp
xchg
cmp
loopne
dec
mov
jae
jne
pop
jne
scas
push
push
add
sub
data16 loop
dec
daa    
scas
xor
pop
loope
mov
pop
jnp
dec
notb
mov
pop
cmc    
dec
mov
jmp
mov
call
pop
iret   
mov
xlat
xchg
fnstsw
push
lea
mov
rorl
add
inc
push
verr
iret   
pushf  
repnz rclb
jo
out
mov
divb
add
inc
out
dec
test
sbb
movsl
jnp
fstpl
cs inc
js
ss fwait
out
out
stos
push
inc
inc
fstp
pop
push
push
fsts
out
mov
mov
out
xlat
ds mov
loop
sub
ret
jp
nop
push
sub
movsl
or
movsl
out
lret
sub
xchg
test
movsb
test
xchg
inc
sub
inc
ret
in
pop
mov
jle
jle
pop
and
jl
sub
mov
mov
mov
popf   
adcl
repnz imul
xor
(bad)  
cld    
out
jmp
hlt    
hlt    
push
adc
or
cs sub
stc    
cmp
xchg
leave  
sub
(bad)  
repnz and
push
sub
jg
(bad)  
mov
ds int3 
fdiv
or
jno
push
fsubrl
mov
stc    
sub
cwtl   
and
mov
cmpsb
fisttpl
adc
(bad)  
or
jl
mov
es push
stos
lcall
test
cmp
inc
imul
cltd   
push
std    
ss
pop
loope
popa   
out
xlat
ret    
testb
rcrb
xchg
loope
hlt    
push
test
out
pop
or
les
jecxz
call
outsl
jge
shll
stc    
lret   
jb
pop
loop
cmp
mov
std    
sub
xlat
sahf   
jo
push
rorb
icebp  
pop
outsb
and
repnz pop
dec
call
mov
and
cmpb
ret    
xorl
hlt    
stos
in
mov
mov
mov
int3   
mov
sbb
push
cld    
std    
cmp
roll
jmp
leave  
push
and
add
rcll
rcrl
mov
mov
cmp
sub
outsl
xchg
pop
in
lahf   
cs push
into   
lock mov
inc
fldcw
rcrl
(bad)  
ds iret 
or
jmp
add
cmc    
mov
mov
mov
loope
push
and
psrld
mov
aam
cmp
(bad)  
lahf   
push
cwtl   
sub
pop
mov
pop
test
add
mov
das    
iret   
sub
xor
daa    
les
cmp
sub
pop
adc
sub
adcl
mov
xchg
push
mov
pop
mov
add
lods
test
hlt    
cli    
fcomip
mov
cmp
rcll
jge
add
out
fsubl
cmp
jnp
xor
clc    
pop
aad
ret    
sbb
jbe
add
or
mov
jns
bound
xor
jg
ret
(bad)
jg
cmp
jmp
and
and
mov
out
dec
nop
mov
cs pop
add
test
hlt    
cltd   
mov
fildll
dec
lods
les
cmp
ret
ds lret
xlat
sub
inc
sub
xor
dec
dec
icebp  
add
es jnp
xlat
ficom
jg
mov
es inc
push
ja
mov
nop
call
cmp
(bad)  
mov
ds repnz mov
in
popl
(bad)  
(bad)  
js
(bad)  
fiadd
and
xlat
or
(bad)  
sbb
cs es push
or
aas    
dec
(bad)  
stos
das    
iret   
add
xchg
mov
mov
lods
stos
movl
pmulhuw
fucomp
jge
or
icebp  
cmpsb
and
int
ret    
mov
les
jnp
loop
(bad)  
mov
adc
iret   
sub
scas
adc
cmp
outsb
pushf  
movsb
icebp  
add
pop
lret   
mov
imul
sti    
das    
or
jo
shr
scas
push
dec
stos
jno
icebp  
jge
dec
arpl
add
call
push
(bad)  
call
idivl
jne
lret   
push
mov
stos
(bad)  
mov
adc
pop
neg
lods
sbb
mov
test
pop
and
fiaddl
stos
xchg
sbb
dec
pop
mov
dec
lea
lds
out
mov
push
mov
leave  
sub
xchg
mov
fcmovbe
je
mov
push
ljmp
cmove
sbb
xchg
shrl
pop
jp
lds
mov
les
fs jns
rorb
mov
and
aas    
or
lahf   
pop
inc
mov
mulb
and
mov
repz daa 
adc
push
push
mov
imul
xchg
dec
aas    
mov
aaa    
xchg
xchg
js
xchg
mov
dec
mov
stos
stc    
stc    
scas
push
push
lds
cmp
add
mov
hlt    
xchg
mov
(bad)  
int3   
(bad)  
push
mov
dec
fnstenv
fsts
or
das    
ja
adc
aaa    
xchg
addr16 je
aad
enter
inc
(bad)  
cld    
mov
push
xlat
fdivl
cs cltd 
or
dec
cmp
add
imul
xor
cmpsl
and
lahf   
xor
inc
push
adc
dec
fidivl
xor
fmull
mov
ljmp
add
loopne
mov
jl
mov
(bad)  
mov
arpl
imul
inc
or
idivb
mov
dec
xchg
or
mov
pop
int3   
or
jnp
(bad)  
mov
dec
lds
mov
daa    
sbb
(bad)  
cmp
and
(bad)  
lods
jmp
adc
or
push
and
xor
pminub
mov
ficompl
jp
jle
(bad)  
push
jne
imul
jle
loopne
mov
pop
insb
pushf  
push
aaa    
test
xchg
inc
mov
negb
int
stos
lret
sbb
cld    
or
sub
xor
sbb
(bad)  
xor
gs dec
jne
in
sbb
pop
test
into   
mov
mov
(bad)  
roll
push
and
cwtl   
jae
rorb
xor
cwtl   
rcrl
lret
jmp
xor
xchg
sub
ret    
or
or
add
ret
sbb
movsl
push
push
mov
pusha  
mov
sub
jp
push
mov
lock ficompl
enter
lcall
pop
(bad)  
cld    
push
dec
(bad)  
dec
repz cmpxchg
xchg
jns
jae
or
sub
pushf  
mov
mov
out
lret   
xchg
test
cmp
jge
xlat
inc
sub
mov
jl
xchg
mov
cld    
pop
int3   
mov
add
(bad)  
ss jle
jns
mov
rorb
push
popa   
pusha  
sub
in
jmp
frstor
das    
push
push
mov
jae
adc
inc
sub
icebp  
mov
jecxz
inc
aas    
cmpsl
mov
add
add
test
repz jle
sti    
xchg
ds out
fnstenv
(bad)  
xor
jae
sub
add
movsb
jle
or
jmp
jg
imull
stc    
lea
insl
cmp
xor
sbb
dec
aad
jg
shll
fyl2xp1 
inc
les
lcall
sbb
cwtl   
loopne
fidivl
xchg
lret   
push
and
(bad)  
std    
mov
(bad)  
fs sti 
adc
sti    
xchg
out
fistl
fisubl
pop
add
sbb
jle
add
cmp
out
cltd   
push
pop
push
or
inc
daa    
cmpsl
mov
movsb
insb
lret   
jae
in
inc
inc
dec
adc
inc
jno
adc
cmp
sbb
hlt    
pop
inc
inc
std    
nop
sbb
es push
in
jb
add
lods
aas    
mulb
or
sub
add
test
lea
call
jbe
mov
shll
jmp
inc
or
jg
lea
xchg
jge
inc
push
repnz movsl
add
jns
xlat
cmpsl
notb
mov
cmp
insb
imul
(bad)  
fisubr
fidiv
sub
movsl
ds test
jg
adc
push
(bad)  
arpl
clc    
cmp
hlt    
xor
dec
pusha  
jbe
push
add
test
mov
push
call
jnp
ds
out
dec
and
jl
adc
add
inc
inc
adc
orl
insb
test
or
jb
mov
mov
mov
rcll
enter
jb
out
iret   
daa    
or
fildl
add
lea
sub
fisttpl
loop
mov
push
mov
fdivl
add
test
(bad)  
push
cli    
push
mov
mov
stos
rcrb
pop
iret   
dec
nop
mov
in
jb
mov
mov
jb
ds dec
add
cmc    
mov
push
loope
fcoms
xor
test
push
and
in
scas
pushf  
cmp
inc
ja
aam
xor
cmpsl
dec
pop
outsb
and
pop
mov
(bad)  
enter
(bad)  
mov
lcall
pop
movsb
pop
mov
movsl
push
mov
mov
rorl
mov
shrl
adcb
dec
insl
cmp
inc
mov
jg
jne
jg
rorl
or
mov
mov
push
aam
add
int
out
mov
popl
add
mov
dec
insw
ja
movsl
mov
adc
and
inc
adc
xor
outsl
push
loopne
hlt    
(bad)  
jns
lea
adc
or
mov
addr16 push
mov
jbe
shl
mov
jp
mov
dec
in
sub
mov
mov
iret   
movsb
icebp  
dec
lret   
jbe
(bad)  
adc
cmp
sbb
jno
movsb
out
inc
and
push
in
adc
jbe
dec
pop
outsb
and
dec
scas
mov
enter
(bad)  
mov
push
pop
push
xorl
movsl
push
test
push
out
mov
sarl
lcall
loope
dec
insl
cmp
inc
mov
jg
jne
jg
(bad)  
jbe
fnstcw
mov
stc    
xor
jnp
cwtl   
stos
fldenv
cmp
scas
mov
popl
inc
mov
mov
dec
insw
ja
lods
mov
adc
pop
mov
sub
push
xor
sarb
dec
xor
and
scas
lcall
mov
(bad)  
out
dec
mov
jp
mov
cmp
jbe
out
mov
fdivr
call
lea
inc
bound
inc
push
repnz push
or
jns
xlat
cmpsl
daa    
lods
aam
or
mov
cmp
pop
pop
movsl
lods
mov
popf   
mov
int
sbb
mov
jns
pop
mov
pusha  
(bad)  
cltd   
inc
pop
jl
(bad)  
mov
(bad)  
sbb
fs insb
xchg
push
push
mov
sbbl
dec
pop
clc    
inc
movsb
iret   
movsb
lret   
mov
aam
mov
stos
pushf  
stos
mov
std    
pop
imul
mov
mov
add
mov
add
sub
jne
insl
xchg
push
imul
in
sub
repz sahf 
push
les
inc
les
dec
lcall
test
test
mov
test
push
jnp
popa   
je
popf   
jmp
and
ficom
jp
pop
fwait
daa    
mov
mov
outsb
and
cmpsl
test
popa   
mov
or
les
pop
outsl
cmpsl
push
mov
mov
mov
stos
rcrb
pop
iret   
addr16 nop
test
push
add
in
fimull
rclb
dec
add
cmc    
mov
sub
xlat
dec
pop
je
(bad)  
mov
(bad)  
sbb
jo
xchg
push
cs mov
sbbl
xchg
test
sbb
mov
add
mov
pusha  
(bad)  
cltd   
dec
push
mov
lods
mov
mov
xchg
adc
push
pop
sub
xchg
call
jbe
dec
mov
mov
add
scas
movsl
cmp
insl
dec
repnz or
int
mov
or
call
push
sub
push
xchg
loop
push
push
imul
sub
fcoml
pusha  
add
insl
cmpl
xlat
pop
and
jp
in
aam
sbb
lret
sub
and
shr
cmc    
cli    
scas
popf   
cmp
sub
out
(bad)  
iret   
mov
jp
fs
enter
fsubr
ror
fdivp
popf   
cmp
sub
ljmp
fs
enter
stc    
out
jl
and
popa   
(bad)  
call
xlat
dec
adc
aaa    
dec
cmc    
mov
sbb
sub
xchg
jnp
adc
neg
sub
out
imul
jno
sbb
cmp
cmp
out
inc
fmull
iret   
fdiv
mov
mov
sub
cli    
jno,pn
mov
and
dec
add
cli    
jno,pn
mov
xchg
pop
jno
cli    
cli    
jno,pn
mov
addr16 pusha 
pop
inc
outsl
cmp
add
or
movsl
xor
dec
or
enter
(bad)  
cmp
hlt    
adc
or
inc
outsl
add
aaa    
jl
data16 sub
jae
fist
(bad)  
out
sub
mov
aas    
inc
insb
dec
stos
sbb
xor
dec
mov
push
ljmp
ja
loope
out
cmpsb
les
mov
xchg
push
jmp
popa   
jne
out
xchg
enter
aas    
repz jb
push
shrb
jb
(bad)  
fisttpll
imul
cmp
pop
in
popa   
dec
(bad)  
insb
out
pushf  
stos
add
(bad)  
mov
cmpsl
and
add
fdivl
mov
loopne
xchg
iret   
pop
mov
loopne
jmp
cmp
cmc    
test
outsb
mov
imul
or
or
push
fs dec
(bad)  
or
and
mov
xchg
push
out
xchg
mov
xchg
mov
sbb
or
fldt
cmp
repnz mov
stc    
cmp
out
push
inc
int3   
dec
jne
push
adc
cmpsb
ss
adc
movb
add
jg
lock or
cli    
mov
int3   
mov
loopne
or
sub
enter
push
out
push
inc
xchg
(bad)  
js
cmpsl
mov
(bad)  
pushf  
ret
sub
mov
jno
mov
arpl
dec
or
inc
sbb
imul
add
int3   
xor
jecxz
sub
(bad)  
dec
push
mov
aad
cmpl
add
xchg
in
mov
dec
inc
and
ret
or
inc
fs cltd 
jbe
mov
in
push
(bad)  
pushf  
je
cltd   
sub
mov
iret   
pop
fist
add
pop
or
mov
adc
iret   
add
xor
and
fst
push
js
call
clc    
cmp
cmp
idiv
pop
xchg
dec
xor
repnz shll
dec
lcall
imul
mov
jl
inc
xchg
(bad)  
leave  
pop
mov
jl
aad
popa   
or
popl
iret   
movsb
xchg
adc
leave  
add
adc
mov
fcompl
fwait
lret
outsb
sub
arpl
push
iret   
cs mov
push
loop
loopne
into   
xor
pushf  
por
mov
adc
jge
push
xchg
fwait
adc
xchg
xchg
pop
ficompl
(bad)  
outsb
sub
fmuls
mov
mov
hlt    
or
or
inc
xchg
sbb
inc
cltd   
addr16 or
bound
inc
insb
inc
xor
or
stc    
lea
ror
iret   
pop
jg
sbb
sbb
shr
adc
dec
(bad)
aas    
sti    
mov
jecxz
push
inc
or
pop
fdivl
mov
xchg
call
push
aaa    
push
adc
(bad)  
mov
xchg
mov
pop
loopne
or
inc
sub
mov
and
int3   
lods
out
jb
push
flds
and
movsb
testl
or
int3   
xchg
mov
pop
jle
call
les
data16 int3 
and
(bad)  
dec
mov
push
lret
mov
xchg
mov
mov
xchg
add
add
out
jl
dec
and
cmp
loope
mov
fidivl
or
hlt    
addr16 fs shr
outsl
mov
jno
sbb
mov
outsl
(bad)  
inc
pop
fnsave
dec
(bad)  
cmp
jo
lds
ret    
ss popa 
(bad)  
out
jle
iret   
or
into   
push
jge
cmpsb
xor
dec
insl
leave  
stc    
or
jae
roll
and
mov
push
pop
push
(bad)  
je
jmp
xchg
ret
inc
test
push
movsb
jecxz
adc
movsb
in
andl
xor
jnp
popf   
lahf   
mov
mov
jecxz
nop
out
mov
mov
cmp
inc
lock cmp
push
inc
pop
mov
ja
mov
sbb
push
pop
mov
ret
push
jo
lcall
push
push
mov
mov
aas    
orl
cltd   
lcall
inc
stc    
xor
jno
mov
cmp
ret
pop
loop
cli    
sub
sahf   
into   
dec
mov
xchg
popl
pop
mov
jg
(bad)  
add
inc
mov
push
xor
mov
or
push
test
loopne
mov
and
jp
jbe
out
push
pop
mov
ds mov
aas    
addl
cltd   
lcall
inc
outsl
test
dec
or
stc    
add
push
pop
mov
ret
data16 aas 
jo
mov
insb
push
xchg
mov
cli    
mov
mov
cmp
inc
mov
(bad)  
repz cmc 
je
xor
stc    
xor
jno
mov
add
fsub
dec
push
adc
das    
push
push
mov
test
jle
leave  
int3   
xor
and
inc
ljmp
lea
(bad)  
cmp
jo
lds
ret    
ss popa 
(bad)  
out
mov
stc    
or
jae
shrl
cmp
sub
clc    
sub
addr16 fs push
adc
(bad)  
push
cmp
mov
bound
push
cmpsl
mov
gs fs push
cwtl   
push
test
add
repz push
pop
lods
dec
push
lahf   
push
call
jne
insb
or
and
sub
dec
(bad)  
test
mov
insl
dec
mov
or
notl
cmp
push
or
inc
dec
int3   
sub
add
adc
push
push
push
lret
(bad)  
shll
insl
iret   
jp
cmpsb
pop
xchg
lret
(bad)  
shll
insl
iret   
jp
cmpsb
pop
lods
roll
ret
insb
rcrb
enter
xor
(bad)  
shll
insb
lret   
jne
cmpsb
pop
dec
push
movsl
aas    
mov
dec
xor
jns
pop
imul
or
adc
inc
pop
mov
xor
mov
jmp
stos
mov
adc
stos
scas
je
(bad)  
rcll
out
sub
pop
(bad)  
adc
jmp
adc
jo
mov
ret
dec
popa   
push
mov
pop
lods
inc
aaa    
cmpsl
out
das    
or
(bad)  
jp
andl
cmp
cli    
mov
cltd   
(bad)  
stc    
xchg
push
loopne
sahf   
jne
cwtl   
inc
cmp
mov
paddd
iret   
push
ja
xor
xchg
js
mov
mov
cmp
jl,pn
syscall 
or
stos
adc
jmp
jl
sbb
icebp  
mov
adc
pop
into   
ljmp
sub
push
loopne
ret    
stc    
(bad)  
inc
aaa    
sbb
arpl
xor
scas
jmp
xchg
iret   
ja
lods
xchg
cmp
rclb
adc
pop
add
sub
gs std 
mov
cmc    
clc    
sbb
test
inc
pop
andl
rolb
xor
repnz and
iret   
pop
iret   
mov
mov
lahf   
clc    
add
pop
sti    
lret   
mov
add
mov
js
push
hlt    
or
mulb
fdivp
xor
aad
and
into   
push
push
mov
and
out
sub
pop
out
cmp
push
insl
leave  
leave  
rol
leave  
fdivrl
push
rclb
fucomi
sub
xchg
mov
lock mov
jo
jns
aad
inc
aad
stos
push
or
cli    
fucomi
sub
ja
cld    
xchg
das    
fcmovnb
loope
inc
clc    
rclb
js
sub
or
push
add
push
add
lret
pusha  
nop
sub
(bad)  
sbb
bound
inc
shrb
movntps
dec
dec
push
outsl
arpl
scas
cmp
push
push
aas    
lret   
or
ja
cld    
sub
inc
aad
(bad)
adc
(bad)  
std    
imul
or
mov
stc    
cmpb
jae,pt
jle
leave  
mov
icebp  
das    
xchg
out
sbb
out
pop
imul
lods
mov
dec
das    
mov
fwait
lods
sbbl
clc    
outsl
pop
outsl
lods
fildl
out
pop
fdivs
subl
add
icebp  
or
dec
jmp
(bad)  
jns
jl
xchg
or
mov
fistp
out
scas
sti    
sbb
jl
sub
mov
(bad)  
mov
mov
aas    
lret
push
push
ss
addr16 adc
jb
mov
out
mov
pop
or
and
mov
shrb
cmp
push
fs jo
bound
rcll
ret    
dec
jecxz
xchg
sub
or
fsubl
leave  
add
sub
into   
dec
aas    
jnp
call
jmp
cmp
xchg
leave  
or
inc
push
cmp
repz push
test
jge
cmp
fsubs
push
push
adc
fild
shrb
add
pop
sub
sahf   
jb
addl
mov
sbb
cmp
wrmsr  
out
lods
ja
push
ss cmp
int
lock sbb
and
icebp  
inc
test
mov
jmp
push
loop
dec
lret   
int3   
(bad)  
shr
sub
call
mov
(bad)  
(bad)  
xchg
push
and
aad
pop
cs add
or
pop
mov
out
dec
and
jbe
xor
cs cmp
cmp
xlat
je
xchg
or
xor
nop
jno
test
jbe
les
test
jo
pop
pop
aad
ret    
(bad)  
icebp  
jo
daa    
in
mov
push
rol
(bad)  
mov
pop
decl
add
mov
in
pop
arpl
xor
fcomi
lret   
jae
nop
xlat
pop
imul
cmp
mov
repnz lods
mov
into   
xlat
daa    
outsb
sub
dec
movl
aaa    
adc
shll
sub
cmp
fwait
(bad)  
xchg
sub
(bad)  
jno
add
xlat
icebp  
(bad)  
xchg
jle
lock push
dec
fst
xrelease lock adc
add
push
iret   
inc
fidivrl
xor
sarb
shl
xor
sbb
or
sbb
std    
aas    
sub
movl
mov
je
lret   
mov
or
jmp
aam
in
mov
sbb
inc
adc
repz jae
je
xchg
cmp
into   
nop
aaa    
(bad)
je
xchg
inc
adc
lret   
sbb
je
add
addr16 xchg
and
xchg
mov
mov
daa    
in
mov
punpckhbw
dec
aaa    
fistl
iret   
inc
into   
pop
js
(bad)  
pop
js
or
sub
jecxz
les
cmpsl
out
mov
aas    
pop
xlat
dec
pop
sub
int
add
leave  
lahf   
lea
inc
out
add
daa    
fdivrs
push
jne
nop
sti    
int3   
fisttpl
adc
pop
mov
jle
(bad)  
cmp
or
lods
dec
outsb
icebp  
call
sub
fidivrl
pop
or
test
(bad)  
mov
mov
(bad)  
fidivrl
rcl
xlat
or
or
adcl
mov
addl
scas
leave  
int3   
sbb
test
and
add
pop
clc    
dec
jecxz
push
pop
(bad)  
adc
mov
add
movsl
repnz pop
mov
stos
loopne
js
cmp
aaa    
lods
icebp  
and
roll
rorl
sub
into   
or
mov
(bad)  
mov
push
sub
imul
nop
ret    
mov
lock add
scas
pop
and
stos
sti    
and
and
lods
hlt    
push
dec
sar
popl
adc
stc    
(bad)  
cld    
mov
fidiv
ds insb
push
sub
jb
cmp
inc
insb
(bad)  
mov
nop
sub
fldt
test
sbb
lock adc
sbb
outsl
push
dec
push
addr16 mov
sub
ret    
push
aaa    
xor
stos
sub
push
aaa    
fidivr
mov
ja
loopne
clc    
mov
out
sub
mov
mov
dec
ds mov
das    
jge
cmp
dec
out
(bad)  
and
fisubr
insb
pusha  
or
dec
test
mov
hlt    
xchg
sub
dec
mov
ror
mov
(bad)  
iret   
lahf   
push
add
das    
(bad)  
jle
arpl
into   
dec
in
jne
cmp
push
lret   
mov
(bad)  
sbb
pop
xchg
add
in
cmp
jns
push
cs
adc
push
int
mov
scas
add
sbb
test
lock jge
gs dec
out
pop
out
jns
inc
das    
test
movsb
sbb
xor
ret    
xchg
sbb
jns
sahf   
xchg
mov
inc
gs dec
sub
int3   
imul
pop
mov
popw
rcr
lahf   
xchg
daa    
adc
iret   
jp
in
sub
mov
ret    
daa    
push
xchg
call
test
sbb
cmc    
or
xchg
mov
push
pop
cmpsb
andb
pop
sub
mov
adc
xor
stos
sub
mov
inc
insb
(bad)  
lods
loop
dec
mov
data16 daa 
sbb
adc
cwtl   
nop
sub
inc
sbb
inc
pop
popf   
adc
push
test
cmp
adcl
icebp  
loopne
gs xchg
inc
adc
sub
dec
fidiv
xchg
xor
or
popf   
jmp
arpl
fimull
fnstenv
adc
push
cmp
loop
loop
lret
orl
loopne
or
out
jbe
cmc    
sbb
inc
rorb
push
xor
outsl
fiadd
movsl
pop
and
mov
aad
addr16 sub
(bad)  
cmp
xchg
xor
insb
adc
jnp
lret
rclb
ret    
mov
push
xchg
add
pop
adc
(bad)  
xchg
orb
(bad)  
push
dec
pushf  
cmp
sub
ja
pop
or
sub
sysret 
mov
adc
xor
inc
pop
(bad)  
and
lods
subl
push
add
mov
jle
scas
mov
sbb
dec
(bad)  
ds lret
dec
sbb
sbb
ss cmp
jns
mov
adc
clc    
stos
cmpl
mov
out
(bad)  
mov
mov
adcl
mov
dec
mov
xchg
sub
aad
cs aaa 
subl
xchg
out
mov
and
push
adc
fsubrl
fsub
ds pop
es mov
leave  
cld    
repnz cld 
iret   
pop
pop
xor
int
fcompl
mov
stos
mov
sbb
jnp
dec
ffree
or
adc
enter
les
insb
outsl
js
in
and
dec
mov
(bad)  
(bad)  
scas
jmp
add
and
cmp
sti    
(bad)  
lcall
or
in
jecxz
out
int3   
ret    
stc    
(bad)  
movsl
pop
rcr
jg
sbb
jno
loopne
jmp
int
lret   
dec
jo
xor
sub
xchg
fnsave
ds
out
sub
repz and
push
mov
pop
or
and
stos
cwtl   
aam
and
(bad)
fsubs
int3   
mov
cli    
out
jmp
or
mov
aas    
mov
(bad)  
xor
jno
sub
lock js,pn
xlat
inc
sbb
adc
pop
mov
mov
xor
int
dec
repz and
push
mov
and
gs inc
aad
or
fucomi
sub
push
or
out
movsl
loope
xor
ficomp
or
ret
pop
scas
clc    
xchg
mov
fldcw
adc
jae
pop
xor
pop
arpl
(bad)  
in
mov
outsb
add
mov
fcomi
cmpsb
cmp
(bad)  
cmpb
sub
arpl
dec
push
cmp
pop
xchg
outsl
es daa 
int3   
mov
add
stos
jo
or
pop
and
cmp
and
cmc    
cwtl   
xchg
std    
je
xchg
ss
ds push
loopne
mov
leave  
push
jle
inc
push
in
push
cld    
xchg
fimull
pop
mov
imul
mov
inc
std    
add
loop
mov
xchg
jno
sub
movsl
inc
pop
push
pop
xlat
icebp  
and
xor
gs inc
jp
(bad)  
lea
jae
sub
mov
xlat
dec
(bad)  
loop,pt
iret   
xor
cmp
aas    
lock ficoml
mov
gs sbb
pushf  
(bad)  
mov
scas
jge
and
repnz mov
out
daa    
xchg
ficoml
xor
pop
and
(bad)  
cmp
adc
mov
pop
aad
adc
jb
cmpsb
sub
sub
sti    
fs aaa 
in
jne
outsl
xchg
orl
icebp  
scas
jle
mov
fs cmp
add
imul
or
outsl
xchg
(bad)  
daa    
xchg
test
xchg
repnz dec
inc
bound
mov
outsb
xlat
inc
clc    
mov
mov
or
push
inc
hlt    
xor
dec
fsubl
mov
inc
push
(bad)  
xchg
push
sbb
(bad)  
ffreep
cmp
lea
mov
mov
sbb
je
and
lds
in
xor
fdivl
imul
fmuls
sub
add
sub
hlt    
mov
repnz cmp
mov
daa    
pop
xchg
sub
xor
insb
sti    
push
inc
out
cs aad
inc
fldl
test
xchg
std    
sub
lret
dec
(bad)  
jne
out
sub
jg
adc
xchg
es std 
out
pop
xor
push
pop
jbe
add
adc
imul
fild
xor
push
divb
adc
in
out
add
inc
pop
imul
xor
int3   
cmpsl
push
dec
out
loope
addl
lret
xor
sub
(bad)  
and
imul
adc
hlt    
xor
(bad)  
xor
add
push
pop
hlt    
xor
jno
cmp
adc
js
aam
idiv
lea
jno
dec
cmpl
rolb
ds push
addl
cwtl   
ret    
mov
stc    
lock pop
cs mov
inc
inc
ljmp
mov
xchg
jae
sbb
inc
pop
jno
int3   
fidiv
leave  
out
pop
testl
ds jmp
jae
ret
orl
bound
pusha  
add
fs jne
out
add
inc
loopne
out
add
test
pop
push
popa   
rdpmc  
lret   
add
repz mov
dec
lret
leave  
inc
and
cmpsl
sub
cmp
push
xorl
mov
sub
out
test
(bad)  
(bad)  
push
cmp
add
xchg
xor
orl
xchg
in
shr
rclb
notl
mov
dec
leave  
fcompl
sets
mov
cmp
cmpsb
jae
sbb
inc
pop
jno
dec
cltd   
shll
fsubs
and
xchg
ds push
test
xchg
add
lock pop
cs mov
mov
ljmp
cmpl
into   
insb
mov
enter
sbb
test
shr
cmp
lds
add
cs imul
(bad)  
sti    
add
sub
xor
push
in
je
arpl
mov
xlat
lods
jnp
daa    
cs
adc
data16 into 
jge
or
push
mov
xor
dec
andb
jb
mov
out
rolb
push
outsb
arpl
mov
xchg
dec
sub
inc
stos
mov
ss es test
or
cld    
mov
push
aam
mull
sbb
sbb
mov
or
ds xor
dec
fs inc
inc
out
dec
pop
jns
add
sbb
mov
aas    
cli    
jns
sub
out
adc
and
cmp
mov
mov
rclb
jb
fsubl
(bad)  
mov
mov
mov
jne
inc
jo
cmp
(bad)  
add
movl
push
pushf  
aam
mov
xlat
push
mov
ds out
jg
leave  
xchg
sarb
push
push
dec
mov
push
insb
sar
mov
cmp
test
iret   
hlt    
mov
cmp
lret   
pop
cltd   
cmp
xor
idivl
pop
cvtps2pi
xor
xchg
in
push
adc
xor
aam
iret   
sbb
cmp
lcall
outsl
iret   
sub
dec
jne
sub
adc
jne
dec
repz sbb
xor
cmp
(bad)  
roll
adc
mov
pop
push
int
jecxz
rorw
les
push
outsb
push
lea
or
orb
dec
and
fstpl
add
or
fisttpll
and
fsubl
jg
out
pop
cmp
sub
int3   
in
jns
popl
(bad)  
xlat
ficompl
daa    
fistp
int
jecxz
data16 xlat
aam
and
insb
popf   
dec
fistpll
pop
test
in
mov
push
pop
and
and
hlt    
insl
fisttpll
pop
jecxz
daa    
in
cmp
inc
incb
mov
inc
push
and
insl
adc
xchg
imul
pop
cmp
xchg
mov
lods
addr16 ljmp
ffree
or
pop
push
loop
mov
add
sahf   
fs mov
sbb
add
or
out
mov
shlb
cmp
out
(bad)  {%k1}{z}
(bad)  
fisttp
mov
mov
add
notb
push
pop
add
lea
jmp
push
lock mov
mov
add
mov
test
and
enter
pushf  
inc
jmp
and
or
(bad)  
fmuls
jge
(bad)  
jmp
cmp
pushf  
fsubrl
(bad)  
jb
stc    
mov
xchg
sarb
sbb
add
stc    
mov
mov
aam
enter
int3   
adc
add
cmp
int3   
ss inc
mov
jnp
jo
add
dec
xchg
imul
dec
dec
and
dec
mov
mov
pop
fsubs
fdivrs
xor
sub
xchg
daa    
cmp
mov
(bad)  
mov
js
insl
mov
push
push
pop
cmpsb
fs syscall 
xor
lret
mov
mov
les
jp
lret
pop
dec
fnstsw
imul
fsubs
xor
cmp
(bad)  
addr16 enter
aam
push
out
jp
or
mov
test
data16 fldt
cmpsl
(bad)  
sub
mov
mov
mov
inc
rorb
push
mov
(bad)  
mov
arpl
mov
xchg
push
nop
pushf  
loope
xchg
ljmp
ss push
mov
pop
cli    
push
cmp
sub
inc
aad
nop
xor
jmp
pop
gs push
(bad)  
adc
ficompl
and
rclb
and
cmp
inc
mov
sub
jo
pushf  
(bad)  
jmp
mov
sbb
xchg
shrb
sub
lods
ret    
or
jmp
inc
dec
in
cmp
(bad)  
loopne
push
xlat
add
sub
cmp
data16 aas 
jno
xchg
and
cltd   
outsb
pushf  
ja
jg
ljmp
pop
daa    
jmp
xlat
shrb
adc
leave  
add
inc
or
mov
imul
fwait
cs
jp
xor
shrb
ds or
movsb
push
jmp
(bad)  
xor
push
xchg
cmp
lcall
aam
push
jg
stos
pop
ja
mov
aas    
sub
movsl
inc
push
subl
push
call
pusha  
xlat
rcll
push
add
gs scas
xor
movsl
pop
cltd   
in
pop
sub
movsl
lret
sbb
mov
push
pop
sub
iret   
sub
inc
call
int
jecxz
rorw
les
push
outsb
push
lea
or
shlb
jmp
enter
fstpl
mov
loope
xor
mov
fisttpll
push
and
mov
lahf   
dec
call
(bad)
cmpsl
add
into   
roll
or
ret
mov
dec
pop
stos
ja
pop
inc
cmpsl
inc
jge
popf   
sub
shlb
hlt    
sub
dec
hlt    
mov
faddp
(bad)  
(bad)  
cmp
popa   
fldz   
imul
push
aam
fdivp
xchg
test
out
xchg
es push
or
xchg
out
dec
and
mov
out
sbb
sbb
dec
(bad)  
ljmp
nop
inc
xorl
adc
loopne
test
fwait
pop
(bad)  
xor
pop
int
pop
iret   
frstor
jne
jmp
repz out
add
aaa    
cwtl   
testl
inc
testb
pop
jecxz
leave  
jmp
sbb
sub
xor
movsl
pop
add
pop
push
mov
and
push
sub
lods
jg
xor
jg
lret
enter
dec
sub
sub
hlt    
iret   
(bad)  
jae
jg
sub
or
xor
push
push
out
leave  
fdivrl
cmp
hlt    
xor
sub
cmpsl
test
loope
in
addl
push
sbb
mov
jb
dec
dec
or
movsb
gs mov
out
repz jmp
fsubr
es test
push
das    
xchg
inc
jae
negl
cwtl   
add
sbb
push
lea
popa   
sub
call
sbb
jg
out
mov
js
(bad)  
and
sbb
rcl
addr16 jp
fimull
pmaxub
out
sub
fnop   
ret    
jae
add
iret   
mov
out
sub
mov
(bad)  
pop
mov
pop
sub
jp
lret
pop
dec
fldl
xchg
sub
jge
and
push
push
dec
xchg
cmpsb
mov
jo
xor
movsl
pop
inc
mov
sub
movsl
inc
test
pop
cld    
das    
jecxz
daa    
jns
je
iret   
addl
mov
cli    
arpl
push
inc
cli    
cmp
push
push
mov
cwtl   
jge
rcll
int
jnp
sarb
mov
ds leave 
loopne
(bad)  
test
insb
lret   
hlt    
mov
test
jb
inc
push
in
push
cld    
out
mov
cltd   
jg
cld    
lods
adc
lret   
sbb
pop
dec
cld    
pop
cmp
cltd   
jmp
pop
ret
mov
xchg
cmp
(bad)
mov
dec
mov
cmpl
push
mov
sbb
dec
adc
popf   
cmp
push
test
jp
aad
fs sub
cmp
data16 aas 
jno
popf   
in
pop
pop
out
aas    
aas    
call
out
jl
mov
xchg
sarb
leave  
inc
dec
or
nop
mov
or
ret
mov
dec
pop
stos
ja
pop
inc
cmpsl
out
jg
sub
shlb
hlt    
sub
sub
loop
faddp
(bad)  
(bad)  
cmp
or
jno
push
mov
xor
mov
sub
mov
dec
jns
jae
cmp
loop
fnstenv
dec
pop
std    
inc
pop
cld    
sub
es aad
loopne
int
int3   
cmp
and
mov
loop
aas    
mov
outsl
fldl
sahf   
adcb
outsb
(bad)  
dec
insb
hlt    
xor
psrad
mov
cmp
loop
push
mov
xor
pushf  
pop
test
xor
insb
pop
lahf   
push
mov
in
or
stc    
stos
les
insl
ret
pop
int
add
(bad)  
leave  
and
pop
aaa    
mov
sub
daa    
in
cmp
inc
push
lods
push
ja
dec
stc    
mov
cmovo
adc
mov
enter
pop
mov
pop
dec
mov
fildl
xlat
jp
push
jb
mov
out
add
stos
push
dec
je
inc
xor
addr16 cld 
cmc    
lret
or
loopne
xor
dec
out
adc
mov
cmp
add
loop
mov
icebp  
mov
cmp
jg
mov
outsl
(bad)  
jl
mov
mov
dec
adc
mov
xchg
dec
mov
mov
stc    
call
mov
mov
inc
sbb
xor
iret   
adc
mov
fdivrl
cmpsl
inc
mulb
sub
cmp
add
(bad)  
dec
xchg
mov
aaa    
(bad)  
shrl
xor
out
addb
(bad)  
dec
leave  
fcompl
inc
loopne
(bad)  
cmp
test
xchg
mov
jns
test
push
or
jae
fistpl
or
lcall
or
mov
inc
repz repz or
dec
jne
cmc    
nop
stos
mov
adc
bound
dec
push
cmc    
fwait
outsl
pushf  
sbb
loopne
jo
mov
cld    
(bad)  
mov
cmc    
scas
sti    
sub
in
fsubrl
hlt    
lcall
cwtl   
ret
xorl
and
adc
pop
adc
mov
repz inc
stos
xor
add
inc
cmp
pop
fs loop
fildll
sarl
mov
out
flds
adc
sbb
jb
outsl
mov
out
aam
cmc    
cli    
(bad)  
xor
jo
adc
or
out
xlat
inc
adc
push
fs loop
iret   
insl
into   
int
jl
dec
(bad)  {%k1}{z}
jmp
enter
lcall
inc
imul
pop
enter
(bad)  
push
xor
xor
and
jmp
repnz xor
lahf   
sbb
popf   
das    
lds
xorl
out
sbb
cld    
lcall
cmc    
cmp
fs js
call
adc
push
inc
push
and
in
push
fldenv
(bad)  
fadds
scas
dec
psrlw
cmpsb
pop
push
nop
jno
mov
push
jle
aam
push
(bad)  
call
or
push
(bad)  
jmp
lcall
test
(bad)  
mov
dec
sbb
lret
cltd   
addr16 enter
pop
out
sbb
in
lcall
adc
(bad)  
pop
xor
xlat
ds
out
subb
sub
push
les
sub
mov
ret
fldcw
cmpsl
aaa    
fimull
repz or
add
fcoms
ret    
mov
fs
(bad)  
pop
fsubrs
or
in
sti    
mov
in
js
call
cmp
ds inc
dec
inc
pop
std    
jb
addr16 mov
lock ja
scas
dec
psrlw
cmpsb
pop
push
nop
jno
mov
push
jle
or
(bad)  
in
hlt    
lea
pop
push
push
jns
xchg
clc    
repnz movsl
popfw  
lahf   
mov
xor
xor
adc
sti    
mov
in
js
call
movsb
fwait
jb
cwtl   
cs pop
sub
in
ja
fsubr
push
rolb
adc
(bad)  
rclb
and
sub
fs inc
fs sahf 
jbe
mov
xor
clc    
inc
xor
movsb
dec
sbb
push
jns
cmp
fwait
mov
stos
mov
and
divl
mov
mov
cmpsl
adc
in
ljmp
out
dec
leave  
and
mov
mov
(bad)  
adc
cld    
push
out
sbb
add
inc
ret
fcmovu
outsb
or
into   
aad
cmpsb
mov
nop
stc    
fs mov
arpl
lret
or
xor
rorl
jnp
jl
das    
pop
icebp  
repz pop
(bad)  
xchg
push
push
out
jl
insl
inc
jge
movsl
orb
mov
repz
mov
adc
xchg
outsl
repnz
(bad)  
pushf  
pop
sbb
sbb
fildl
jns
or
into   
aad
cmpsb
mov
sub
(bad)  
jbe
mov
repnz adc
test
xlat
test
and
push
xor
adc
sub
mov
inc
gs mov
mov
sub
ret
adc
(bad)  
repnz push
es jecxz
in
or
jl
adc
lret   
aam
xor
sub
sahf   
jae
adc
test
enter
dec
sbb
push
lcall
stc    
push
mov
or
hlt    
mov
mov
jno
das    
cwtl   
mov
or
add
aam
adc
mov
cld    
call
ss push
sti    
adc
pop
out
int3   
inc
or
iret   
mov
dec
outsb
adc
lret
mov
out
subb
sub
mov
cld    
stos
cmc    
xchg
cmp
xorl
adc
mov
fsubrl
jl
cmp
iret   
mov
xlat
cmpsb
mov
lcall
cld    
stos
aad
(bad)  
adc
add
hlt    
xchg
aaa    
repnz sti 
out
enter
(bad)  
in
xor
ja
ja
sub
ds
out
xchg
and
stos
cmp
xor
cmp
je
xchg
xor
add
inc
fadds
xor
and
jnp
lcall
sbb
int3   
mov
(bad)
fldt
in
popa   
scas
fisttpl
add
xchg
cmc    
add
sbb
int
stos
aam
and
fistpll
lea
arpl
aas    
push
mov
lcall
shr
and
sub
(bad)  
cmc    
roll
mov
insl
sub
pop
test
fsts
adc
out
sbb
out
adc
popl
jns
clc    
pop
aam
hlt    
fwait
mov
(bad)  
fs and
and
mov
dec
(bad)  
lcall
cmp
clc    
jns
push
push
sbb
flds
test
int3   
scas
or
stc    
add
dec
adcl
add
mov
in
sbb
aas    
sbb
out
xchg
jbe
adc
int3   
inc
and
clc    
js
lret
lds
dec
mov
inc
cmc    
andb
mov
sbb
pop
loope
fs and
and
(bad)  
mov
ret    
xor
outsl
bound
xchg
adc
adc
xchg
inc
sub
xor
jns
sbb
cmp
aad
addr16 stc 
xchg
cltd   
push
call
add
loope
xor
mov
mov
xor
mov
add
jo
mov
ret
dec
and
and
pop
cltd   
pop
sbb
out
das    
or
pop
pop
iret   
andl
cmp
out
push
mov
bound
icebp  
push
loopne
sahf   
jle
xchg
inc
cmp
and
adc
addr16 adc
(bad)  
in
xchg
push
dec
popa   
xchg
dec
js
jnp
decb
ror
lea
add
lcall
dec
or
fnstcw
xor
movsb
add
adc
out
iret   
cs aaa 
xor
mov
(bad)  
sub
in
xchg
lea
xor
inc
mov
xchg
mov
hlt    
add
push
and
pop
mov
sbb
mov
pop
(bad)  
int3   
out
xchg
mov
nop
push
sbb
fnsave
out
nop
stc    
iret   
hlt    
mov
repnz test
pop
hlt    
mov
jae
outsb
or
out
sti    
inc
(bad)  
and
loopne
jbe
mov
ja
arpl
lcall
add
sbb
pop
dec
movsb
inc
xchg
in
mov
pop
dec
enter
movsb
sub
dec
xor
mov
jns
xlat
mov
xor
adc
xchg
js
sub
adc
sbb
lock dec
mov
adc
lahf   
jmp
pusha  
push
push
mov
mov
addl
rcl
movsb
scas
jns
shl
adc
mov
sti    
es mov
js
adc
mov
inc
mov
outsb
int
mov
xchg
push
aas    
lods
ficoml
xor
dec
andb
fs
stos
(bad)  
jp
jne
in
pop
int3   
ja
daa    
out
(bad)  
cmp
pop
cmp
iret   
dec
mov
inc
pop
dec
(bad)  
mov
xrelease mov
in
pushf  
test
test
mov
pop
stos
mov
repz popa 
jp
mov
imul
dec
cli    
(bad)  {%k7}
fimull
cmc    
ret    
add
mov
xor
xor
sahf   
clc    
stc    
jnp
cmpsb
adc
mov
stc    
pop
dec
ss stos
das    
int3   
push
cmpsb
xlat
iret   
cs aaa 
adc
std    
add
cs sub
aas    
lods
(bad)  
fdivrl
sbb
into   
cmpsl
(bad)  
fisttp
sub
outsb
adc
mov
sbb
or
jl
imul
in
fcomip
sub
lret
das    
das    
jmp
cmp
lret   
and
mov
sub
fildll
leave  
icebp  
inc
fst
push
(bad)  
cs into 
fcoms
adc
mov
jl
sub
shlb
adc
dec
rclb
xor
pop
xchg
test
neg
dec
xor
xchg
jp
sbbl
gs push
lea
sub
push
cltd   
jecxz
call
repz push
ja
(bad)  
mulb
cwtl   
sub
jp
mov
cmp
(bad)  
push
cmpsb
xchg
rorb
ss jb
std    
cld    
data16 daa 
xor
sti    
adcl
pop
xor
xchg
add
fstps
cmp
inc
cmp
int
push
jmp
mov
insl
sbb
cmp
or
jo
test
popf   
(bad)
cld    
inc
add
and
mov
lcall
sbb
mov
sbb
fcompl
mov
inc
mov
sub
repz xor
int
(bad)  
enter
out
(bad)  
sbb
xor
mov
adc
ss das 
aam
xchg
aad
enter
mov
mov
mov
xor
imul
out
fidiv
scas
in
into   
aad
cmc    
mov
in
mov
(bad)  
mov
test
xor
(bad)  
roll
inc
fistpll
ds out
sub
xchg
mov
push
lea
lock mov
cmp
fnop   
inc
adc
pop
dec
dec
adc
int
lods
xor
jmp
ss sbb
xlat
mov
(bad)  
sub
idivl
sarb
xchg
mov
out
ja
aad
dec
aas    
adc
sbb
add
(bad)  
in
sarb
js
ror
push
jo
inc
sub
jne
in
sti    
add
mov
insl
cmp
jecxz
daa    
add
out
mov
adc
adc
int
fs sbb
mov
jecxz
lds
(bad)  
mov
mov
fsub
mov
insl
scas
inc
xlat
push
roll
lods
fcomps
add
leave  
jmp
jb
mov
push
mov
push
dec
int3   
push
rorl
loopne
push
jl
sbb
sti    
jbe
scas
repnz test
cs in
sahf   
mov
data16 daa 
xchg
in
outsl
icebp  
andl
pushf  
add
fstps
mov
xor
fmul
add
inc
lock adc
out
int3   
test
or
push
(bad)  
aad
and
jl
scas
std    
mov
mov
mov
stc    
mov
xor
push
inc
dec
test
mov
mov
xchg
dec
push
and
push
sub
push
dec
push
sub
xchg
insl
xchg
inc
gs xchg
arpl
aam
inc
dec
xlat
fdivl
lods
loope
gs pop
dec
mov
xor
cmp
(bad)  
jno
jg
fisttpl
cs std 
test
mov
leave  
lcall
jmp
or
cwtl   
rorl
and
test
nop
lea
cmpsb
cmp
mov
inc
(bad)  
fcompl
cmp
or
js
std    
(bad)  
hlt    
xor
cmp
loope
jge
lds
lods
std    
mov
dec
push
or
dec
je
subl
jge
lcall
fcmovnb
mov
rorl
cmp
faddl
lret   
push
adc
sbb
mov
sbb
in
inc
stos
mov
mov
rcll
adc
lret   
push
loop
add
or
xor
out
cmovae
clc    
test
test
fs add
decb
scas
sbb
out
jmp
sub
(bad)  
jle
sub
lret   
fs shl
mov
in
pop
xor
mov
adc
rorl
aaa    
dec
loope
js
inc
mov
das    
cmp
or
out
jecxz
ljmp
out
cld    
out
sarb
je
out
into   
pop
sub
inc
loop
adc
insb
and
les
and
sti    
mov
(bad)  
push
ss or
cld    
push
push
and
decl
lahf   
inc
lcall
(bad)  
hlt    
xchg
jnp
movsb
mov
je
fildll
fs dec
mov
fs jno
mov
cmp
fnop   
inc
adc
cli    
shrb
add
push
pop
rcr
das    
popa   
loop
mov
jne
scas
pop
mov
loope
repnz repnz and
or
push
mov
int
aaa    
push
or
sub
adc
ds clc 
xchg
mov
sub
loop
or
(bad)  
mov
pand
inc
sbb
or
enter
cmp
hlt    
clc    
mov
xor
scas
call
into   
call
sbb
mov
(bad)  
jle
jge
cwtl   
adc
inc
push
repz pop
mov
testb
jne
push
push
push
sub
or
out
dec
dec
imul
push
ror
pop
xor
push
pop
dec
enter
dec
das    
pop
push
shlb
incb
aad
clc    
pop
movsb
fbld
in
out
ljmp
cltd   
xor
dec
aam
shl
test
pop
sub
(bad)  
jle
sub
lret   
fs shl
mov
in
(bad)  
enter
and
jns
imul
cmpsl
push
lret
and
sahf   
jo
aas    
cmp
(bad)  
jno
jg
fisttpl
cs std 
test
(bad)  
adc
push
aas    
sub
clc    
lret
lds
jnp
sbb
xor
fsubr
mov
stos
and
lcall
movsb
push
pop
aad
jecxz
xchg
inc
push
push
(bad)
aam
xor
xlat
data16 daa 
add
push
mov
pop
xor
xchg
add
fstps
cmp
ljmp
xor
adc
int
dec
or
mov
movsb
pop
add
ror
outsb
inc
pop
loope
jmp
outsl
leave  
clc    
xlat
mov
addr16 stc 
idivb
inc
and
cmp
shrb
and
mov
mov
(bad)  
jmp
mov
sub
fcompl
mov
and
push
mov
lock mov
cmp
fnop   
inc
adc
jecxz
in
inc
push
mov
push
adc
lret
lds
jnp
sbb
xor
xchg
decb
es mov
and
add
mov
jo
xor
flds
loopne
loopne
loope
jns
adc
(bad)  
scas
pop
repnz xor
push
fdivr
icebp  
add
cmp
loop
cmp
ds pop
dec
js
js
jb
out
lods
mov
dec
jp
add
add
subl
insl
test
and
(bad)  
aam
(bad)  
outsl
inc
mov
or
out
dec
mov
push
mov
inc
(bad)  
fcompl
push
movl
sub
rcpps
dec
mov
add
cmpsb
notb
pop
(bad)  
outsl
dec
sbbl
(bad)  
pop
xchg
loopne
xor
dec
push
adc
divb
and
sub
push
inc
(bad)  
int3   
out
add
lds
mov
dec
enter
imulb
pop
push
lock cs or
lds
int3   
insl
pusha  
stos
pop
mov
dec
xchg
sahf   
xchg
movl
adc
or
jae
sub
sub
pop
xchg
cmpsl
pop
fisubr
call
cmp
adc
je
push
xor
or
leave  
ljmp
push
lret   
jmp
(bad)
out
ljmp
mov
les
adc
push
icebp  
add
mov
and
add
into   
call
or
add
out
rclb
lret
mov
or
jecxz
dec
sahf   
sub
aad
arpl
shlb
loopne
notb
loope
daa    
push
fsincos 
or
outsb
call
pop
in
jae
mov
adc
mov
mov
or
push
adc
push
pop
in
shlb
out
arpl
in
add
lock int
sbb
jo
ds into 
add
ds pop
and
xor
loope
test
jae
sub
cmp
rcr
push
mov
lock mov
cmp
fnop   
inc
adc
xchg
or
shr
lcall
in
outsb
in
inc
movsb
cmp
sub
das    
cmp
and
ja
cltd   
or
dec
enter
inc
outsb
sub
ja
pop
xor
rorb
xchg
in
dec
mov
notb
jno
sub
mov
jb
xor
outsl
add
(bad)  
cli    
cltd   
xor
rcll
shl
test
pop
sub
(bad)  
jle
sub
lret   
fs shl
mov
in
ss gs insl
test
jg
adc
and
pop
into   
mov
push
leave  
jmp
in
pop
pusha  
xchg
repnz sub
dec
add
add
or
dec
test
adc
call
add
lock mov
test
mov
cmp
test
xlat
dec
mov
lret
pop
stos
ret
jnp
sbb
nop
in
mov
sbb
fcompl
jnp
xor
dec
mov
xchg
movsl
(bad)  
decl
or
inc
loop
cmpsb
dec
outsl
or
mov
xor
shlb
std    
mov
(bad)  
lods
jae
icebp  
(bad)  
dec
enter
inc
xor
movb
sbb
gs int
xlat
inc
push
das    
sub
es aam
mov
and
sbb
rolb
cs xor
adc
(bad)  
adc
push
imul
push
mov
pop
xor
xchg
add
fstps
scas
cmp
movsb
pop
xchg
jmp
push
loop
jg
out
dec
xchg
xlat
in
insb
mov
movsl
adc
ds
out
subb
push
or
rcl
push
cmpsb
insl
icebp  
lret
leave  
in
mov
mov
test
movsl
or
faddl
jg
ja
mov
sar
xor
shlb
std    
pop
and
in
ja
fistp
js
adc
(bad)  
fdivs
cli    
rorb
xor
js
pop
int3   
jb
sbb
or
fstp
sbb
cmp
hlt    
and
sbb
stc    
jge
sub
lahf   
xor
fwait
(bad)  
stos
out
or
movsb
data16 int
xlat
dec
pop
mov
sqrtps
push
divl
ds out
jmp
pop
sub
(bad)  
jle
sub
lret   
fs shl
mov
in
mov
test
mov
mov
mov
jno
mov
mov
jo
inc
ljmp
add
int3   
and
es cmp
sub
int
test
mov
(bad)  
iret   
mov
push
iret   
leave  
or
divb
sub
mov
fnstsw
lcall
pop
sarl
shr
xchg
mov
dec
mov
lea
or
adc
push
je
lahf   
add
cmc    
jbe
jg
xchg
and
outsl
cmp
or
mov
cmp
push
mov
fnstenv
mov
dec
(bad)  
sarb
push
add
jge
sbb
ss pop
sbb
mov
repz dec
push
sar
xor
jp
push
lods
xchg
(bad)  
in
pop
insb
and
and
jg
outsb
dec
pop
xor
out
je
inc
lods
ds pop
enter
push
mov
int3   
pop
ss loopne
jg,pn
cmpsl
je
push
push
out
xchg
pop
pop
inc
dec
test
inc
cmpsb
inc
sbb
sti    
rorl
inc
mov
inc
or
ss pop
shl
and
enter
add
dec
mov
cmp
sub
xor
push
jle
nop
hlt    
or
enter
ds xchg
xlat
push
fsub
test
pop
sub
(bad)  
jle
sub
lret   
fs shl
mov
in
pop
(bad)  
sbb
cmpsl
mov
mov
iret   
outsb
or
pop
jl
ret
mov
insb
mov
rep lods
cmc    
fcmovnu
or
adc
xor
fdivrs
cmp
insl
cmp
mov
lcall
pop
int
push
jmp
lcall
lcall
cmp
mov
push
mov
sarb
and
test
fldz   
loopne
stc    
clc    
into   
jns
adc
xchg
sbb
ljmp
scas
mov
jne
and
int
and
mov
pusha  
icebp  
adcb
fcomp
mov
xchg
(bad)  
xchg
movsb
mov
cmp
daa    
push
mov
and
sete
and
scas
(bad)  
aam
jne
sub
faddp
outsb
sbb
adc
mov
pop
inc
loop
negl
ret
xchg
or
lcall
cmp
add
adc
sahf   
and
or
in
in
xchg
mov
push
jl
outsl
mov
dec
lret   
dec
cmp
dec
xor
push
mov
and
addr16 hlt 
xor
(bad)  
cmp
je
arpl
mov
jae
sbb
out
fsubl
outsb
sbb
loope
mov
in
insb
mov
add
fidivl
jle
cmp
in
jecxz
into   
andl
repnz leave 
and
cmpsb
ret    
or
pop
xor
stos
jle
or
jmp
(bad)  
cmp
xlat
cmpsb
or
xchg
testb
sub
hlt    
xchg
inc
dec
xchg
jns
mov
add
das    
mov
add
mov
or
out
loop
add
cmpsb
adc
and
negl
in
(bad)  
mov
hlt    
mov
fs mov
fistpll
push
add
popa   
orl
(bad)  
out
pushf  
pop
or
mov
mov
mov
pop
rcr
fbstp
adc
cwtl   
and
(bad)  
andb
mov
lock jp
push
test
stos
jae
jno
dec
movl
aaa    
adc
mov
xchg
sbb
popa   
jecxz
loope
jne
or
ret    
stc    
(bad)  
in
mov
cmp
mov
pushf  
incb
mov
xchg
fldenv
repz pop
mov
xor
outsb
(bad)  
push
mov
pop
sub
(bad)  
int3   
out
hlt    
inc
ret    
lret   
push
aaa    
adc
xchg
inc
fnstenv
lds
pop
call
pop
push
jmp
add
cmp
lods
fidivl
xor
mov
repz xor
and
cmp
add
lcall
xchg
ljmp
ror
fsub
test
fnsave
pop
push
(bad)  
pop
(bad)  
cmpsl
add
mov
mov
call
or
dec
das    
push
jecxz
inc
aam
cli    
mov
repz
iret   
pop
xchg
mov
gs mov
(bad)  
adc
mov
pop
lcall
adc
sbb
push
or
or
jge
and
inc
push
jmp
jmp
inc
movsl
loop
sub
dec
lds
iret   
push
in
imul
(bad)  
xchg
lahf   
sahf   
(bad)  
addr16 or
mov
jmp
ljmp
jle
int3   
rol
inc
lcall
and
hlt    
mov
cmp
in
add
shrb
daa    
mov
and
pop
out
shl
jns
and
cmp
aam
lcall
sub
movsb
pop
push
inc
std    
leave  
xlat
pop
jge
ljmp
sub
xor
pop
out
mov
mov
into   
sbb
pop
loope
fs and
and
(bad)  
std    
push
mov
push
pop
loopne
or
movsb
sub
mov
lods
mov
push
pop
mov
stc    
jae
movsb
(bad)  
sbb
or
mov
ret
inc
push
inc
out
or
ret    
stc    
(bad)  
add
mov
pop
popf   
enter
and
iret   
pop
enter
push
push
clc    
lods
arpl
int3   
(bad)  
add
lods
fsub
aad
test
and
dec
jecxz
aad
sub
mov
int
or
mov
rclb
je
pop
mov
xchg
clc    
into   
arpl
out
push
aaa    
adc
lods
je
leave  
ja
add
ret
pop
cmp
out
(bad)  
cwtl   
jl
jmp
add
pop
jl
add
int3   
pop
xor
or
mov
xchg
sti    
sub
pop
pusha  
js
sub
jmp
in
push
xchg
leave  
imul
(bad)  
xor
scas
xchg
jle
inc
mov
scas
jo
lret   
and
out
imul
inc
and
repz sub
outsl
ss or
adc
jnp
adc
dec
fcmovne
pop
stos
inc
fnstsw
push
pop
std    
in
(bad)  
sub
in
addr16 push
add
aad
jecxz
pop
add
mov
cli    
sub
add
pop
jge
mov
jns
inc
push
sub
lods
or
push
mov
repz lret 
fwait
cmp
pop
mov
cmpsb
mov
sti    
add
sarl
add
cmp
mov
inc
and
cmp
mov
push
sti    
dec
pop
xchg
call
aad
in
scas
dec
pop
jmp
in
cmp
inc
js
lret
push
lea
mov
mov
push
mov
imul
dec
repz daa 
sbb
mov
xchg
test
mov
(bad)  
cs dec
sub
xchg
in
repz mov
pushf  
(bad)  
jno
es mov
fistl
call
stos
jne
xchg
mov
pop
je
out
and
and
mov
cwtl   
(bad)  
mov
inc
add
push
out
mov
ljmp
pushf  
push
mov
dec
pop
push
cmp
sub
repz inc
js
out
cmp
lds
lret   
enter
idivb
stos
fbld
pop
jmp
fwait
(bad)  
aam
mov
out
pop
dec
cmp
xchg
int3   
arpl
jo
ljmp
mov
lret
sbb
cmpsl
iret   
andl
inc
add
mov
call
movb
(bad)  
dec
into   
inc
xchg
enter
or
jns
xor
ss loope
mov
sub
mov
push
cwtl   
incl
insb
in
rclb
nop
mov
test
push
ret
mov
mov
movsl
stc    
es mov
inc
push
ljmp
sbb
xchg
enter
fdivs
idivb
dec
push
cltd   
xchg
or
cs clc 
mov
popf   
in
shr
aad
inc
mov
mov
(bad)  
in
(bad)  
mov
jmp
mov
mov
jns
(bad)  
mov
in
xchg
aam
cmpsl
mov
mov
cld    
dec
mov
cld    
dec
(bad)  
pop
call
pop
je
fs
xor
mov
mov
sub
xorb
dec
adc
fs jo
loopne
popa   
jp
fiadd
push
cmp
lcall
push
aaa    
mov
lods
mov
xchg
mov
sub
movl
std    
pop
xchg
mov
cmp
movsl
inc
fchs   
mov
jo
and
out
inc
ds test
pusha  
mov
and
xchg
adc
add
int
inc
inc
pop
xchg
retw
add
inc
cmp
cmp
repz test
addr16 push
rclb
xor
dec
enter
xchg
xchg
or
mov
jno
insl
int3   
(bad)  
jbe
(bad)  
stos
subb
adc
dec
int
hlt    
push
lret   
mov
add
pop
lds
out
xchg
mov
jp
add
cmp
hlt    
jns
fimul
or
mov
dec
push
sbb
xchg
jle
ror
pop
sbb
stc    
std    
mov
jle
sbb
negl
adc
(bad)  
jns
(bad)  
sti    
push
mov
shl
and
mov
mov
les
mov
fidivr
sbb
and
out
inc
pop
adc
roll
jb
movlps
xchg
minps
cmovns
stc    
sti    
cmp
xchg
cltd   
add
xor
sbb
push
sub
cwtl   
mov
mov
mov
inc
xchg
sbb
or
mov
jnp
xchg
inc
push
adc
mov
mov
mov
push
es adc
adc
pop
mov
es dec
std    
pop
dec
enter
and
xlat
inc
daa    
mov
mov
lea
mov
cmc    
cmpsb
or
jnp
adc
jo
push
pusha  
jns
das    
(bad)  
aam
jb
jp
(bad)  
in
aam
lods
or
mov
cmp
xchg
xchg
mov
cmp
(bad)  
xor
sub
jle
mov
rcrb
sarl
int
pushf  
call
outsb
xor
inc
cwtl   
inc
scas
xchg
mov
inc
dec
scas
aad
push
(bad)  
out
subb
dec
inc
fstpt
sub
pop
mov
add
sbb
or
popa   
push
repnz sub
sub
dec
test
cmp
push
test
xchg
and
mov
mov
inc
sbb
dec
jne
movsl
and
aaa    
jo,pt
inc
jle
inc
jns
push
cmp
cs dec
imul
(bad)  
push
js
test
xchg
lcall
test
pop
jecxz
mov
cmp
jb
or
xor
std    
(bad)  
pop
or
movsb
xor
and
iret   
inc
imul
lea
(bad)  
in
movl
scas
lcall
cmp
lahf   
mov
adc
(bad)  
les
aam
fstl
dec
or
cmp
or
lods
xchg
enter
aaa    
mov
cmp
iret   
aas    
mov
cmp
cmc    
lret
mov
rep lods
lock push
nop
in
xchg
gs cmp
lret   
push
dec
repnz
leave  
mov
sub
cwtl   
jle,pt
or
xor
repz test
jl
fstl
cmp
dec
dec
insb
sbb
outsb
adc
or
inc
xor
aam
les
add
ljmp
into   
mov
ja
lea
aam
fsubr
test
mov
ret    
xor
fidivr
xor
jmp
mov
fdivrs
mov
ds push
daa    
sub
pop
icebp  
sub
icebp  
cmc    
mov
pop
test
ja
dec
push
ss lock and
sar
and
jle
sub
outsb
cmp
dec
lret   
loopne
jno
cld    
inc
sub
pop
in
into   
or
ret    
mov
(bad)  
and
inc
push
call
les
jne
mov
sbb
decb
pop
xchg
and
lret
rorl
addr16 enter
cs mov
clc    
fstps
icebp  
cs popf 
inc
adc
enter
sub
call
add
out
aam
cmp
mov
inc
stos
xlat
test
idivl
lret
push
fdivr
xor
jmp
std    
ds popf 
lret   
cmp
push
pop
lret
adc
or
mov
stc    
push
pop
cmp
subb
ds xor
pop
mov
mov
lahf   
mov
adc
(bad)  
ret
sub
pop
push
stos
or
jle
rorb
sub
mov
lret
hlt    
pop
call
inc
jb
aas    
ret    
push
stc    
and
or
frstor
cmp
or
push
pop
pusha  
pop
data16 out
sub
cmp
lahf   
addl
xorb
push
sbb
push
pop
jecxz
push
fildl
pop
out
cmpsb
subl
lahf   
add
out
imul
or
test
mov
je
dec
aam
std    
inc
pop
jle
fwait
inc
je
xchg
dec
enter
push
fiaddl
repz test
or
push
aad
pusha  
(bad)  
insb
cwtl   
ret    
cmpl
mov
push
sti    
(bad)  
mov
cmpsb
lahf   
test
sbb
(bad)  
fnsave
jle
sbb
pop
das    
cmc    
int
fsubp
sub
mov
add
or
(bad)  
imul
inc
imul
enter
popf   
mov
sub
sub
sbb
jl
sbb
jb
icebp  
sub
adc
adc
sbb
mov
or
pop
notl
push
add
pop
out
in
int
jp
mov
inc
and
test
cs and
push
jne
insb
das    
ja
push
iret   
outsb
or
addr16 aam
imul
into   
jno
push
jne
push
(bad)  
jl
mov
mov
jns
stos
arpl
add
push
lahf   
push
mulb
hlt    
icebp  
lret   
push
neg
pop
sub
sbb
sbb
dec
and
imul
cmp
mov
lods
fildll
stc    
repnz cmp
xchg
xchg
rcrb
jecxz
inc
decl
fsubl
sub
pusha  
jae
enter
mov
repnz pushf 
out
aam
mov
cmp
ficompl
adc
push
divb
add
dec
mov
adc
jae
addr16 cs dec
push
xor
mov
repz pop
stc    
sub
(bad)  
stc    
pushf  
add
inc
jg
lods
and
stos
adc
daa    
mov
repnz lods
ret    
aad
mov
ret
dec
imul
scas
pop
inc
into   
(bad)  
cmpsb
clc    
xor
outsb
js
jecxz
lret   
addr16 or
fstps
mov
repz push
test
and
lahf   
sub
xor
mov
mov
mov
mov
js
or
cmp
sub
mov
aam
push
call
mov
cmp
lcall
shll
(bad)  
mov
xchg
iret   
or
call
addl
mov
add
sub
or
cmp
lcall
cld    
and
mov
ja
out
mov
cmp
in
mov
adc
popf   
fldt
fbstp
cmp
mov
iret   
lds
fwait
int3   
imul
mov
xor
ret
mov
adc
lcall
jp
cmp
scas
or
ss push
push
mov
insl
dec
pop
lea
mov
std    
mov
jp
sbb
push
add
lret   
addr16 and
cmp
lea
bound
jge
test
sub
mov
adc
addr16 jle
hlt    
das    
mov
xchg
jle
add
inc
inc
andl
aas    
ret    
pop
jne
mov
rcl
lret   
ret
xor
sub
sbb
gs sub
mov
les
xor
and
add
sub
repz je
jnp
and
notb
test
ret    
int
mov
xor
pop
test
push
lret   
sub
pop
repz lea
ret    
ja
cmp
cmpsb
cli    
push
mov
hlt    
jae
ljmp
inc
roll
cmp
repnz or
wbinvd 
hlt    
mov
mov
mov
jb
adc
gs pop
(bad)  
mov
xchg
ja
imul
js
ret    
and
inc
sbb
xor
gs dec
push
js
lods
fdivrp
pop
(bad)  
clc    
pop
aad
ret    
mov
lahf   
dec
push
iret   
in
aam
mov
scas
mov
aam
xchg
adc
ret    
insb
xor
cs stos
iret   
pop
cltd   
pop
sbb
roll
and
iret   
pop
jle
aas    
sub
mov
sarl
loope
inc
push
and
jmp
ret    
cmp
sub
pop
push
mov
mov
call
sub
icebp  
pop
lcall
popf   
testl
lock dec
jne
test
je
fs pop
in
popf   
mov
push
xor
jno
icebp  
pop
out
popa   
fwait
push
into   
mov
mov
push
movb
mov
pop
pop
mov
fldenv
or
(bad)  
jp
fistpll
data16 lahf 
addr16 cwtl 
sbb
jae
out
aas    
mov
(bad)  
mov
pop
xor
mov
iret   
je
cmp
out
dec
daa    
add
mov
clc    
mov
repz gs ds
repz mov
and
out
bound
mov
decl
push
cmp
mov
in
sbb
scas
movups
insb
dec
jno
mov
int3   
mov
fildll
mov
add
ljmp
jmp
mov
ret
add
mov
sbb
jl
add
ret
mov
sarl
loope
jg
inc
hlt    
or
mov
push
mov
pop
mov
(bad)  
pop
(bad)  
adc
add
sbb
xor
mov
fimul
mov
leave  
test
lea
pop
pop
dec
fsub
jae
xor
xor
repz jmp
mov
jmp
ret
in
push
mov
inc
movsl
inc
sub
aad
jns
mov
test
inc
movsl
dec
mov
xchg
and
ret    
test
dec
decl
lret
dec
(bad)  
insb
jg
xchg
(bad)  
or
les
jnp
xchg
test
test
lea
daa    
mov
xchg
mov
push
test
aad
lahf   
sbb
mov
pop
dec
push
fdivrl
scas
dec
(bad)  {%k7}
flds
(bad)  
mov
cmc    
imulb
movsl
stos
loop
pop
mov
adc
outsb
aaa    
adc
mov
sub
xchg
rcll
adc
or
lea
bound
fildll
test
lea
pop
pop
dec
fsub
jae
xor
xor
repz out
int
adc
pop
xor
ret
in
push
mov
inc
movsl
inc
sub
aad
jns
mov
test
inc
movsl
dec
mov
xchg
and
ret    
test
dec
decl
lret
dec
(bad)  
insb
jg
xchg
(bad)  
or
les
jnp
xchg
test
test
lea
sub
xchg
mov
push
test
aad
lahf   
sbb
mov
pop
dec
push
fdivrl
scas
dec
(bad)  {%k7}
flds
(bad)  
mov
cmc    
imulb
movsl
stos
loop
pop
mov
xchg
pop
lds
(bad)  
xlat
out
push
jae
in
ffree
jg
dec
outsl
xlat
lret
loope
mov
push
stc    
fwait
push
add
push
in
fnstsw
xor
dec
lea
mov
out
mov
bound
movsb
in
dec
cwtl   
inc
(bad)  
aam
idivb
test
jno
leave  
sbb
cmp
cltd   
scas
mov
daa    
lret   
mov
(bad)  
mov
inc
cmpsl
iret   
stc    
or
dec
movsl
lret
push
adc
incb
dec
inc
popf   
nop
sbb
scas
loop
dec
adc
sbb
inc
xor
dec
out
cwtl   
(bad)  
xor
cmp
inc
pop
aaa    
addr16 inc
cli    
jle
in
aas    
jo
mov
or
xchg
leave  
fsubrl
jl
xlat
out
push
jae
in
fnsave
test
out
data16 das 
loop
aad
insb
outsb
les
rcll
movl
sbb
jge
pop
lea
out
xor
aam
cld    
mov
(bad)  
fidivrl
xlat
sbb
xchg
test
adc
jl
xlat
out
mov
lods
mov
in
and
dec
cwtl   
inc
fwait
scas
push
sbb
jae
cs mov
xchg
(bad)  {%k7}
aad
insb
jo
mul
mov
or
mov
add
mov
icebp  
xchg
mov
loop
and
mov
dec
mov
mov
fucom
jae
or
(bad)  
(bad)  
insl
in
(bad)  
xlat
out
push
jae
in
ffree
jg
dec
outsl
xlat
lret
std    
mov
stc    
cmp
fwait
pop
push
in
fnstsw
xor
dec
lea
mov
out
mov
bound
movsb
in
dec
cwtl   
inc
(bad)  
aam
idivb
test
jno
leave  
sbb
cmp
cltd   
scas
mov
daa    
lret   
mov
(bad)  
mov
inc
cmpsl
iret   
stc    
or
dec
movsl
lret
push
xchg
lret   
(bad)  {%k7}
incb
dec
inc
popf   
nop
sbb
scas
loop
dec
adc
sbb
inc
xor
dec
cli    
xchg
pushf  
(bad)  
xor
cmp
inc
pop
aaa    
addr16 inc
cli    
jle
in
aas    
jo
mov
or
xchg
lret
in
(bad)  
xlat
out
push
jae
in
fnsave
test
out
data16 das 
loop
aad
insb
outsb
les
rcll
movl
sbb
jge
pop
lea
out
xor
aam
cld    
mov
(bad)  
fidivrl
xlat
sbb
xchg
test
adc
jl
xlat
out
mov
lods
mov
in
and
dec
cwtl   
inc
fwait
scas
push
sbb
jae
cs mov
xchg
(bad)  {%k7}
aad
sarb
lret   
cmc    
in
xchg
stos
sbb
or
mov
add
mov
icebp  
xchg
mov
loop
scas
daa    
leave  
aam
cltd   
shrl
fsts
cmp
lcall
mov
lods
bound
or
jmp
pop
xor
jp
gs add
or
stos
or
mov
cmc    
imulb
movsl
stos
loop
cld    
mov
(bad)  
fidivrl
xlat
sbb
in
stos
loop
imul
sbb
(bad)  
lret
out
mov
xchg
addr16 repz mov
and
pop
(bad)  
fstpl
jg
mov
arpl
out
mov
dec
loop
aad
nop
lods
cmovs
data16 fildll
aad
pusha  
test
in
dec
movsl
inc
test
jae
dec
stos
pop
and
pop
or
mov
add
rcll
loop
jecxz
in
xlat
adc
mov
cld    
repnz mov
test
leave  
test
xor
or
(bad)  
fstpl
mov
ss mov
xchg
addr16 repz mov
and
pop
(bad)  
fstpl
and
mov
sub
aad
jns
mov
cmc    
mov
movsl
mov
das    
loopne
es mov
cmp
lcall
cwtl   
mov
ret    
into   
(bad)  
lret   
aad
loop
fwait
mov
mov
ds mov
stc    
test
xchg
lods
jae
xchg
dec
shl
cmp
inc
pop
xor
aad
aas    
jo
mov
nop
xchg
icebp  
cwtl   
sbb
or
pop
or
fcomip
xchg
lods
(bad)  
xlat
pushl
xlat
sbb
mov
movl
mov
hlt    
popf   
incl
adc
pop
out
sbb
fadd
dec
dec
ds call
inc
out
ljmp
stc    
jne
inc
clc    
out
pop
fdivrl
ss push
repnz pop
movsl
lahf   
xor
mov
inc
jb
inc
push
push
je
icebp  
sub
sbb
adc
xchg
lods
insl
(bad)  
xchg
fstps
out
hlt    
inc
std    
push
xchg
inc
aad
mov
arpl
cmp
cmp
pop
addr16 or
shll
mov
aad
mov
sub
movsl
ss sub
jae
mov
lock add
lea
adcl
(bad)  
imul
cmpsl
iret   
stc    
mov
in
hlt    
scas
loop
scas
add
pop
add
bound
rcrl
xor
xor
xor
or
(bad)  
fstpl
mov
cmp
roll
ret    
push
(bad)  
mov
movsl
dec
mov
adc
cmp
aaa    
jae
(bad)  
push
clc    
pop
divl
mov
aam
dec
cwtl   
xchg
dec
rclb
cmpsl
iret   
stc    
or
lret
test
fldt
outsl
dec
mov
dec
movsl
inc
dec
(bad)
cld    
dec
test
sub
mov
cwtl   
in
(bad)  
lret   
jo
daa    
inc
pop
xor
test
sub
mov
inc
int3   
fsubrl
jns
xlat
out
mov
fisttpll
das    
in
mov
sub
pop
outsb
dec
int3   
stos
loop
pushl
sub
lods
mov
mov
lahf   
xchg
pop
(bad)  
fstpl
and
lods
cmp
(bad)  
ss dec
enter
cmp
gs cmc 
repz aaa 
push
jle
lods
(bad)  
bound
clc    
sbb
fs mov
(bad)  
jg
out
ffree
mov
mov
push
mov
pop
sbb
imul
mov
popf   
jl
std    
(bad)  {%k7}
aad
stos
in
ficom
jecxz
nop
adc
(bad)  
dec
or
stos
outsl
(bad)  
hlt    
inc
xor
iret   
stc    
mov
in
hlt    
scas
loop
scas
add
inc
add
mov
inc
test
sbb
or
popf   
jle
addr16 or
cmp
aaa    
jae
(bad)  
push
clc    
pop
imull
mov
inc
(bad)  
aam
loope
int
(bad)  
loopne
mov
push
or
lcall
das    
cmp
pop
dec
lcall
cwtl   
mov
ror
iret   
lods
stos
loop
insb
mov
and
mov
movsb
mov
jnp
sbb
pop
pop
push
out
fnstsw
stc    
test
int
cmc    
and
mov
stos
loop
pop
or
sbb
movsb
xor
ds aas 
dec
add
jg
or
pop
cmp
(bad)  
iret   
ja
arpl
out
mov
mov
aam
ret
dec
push
adc
xchg
cmp
flds
mov
test
out
or
lds
das    
pop
pop
out
hlt    
stos
loop
pushl
jno
mov
push
and
xchg
pop
(bad)  
fstpl
and
lods
cmp
(bad)  
ss dec
and
cmp
outsb
cmc    
repz aaa 
push
jle
lods
(bad)  
bound
cli    
adc
insl
mov
(bad)  
jg
out
ffree
mov
incb
movsl
dec
dec
adcl
jge
adc
sbb
dec
(bad)  
stos
dec
jle
daa    
std    
(bad)  {%k7}
aad
(bad)  
add
cmp
pop
pop
out
hlt    
stos
loop
push
mov
subl
fdivrl
fiadd
fadds
js
sbb
iret   
pop
movsl
lahf   
push
loopne
push
xor
lahf   
cmp
inc
(bad)  
push
push
cmp
jno
mov
lret
call
jb
inc
arpl
jns
dec
loop
gs dec
xor
cmp
lcall
mov
cld    
mov
ficom
sbb
mov
pusha  
leave  
xchg
mov
repz in
in
inc
lock
push
fwait
or
in
stos
loop
imul
(bad)  
into   
xor
or
lds
xchg
sarl
jg
xchg
xlat
or
les
cmp
in
hlt    
sarl
pop
lods
scas
loop
jae
rorb
xchg
test
inc
movsl
dec
movsl
cmc    
insb
cmp
scas
loop
sub
hlt    
sbb
pop
and
cmp
inc
arpl
jg
(bad)  
jle
in
pop
mov
mov
fldcw
and
mov
(bad)  
jecxz
in
jne
cld    
fs fwait
aad
sbb
(bad)  
fcomi
xchg
cwtl   
and
iret   
jbe
jl
out
mov
and
xchg
xchg
mov
fdivrl
inc
dec
scas
repnz xchg
sub
sahf   
dec
std    
dec
cwtl   
cmp
mov
fmuls
fs cli 
imul
std    
ret    
mov
cmp
roll
cli    
hlt    
pop
mov
movsl
mov
das    
in
loop
inc
xchg
test
test
lea
jecxz
adc
(bad)  
fstl
in
jg
mov
jecxz
scas
loop
push
dec
push
imul
shr
add
popa   
pusha  
les
scas
loop
nop
mov
lcall
cwtl   
mov
push
mov
cli    
int
add
push
pop
mov
pop
pop
outsb
dec
int3   
stos
loop
pushl
sub
lods
mov
mov
lahf   
xchg
pop
(bad)  
fstpl
and
lods
cmp
(bad)  
ss dec
enter
cmp
gs cmc 
repz aaa 
push
jle
lods
(bad)  
bound
clc    
sbb
fs mov
(bad)  
jg
out
ffree
mov
mov
push
mov
pop
sbb
imul
scas
inc
pop
push
out
fnsave
orb
xor
pop
xor
test
sub
mov
jbe
add
mov
pop
mov
add
in
aad
(bad)  
stc    
jge
mov
(bad)
jmp
lcall
fstpt
xchg
leave  
fdivrl
aas    
mov
dec
mov
dec
cwtl   
cmp
mov
clc    
lea
test
lods
stos
loop
mov
out
xor
pop
cmp
cmp
or
hlt    
pop
mov
movsl
mov
das    
jmp
xchg
test
test
lea
jecxz
adc
(bad)  
fstl
in
jg
mov
jecxz
scas
loop
push
dec
push
imul
shr
add
popa   
pusha  
les
scas
loop
nop
mov
lcall
cwtl   
mov
push
mov
cli    
int
add
push
pop
mov
pop
pop
outsb
dec
int3   
stos
loop
pushl
sub
lods
mov
mov
lahf   
xchg
pop
(bad)  
fstpl
and
lods
cmp
(bad)  
ss dec
enter
cmp
gs cmc 
repz aaa 
push
jle
lods
(bad)  
bound
clc    
sbb
fs mov
(bad)  
jg
out
ffree
mov
mov
push
mov
pop
sbb
imul
scas
inc
pop
push
out
fnsave
orb
xor
pop
xor
test
sub
mov
jbe
dec
cmc    
mov
out
mov
in
xlat
cmp
push
push
sbb
dec
adc
stos
mov
lret   
inc
xchg
fdivrl
insb
stos
int
jp
inc
loop
(bad)  
jle
xlat
iret   
pop
jecxz
(bad)
out
dec
repz mov
das    
out
jmp
xchg
(bad)  
lea
and
ffree
jg
pushw
orb
push
xor
repnz pop
movsl
lahf   
pop
xchg
xor
lahf   
movl
xor
mov
xor
push
pop
loop
inc
mov
popf   
rolb
bound
adc
mov
sub
cmpl
mov
ret
mov
test
out
fistl
push
push
xorl
fcoms
jbe
aam
or
sbb
popa   
fcomip
inc
xor
iret   
stc    
mov
test
aam
loop
les
add
pushf  
push
lds
mov
jns
push
imul
in
cwtl   
cmp
mov
push
insl
vmovd
mov
xchg
mov
out
xor
std    
fdivl
imul
cli    
hlt    
pop
mov
movsl
mov
das    
out
loop
dec
xchg
test
test
lea
jecxz
adc
(bad)  
fstl
in
jg
mov
jecxz
scas
loop
push
test
xor
jp
ffree
sub
xor
test
sub
mov
stos
xchg
outsl
(bad)  
lea
mov
push
shlb
hlt    
inc
xor
iret   
stc    
mov
test
aam
loop
les
add
pushf  
imul
divl
imul
in
cwtl   
cmp
mov
push
insl
vmovd
mov
xchg
mov
out
xor
std    
fdivl
imul
cli    
hlt    
pop
mov
movsl
mov
das    
out
loop
dec
xchg
test
test
lea
jecxz
adc
(bad)  
fstl
in
jg
mov
jecxz
scas
loop
push
test
xor
jp
(bad)  
and
test
sub
mov
inc
mov
xchg
lret
in
xor
dec
sbb
inc
fwait
cmp
cs aam
sub
inc
inc
leave  
push
jle
inc
lea
inc
lea
sub
imul
mov
mov
mov
xchg
push
nop
mov
ds
mov
pop
pop
std    
dec
xor
rolb
sbb
popf   
mov
jg
xor
jne
sbb
loop
dec
adc
xor
dec
je
lds
push
repnz
cmp
arpl
xor
(bad)  
shlb
rcrl
inc
aad
jnp
sarb
or
jns
lds
jmp
or
push
push
cmp
xor
mov
mov
sub
lea
pop
and
sahf   
lods
lcall
sti    
or
in
mov
in
aam
inc
and
(bad)  {%k7}
mov
cmp
fistl
mov
mov
fistl
mov
sub
insl
jp
pusha  
out
lods
mov
fmuls
lods
(bad)  
leave  
test
pop
rcl
fs or
sbb
loopne
push
cmp
or
(bad)  
fstpl
mov
ss mov
xchg
addr16 repz mov
and
pop
(bad)  
fstpl
and
mov
sub
aad
jns
mov
cmc    
mov
movsl
mov
das    
loopne
es mov
cmp
lcall
cwtl   
mov
jmp
stos
loop
outsl
mov
sub
push
and
test
xchg
mov
mov
or
cwtl   
in
push
mov
inc
movsl
enter
jae
dec
or
cmc    
test
(bad)  
xchg
int3   
cmp
cs and
inc
cmpsl
iret   
stc    
into   
dec
add
ror
ret
mov
hlt    
lea
loopne
ds lret
(bad)  
xchg
inc
sbb
dec
das    
loop
aad
sbb
mov
mov
pop
lret
out
mov
xchg
addr16 repz mov
and
pop
(bad)  
fstpl
and
mov
sub
aad
jns
mov
cmc    
mov
movsl
mov
das    
loopne
es mov
cmp
lcall
cwtl   
mov
arpl
mov
lea
dec
cwtl   
cmp
mov
gs mov
test
mov
aas    
aas    
lods
scas
loop
xchg
cmp
mov
mov
in
push
mov
inc
movsl
inc
adc
push
fisubrl
leave  
test
xor
mov
jns
jae
cwtl   
ss std 
mov
xchg
movsl
adc
fwait
mov
loop
aad
mov
jae
sub
and
dec
lea
mov
out
mov
bound
movsb
in
dec
cwtl   
inc
(bad)  
aam
idivb
test
jno
leave  
sbb
cmp
cltd   
scas
mov
daa    
lret   
mov
(bad)  
mov
inc
cmpsl
iret   
stc    
or
dec
movsl
lret
out
inc
jecxz
xchg
popa   
mov
outsl
dec
mov
dec
movsl
inc
fs in
jae
dec
push
jl
aad
dec
movsl
shr
pop
popa   
sbb
das    
push
mov
mov
dec
test
push
sub
fidivrl
insb
and
jmp
sub
lds
iret   
pop
mov
rcrb
jp
out
(bad)  
xlat
out
push
jae
in
ffree
jg
dec
outsl
xlat
inc
aam
leave  
mov
cmc    
xor
push
stc    
xchg
push
sbb
or
in
fnstsw
xor
dec
lea
mov
out
mov
bound
movsb
in
dec
cwtl   
inc
(bad)  
aam
idivb
test
jno
leave  
sbb
cmp
cltd   
scas
mov
daa    
lret   
mov
(bad)  
mov
inc
cmpsl
iret   
stc    
or
dec
movsl
lret
push
sbb
incb
dec
inc
popf   
nop
sbb
scas
loop
dec
adc
sbb
inc
push
pop
cmp
lcall
in
jo
jg
(bad)  
adc
(bad)  {%k7}
aad
iret   
notl
jle
data16 std 
cmp
pop
out
mov
cli    
imul
mov
push
in
dec
movsl
xchg
icebp  
sub
sub
mov
std    
in
dec
cwtl   
cmp
mov
pop
imul
push
popa   
lea
out
xor
std    
(bad)
insb
ja
mov
into   
psubd
mov
das    
out
loop
dec
xchg
test
test
lea
out
adc
stos
add
das    
fistpll
daa    
sbb
leave  
test
in
push
cwtl   
push
push
mov
jg
(bad)  
jno
repnz
aad
pmaxsw
sti    
pusha  
pop
jl
ffree
or
dec
stos
push
cmpsl
cwtl   
mov
lock stos
adc
xchg
addr16 addr16 mov
or
ljmp
xor
pusha  
push
jmp
popa   
sbb
sti    
test
andl
loop
imul
fcmovnb
cmp
inc
pop
mov
dec
(bad)  
insb
jg
xchg
(bad)  
or
or
sarl
pop
lods
scas
loop
jae
rorb
cltd   
mov
fldl
dec
movsl
cmc    
insb
cmp
scas
loop
sub
hlt    
sbb
inc
xor
dec
push
jge
clc    
xor
cmp
inc
arpl
jg
(bad)  
jle
in
pop
mov
mov
mov
decb
mov
mov
push
cli    
xchg
aas    
xorl
(bad)
or
sbb
sahf   
cmp
in
pop
stos
leave  
xor
sarl
call
cld    
mov
popf   
arpl
in
pop
test
sub
(bad)  
out
dec
andps
in
xchg
scas
cmc    
or
lahf   
add
enter
xor
mov
dec
jb
and
mov
daa    
lret
dec
repnz repnz mov
mov
movsl
xor
sbb
call
sbb
xchg
lret   
shll
add
pusha  
xor
jno
stos
loop
pop
jl
fwait
or
xor
into   
push
(bad)  
fstp
hlt    
fprem1 
xor
sbb
mov
call
xchg
(bad)  {%k7}
aad
push
clc    
std    
rorl
and
jo
(bad)  
aad
loop
scas
cmp
(bad)  
jns
jle
out
imul
clc    
aam
pop
xchg
push
xchg
sbb
(bad)  {%k7}
xlat
mov
(bad)  
ret
jno
mov
aad
jo
aas    
fbstp
roll
jns
mov
or
cmpl
xlat
fstps
(bad)  
mov
(bad)  
fidivrl
or
mov
das    
fs jg
xlat
iret   
andl
sbb
dec
adc
sub
push
lods
dec
inc
add
sub
mov
ja
xor
(bad)  
sbb
rcrl
adc
cmp
push
mov
jo
sbb
rcrb
mov
push
add
lcall
out
mov
jmp
repz
out
cli    
dec
jp
aad
pop
repz and
clc    
mov
loopne
mov
cld    
sub
pop
and
loopne
bound
add
xor
jmp
(bad)
dec
call
mov
or
iret   
xor
les
mov
int
mov
jae
push
insb
push
inc
sti    
popf   
pop
sub
fisttpl
test
push
jmp
test
push
int3   
xchg
hlt    
mov
stc    
add
push
mov
cltd   
in
test
insb
jmp
(bad)  
lock aaa 
insl
nop
lea
dec
mulb
dec
es aaa 
xchg
jge
gs pop
gs js
push
cmpsl
push
dec
add
movsb
scas
repz les
push
or
(bad)  
push
mov
test
in
sub
call
daa    
inc
dec
loope
adc
sahf   
sub
mov
and
loop
push
int
addl
cmc    
repz jae
mov
movsb
mov
mov
jmp
dec
imul
(bad)  
or
xor
mov
jbe
mov
mov
push
int3   
push
in
in
pop
inc
push
shr
lret   
out
stos
icebp  
(bad)  
hlt    
ss scas
bound
paddusb
mov
out
pop
sbb
mov
add
iret   
out
pop
out
add
mov
push
iret   
inc
cs mov
mov
idivb
out
push
push
adc
dec
add
xchg
rorb
push
xlat
(bad)  
popa   
hlt    
rcr
aaa    
and
int
cmpsb
fild
bound
adc
jo
bound
jo
jecxz
or
pop
(bad)  
repnz
setnp
dec
adc
and
jp
jmp
mov
push
mov
out
sbb
push
push
xor
sbbl
mov
test
mov
inc
inc
adc
mov
add
(bad)  
pop
les
xor
pop
jecxz
sbb
aam
xchg
aad
or
hlt    
inc
jmp
xor
xchg
sbb
cmp
xor
mov
imul
add
js
fcmovne
inc
pop
cmpsl
fistl
sub
dec
scas
mov
divb
or
push
add
jo
cli    
dec
or
sbb
or
in
iret   
jp
mov
pop
pop
jne
sub
aad
or
cmp
(bad)
adc
mov
arpl
(bad)  {%k7}
int3   
cmc    
or
sub
out
lds
sub
(bad)  
cli    
arpl
shl
iret   
int3   
das    
movb
in
jmp
pop
or
fnsave
aad
call
fldt
incl
mov
inc
push
stos
lea
dec
mov
mov
add
scas
jg
push
xor
cmpsl
jbe
aad
or
pop
push
push
ud2    
popf   
cmpsl
sbb
ret
push
lds
cmp
mov
inc
movsl
sbb
sub
cld    
lcall
push
sub
or
sbb
in
mov
mov
xchg
jl
outsl
imul
xchg
and
sbb
mov
mov
jne
and
iret   
movsb
adc
dec
and
js
(bad)  
dec
lcall
push
mov
out
decl
xor
imull
jnp
in
(bad)  
mov
ljmp
mov
imul
lds
cmp
mov
lods
xor
xor
adc
pop
pop
ja
call
add
hlt    
popf   
mov
xchg
xor
xchg
int
push
jne
push
xchg
sub
sub
loop
sub
iret   
movsb
loopne
mov
ret    
cltd   
mov
xchg
pop
mov
icebp  
test
lret   
fsubs
aad
leave  
rolb
insb
(bad)  
jb
sbb
cmp
mov
jecxz
inc
ja
out
movl
test
push
cltd   
fdivrp
cs cmp
std    
mov
jae
clc    
sub
mov
jns
xor
faddl
sbb
repz cmp
mov
dec
pop
data16 loop
scas
out
adc
test
leave  
mov
pop
out
stos
or
std    
popa   
inc
int3   
pop
cmp
aaa    
ja
popf   
cwtl   
xor
fidiv
mov
xor
movsl
xlat
cmpsl
pop
ds add
fsubs
cmp
cmp
cltd   
loop
pop
inc
(bad)  
(bad)  
cs aas 
cld    
rorl
out
std    
mov
jp
(bad)  
ret
mov
sbb
jge
adc
aaa    
shrb
stc    
dec
mov
faddl
xchg
hlt    
push
aaa    
rolb
jle
push
jbe
or
rcrl
ss cmp
pop
stos
or
call
insb
lods
jbe
and
pop
cmp
add
in
repz fcoml
lods
aam
sbb
aaa    
out
test
call
das    
add
(bad)  
(bad)  
je
sti    
inc
cwtl   
cmp
sub
pop
push
out
xchg
ds mov
cmp
dec
(bad)  
cmp
sbb
dec
fsubl
test
mov
mov
mov
out
and
add
adc
leave  
xchg
fidiv
(bad)
lea
jp
sbb
rol
fsubrl
push
or
sub
je
jecxz
cmp
pop
push
icebp  
pmaxsw
pop
das    
mov
push
mov
rcl
stos
and
leave  
mov
or
into   
pop
or
cwtl   
cmpsl
sub
push
mov
pop
pop
cmpsl
in
adc
xchg
mov
imul
mov
mov
mov
in
lcall
xchg
mov
out
xor
out
das    
aam
(bad)  
jecxz
popf   
mov
hlt    
adc
stos
loop
cmpsl
icebp  
cld    
mov
sub
add
loop
jecxz
out
dec
stos
aaa    
sbb
sub
fdivp
bts
add
mov
aam
(bad)  
jecxz
pop
jl
call
sub
mov
ds inc
mov
out
or
sub
jmp
cmp
push
cs cltd 
pmaxsw
lods
mov
jns
stc    
or
test
pop
fistpll
rcl
rcll
xor
out
mov
icebp  
xor
cwtl   
out
and
in
loopne
push
in
ja
sub
cmp
out
or
stos
and
leave  
mov
das    
adc
pop
or
cwtl   
cmpsl
sub
ret    
sub
push
mov
dec
pop
ror
data16 jnp
add
dec
repnz cmpsl
cmp
xchg
mov
cmp
stc    
(bad)  
sub
dec
push
add
sbb
xor
pop
mov
ficompl
inc
or
push
stc    
pop
inc
jecxz
xchg
sbb
out
or
pop
push
je
jge
outsl
movsl
sbb
(bad)  
cltd   
xor
fldt
lea
(bad)  
mov
push
repz scas
pop
mov
ficompl
cltd   
jae
les
into   
stos
push
mov
xchg
pop
and
fwait
(bad)  
mov
adc
repnz in
mov
xchg
arpl
test
xlat
cmpsl
jp
inc
mov
icebp  
jmp
mov
mov
fcoml
enter
adc
sarl
mov
fs repnz
fwait
sub
and
(bad)  
out
sbb
sub
popf   
cmp
sub
outsb
adc
mov
jp
fs
enter
adc
jl
and
pusha  
(bad)  
out
xlat
jo,pt
mov
aaa    
dec
cmc    
mov
sbb
sub
xchg
jnp
adc
neg
pop
and
jp
in
aam
testb
and
(bad)  
ret    
push
push
xor
sbbl
test
lahf   
push
or
sbb
addr16 dec
std    
xor
popf   
cmp
sub
lods
xor
ja
sbb
fwait
sub
xchg
jnp
adc
push
xor
pop
loope
mov
aaa    
dec
stc    
mov
and
and
dec
inc
fadd
xor
or
in
xlat
push
pushf  
movsb
dec
popf   
fwait
jle
mov
jp
data16 ror
fadd
dec
int3   
mov
cld    
lods
dec
loope
repz xlat
and
popf   
jnp
mov
or
data16 xor
loope
adc
sub
or
add
ss icebp 
sub
dec
add
and
(bad)  
iret   
and
test
stc    
movsl
mov
sbb
call
pop
add
and
inc
sub
lea
jg
std    
lock cld 
mov
or
(bad)  
jno
out
(bad)  
cld    
pop
jecxz
jp
xor
inc
mov
ret    
push
mov
xchg
mov
pop
inc
adc
add
idiv
call
popf   
inc
movsb
pop
add
mov
or
cmc    
push
out
(bad)  
in
outsb
xchg
add
sti    
ret    
data16 xlat
cmp
xchg
fs xor
cmp
cmp
add
test
xchg
shrl
movsl
stc    
mov
adc
out
push
or
dec
push
lret   
mov
pop
popa   
es dec
sub
mov
xchg
movsb
out
int3   
mov
enter
popf   
nop
push
test
fsub
cld    
sub
popf   
mov
xchg
mov
loop
sub
loopne
jo
push
mov
or
iret   
out
dec
iret   
adc
idivb
dec
add
stc    
dec
idivb
rorl
xor
or
call
mov
shl
mov
jp
imul
insb
push
mov
and
jp
in
aam
xor
(bad)  
fwait
sub
and
shr
out
in
(bad)  
stc    
les
enter
(bad)  
enter
jmp
int3   
int3   
add
add
add
mov
add
test
mov
lods
out
aam
pop
(bad)  
mov
test
xor
xlat
loop
lcall
imul
lret
cli    
das    
or
and
push
sbb
xchg
pop
sub
sub
test
jns
sub
lret
ret    
sub
cs lahf 
addr16 je
sbbb
icebp  
adc
inc
sar
lds
pop
jp
es add
inc
and
fnstcw
outsl
cmp
cmp
push
add
jns
push
dec
fmull
iret   
sub
lret   
jb
and
add
xor
(bad)  
leave  
jge
sub
jbe
cld    
jne,pn
mov
push
or
and
sub
inc
push
push
inc
and
dec
loop
sbb
imul
push
daa    
pop
es
push
or
pop
add
xor
loopne
loop
pop
and
and
std    
xor
(bad)  
leave  
jge
inc
ss int3 
pop
dec
add
arpl
out
mov
leave  
pop
adc
jnp
aad
xor
(bad)  
adc
data16 mov
or
cmp
in
push
or
lret
push
add
and
sub
push
jbe
push
jle
sbb
jge
xor
and
and
std    
xor
(bad)  
leave  
jge
inc
ss int3 
pop
dec
add
arpl
out
movl
(bad)  
sbb
out
addr16 sub
inc
push
push
inc
and
rclb
js
(bad)  
insb
popa   
and
(bad)  
and
and
push
add
jns
push
dec
fmull
iret   
sub
lret   
jb
and
add
xor
adc
jmp
or
rclb
addr16 je
pop
pop
sarb
fbld
jns
es repnz mov
into   
and
add
xor
sub
sub
mov
out
add
inc
dec
jae
mov
je
(bad)  
xchg
sar
sub
scas
xor
xchg
into   
(bad)  
pcmpeqd
add
enter
pop
scas
into   
xchg
jbe
push
xor
gs pop
cmp
add
mov
xor
push
jl
mov
femms  
test
ror
verr
pop
mov
pop
fildll
xchg
mov
out
pop
fnsave
add
jno
xor
retw
aaa    
imul
jp
bnd jmp
(bad)  
cmc    
jbe
sub
mull
int
inc
test
push
cmp
nop
or
cmc    
inc
sbb
andl
jo
mov
nop
mov
jge
pop
mov
aad
inc
es data16 cmp
test
add
(bad)  
sarl
lret
loopne
(bad)  
push
aam
fdivrs
mov
js
(bad)  
and
push
lds
cmp
fwait
or
aad
std    
push
dec
inc
cmp
(bad)  
movsl
mov
dec
and
push
pop
xchg
push
sbb
push
(bad)  
cmpsl
push
inc
jmp
fisttpll
imul
psrad
mov
and
in
sub
dec
and
js
cmpsl
arpl
rorb
scas
iret   
pusha  
sub
enter
cmpsl
mov
mov
and
xorb
push
es mov
adc
sub
cmc    
sub
cwtl   
and
xchg
mov
mov
or
cltd   
dec
pop
xchg
pushf  
xor
adc
hlt    
lcall
and
(bad)  
mov
mov
in
add
(bad)  
xchg
scas
xchg
adc
pop
sbb
(bad)  
int
sub
sti    
push
and
mov
pop
mov
xor
popa   
dec
(bad)  
mov
repz lret 
xchg
or
mov
push
push
sub
lahf   
cmpsb
sarl
pop
sti    
movsb
test
jns
rorb
pop
iret   
outsb
and
push
jo
ja
or
and
jle
sbb
jno
xchg
ficompl
cltd   
xor
test
fcompl
and
test
fdivr
jno
jmp
xor
lock ficompl
cmp
or
jnp
movsb
sbb
mov
hlt    
adc
lds
cmp
arpl
(bad)  
outsl
jmp
test
mov
inc
mov
mov
push
xchg
mov
inc
jnp
lods
or
pop
mov
inc
(bad)  
scas
imul
mov
sbb
ds push
inc
jg
jnp
fisttpll
enter
mov
xchg
adc
cmp
cmp
add
pushf  
jo
shrd
test
pop
jge
jmp
aas    
ror
inc
and
(bad)  
fist
mov
xchg
dec
jecxz
into   
fcompl
jp
lods
or
pop
mov
inc
(bad)  
scas
imul
pop
sbb
mov
cwtl   
mov
dec
mov
mov
add
scas
fwait
jp
fisttp
iret   
mov
cmp
mov
iret   
movsb
mov
and
js
pop
mov
je
jp
imul
(bad)  
adc
xchg
jl
and
popa   
(bad)  
call
loop
adc
aaa    
dec
cmc    
mov
(bad)  
fcoml
into   
fdivp
(bad)  
mov
fnstcw
mov
push
shll
fdivr
pushf  
mov
inc
mov
test
je
inc
jp
xlat
jle
or
jmp
aaa    
test
ss test
jne
cmc    
popf   
lahf   
pusha  
pop
not
fistp
jge
jmp
into   
mov
lea
mov
shrd
insl
xor
ret    
add
add
mov
in
mov
hlt    
or
jmp
lds
mov
and
jmp
pop
push
push
(bad)  
ljmp
dec
push
movsb
imul
pop
fimul
dec
cmp
iret   
es pusha 
xchg
repnz cmpsl
add
data16 je
out
shll
add
inc
push
and
pop
cs
test
shrl
add
adc
aam
lods
xor
xchg
arpl
or
mov
add
add
mov
out
push
mov
(bad)  
or
sti    
lds
inc
mov
test
lock adc
push
sldt
push
dec
ret
sahf   
movsl
dec
inc
aaa    
int3   
pop
pushf  
cmp
jecxz
sbb
lds
dec
mov
inc
fcmovbe
iret   
cmp
inc
push
test
mov
cmp
push
cmpsl
sub
fnop   
or
mov
push
rorb
dec
shlb
inc
add
jge
xlat
cmpsl
(bad)  
test
and
loope
jo
push
mov
sti    
pop
cld    
lods
jb
dec
dec
repnz fidiv
test
test
ds into 
outsl
nop
xor
cld    
pop
jae
mov
insb
pop
test
in
sbb
or
sub
push
std    
mov
out
xor
xchg
aad
jle
leave  
cmpsl
out
jl
push
jmp
scas
rcll
fldenv
adc
mov
cmp
pop
xchg
or
ficomp
push
xor
mov
lcall
mov
aaa    
sbb
adc
outsb
dec
inc
lods
inc
adc
rolb
popa   
in
jecxz
mov
lcall
mov
scas
cli    
lods
loop
mov
les
xor
add
push
out
xor
jp
icebp  
and
pusha  
inc
sbb
repz hlt 
popf   
popa   
xlat
fidiv
out
daa    
push
xchg
pop
mov
push
xchg
jb
mov
mov
cmp
mov
jmp
neg
js
scas
imul
mov
(bad)  
jo
mov
or
cmp
je
mov
jl
repnz hlt 
bt
outsl
nop
or
sbb
dec
movsb
ljmp
imul
pop
sub
cmpsl
sbb
stc    
mov
xlat
jno
es lret
mov
loop
dec
adc
in
jo
dec
add
mov
mov
and
stos
push
cmp
or
sub
in
mov
jae
imul
and
xchg
into   
outsl
nop
mov
mov
ret    
and
es data16 cmp
loopne
(bad)  
rol
fldt
mov
inc
sti    
push
fwait
outsl
add
cmp
sti    
ljmp
leave  
pop
test
in
inc
adc
xor
pop
inc
dec
push
movsb
imul
pop
fmull
daa    
sbb
sti    
sub
xor
pop
inc
dec
push
movsb
imul
xchg
imul
dec
ror
mov
mov
std    
push
dec
addr16 leave 
jae
movsl
dec
mov
jecxz
(bad)  
cli    
sbb
jmp
mov
lcall
mov
cmp
mov
(bad)  
outsb
dec
addb
pusha  
pop
roll
and
pusha  
fbld
jmp
(bad)  
je
jle
jnp
push
inc
pop
sbb
movsb
mov
mov
mov
in
push
cmpsl
mov
sub
mov
(bad)  
ret    
ja
movsl
add
fld
or
fmuls
mov
ret    
in
jae
push
rorb
adc
pusha  
sub
enter
cmpsl
enter
and
cmp
push
mov
out
xlat
cmp
mov
outsl
insb
pop
cmpsb
lds
or
sub
jno
mov
lods
into   
mov
faddp
cli    
mov
sub
hlt    
xor
fcompl
jae
push
rorb
outsb
aad
es fnop 
dec
test
out
cmp
sub
mov
dec
es ds cmp
imul
(bad)  {%k7}
iret   
test
in
cmpsl
push
ds fdivr
out
(bad)  
lods
or
jo
sti    
xchg
ds out
fsts
cs and
cmp
add
mov
negl
aad
pop
mov
frstor
es data16 cmp
ljmp
jo
fildll
mov
inc
aam
fsubl
jmp
(bad)  
or
(bad)  
sub
or
ret
xor
or
add
out
mov
stos
sub
jmp
dec
push
xor
dec
lods
pop
add
pop
sbbl
pop
push
jne
fwait
test
lods
mov
(bad)  {%k7}
lock inc
cmp
iret   
movsb
cmp
loope
sub
cltd   
add
ds inc
cmp
jp
int
adc
jnp
je
popf   
push
push
icebp  
int
sub
cmpsl
jne
scas
cltd   
std    
aam
xor
incb
fcompl
or
cld    
pop
imul
movsl
test
add
dec
pop
add
popf   
test
cmp
(bad)  
cmp
xchg
or
repz test
mov
push
rorb
loop
pusha  
push
lahf   
sub
or
das    
out
lret   
(bad)  
push
jno
mov
daa    
shll
lret
sbb
int3   
pop
dec
into   
loop
scas
sub
cmp
out
dec
add
xchg
mov
mov
test
(bad)  
out
xchg
dec
pushf  
hlt    
mov
out
adc
mov
or
(bad)  
fwait
sub
and
mov
xchg
out
xlat
(bad)  
lret   
loope
(bad)  
out
xlat
iret   
pushf  
je
(bad)  
out
xlat
iret   
sbb
(bad)  
xor
jp
(bad)  
std    
test
add
mov
sub
lcall
call
cld    
jle
push
sti    
add
scas
in
adc
adcl
enter
lds
cmp
and
dec
mov
mov
(bad)  
cmc    
adc
lahf   
xor
cmc    
psllq
jmp
dec
mov
aaa    
ss mov
push
fdivl
stos
add
jae
xor
jb
mov
xor
xor
dec
push
roll
xchg
mov
lods
ret
mov
enter
lret   
xchg
pop
enter
out
cltd   
sub
pop
pop
adcl
enter
xchg
sbb
enter
add
sbb
popa   
mov
add
sbb
out
popf   
js
push
imul
inc
push
mov
cmp
test
cmp
xchg
add
mov
jns
daa    
repnz aaa 
(bad)  
nop
imul
aam
sub
pop
jbe
rorb
mov
rol
xchg
mov
xor
dec
jbe
add
lock cmpsl
pop
xchg
subl
(bad)  
or
cmp
pop
xor
xchg
insb
sbb
xor
mov
or
sub
or
jg
inc
(bad)  
negl
mov
lcall
popl
mov
push
sub
je
mov
mov
add
add
test
icebp  
in
pop
insb
pop
rorb
or
sub
sub
fwait
xor
repz lret 
jecxz
cmpsl
dec
ljmp
dec
sbb
js
xor
pop
lods
shr
int3   
mov
adc
lret   
popa   
sbb
mov
jmp
fnsave
lods
insb
orl
mov
push
push
dec
in
jecxz
pop
mov
cmp
or
jle
push
adc
mov
imul
cmp
pop
mov
outsl
sti    
and
sti    
sbb
ds
out
and
push
mov
sub
mov
sti    
test
mov
les
mov
jo
inc
add
lcall
les
jl
sbb
dec
xor
clc    
jecxz
jp
inc
lahf   
mov
inc
sub
dec
arpl
mov
jmp
cmp
push
and
rcll
out
inc
mov
sbb
iret   
movsb
fisttp
call
sbb
adc
outsb
and
test
daa    
rcll
loope
xchg
cmp
inc
inc
jno
es
out
dec
sahf   
mov
jmp
push
dec
inc
pop
inc
adc
dec
repz hlt 
(bad)  
sbb
pop
push
lds
cmp
(bad)  
mov
sub
or
cmp
out
cmp
sbb
mov
push
dec
lret
cltd   
cmp
sbb
dec
xor
test
mov
(bad)  
xor
outsl
imul
xchg
dec
jmp
mov
jne
fcomps
into   
add
xchg
mov
xchg
xor
(bad)  
mov
test
pushf  
or
cmp
xchg
add
stos
inc
fistl
jns
mov
push
ret
xor
xlat
cmpsl
xor
out
mov
or
jo
jnp
jns
rorb
jbe
pop
jmp
in
and
inc
lahf   
sub
or
into   
(bad)  
jmp
jecxz
outsb
xchg
js
dec
mov
mov
add
scas
fmuls
inc
repnz in
decb
test
call
push
sub
push
xchg
loop
push
push
imul
repz aaa 
enter
adc
cmpsb
fcomip
mov
movsb
hlt    
sbb
mov
push
das    
fcomp
adc
ret
lock add
mov
rcl
lcall
addr16 adc
les
je
push
inc
or
dec
pop
and
inc
push
inc
int3   
pop
jg
xchg
pop
arpl
cltd   
add
inc
ljmp
xor
inc
inc
leave  
imul
and
and
or
les
jecxz
loope
cwtl   
pop
xchg
mov
dec
push
dec
ljmp
out
mov
loopne
push
or
fdivr
icebp  
cmp
sub
insl
in
aaa    
mov
cmp
test
scas
lea
test
cmpsl
imul
push
push
inc
dec
daa    
jae,pt
xchg
data16 fsubrs
insl
(bad)  
jbe
andl
(bad)  
jge
in
cmp
rolb
add
and
dec
leave  
fcompl
and
test
and
in
xchg
sbb
shl
aaa    
test
loope
mov
push
sldt
test
fs lcall
test
test
ds into 
outsl
nop
or
jl
pop
mov
out
and
es data16 cmp
loopne
pop
imul
sti    
xchg
xchg
loop
lods
or
outsb
jnp
sub
xor
fcompl
(bad)  
neg
stc    
cmp
cmpsb
adc
mov
fs xor
push
sti    
sbb
ds popf 
(bad)  
mov
sub
fwait
xor
push
sti    
sbb
lds
pop
jns
sti    
enter
movsb
mov
pop
clc    
xchg
add
push
fsubl
into   
mov
stc    
cltd   
or
inc
test
iret   
adc
sahf   
(bad)  
call
fisubr
outsl
jns
xchg
push
cwtl   
mov
xchg
push
iret   
cs mov
adc
and
(bad)  {%k7}
jmp
test
mov
mov
(bad)  
mov
or
add
pop
mov
sub
out
push
mov
push
xchg
fist
mov
(bad)  
jns
pop
cmp
sahf   
add
in
ljmp
(bad)  
scas
sub
loopne
es
addr16 jns
(bad)  
jbe
cld    
test
je
adc
pop
addr16 jns
mov
std    
pop
jne
mov
hlt    
xchg
repz or
mov
sbb
out
push
push
lods
mov
cmpsl
mov
sbb
les
jbe
mov
stc    
mov
jno
sub
into   
and
(bad)  {%k7}
(bad)  
gs in
adc
mov
cmpsl
jno
arpl
and
pop
and
ret    
pop
shll
sub
cmpsb
sbb
aam
data16 jae
sub
push
das    
jno
imul
add
out
icebp  
adc
mov
jle
dec
sbb
mov
movl
(bad)  
cmpsb
mov
cmpsl
cmp
fmul
clc    
popf   
dec
push
push
xchg
(bad)  
cld    
pop
mov
cltd   
or
pop
push
sbb
jg
lcall
mov
inc
mov
sbb
push
aaa    
mov
pop
push
sbb
jg
lcall
mov
rorl
and
mov
mov
and
(bad)  
mov
mov
adc
movsl
push
lods
sub
inc
mov
aaa    
out
push
xlat
push
jnp
xorps
iret   
(bad)  
(bad)  
mov
jge
inc
stc    
pmaxsw
in
ljmp
and
shrb
jbe
push
mov
fidiv
repnz pop
jge
sbb
out
ror
out
xlat
mov
into   
xorl
fidivr
lea
inc
adc
xchg
mov
les
(bad)  
adc
mov
push
ja
loopne,pt
repnz xchg
jae
add
pushf  
imul
dec
mov
adc
jle
dec
sbb
mov
movl
dec
fistpl
adc
mov
loope
xor
push
test
fmul
insb
mov
and
mov
push
xchg
xchg
add
arpl
cwtl   
jno
xchg
ficompl
cmp
cmp
bound
pop
jae
mov
sub
xchg
inc
icebp  
sbb
adc
xchg
mov
pop
dec
xchg
fsub
pop
jge
imul
xchg
nop
or
jbe
lock inc
(bad)  
mov
lods
jno
vhsubpd
push
pop
cmp
xor
hlt    
clc    
xchg
mov
xchg
pop
fmull
aaa    
dec
cmc    
mov
sbb
sub
xchg
jnp
adc
neg
pop
and
jp
in
fmul
cs push
popf   
mov
stos
push
sti    
out
jl
and
fs mov
not
mov
lea
fcoml
into   
(bad)  
hlt    
clc    
xchg
mov
out
pushf  
mov
jmp
inc
orl
fnsave
mov
pusha  
xor
cwtl   
out
rorb
sbbl
jno
dec
cli    
cltd   
dec
pop
pushw
mov
ds pop
out
sub
mov
fsubs
xchg
call
lahf   
(bad)  
(bad)  
jo
cmp
push
adc
aad
pusha  
lahf   
addr16 nop
repz imul
ret
mov
jns
into   
lahf   
nop
cmp
dec
(bad)  
arpl
into   
add
popa   
popa   
js
xchg
sub
mov
pop
mov
jo
into   
addr16 nop
jbe
jbe
cs call
push
sub
cmp
subb
jge
imul
xchg
pop
cmc    
pop
in
cmp
cltd   
nop
cmp
aam
cs call
push
add
cmp
int
mov
jae
jnp
cltd   
add
inc
ljmp
xor
inc
inc
dec
sbb
fmuls
mov
icebp  
add
rcl
ja
mov
jne
je
mov
jnp
push
sbb
add
mov
outsb
fcoms
cwtl   
add
fdivl
sub
jnp
fdivrs
add
pop
pop
adc
pop
imul
dec
mov
mov
addr16 nop
jl
xchg
imul
loopne
mov
and
mov
ficompl
lahf   
iret   
addr16 nop
mov
cld    
pop
imul
and
mov
inc
jnp
mov
mov
add
scas
enter
dec
repnz cmpsl
cmp
add
in
jmp
int
jmp
mov
inc
xor
mov
cld    
lods
jb
dec
dec
repnz fidiv
test
test
ds into 
outsl
nop
mov
cld    
pop
jae
push
pop
mov
stc    
stc    
mov
mov
imul
cmp
sub
cltd   
add
push
(bad)  
hlt    
push
(bad)  
(bad)  
fdivr
inc
divb
jae
mov
mov
push
push
sti    
sbb
lds
pop
popa   
adc
mov
mov
pop
push
mov
jecxz
cmc    
ficomp
pop
dec
(bad)  
fwait
dec
pop
jns
mov
xlat
fldt
movsl
push
lods
pop
lahf   
inc
aaa    
mov
and
imul
inc
pop
jmp
add
lods
(bad)  
xor
mov
mov
iret   
movsb
dec
cmp
sbb
aad
pop
rclb
and
adc
jb
out
dec
imul
pop
mov
xchg
(bad)  
movsl
adc
mov
cltd   
pop
xor
xchg
pop
sbb
fdivrs
cltd   
rorb
or
pop
stos
sbb
or
mov
or
js
mov
or
mov
sub
daa    
loope
mov
out
cld    
sbb
or
sub
js
add
cld    
cmpsb
dec
scas
test
inc
sub
iret   
movsb
aad
sti    
icebp  
add
data16
push
jg
inc
mov
fs fdivr
or
dec
test
outsl
pop
add
adc
xchg
adc
jnp
fsubl
orb
aam
or
push
cmp
cli    
or
in
popa   
add
or
(bad)  
sbb
xchg
in
les
ficom
push
jae
popf   
jne
aam
cmp
push
fidivl
les
aam
call
and
push
mov
jnp
std    
popf   
icebp  
test
xorb
movsb
stos
mov
jae
ds rcl
(bad)  
fwait
cmpsl
xchg
xchg
sub
sbb
sub
decb
and
aam
cmp
repz out
rol
(bad)  
jge
xchg
mov
std    
jle
mov
inc
mov
es inc
cwtl   
out
inc
out
xor
sub
loopne
push
jns
mov
xor
sti    
stc    
mov
out
xor
loop
cmpb
(bad)  {%k7}
ljmp
push
push
dec
(bad)
mov
jb
jns
mov
(bad)  
mov
cmp
shr
pushf  
out
aad
les
adc
out
fucom
mov
cmpsl
or
cmp
mov
jnp
adc
pop
jecxz
add
pop
push
fisttpl
iret   
mov
jp
outsl
scas
int
and
in
rcrb
std    
mov
test
aas    
dec
jl
rcr
xchg
jnp
adc
pop
negb
idiv
cmp
inc
pop
and
in
out
(bad)  
fwait
sub
and
ret
inc
call
mov
xor
push
out
or
fs
enter
xor
jl
and
addr16 mov
pop
inc
mov
or
imul
fsub
mov
(bad)  
addr16 cs
movsl
lock call
std    
push
or
dec
sub
adc
xchg
nop
jo
aad
les
fmull
les
js
cmp
lret   
scas
loopne
mov
neg
mov
mov
pop
bound
stos
and
(bad)  
int
mov
mov
imul
mov
dec
pushf  
in
shl
xor
mov
movsl
(bad)  
xor
and
push
std    
mov
and
fdiv
xchg
pop
aas    
mov
add
mov
mov
xchg
xchg
mov
(bad)  
cmp
test
add
sbb
cmpsl
aam
cmp
stos
ljmp
dec
jo
mov
stos
push
jg
test
popf   
popf   
faddp
mov
daa    
dec
(bad)  
mov
hlt    
hlt    
pop
adc
shl
cltd   
mov
push
outsl
cmp
loope
test
ret
jle
divl
mov
sbb
mov
cmp
and
pop
xor
push
jns
jb
loopne
(bad)  
or
fdivrl
sbb
mov
pop
popa   
out
pusha  
or
(bad)  
(bad)  
jne
insb
cmp
xchg
push
mov
cmpsb
(bad)  
add
and
movsl
lahf   
cmpb
add
aad
int3   
repnz xor
push
in
push
pop
or
xor
mov
repnz fcompl
mov
rolb
or
lret
leave  
fcompl
sub
iret   
movsb
mov
and
js
jmp
cld    
inc
xor
cmpsb
mov
fwait
sub
and
int3   
out
loop
xor
jg
loope
mov
aaa    
dec
decl
jb
xor
and
push
mov
add
adc
adc
fwait
sub
and
shr
mov
xor
jp
add
inc
in
iret   
mov
jp
bound
adc
jb
repz int
jns
dec
outsb
push
mov
dec
cmc    
mov
sbb
sub
xchg
jnp
adc
pop
enter
(bad)
dec
testl
add
sti    
fucomp
lahf   
addr16 je
addr16 inc
sub
pop
shrb
(bad)  
ret    
xor
jecxz
test
int
mov
sub
in
sub
fnsave
add
es sub
or
les
jecxz
cli    
push
sbb
in
popf   
lods
repz dec
hlt    
xchg
jl
sub
nop
and
mov
loopne
or
sbb
std    
sahf   
jl
inc
sbb
ret
pop
push
mov
test
orb
or
fstpt
mov
jne
jae
test
popa   
add
ljmp
pop
ss mov
xor
adc
aam
int3   
push
pop
loope
(bad)  
cmpb
(bad)  {%k7}
ljmp
pusha  
push
push
aad
mov
jb
jns
mov
push
jb
scas
add
in
sub
fxch
leave  
fwait
(bad)  
and
out
(bad)  {%k7}
out
add
lds
mov
push
adc
aaa    
dec
cmc    
mov
sbb
sub
xchg
jnp
adc
neg
ds in
xchg
adc
dec
xchg
in
push
push
or
mov
sub
push
mov
iret   
fstpl
mov
fdivrs
test
pop
dec
ljmp
(bad)  
int
(bad)  
or
mov
cwtl   
(bad)  
movsl
lock call
push
xchg
mov
loop
pop
adc
enter
dec
dec
pushf  
fsubrs
inc
int3   
jg
inc
add
push
push
mov
imul
jp
jne
inc
es data16 cmp
out
jmp
mov
sti    
fisubr
mov
aam
mov
in
rcrl
dec
stos
sti    
and
xchg
outsb
(bad)  
mov
mov
mov
rorl
and
test
inc
in
push
add
dec
aad
push
xor
mov
mov
push
jmp
jbe
sub
mov
push
or
jge
jns
je
hlt    
mov
mov
inc
into   
stos
mov
xchg
push
and
sub
xchg
loope
dec
cltd   
cmp
rcrl
repz sahf 
or
xchg
pop
std    
cwtl   
sbb
fwait
adcl
push
dec
cld    
mov
xor
jl
inc
cwtl   
out
inc
fsts
scas
sbb
movsl
push
jmp
cmpsb
jmp
pop
fisubl
jbe
sub
mov
dec
fsts
inc
(bad)  
mov
jne
popl
add
insl
outsl
or
sbb
cmpsl
in
popf   
sbb
lcall
test
mov
adc
lods
adc
mov
cmp
mov
insb
push
les
out
mov
adc
faddl
arpl
sub
pop
incb
lods
adc
push
pusha  
(bad)  
je
sub
jne
into   
jg
bound
daa    
or
mov
call
mov
in
stos
jle
fild
xchg
xor
push
rcrb
aas    
sbb
push
inc
scas
sbb
jb
mov
andb
arpl
(bad)
mov
ss inc
push
pop
daa    
shll
xchg
rorb
pop
cmpsl
in
xor
sahf   
jo
xchg
jg
lcall
mov
lahf   
cmp
loope
sub
pop
enter
pop
inc
push
and
gs inc
or
inc
inc
out
jp
push
mov
cltd   
dec
jp
aaa    
xchg
outsl
pusha  
sub
divb
xlat
cmpsl
xchg
cltd   
lods
cmpsl
or
and
sub
(bad)  
mov
or
xchg
ljmp
inc
rcl
dec
leave  
pop
jg
and
dec
pop
mov
mov
dec
cwtl   
jbe
shr
(bad)  {%k7}
aam
lods
adc
in
fimull
mov
jp
std    
pop
jno
(bad)  
loopne
pop
sbb
xor
inc
pop
mov
addr16 xchg
lods
mov
js
faddl
adc
cmpsb
jmp
pop
loop
pop
imul
ret
mov
cmp
xchg
imul
iret   
pop
push
je
fbld
mov
ds pop
or
mov
jo
mov
mov
push
pop
js
test
pop
fstps
xor
lahf   
dec
add
jle
mov
cmp
jnp
inc
xlat
dec
pop
int
xchg
add
or
test
mov
jl
sub
cmp
ficoml
rolb
ficompl
and
dec
ljmp
inc
clc    
rolb
data16 stc 
inc
push
xchg
dec
mov
lea
xchg
inc
cs lcall
jb
ljmp
dec
sub
inc
pop
mov
test
decb
xor
jge
cltd   
jnp
rorl
push
dec
push
mov
sub
in
push
lods
adc
hlt    
fistpll
push
(bad)  
mov
adc
and
cmp
stc    
inc
fisubl
add
sahf   
or
rcr
xchg
and
sbb
stos
mov
pop
xor
cmp
push
iret   
cld    
pop
jne
fdivl
xchg
outsl
pusha  
sub
adc
xlat
cmpsl
movsw
jmp
or
and
sub
fldcw
(bad)  
pmaxsw
mov
mov
test
pop
int3   
inc
rcl
dec
leave  
pop
jg
data16 gs jae
pop
pop
mov
dec
lea
ja
mov
(bad)  {%k7}
aam
lods
push
mov
pop
fimull
mov
jp
std    
pop
jno
(bad)  
loopne
loop
aas    
enter
jo
ss in
inc
pop
mov
addr16 xchg
lods
into   
pop
mov
faddl
sahf   
cmc    
jp
adc
repz sahf 
or
fwait
sar
sub
push
ret
adc
mov
or
(bad)  
sub
or
aaa    
cli    
xchg
mov
and
lods
xor
pop
iret   
out
es jle
jns
xchg
pop
and
das    
insb
(bad)  
or
push
(bad)  
insb
lret   
ja
add
sub
dec
mov
mov
inc
dec
(bad)  
loopne
mov
push
iret   
popf   
or
dec
pop
leave  
mov
hlt    
popf   
movb
cmp
stc    
jo
xchg
jg
lcall
sub
aaa    
stos
xchg
cmpsl
insl
outsl
pusha  
bound
stc    
js
and
rcrl
mov
repz sub
push
mov
mov
sub
std    
scas
push
stc    
sbb
(bad)  
cmp
dec
sub
in
push
imul
sbb
jp
jl
lahf   
lea
out
xchg
jbe
xor
in
and
shrl
mov
cmp
inc
clc    
rolb
cmp
mov
shl
sub
mov
xor
adc
pushf  
adc
sbb
inc
adc
mov
inc
sub
fmulp
movsb
dec
xor
push
jmp
push
push
jnp
xor
cwtl   
sub
jns
mov
or
data16 jge
imul
push
in
into   
jg
mov
not
jge
dec
dec
pop
not
jbe
push
dec
push
negb
cwtl   
jno
xchg
ficompl
cltd   
jae
shl
into   
iret   
scas
stos
movl
mov
pop
cmp
daa    
(bad)  
cwtl   
push
sbb
inc
xchg
loop
push
push
imul
xlat
ds inc
stos
mov
cltd   
fmul
(bad)  
(bad)  
std    
and
xor
jne
aaa    
aas    
or
pop
inc
pop
dec
fadd
push
sarl
push
iret   
sub
or
out
xlat
fldt
mov
aaa    
mov
pop
es mov
cli    
(bad)  
xchg
out
jl
and
pusha  
(bad)  
out
xlat
lahf   
mov
sub
dec
testl
xor
test
dec
adc
aaa    
jl
mov
aas    
inc
sahf   
sti    
rol
enter
xchg
(bad)  
and
imul
fmuls
push
lcall
repz aad
or
imul
or
ss sahf 
test
jp
push
stos
jecxz
(bad)  
jnp
test
mov
ja
push
add
and
adc
or
mov
hlt    
jmp
inc
inc
push
inc
pop
sub
adc
iret   
fcoml
lock
hlt    
jmp
inc
or
aaa    
dec
sti    
mov
add
pop
(bad)  
out
jl
and
retw
testl
aaa    
dec
sti    
mov
push
call
(bad)  
out
jl
and
pusha  
(bad)  
out
xlat
cmp
dec
adc
aaa    
dec
cmc    
mov
fst
clc    
fcoml
mov
hlt    
stc    
jo
mov
mov
ret
push
inc
and
jno
mul
cmp
cmp
inc
push
cmp
test
popaw  
jle
dec
or
push
add
add
xchg
out
cmp
sub
stos
mov
fwait
in
repz xchg
mov
fsubrl
inc
push
dec
adc
xor
push
push
add
and
aam
jmp
pop
imul
and
push
jl
bound
add
push
push
jno
cwtl   
adc
aaa    
dec
jecxz
(bad)  
or
jo
or
aad
hlt    
imull
push
xchg
adc
pushl
sti    
xchg
ds out
fsts
push
mov
loop
into   
xchg
cwtl   
rep movsl
mov
cmp
jg
inc
es data16 cmp
out
jmp
mov
sti    
gs fmulp
xchg
add
mov
cmpsb
inc
xchg
aad
les
or
into   
aaa    
lods
sub
repnz adc
dec
test
fnstenv
xor
add
aad
cmc    
or
adc
cmpsl
xor
(bad)  
repnz add
jecxz
xchg
xor
into   
add
lds
inc
jno
mov
jne
jns
rorb
ret
sub
in
jmp
aam
and
sbb
es mov
loope
aas    
xor
or
repnz xlat
pop
test
xlat
iret   
mov
jp
gs stos
repz fdivrl
int3   
cld    
xchg
sbb
hlt    
stc    
adc
pushf  
pop
cltd   
xor
mov
rclb
pop
jg
mov
pop
fmulp
mov
mov
pop
pop
pop
mov
add
cmp
jbe
xor
xchg
add
mull
pusha  
jg
fmulp
mov
mov
pop
pop
pop
mov
add
popa   
sub
lea
faddl
mov
and
mov
cltd   
xlat
ds inc
stos
mov
cltd   
fmul
(bad)  
(bad)  
std    
and
xor
push
push
add
cmpsb
les
add
mul
xchg
lds
sbb
adc
cmp
sub
(bad)  
cld    
cmp
sub
stos
mov
fwait
in
repz xchg
mov
fsubrl
inc
push
dec
adc
xor
push
push
add
and
aam
jmp
pop
imul
and
push
jl
bound
add
push
push
cmc    
hlt    
ljmp
pop
repnz lret
jmp
fnstsw
push
dec
push
push
lds
cmp
inc
adc
mov
inc
pop
dec
ljmp
(bad)  
int
shrl
addl
loop
add
sub
rorb
xor
jmp
mov
xor
inc
inc
js
sub
xchg
sub
andl
(bad)  
mov
mov
add
sub
xor
mov
xchg
push
rorb
jns
lods
leave  
(bad)  
mov
arpl
mov
xchg
adc
in
jae
jae
repz and
mov
dec
daa    
sub
adc
inc
sub
gs cli 
push
pop
xchg
mov
adcl
imul
push
xor
pop
jecxz
pusha  
mov
add
clc    
jp
push
xor
pop
jecxz
call
mov
lds
push
daa    
fsub
in
lahf   
arpl
adc
nop
jae
add
fucom
pop
jecxz
jb
popa   
lods
adc
fcmovne
in
jae
incb
and
je
outsl
(bad)  
aam
loope,pn
mov
icebp  
stos
push
lods
pop
mov
mov
fdivl
mov
out
js
idiv
out
arpl
(bad)  
stc    
add
mov
lock addr16 mov
sarl
(bad)  
cmpsb
sbbl
aam
addr16
(bad)  
loope
shl
mov
aam
addr16 xchg
(bad)  
icebp  
jl
out
xchg
into   
addr16
mov
jl
push
movsl
xchg
mov
jge
orl
sbbl
fs mov
mov
popf   
add
push
imul
jge
cmpsl
daa    
push
sbbl
and
addr16 push
sub
(bad)  
xor
in
addr16 out
gs jge
cmp
xchg
sub
jno
fnop   
xchg
cmc    
jae
shrl
adc
mov
push
rorb
mov
popa   
sub
fldcw
and
adc
and
fcompl
sbb
adc
aad
push
dec
ja
stc    
dec
adc
aaa    
dec
stc    
mov
sub
push
or
(bad)  
xor
or
in
xlat
or
test
(bad)  
lock fdivrl
ja
and
or
in
stos
iret   
push
movsl
add
orl
adc
xchg
jp
(bad)  
jae
pop
pushf  
xchg
cs inc
(bad)  
fwait
sub
and
mov
adc
pop
and
jp
in
stos
iret   
pop
lods
sbb
or
fcoml
into   
fdiv
int
mov
lahf   
jg
and
(bad)
and
ret    
out
in
cli    
jnp
mov
(bad)  
scas
aam
and
cmpsb
(bad)  
xlat
iret   
sub
cmc    
pop
push
push
verr
cli    
sti    
xchg
ds out
(bad)
jae
sub
neg
je
jnp
push
sbb
es out
cwtl   
mov
lods
xor
inc
cmp
mov
loop
sbbl
out
nop
push
cmp
adc
cld    
pop
jmp
sbb
gs daa 
test
stos
pop
mov
ficompl
xchg
insl
cwtl   
pop
and
dec
outsb
push
mov
mov
les
cmp
lret
ds out
cmp
mov
push
punpcklwd
(bad)  
fisttpl
and
or
push
jae
or
sub
cltd   
xchg
pavgb
out
xchg
mov
inc
out
addb
add
loop
andb
pop
mov
popf   
mov
xor
sahf   
icebp  
lahf   
xchg
xchg
xchg
fdivl
and
popa   
mov
in
xchg
adc
shlb
mov
cmc    
leave  
adc
aaa    
test
fimull
cmpsb
push
fadds
xor
cwtl   
sub
cmp
sbb
stos
pusha  
mov
std    
sbb
push
jecxz
jp
fldl2e 
mov
pop
out
ss mov
add
(bad)  {%k7}
stc    
cmpl
xchg
repz in
cmpb
inc
fldenv
adc
cmpsl
loopne
(bad)  
cmp
je
jae
cmp
pusha  
jo
test
pop
inc
cmp
push
out
out
out
xor
inc
xchg
icebp  
mov
jmp
test
pop
clc    
push
or
(bad)  
add
in
cmp
jmp
ret    
mov
jae
inc
sub
jg
rclb
fbld
mov
inc
gs dec
mov
call
(bad)  
movsb
sbb
jge
or
pusha  
ror
mov
cwtl   
push
cltd   
mov
les
mov
push
jo
nop
les
mov
dec
mov
stos
sub
das    
add
(bad)  
js
pop
lret   
push
or
or
jbe
push
out
sub
js
addr16 aaa 
mov
add
sbb
fbld
cmp
fsubs
ret
pop
ret    
xchg
xlat
sbb
cmpsb
push
movsb
xor
rcrb
mov
sahf   
sbb
decb
hlt    
insb
jne
cmp
popa   
rorl
push
lahf   
push
jbe
or
xor
or
in
jmp
inc
fcmovbe
add
mov
je
mov
and
mov
pop
push
cltd   
cmpsl
and
js
dec
pop
add
inc
push
fxch
mov
stc    
jnp,pn
jns
rorb
arpl
sub
xlat
cmpsl
push
testl
push
jnp
lock sbb
dec
inc
sbb
aas    
fldenv
sub
mov
xor
testb
pushf  
jnp
jbe
and
mov
mov
xor
xchg
cs call
push
aas    
push
pop
xchg
loop
push
push
imul
xlat
iret   
fdiv
mov
repnz ror
(bad)  
(bad)  
mov
loopne
int
out
shr
not
cld    
mov
sar
mov
in
rcrl
or
icebp  
stos
iret   
add
sub
lock jnp
adc
dec
in
pop
ja
in
dec
adc
aaa    
mov
mov
and
cmp
std    
xor
popf   
cmp
sub
repnz xor
sub
and
shr
lods
(bad)  
stos
mov
jnp
aas    
inc
mov
xor
ds iret 
mov
jp
gs stos
repz fdivrl
sub
hlt    
popf   
cmp
sub
aaa    
dec
sub
aaa    
and
ret    
out
in
inc
call
inc
lds
ss mov
xlat
iret   
mov
jp
pop
stos
sti    
fsubl
lea
jmp
and
pop
inc
sbb
ljmp
int
in
rcrl
(bad)  
out
cmpsb
mov
sub
mov
iret   
mov
jp
fs
enter
xor
jl
and
popa   
(bad)  
call
mov
jecxz
inc
xchg
pop
pop
add
add
test
lret   
fwait
cwtl   
pusha  
and
movsl
outsb
and
es data16 cmp
ljmp
lea
dec
aaa    
jecxz
lret   
push
adc
stc    
lods
mov
dec
jbe
xor
call
inc
mov
inc
mov
xchg
clc    
xor
xchg
fisubl
inc
aaa    
jecxz
lret   
or
mov
in
push
daa    
iret   
movsb
jne
pop
lock add
mov
xchg
inc
lahf   
adc
leave  
(bad)  
mov
mov
std    
cmp
jecxz
lret   
ds push
xchg
jno
stc    
dec
cwtl   
pop
adc
movsb
jbe
mov
data16
call
pop
imul
push
mov
negb
std    
push
jecxz
pop
mov
jp
or
rolb
dec
aam
xchg
dec
nop
xor
fsub
jo
adc
(bad)  
std    
mov
loop
les
add
mov
dec
call
sub
mov
loope
and
mov
mov
xor
xchg
xchg
xchg
fsub
pop
dec
lret   
repnz decl
clc    
std    
(bad)  
jns
dec
sub
push
jge
pop
jbe
in
xlat
enter
(bad)  
not
cmp
mov
es pusha 
jp
phaddwq
in
jp
std    
xchg
push
xchg
scas
add
adc
jl
xor
pop
jecxz
repnz and
test
or
(bad)  
fidivl
pop
sbbl
testl
pop
dec
sub
fwait
mov
hlt    
adcb
js
xor
(bad)  
or
xor
rcr
stc    
loop
mov
mov
or
mov
sub
xchg
(bad)  
cld    
outsb
mov
(bad)  
jecxz
add
(bad)  
stc    
popf   
mov
sub
rcr
stc    
mov
mov
and
fldt
testb
push
(bad)  
lods
pop
jae
mov
jmp
inc
je
sub
movsl
add
out
aad
mov
arpl
mov
xor
jl
jns
dec
jmp
std    
lahf   
mov
mov
into   
sub
inc
movsb
scas
test
sahf   
dec
cwtl   
loop
sub
mov
sub
out
cmp
popa   
nop
mov
in
jae
dec
xchg
jmp
std    
stos
pusha  
xor
les
andl
fcoms
xor
push
push
imul
test
test
jns
or
mov
push
punpcklwd
mov
test
push
bound
cwtl   
mov
pop
dec
ljmp
(bad)  
int
shll
push
push
fiadd
arpl
adc
nop
mov
cld    
mov
dec
push
or
(bad)  
in
ficompl
cmpsb
imul
sub
mov
fiadd
jge
ss loope
lcall
inc
pop
adc
nop
pop
fisttpl
orl
jle
cmpsl
xchg
xchg
gs xor
mov
mov
loop
and
mov
stos
sbb
insl
pop
sbb
(bad)  
jb
mov
daa    
mov
adc
(bad)  {%k7}
fmulp
mov
in
cmpsb
push
push
subb
roll
(bad)  
loopne
andl
mov
push
test
xchg
sbb
inc
pop
dec
fstl
cmpsb
and
stos
xchg
xor
xor
fs int
(bad)  
fsub
insb
imul
scas
mov
jae
sub
je
lret
cwtl   
loop
mov
repz sbb
inc
mov
inc
jecxz
and
xchg
jbe
scas
out
mov
add
fsub
mov
out
stos
lock sar
mov
out
add
(bad)  
jb
data16
dec
or
jae
xchg
sti    
arpl
xor
iret   
and
push
decl
orps
adc
aad
(bad)  
push
lds
fiadd
cs and
pop
mov
mov
data16 cmp
loopne
outsb
pop
jbe
divb
and
pop
jbe
iret   
scas
jo
xlat
hlt    
int3   
push
add
test
push
iret   
pop
iret   
fwait
xor
cmp
call
loop
add
inc
dec
or
pop
cmp
and
add
add
inc
jae
into   
or
loopne
cmp
jecxz
jp
(bad)  
outsb
sub
mov
cmovae
ds and
mov
mov
adc
sbb
dec
or
enter
sub
adc
test
xlat
cmpsl
sahf   
movsb
popf   
subb
(bad)  
imul
(bad)  
mov
adc
test
movsb
push
dec
xor
mov
pop
xor
dec
and
fcomps
sub
sub
mov
inc
ret
xchg
mov
xchg
stc    
xchg
ljmp
xor
mov
jmp
cmp
lea
subl
test
rcrl
outsb
mov
xchg
jnp
adc
dec
sbb
inc
dec
jae
xor
iret   
stos
ss jne
inc
push
dec
data16 aaa 
cmc    
xor
push
jl
add
push
je
push
(bad)  
negb
sbb
or
gs push
mov
cwtl   
cwtl   
sub
ds sub
push
iret   
mov
jp
push
into   
fdivl
sarl
xorl
inc
cmpsb
sbb
sub
add
enter
js
mov
push
add
adc
xchg
adc
into   
(bad)  
enter
mov
insb
pop
repz
push
push
jae
or
sub
pop
lea
fisubr
jno
pusha  
das    
mov
sub
xor
outsb
ret    
(bad)  
fsin   
mov
loop,pt
fmul
mov
mov
popa   
adc
stc    
mov
popa   
sbb
loope
jmp
push
out
sti    
push
fisubrl
lret
mov
test
movsl
mov
or
xchg
ds push
lahf   
inc
pop
and
or
adc
dec
orl
rorb
pop
adc
adc
cmp
adc
ficoml
lock add
stos
xor
add
jge
xlat
cmpsl
addr16 nop
in
loop
into   
push
pop
jns
sub
int3   
aam
inc
pop
jns
mov
mov
dec
test
into   
push
pop
jns
ret    
jns
xor
call
push
push
(bad)  
test
imul
int
add
inc
in
test
add
invlpg
fdivrp
in
fs std 
(bad)  {%k7}
(bad)  
cltd   
dec
pop
jns
mov
pop
lahf   
dec
test
(bad)  
inc
pop
jns
xor
arpl
and
jns
ss xor
jg
rcr
out
adc
xchg
loop
mov
out
dec
int
fstpt
jg
dec
repz push
jge
push
inc
dec
adc
aaa    
mov
mov
cmp
push
inc
push
inc
dec
push
add
loopne
popf   
cmp
sub
fmuls
push
jns
inc
pop
lds
fcoml
into   
fdivp
(bad)  
mov
fnstcw
mov
lret
mov
cltd   
push
cmp
dec
rorb
pop
jg
bound
enter
test
mov
pop
dec
fmulp
mov
mov
mov
enter
push
arpl
pushf  
dec
fmulp
mov
mov
mov
enter
clc    
arpl
pusha  
dec
fmulp
mov
mov
adc
js
cwtl   
popf   
xor
sbb
dec
xchg
rcll
cmp
loope
jne
dec
xor
pusha  
jbe
cmp
imul
push
es dec
popa   
aas    
test
jnp
inc
sub
adc
test
cld    
mov
sti    
inc
dec
jae
xor
or
fcoml
enter
push
fadds
pop
jo
xor
sbb
mov
jp
push
into   
fmul
cltd   
xor
push
jl
mov
cmp
sub
xchg
in
xor
push
cmp
aas    
arpl
aaa    
scas
aam
xor
or
not
aas    
inc
out
inc
jbe
jge
out
(bad)  
fwait
sub
and
(bad)  
(bad)  
insb
addr16 inc
dec
(bad)
pop
and
jp
in
aam
(bad)  
xchg
mov
and
int
jmp
cmp
iret   
mov
push
sbb
jmp
xor
ficompl
pusha  
jp
cmpsb
(bad)  
sbb
pop
aaa    
and
loop
and
outsb
lods
mov
(bad)  
jb
and
in
in
and
add
lahf   
cmp
out
test
mov
jmp
sbb
and
test
push
inc
inc
or
punpckhdq
(bad)  
out
inc
pusha  
ret    
test
mov
stos
orl
hlt    
stc    
pop
faddl
push
sub
add
arpl
out
movl
xor
sbb
mov
out
jns
xchg
iret   
and
ror
xor
pop
std    
xor
cli    
pop
mov
rcr
add
jb
lea
mov
flds
(bad)  
hlt    
pop
or
xlat
cmp
inc
xlat
cmp
inc
push
hlt    
(bad)  
mov
push
cmp
add
sbb
movsl
pop
push
push
lds
cmp
mov
inc
test
pushf  
cmc    
jbe
sub
dec
movsl
imul
push
adc
sbb
add
das    
outsb
xlat
inc
imul
sub
dec
or
add
lahf   
jg
loope
idivl
or
sub
aam
(bad)  
rcl
sub
rorl
cmpsl
sub
push
orb
mov
xor
cmp
fabs   
mov
mov
pop
shl
fsub
nop
cmc    
ja
sub
imul
sub
cwtl   
jno
xchg
ficompl
xchg
rorl
jnp
or
inc
push
dec
and
js
fidiv
mov
pop
aam
cmp
jmp
sbb
dec
jge
rcr
xchg
jnp
adc
jbe
aam
repnz mov
sbb
jge
fcoml
nop
xor
out
fnstcw
cmp
repz adc
xchg
ds into 
lahf   
nop
ret
hlt    
pop
mov
or
inc
es data16 cmp
push
and
pop
fwait
cwtl   
(bad)  
(bad)  
hlt    
fwait
xchg
and
aad
adc
ret
sbb
push
add
sbb
nop
mov
ret
(bad)  
xchg
jbe
test
mov
xchg
std    
(bad)  
or
add
fnstenv
mov
idivl
mov
scas
push
xchg
lcall
psrad
push
push
jno
dec
cmp
add
inc
out
sti    
mov
jns
inc
ja
inc
dec
rorb
adc
clc    
jno
pusha  
mov
mov
sbb
std    
repz loope
lcall
cmpsl
sub
bound
lods
insb
jp
pop
dec
ljmp
(bad)  
int
xor
test
and
push
add
loop
shrl
cmpsl
stc    
(bad)  
cli    
syscall 
sub
std    
(bad)  
movsl
inc
xor
rcr
lods
sub
ds push
scas
in
negl
shrl
nop
add
add
daa    
adc
(bad)  
inc
cltd   
dec
pop
jns
mov
inc
sub
test
cmpsb
cmp
scas
and
mov
add
and
pop
sti    
addr16 mov
xchg
pop
mov
mov
loope
add
insb
addr16 inc
dec
ja
out
aad
pop
inc
pop
push
mov
push
inc
inc
adc
mov
sbb
add
sub
pop
and
jp
jmp
or
sub
cmp
outsb
mov
cli    
inc
sub
mov
pop
lds
mov
fidiv
jne
(bad)  
fwait
outsl
push
loop
xchg
pop
add
xor
or
decl
xchg
pop
icebp  
fidivrl
inc
pop
loopne
pop
int
loopne
mov
dec
push
ret    
add
inc
xchg
in
inc
sub
cmp
sub
or
push
or
(bad)  
ret
xchg
(bad)  
push
scas
outsb
test
add
or
(bad)  
mov
xlat
pop
sub
pop
addb
mov
add
pop
push
insl
arpl
out
xchg
insb
xorl
inc
sti    
andb
lret
dec
pop
cmp
sub
pushf  
stc    
leave  
call
sub
and
(bad)  
mov
mov
jp
icebp  
stos
iret   
movsl
enter
repz scas
sarb
adc
xchg
into   
dec
adc
aaa    
dec
stc    
mov
aas    
inc
xor
rcl
mov
and
arpl
neg
sar
test
mov
fwait
sub
and
leave  
out
adc
fdivrp
in
push
fimull
aaa    
dec
jecxz
(bad)  
ds xchg
repnz mov
fdiv
imull
push
jb
cmp
jo
test
adc
inc
test
ja
imul
cmp
pusha  
push
aaa    
js
mov
xchg
hlt    
pushf  
jmp
jb
mov
out
mov
sub
push
fistpl
iret   
lcall
push
mov
mov
(bad)  
iret   
push
inc
mov
shr
ja
les
in
mov
push
fwait
jle
xchg
fdivrl
out
(bad)  
pop
(bad)  
push
(bad)  
xchg
test
pop
(bad)
pop
jmp
sub
dec
dec
add
fs xchg
sbb
out
lods
dec
sub
push
mov
sub
inc
add
and
data16 cmp
js
lea
daa    
add
mov
insb
and
mov
dec
jbe
jl
(bad)  
insb
sbb
vhsubpd
mov
cmp
or
mov
adc
mov
(bad)  
roll
xor
(bad)  
insb
pop
lahf   
scas
jbe
push
jae
or
sub
lock ljmp
lock or
fnstsw
or
enter
(bad)  
sarl
pushf  
dec
movsl
outsl
jb
jecxz
add
push
adc
push
mov
fild
xor
xchg
jmp
sub
fucomi
cmp
jns
mov
mov
(bad)  
bound
repz sub
jg
(bad)  {%k7}
jmp
fwait
test
push
adc
(bad)  
insl
imul
ja
ljmp
add
xchg
push
or
(bad)  
push
(bad)  
jmp
cmp
lret
fnstcw
repz faddl
pop
cmc    
xor
shr
aaa    
mov
mov
cmp
ja
cmp
pusha  
push
popa   
lcall
add
dec
imul
sub
mov
aam
jo
mov
(bad)  
(bad)  
stos
mov
sarb
roll
inc
jae
xchg
jmp
loopne
mov
enter
sub
je
jmp
sbb
data16 das 
into   
add
pusha  
rol
iret   
xor
mov
testl
cmpsb
xor
xor
dec
cwtl   
loop
mov
lret
movl
stc    
xchg
pop
insl
jb
jns
mov
fcomip
xchg
adc
xchg
and
jge
cld    
testb
pop
fnstenv
or
push
bound
xchg
mul
and
mov
sub
xlat
(bad)  
mul
mov
xor
repz sub
movl
cmp
xor
(bad)  
idivb
and
(bad)  
pop
popf   
shl
ret    
mov
fwait
push
aaa    
out
mov
or
inc
fs xchg
or
mov
(bad)  
lret   
outsb
or
mov
stos
test
shr
sub
call
clc    
pop
mov
insl
xor
or
cmp
(bad)  
(bad)  
mov
ret    
outsb
inc
jo
pushf  
dec
pop
(bad)  
and
iret   
movsb
jge
(bad)  
dec
or
cli    
pop
pop
and
add
xchg
nop
push
xchg
cmp
out
fdivrl
inc
cmp
loop
mov
xchg
dec
pop
jns
mov
dec
cmp
test
add
xchg
int
pushf  
lahf   
loop
insl
gs and
push
jns
and
in
nop
clc    
adc
inc
sub
sub
push
add
mov
jp
imul
fsub
mov
lods
cmp
inc
push
verr
inc
push
verw
jle
cmp
xorb
lea
scas
outsb
imul
jg
or
jmp
nop
test
push
repz inc
cmp
ljmp
sbb
xor
jp
or
add
sbb
adcl
jge
dec
ljmp
(bad)  
int
cmpb
push
verr
mov
aaa    
push
andl
enter
mov
add
es pop
and
hlt    
std    
les
pop
inc
add
pop
jmp
aaa    
push
sub
stc    
inc
add
inc
(bad)  
test
inc
sbb
loopne
pop
dec
ds into 
jg
daa    
jnp
insl
(bad)  
imul
lods
pop
mov
call
adc
or
or
ret    
cmc    
cmp
and
pop
jp
jns
rorb
pusha  
cmpsb
scas
jns
jbe
int
and
and
mov
pop
dec
cmp
lahf   
dec
pop
jns
mov
out
js
test
mov
call
adc
mov
jae
int
movsl
pop
scas
push
push
mov
vhsubpd
push
pop
cmp
sub
xchg
mov
cmc    
(bad)  
or
sbb
add
cmp
(bad)  
or
sbb
inc
out
ss jo
sti    
in
and
jae,pt
jnp
adc
mov
cmp
add
popa   
or
lea
jbe
aam
imul
aam
bound
lds
pop
push
aam
scas
sub
push
or
repz into 
in
pop
inc
xchg
or
mov
stos
(bad)  
(bad)  
cmpsl
into   
and
fidivl
es xchg
jno
fnstsw
jge
ljmp
sub
jp
fs
enter
adc
sbb
lods
ret
xor
sub
mov
adc
or
jmp
roll
loope
jl
cmp
jp
fwait
sub
or
(bad)  
cmp
adc
cmpsb
xchg
lods
pop
push
cli    
inc
xlat
roll
cmpsb
xchg
lods
mov
in
xlat
roll
cmpsb
xchg
lods
movsl
jbe
inc
xlat
roll
cmpsb
xchg
lods
pop
fcmove
inc
xlat
roll
cmpsb
xchg
lods
add
ret
roll
cmpsb
xchg
lods
jnp
mov
sbbb
xchg
lods
popa   
(bad)  
rorl
xchg
lods
mov
cmp
xchg
mov
loop
aaa    
xor
xchg
push
scas
in
stos
mov
inc
dec
adc
aaa    
dec
jecxz
(bad)  
aas    
mov
dec
push
cltd   
sub
hlt    
popf   
cmp
sub
test
dec
push
add
jnp
adc
lret
dec
or
sub
mov
mov
das    
jle
pop
das    
or
add
aad
adc
pop
and
jp
in
iret   
sub
sbb
das    
jne
push
(bad)  
out
jl
and
jge
in
xlat
rorl
adc
scas
cmc    
fdivrl
xchg
or
and
insl
ds enter
mov
jecxz
leave  
adc
xor
add
add
push
push
xor
pop
jecxz
loope
cwtl   
pop
xchg
mov
xchg
js
jmp
fnsave
(bad)  
ljmp
call
test
xor
sbbl
sbb
roll
test
xor
xorl
lea
mov
sbbl
lea
cmp
sbb
roll
test
jmp
imul
sbb
add
jl
add
movsl
ds or
adc
mov
dec
add
push
stos
xchg
mov
xchg
jnp
adc
rolb
and
pop
add
or
pop
(bad)  
lock fsubl
andl
sub
and
jp
icebp  
stos
iret   
sub
add
stos
sahf   
jnp
adc
dec
lret   
cs push
je
push
(bad)  
negb
sbb
test
and
iret   
out
pop
stos
les
aas    
jo
xchg
iret   
hlt    
mov
aaa    
dec
decl
sbb
lods
fstpt
or
cmpsl
fnsave
push
addr16 dec
(bad)  
mov
xor
add
jl
inc
push
mov
test
jecxz
mov
jp
pop
and
shr
(bad)  
mov
sti    
fimul
add
ds mov
push
inc
or
and
mov
dec
test
and
mov
dec
test
and
mov
dec
test
and
mov
dec
test
and
mov
dec
test
and
mov
dec
test
and
shll
lea
aas    
mov
jbe
jns
rorb
jmp
mov
adc
cmc    
push
mov
sub
dec
jecxz
(bad)  
aas    
mov
dec
push
cltd   
sub
hlt    
popf   
cmp
sub
test
dec
push
add
jnp
adc
lret
dec
or
sub
mov
mov
das    
jle
pop
das    
or
add
aad
adc
pop
and
jp
in
iret   
sub
sbb
das    
jne
push
(bad)  
out
jl
and
jge
in
xlat
rorl
adc
pop
(bad)  
lock fdivrl
sahf   
das    
jbe
data16 faddl
cmp
mov
data16 loop
push
dec
adc
sub
mov
lods
(bad)  
dec
ss xchg
mov
cmp
jbe
adc
xor
sub
jbe
scas
fidiv
mov
jg
jbe
mov
ja
mov
jg
jbe
fisub
ja
push
lret
lods
mov
repz dec
test
push
ja
jns
rorb
add
xor
test
test
arpl
or
mov
mov
fwait
sub
and
int3   
out
loop
ss jne
inc
push
dec
(bad)  
call
aaa    
mov
mov
aas    
dec
aas    
pop
push
inc
inc
cmp
adc
test
or
in
aam
(bad)  
xchg
mov
and
aad
push
stos
fstl
sbb
lock or
sub
ficomp
xor
and
jae
pop
(bad)  
fnstcw
or
sub
loop
xchg
xchg
loop
lods
add
cltd   
fwait
popf   
and
dec
pop
and
add
xchg
repz mov
movsl
lahf   
mov
xchg
pause  
lea
ret
add
xchg
repz cld 
add
lahf   
fsub
pop
add
xchg
repz loopne
mov
out
stc    
add
xchg
repz enter
pushf  
movsl
lahf   
jo
jmp
in
repz cmp
adc
pushf  
movsl
lahf   
jp
fldl
in
repz and
or
pushf  
movsl
lahf   
xchg
popa   
iret   
add
mov
(bad)
lahf   
lcall
sub
dec
inc
xlat
or
add
xchg
dec
xchg
iret   
mov
jp
outsl
scas
int
(bad)  
jns
(bad)  
std    
notb
sub
test
add
cmp
(bad)  
or
sbb
inc
out
ss xchg
(bad)  
hlt    
popf   
cmp
sub
mov
ds aaa 
testl
cmp
xchg
fdiv
stc    
pop
fmuls
push
lret   
sbb
cmpsl
out
(bad)  
fwait
sub
and
leave  
out
pop
test
adc
aas    
pop
push
jnp
test
dec
adc
aaa    
mov
mov
sub
frstor
dec
add
mov
sbb
das    
icebp  
or
and
jp
icebp  
ror
and
arpl
cld    
and
xor
ljmp
loop
cli    
pushf  
pop
jne
jae
(bad)  
ficomp
pusha  
jns
stos
ficompl
cld    
lods
ret
xor
sub
fcmovu
adc
or
jmp
roll
loope
faddp
fnstcw
(bad)  
adc
sti    
outsb
aas    
xlat
roll
cmpsb
xchg
lods
mov
roll
cmpsb
xchg
lods
adc
fdivrl
xlat
roll
cmpsb
xchg
lods
add
roll
cmpsb
xchg
lods
jg
mov
sub
fwait
insb
cmpsb
xchg
lods
popa   
lock xchg
cmp
roll
cmpsb
xchg
lods
fistpl
xlat
roll
cmpsb
xchg
lods
int
jbe
flds
insb
cmpsb
xchg
lods
cmp
inc
push
xchg
mov
loop
aaa    
xor
pushl
mov
adc
inc
(bad)  
fwait
sub
and
(bad)  
mov
out
into   
mov
jp
lea
daa    
push
js
xchg
jmp
int3   
mov
mov
or
in
iret   
and
jae
push
(bad)  
out
jl
and
outsl
mov
shlb
inc
je
mov
bound
cmp
xchg
jnp
adc
call
xor
pusha  
lds
mov
jp
scas
cmc    
fdivrl
xchg
pop
push
es jae
jns
mov
jmp
aaa    
mov
mov
aas    
cmpsl
arpl
adc
sub
xor
fwait
mov
lea
inc
add
ficomp
inc
or
mov
jecxz
leave  
adc
fstp
insb
pop
addl
or
sub
loop
xchg
xchg
loop
lods
or
ds aas 
cltd   
fwait
popf   
and
dec
pop
and
aas    
in
rep insb
sub
pushf  
movsl
lahf   
sbb
in
repz pop
or
movsl
lahf   
mov
and
in
repz mov
movsl
lahf   
mov
xchg
rep lods
stos
sbb
add
mov
mov
lret   
jg,pn
jbe
cli    
iret   
jnp
dec
mov
mov
add
sub
je
shrl
(bad)  
hlt    
mov
pop
xchg
aam
mov
scas
int
(bad)  
jns
(bad)  
std    
notb
sub
test
add
cmp
(bad)  
or
sbb
inc
out
ss xchg
(bad)  
hlt    
popf   
cmp
sub
mov
ds aaa 
testl
cmp
xor
hlt    
adc
jl
in
adc
aaa    
mov
pop
aas    
cmpsl
arpl
hlt    
sub
sbb
lods
ret
(bad)  
ljmp
push
xor
pop
jecxz
loope
cwtl   
pop
xchg
mov
data16 add
push
lea
je
add
fsubl
adcl
test
xor
addl
xor
jl
xor
subl
test
cmp
push
test
xor
or
mov
adc
jl
pushf  
or
pop
fisubl
dec
lea
sub
and
iret   
out
add
insl
add
push
pop
push
jecxz
hlt    
mov
aaa    
mov
mov
sub
push
push
inc
and
xchg
(bad)  
hlt    
popf   
cmp
sub
mov
xor
loop
inc
leave  
popa   
pop
dec
out
scas
xor
or
out
xlat
cwtl   
mov
sub
pop
fwait
sahf   
mov
xor
shlb
sub
movsl
out
iret   
sub
cmc    
repz jl
xchg
lret   
je
rorl
jg
or
jmp
roll
loope
cvtps2pd
fnstcw
(bad)  
adc
jmp
sub
roll
cmpsb
xchg
lods
lret   
jns
xor
or
cmp
roll
cmpsb
xchg
lods
aaa    
add
xor
roll
cmpsb
xchg
lods
cmp
xlat
roll
cmpsb
xchg
lods
xchg
call
addb
outsl
cmpsb
xchg
lods
test
cmc    
sub
outsl
cmpsb
xchg
lods
call
xor
testb
fistp
adc
call
add
mov
sbb
hlt    
inc
jae
jge
sahf   
xchg
inc
mov
pop
dec
xchg
pop
and
jp
in
iret   
and
jbe
call
xor
or
not
add
(bad)  
and
imul
fwait
sub
and
mov
adc
test
or
icebp  
(bad)  
adc
js
adc
sub
sub
popf   
cmp
sub
stos
aaa    
ja
insb
cmp
xchg
jnp
adc
inc
ret    
jnp
jbe
add
in
iret   
mov
jp
fs
enter
hlt    
out
jl
and
gs mov
or
gs push
push
jbe
imull
leave  
mov
jecxz
bound
clc    
out
mov
sub
int
xor
test
mov
js
push
inc
loop
shrl
cmpsl
push
sub
imul
xchg
mov
add
pop
outsl
mov
sbb
mov
outsl
mov
adc
and
push
dec
sahf   
in
jns
ja
mov
fdivrs
pop
mov
ficompl
dec
or
int
stos
pop
repz lds
mov
mov
mov
xor
add
jns
mov
out
xlat
pop
and
jp
in
fmul
add
prefetch
test
out
jl
and
push
cmc    
xlat
ds inc
aam
cmp
push
popa   
xor
jnp
popf   
jnp
adc
(bad)  
sahf   
xlat
pop
and
jp
xchg
movsl
iret   
pop
pushf  
aaa    
dec
xor
shl
inc
inc
jae
mov
in
ljmp
fisubrl
xor
aaa    
sub
loop
xchg
xchg
loop
lods
(bad)  
adc
aas    
cltd   
fwait
popf   
and
dec
pop
and
cmp
xchg
repz inc
jle
pop
pushf  
movsl
lahf   
ret
cmp
xchg
repz mov
fs pop
pushf  
movsl
lahf   
(bad)  
jecxz
in
pause  
cmpsb
nop
pop
pushf  
movsl
lahf   
out
fnstsw
aam
pushf  
movsl
lahf   
jo
(bad)  
cmp
xchg
xor
push
jg
jbe
cs lahf 
ja
dec
mov
mov
add
sub
in
xor
leave  
insb
dec
aam
xchg
aam
mov
scas
int
(bad)  
jns
(bad)  
std    
notb
sub
test
add
cmp
(bad)  
or
sbb
inc
out
ss xchg
(bad)  
hlt    
popf   
cmp
sub
mov
ds aaa 
testl
cmp
xor
hlt    
adc
jl
in
adc
aaa    
mov
pop
aas    
cmpsl
arpl
hlt    
sub
sbb
lods
ret
(bad)  
ljmp
push
xor
pop
jecxz
loope
cwtl   
pop
xchg
mov
mov
jbe
push
lea
je
add
test
subl
test
xor
sbbl
fmull
addl
(bad)  
jo
sahf   
test
mov
outsl
mov
sahf   
dec
pop
jns
mov
adc
add
or
shrb
dec
lea
sub
and
iret   
out
add
insl
add
push
pop
push
jecxz
hlt    
mov
aaa    
mov
mov
sub
push
push
inc
and
xchg
(bad)  
hlt    
popf   
cmp
sub
mov
xor
loop
inc
leave  
popa   
pop
dec
out
scas
xor
or
out
xlat
lahf   
mov
sub
pop
fwait
sahf   
mov
xor
shlb
sub
movsl
out
iret   
sub
cmc    
repz jl
xchg
lret   
je
sbb
pop
sbb
or
jmp
roll
loope
jp
fnstcw
(bad)  
adc
mul
aaa    
xlat
roll
cmpsb
xchg
lods
and
xlat
roll
cmpsb
xchg
lods
xchg
orb
xlat
roll
cmpsb
xchg
lods
(bad)  
mov
xor
roll
cmpsb
xchg
lods
icebp  
call
addb
lods
jmp
in
xlat
roll
cmpsb
xchg
lods
pop
push
push
xor
roll
cmpsb
xchg
lods
push
sbb
xor
push
pop
std    
sub
pushf  
movsl
lahf   
jmp
lock add
xchg
sub
dec
inc
in
test
add
pop
dec
xchg
inc
mov
pop
dec
xchg
pop
and
jp
in
iret   
and
jbe
call
xor
or
not
add
(bad)  
and
imul
fwait
sub
and
mov
adc
test
or
icebp  
(bad)  
adc
js
adc
sub
sub
popf   
cmp
sub
stos
aaa    
ja
insb
cmp
xchg
jnp
adc
inc
ret    
jnp
jbe
add
in
iret   
mov
jp
fs
enter
imul
jl
and
gs mov
or
gs push
push
jbe
imull
leave  
mov
mov
lods
sbb
stc    
mulb
pop
data16 adc
test
adc
mov
jp
cmpsl
test
and
enter
jae
push
rorb
insb
and
loope
add
jg
mov
sbb
xchg
enter
mov
mov
cltd   
cld    
(bad)  
dec
gs insb
int3   
negb
jecxz
pop
pop
mov
sub
rorb
mov
test
mov
mov
fstpt
sbb
xor
jne
jns
rorb
xlat
and
inc
add
jge
xlat
cmpsl
mov
jecxz
mov
inc
mov
pop
iret   
cmpsb
les
fs icebp 
jo
adc
mov
mov
in
into   
add
inc
psubsb
fidivrl
sbb
jb
dec
mov
cmp
xorl
rcrl
int3   
lods
sbb
stc    
(bad)  
std    
jo
cltd   
dec
pop
mov
inc
adc
test
cld    
sbb
adc
stos
lret
pop
jge
sahf   
and
inc
pop
adc
test
mov
add
push
inc
(bad)  
push
pushf  
xor
sti    
daa    
cmp
sub
xchg
loopne,pt
jb
mov
push
jg
rorb
int
or
or
popl
cltd   
cli    
iret   
and
adc
push
push
outsl
and
(bad)
fcmovnu
call
adc
sub
flds
cltd   
sub
sbb
inc
jle
inc
or
loopne,pn
testb
push
jl
or
in
scas
xor
clc    
fdivrs
add
cmpsl
jns
les
arpl
scas
add
aaa    
or
jecxz
(bad)  
not
pop
hlt    
rdmsr  
pop
pop
cmpsb
das    
jno
xor
and
xor
(bad)  
mov
xchg
dec
push
cmp
(bad)  
cmp
adc
sbb
mov
fmulp
divl
sbb
aaa    
xor
in
sub
adc
lahf   
les
arpl
jno
push
mov
mov
js
scas
jno
dec
ss push
pop
jbe
jno
mov
and
jno
adc
push
pop
push
test
lods
and
int3   
inc
mov
inc
push
popa   
sub
leave  
jge
xlat
cmpsl
cltd   
mov
jb
mov
push
inc
or
mov
sub
fwait
sub
sub
sbb
push
cmovae
into   
call
inc
sub
(bad)  
jecxz
imul
out
push
pop
jbe
jno
sarb
(bad)  
lock cmp
fdivr
in
or
mov
pop
jno
jno
enter
ficoml
or
jb
dec
mov
ret
rcrb
or
movsl
ds or
or
lcall
jl
lcall
jno
xchg
ficompl
xchg
dec
stos
cs into 
stos
push
mov
xchg
std    
cmpsl
cmp
scas
ljmp
cmpsl
test
xchg
loop
push
push
push
incl
dec
fs push
ss push
je
jnp
xlat
cmp
mov
jmp
jp
jmp
xchg
fwait
sub
and
(bad)  
out
repz aaa 
enter
adc
movsl
fcomip
mov
or
fs
enter
stc    
out
sbb
lods
jo
pushf  
pop
dec
ss pushf 
scas
lock fidivrl
or
daa    
xchg
faddl
pop
mov
xor
psubsb
fwait
jnp
sarl
pop
movzbl
cmp
push
jae
or
sub
cmpsl
loopne
push
jae
or
sub
adc
mov
add
imul
cmp
jb
inc
mov
cmp
fidiv
jp
aam
bound
icebp  
das    
outsb
xlat
inc
imul
adc
loopne
xor
add
ss push
(bad)  
(bad)  
jle
addr16 sti 
jb
sarb
mov
push
movsl
lret
push
cld    
(bad)  
jge
(bad)  
xor
push
sub
mov
mov
fmuls
push
or
rcll
mov
popa   
data16 jge
pop
mov
xchg
movsb
lea
mov
push
sub
sub
push
add
lods
pushl
repz pop
pop
adc
sbb
sub
or
stc    
jnp
dec
hlt    
or
adc
mov
ds out
push
ret    
mov
es pushf 
cmp
jecxz
mov
dec
mov
arpl
mov
push
lcall
add
jl
notl
cwtl   
jno
xchg
ficompl
xchg
inc
mov
into   
test
test
xchg
dec
push
dec
out
stos
push
test
(bad)  
mov
push
add
push
sbb
inc
xchg
loop
push
push
imul
xlat
rorl
sbb
push
push
shr
pop
jl
jp
ss out
jl
and
popa   
(bad)  
call
mov
aaa    
cltd   
pop
fadd
and
aas    
or
or
push
inc
aaa    
rorl
es mov
pop
push
xor
test
xor
pop
xchg
(bad)  
das    
cs inc
push
jmp
sub
dec
jg
fs inc
sbb
ljmp
add
incb
xchg
dec
bound
adc
add
push
jo
adc
jnp
xchg
popf   
out
mov
push
imul
jecxz
out
sti    
dec
and
fisubl
sub
xor
jp
pop
xor
mov
mov
outsb
nop
shr
and
shr
out
push
dec
mov
push
or
imul
xchg
cmp
mov
in
(bad)  
mov
rcrl
scas
stc    
popa   
jg
ss pop
pop
adc
cmp
add
out
mov
bound
inc
mov
je
jle
imul
fwait
xor
xor
movsb
or
ja
xor
test
mov
xchg
idiv
shl
negl
insb
fnsave
cmp
daa    
inc
mov
in
lahf   
test
push
push
fwait
push
lret
outsb
rorb
jl
inc
bnd js
je
xchg
sahf   
mov
fadds
(bad)  
movsl
pop
push
dec
pop
lea
stos
iret   
movsb
xchg
dec
xor
repnz jecxz
push
cli    
push
(bad)  
mov
repz in
jg
hlt    
mulw
lahf   
fcomp
fnstsw
mov
imul
in
pop
push
push
inc
lea
push
stc    
pop
inc
sbb
mov
adc
mov
xchg
rol
jno
in
cmp
inc
shlb
sbb
xor
(bad)
xchg
into   
push
jne
and
xor
mov
sub
outsl
jnp
push
mov
arpl
cwtl   
repnz push
mov
xchg
orl
and
fbld
clc    
(bad)  
mov
mov
jl
mov
xchg
leave  
insb
dec
dec
stos
decb
jl
cmpsl
mov
mov
xchg
sbb
inc
jo
dec
add
jmp
pop
mov
inc
pop
xchg
std    
cmp
jne
jle
(bad)
fcompl
mov
mov
mov
dec
test
xlat
cmpsl
icebp  
inc
ds insb
loopne
mov
xchg
pop
mov
aam
add
or
xchg
or
mov
adc
push
jbe
mov
inc
mov
xor
jne
jle
(bad)
fcompl
jns
mov
mov
mov
xchg
xchg
pop
dec
pop
xor
out
xlat
ss jl
xchg
sub
dec
inc
inc
adc
inc
jae
adc
test
lret   
(bad)  
dec
mov
movsl
mov
mov
add
scas
pop
jle
adc
fistpll
sub
lock jge
xlat
cmpsl
push
(bad)  
pop
and
fildl
je
push
and
adc
inc
sub
scas
int
aam
xchg
mov
dec
ss xchg
popf   
cmp
sub
mov
pop
(bad)  
repnz
xor
push
iret   
jo
leave  
jp
or
lea
or
cmp
or
push
sub
push
inc
push
and
hlt    
mov
aaa    
mov
mov
into   
add
outsb
push
and
dec
add
xlat
pop
and
jp
icebp  
(bad)  
cld    
(bad)  
mov
push
adc
leave  
pop
cmp
and
incl
fmull
sbb
les
and
mov
hlt    
popf   
cmp
sub
sub
ds push
sbb
les
aaa    
addr16 jns
fdiv
popf   
cmp
sub
xchg
arpl
lret   
adc
dec
add
loop
adc
push
incl
and
dec
inc
cmp
sub
cs dec
jecxz
imull
pop
pop
inc
mov
(bad)  
jecxz
out
repz dec
sub
aam
sbb
insb
jle
push
lds
cmp
sub
lcall
je
in
roll
cmp
ds dec
xlat
lcall
(bad)  
in
and
ret
fcompl
verw
insb
xchg
fisubrl
inc
aaa    
push
loopne
mov
inc
push
mov
std    
and
push
or
int3   
mov
outsl
inc
and
cmp
or
stc    
xor
fs popa 
addr16
push
xchg
push
xor
inc
xchg
dec
inc
cmp
and
sarb
je
iret   
xor
aad
mov
pop
inc
fidivr
pop
mov
pop
fdivrs
mov
sub
push
and
loop
loop
mov
xchg
sbb
lahf   
test
sbb
cmp
inc
push
aaa    
add
mov
cmp
inc
(bad)  
or
inc
mov
jns
rorb
test
data16 shr
stos
add
out
popa   
push
loope
pusha  
pushf  
data16 lods
mov
movsl
or
add
and
sub
(bad)  
test
and
js
out
jp
jns
vhsubpd
push
inc
(bad)  
fwait
sub
and
shr
out
in
(bad)  
imull
add
xor
test
adc
jo
sti    
xchg
ds out
fldenv
push
mov
scas
ds into 
xchg
cwtl   
cmpsb
adc
mov
stos
call
and
cltd   
xor
mov
pop
fcmove
pop
push
xchg
scas
add
mov
push
xor
pop
jecxz
call
xor
lcall
fdivrl
iret   
bound
int3   
dec
adc
stos
cli    
icebp  
fs test
(bad)  
imul
icebp  
lods
pop
xchg
pop
(bad)  
movb
jmp
shrl
jo
push
rorb
or
(bad)  
ja
scas
mov
mov
mov
loop
dec
sbb
jno
jo
stos
adc
adc
(bad)  
or
mov
mov
dec
cs call
push
pop
test
scas
cmp
sub
cmpl
mov
test
ds into 
outsl
nop
mov
inc
(bad)  
cld    
pop
jae
mov
call
jecxz
cwtl   
mov
imul
push
lds
cmp
mov
add
inc
push
roll
push
pop
call
cltd   
or
mov
mov
xlat
(bad)  
or
add
hlt    
(bad)  
pop
movsb
imul
addr16 icebp 
(bad)  
cmp
(bad)  
roll
icebp  
stos
movsl
popf   
mov
adc
into   
push
call
cltd   
or
mov
test
or
inc
jbe
xchg
movsb
out
xor
mov
add
lea
ficompl
xchg
insl
dec
xchg
fcompl
sub
(bad)  
cmp
cmc    
adc
sbb
stos
lds
mov
mov
mov
pop
rorl
enter
imulb
push
cmp
gs daa 
roll
mov
mov
inc
jnp
dec
mov
std    
sub
cwtl   
and
imul
movsb
imul
pop
data16 addr16 repnz daa 
inc
adc
fdivl
sti    
test
ds int
push
push
sub
lods
std    
(bad)  
or
and
movsl
popf   
mov
dec
loope
adc
adc
stc    
push
lods
aaa    
jne
push
rorb
xlat
das    
popa   
sub
enter
cmpsl
adcl
and
jmp
pushf  
xchg
push
mov
data16 int3 
(bad)  
jl
dec
adc
addr16 nop
lock lret
aad
mov
pop
rcrb
negb
adc
inc
pop
mov
adc
shrb
outsb
fbld
es data16 cmp
out
jmp
jecxz
mov
loopne
aas    
or
jo
push
and
jae
or
sub
into   
dec
popf   
(bad)  
stos
mov
repz push
push
stc    
adc
test
jle
std    
pop
mov
shlb
mov
hlt    
leave  
adc
jns
jmp
jbe
test
cmpsb
xor
cmp
push
adc
and
dec
(bad)  
rcll
enter
pop
jae
movsl
test
in
mov
and
push
xchg
out
lcall
jecxz
push
in
ds push
mov
mov
into   
jg
cmp
test
(bad)  
xchg
cmpb
inc
stc    
mov
mov
iret   
movsb
aam
jb
add
idivl
pop
pop
test
lret
fmull
jmp
dec
enter
pop
jae
test
dec
cmp
lret
lahf   
dec
pop
jns
mov
inc
jb,pn
push
test
lods
adc
sahf   
dec
and
js
mov
mov
(bad)  
add
push
pop
movsb
pop
ds into 
addr16 nop
fs mov
xchg
sahf   
dec
jne
jns
rorb
pop
sub
dec
sbb
jge
xlat
cmpsl
add
mov
out
dec
add
push
imul
rorl
iret   
mov
jp
fs
enter
lock out
sbb
lods
dec
loop
in
xlat
and
popf   
jnp
mov
cmp
fnsave
cmp
jbe
mov
or
sub
push
movsl
mov
dec
sbb
in
lret
scas
out
into   
sub
pop
jecxz
and
in
cmc    
(bad)  
rorl
loopne
(bad)  
test
imul
int
mov
neg
lretw  
shl
aam
mov
mov
sub
aas    
or
cmpsl
adc
cmp
jae
or
sub
push
mov
push
cmp
mov
cmpsb
aaa    
scas
loop
push
push
sbb
in
jo
sbb
mov
(bad)  
lret   
pop
shll
cli    
lods
cmp
xchg
pop
inc
xchg
outsl
fnsave
jns,pt
iret   
and
test
cmp
mov
loope
stc    
sub
loope
push
dec
lret   
pop
push
stc    
and
mov
adc
(bad)  {%k7}
aam
lods
cli    
jp
ljmp
mov
sub
jae
xchg
(bad)
xor
dec
mov
mov
insb
push
cmp
scas
dec
jmp
mov
mov
(bad)  
ds push
mov
mov
stc    
adc
inc
fisubl
jae,pt
sbb
mov
movsl
ficom
pop
dec
(bad)  
jle
popf   
sahf   
stos
mov
insb
bound
addr16 fdivr
inc
cmp
mov
fs in
stc    
mov
cmc    
pop
jmp
movsb
iret   
cltd   
dec
mov
xchg
leave  
psrad
dec
inc
jno
xchg
pop
sbb
(bad)
mov
test
(bad)  
mov
aas    
aaa    
pop
cs call
push
pop
cmpb
loop
push
push
push
fcomip
mov
repnz test
fwait
sub
and
shr
out
in
(bad)  
popf   
xchg
adc
je
jge
mov
cwtl   
testl
mov
(bad)  
mov
out
xlat
clc    
cld    
test
sbb
pushf  
and
hlt    
int
int
push
mov
das    
mov
jnp
pusha  
inc
imul
sub
xchg
mov
jg
or
jmp
lret   
xchg
movsb
xor
cwtl   
test
imul
or
jae
pop
fdivr
imul
adc
(bad)  
dec
sti    
xchg
ds push
lret   
lahf   
(bad)  
dec
pop
mov
lods
lds
sti    
push
daa    
aam
pop
mov
int
mov
cwtl   
setnp
rolb
cwtl   
jns
lds
mov
xchg
imul
cwtl   
mov
fcompl
mov
cwtl   
mov
sbb
mov
add
scas
mov
repnz stos
push
test
(bad)  
mov
cld    
and
cs call
push
sub
push
fwait
aad
and
cmp
(bad)  
enter
aas    
lret
sti    
lea
movsl
daa    
push
push
add
hlt    
pop
push
pop
ss shl
push
(bad)  
outsb
lods
xchg
dec
mov
jno
sub
xchg
jb
cmp
mov
xchg
cmp
jg
lock xor
pop
out
enter
call
or
in
in
pop
insb
pop
or
jg
push
jae
or
sub
add
mov
mov
and
in
(bad)  
mov
add
mov
mov
std    
pop
lcall
fdivrs
in
jbe
shll
jnp
adc
jbe
in
bound
cmp
pop
jns
sbb
pop
addr16 and
or
test
push
xchg
orl
pop
cmp
lahf   
pop
dec
ljmp
(bad)  
int
rcll
das    
aam
(bad)  
mov
lahf   
xchg
mov
(bad)  
arpl
mov
fdiv
lahf   
mov
cwtl   
loope
and
cltd   
mov
jbe
shll
popf   
cmp
sub
sbb
gs push
pop
insb
(bad)  
out
(bad)  
out
sbb
lods
loop
movsl
(bad)  {z}
lret
leave  
fcompl
mov
mov
pop
out
test
in
(bad)  
out
xchg
xchg
sub
rolb
cmpsl
mov
sbb
xor
es and
mov
cmpl
loope
jmp
ret    
inc
pop
xchg
jnp
jb
fisubr
scas
or
call
icebp  
mov
iret   
and
sahf   
adc
mov
(bad)  
mov
cwtl   
(bad)  
in
outsb
xchg
add
dec
sbb
mov
pop
xchg
sub
jle
inc
xchg
mov
stos
inc
sbb
or
mov
dec
push
js
xchg
or
bound
jns
pop
push
push
verr
xchg
sbb
cmp
ja
cmp
arpl
in
inc
mov
and
pslld
mov
inc
jns
shlb
out
(bad)  
sub
sub
or
rclb
or
mov
inc
or
stc    
xchg
mov
mov
mov
sarl
std    
jl
pop
jg
loopne
pop
out
bound
and
xchg
xor
fwait
cwtl   
(bad)  
xor
(bad)  
out
inc
iret   
je
push
scas
push
add
(bad)  
cld    
pop
jge
lret
fstpt
sbb
pop
mov
loopne
mov
fstps
sub
das    
or
notl
mov
dec
mov
mov
add
scas
sub
or
mov
cltd   
aas    
sub
jae
pop
push
sub
arpl
inc
mov
les
sub
cmpl
ds out
fstps
add
jne
je
bound
or
jmp
adc
push
push
or
jp
push
xor
mov
sbb
call
mov
ret    
rcrl
mov
cltd   
dec
out
or
aam
pop
fistp
cmp
xchg
(bad)  
ljmp
aad
outsl
jge
mov
inc
std    
sub
jae
pop
push
or
xchg
leave  
psrad
(bad)  
dec
jno
mov
pop
and
add
sbb
adc
inc
sub
gs cli 
push
or
xor
fild
jmp
pop
out
xlat
lret
cmp
dec
out
sub
out
out
fmull
and
inc
les
and
add
pusha  
(bad)  
lds
(bad)  
notb
jo
push
test
fs push
mov
mov
imul
xlat
(bad)  {z}
int3   
pop
cli    
inc
mov
ss clc 
push
fistl
sub
(bad)  
arpl
push
push
(bad)  
mov
negb
fisubr
xchg
addl
fs repnz loope
xchg
lcall
sbb
rcrl
outsl
or
xchg
xchg
loop
push
int
jns
xlat
iret   
fdiv
mov
mov
popf   
cld    
mov
xor
int
adc
imul
adc
popa   
imul
aad
outsb
xor
cmpsb
ss int
loope
xchg
sub
push
push
cwtl   
push
stos
cmp
movsb
xchg
sub
lahf   
addr16 sub
lcall
ret    
pop
sub
and
mov
cmp
jbe
xchg
cmc    
repnz mov
or
pop
mov
xlat
movsl
mov
xacquire xchg
dec
daa    
lea
lahf   
sarb
jno
je
out
fbld
xchg
xchg
out
leave  
jle
pop
repz into 
call
cmpsl
int
lods
mov
das    
arpl
sbb
testb
xor
cs out
aam
hlt    
imul
inc
sbb
xor
xor
cwtl   
and
xchg
insb
xor
or
cltd   
dec
pop
and
pushf  
adc
fldcw
or
cmp
cmp
out
dec
sbbl
mov
sahf   
pop
and
mov
cwtl   
lods
jge
push
mov
cmc    
xor
jbe
js
ror
mov
call
lahf   
out
and
jno
xor
fcompl
sub
inc
jmp
mov
fisttpl
inc
(bad)  
jmp
inc
xor
pop
push
dec
popa   
sub
add
push
test
mov
mov
sarl
loopne
movsl
lret
jge
rorb
(bad)  
cmp
pslld
jns
sub
repz iret 
add
lods
push
in
int3   
push
cmc    
xor
mov
and
push
lods
rorl
icebp  
pop
mov
mov
and
imul
pushf  
leave  
pop
mov
fidivl
and
into   
addr16 pop
mov
js
loop
jle
fs cmp
in
inc
loope
cmp
mov
sub
dec
iret   
sub
and
sahf   
sub
aas    
jmp
dec
loope
cmp
mov
jns
hlt    
fs dec
jge
xchg
mov
sub
mov
mov
push
inc
cmp
cltd   
movsl
mov
and
sahf   
sub
aas    
jmp
dec
loope
cmp
mov
jns
hlt    
fs xor
sub
and
out
adc
shll
inc
jo
cmp
mov
sub
sbb
test
xor
addr16 js
mov
jl
loop
mov
fst
into   
or
push
xchg
scas
lock
sub
jo
imul
xchg
arpl
sbb
mov
scas
jmp
pop
inc
test
push
sti    
aad
sub
and
ficompl
cmpb
mov
rorl
pop
jae
cli    
movsb
adc
inc
call
push
mov
jle
or
bound
mov
int3   
mov
iret   
cltd   
lret   
test
xor
mov
jno
xchg
ficompl
xchg
imul
xor
mov
and
fwait
and
nop
mov
lret
in
test
jp
in
aam
(bad)  
lock movsb
(bad)  
fwait
sub
and
shr
das    
ds xchg
imull
data16
pop
cmpsb
pushf  
adc
gs lret
and
adc
push
test
inc
xchg
scas
adc
push
pop
mov
ficompl
aam
pop
and
sbb
pop
pusha  
cmp
aad
xchg
push
ss inc
rorl
leave  
pop
andl
lds
jb
push
jo
dec
out
iret   
iret   
out
dec
jg
push
mov
test
rcrb
xchg
add
loope
push
aad
dec
xchg
imul
jne
inc
loope
lds
mov
ljmp
bound
inc
and
add
aaa    
aas    
rol
lock xor
mov
cmpl
mov
fcmovu
pop
gs into 
addr16 cmp
lock mov
push
mov
push
mov
(bad)  
pop
adc
sahf   
dec
inc
(bad)  
pop
cmpsb
(bad)  
cltd   
or
fchs   
aaa    
sti    
xor
sbb
test
cmp
inc
and
fldl
push
mov
les
inc
or
or
and
fisttpll
cs out
int3   
dec
dec
jg
pop
xlat
fs sub
mov
dec
notl
sbb
iret   
lret   
cwtl   
cmp
sbb
adc
sbb
sub
mov
rcrb
inc
jae
ret    
loopne
xor
adc
mov
aaa    
push
fcmovne
lock xor
imul
cmp
jl
outsl
gs out
icebp  
mov
nop
pop
lea
je
lea
push
mov
push
xchg
(bad)  
xor
mov
jecxz
cmp
cmp
pop
pushf  
imulb
adc
pop
out
push
pop
mov
sbb
mov
(bad)  
outsl
popa   
mov
std    
add
jmp
push
hlt    
xor
rcll
scas
pop
mov
mov
cs mov
test
add
bound
mov
sti    
ja
fildll
(bad)  
mov
into   
xor
pop
inc
pop
sbb
xor
adc
push
mov
leave  
shrl
lods
or
cmp
and
in
pop
popa   
in
inc
sub
cmp
std    
cmp
pop
mov
add
mov
test
xor
or
lock xlat
xchg
fdivrl
inc
pop
popf   
and
pop
or
pop
mov
push
jno
xchg
call
(bad)  
test
int
(bad)  
fwait
sub
and
out
add
(bad)  
inc
fidivr
adc
scas
sar
mov
mov
fist
push
mov
out
add
(bad)  
in
iret   
xchg
fstpl
adc
aaa    
dec
sti    
mov
cmp
mov
xor
or
not
cmp
jmp
xchg
xchg
aas    
mov
fwait
sub
and
int3   
out
out
mov
mov
mov
aaa    
dec
stc    
mov
and
ffree
mov
inc
sub
jp
push
loopne
dec
pop
fld
or
mov
hlt    
or
or
pop
aaa    
mov
cs iret 
add
lock popa 
xchg
icebp  
sbb
cmc    
push
(bad)  
outsl
popa   
mov
and
and
das    
aas    
add
pop
movsl
inc
bound
pop
aas    
lahf   
lret
cmp
or
fcomps
xlat
fs in
inc
sub
cmp
xchg
or
stos
push
or
stos
inc
insl
jno
mov
adc
test
add
or
xchg
xlat
pop
sub
dec
pop
mov
mov
mov
pop
inc
pop
lods
mov
mov
push
mov
adc
push
mov
lahf   
lret
cmp
or
iret   
mov
out
addr16 in
inc
sub
fwait
sub
and
mov
pushf  
push
clc    
out
xlat
pop
and
jp
cmc    
test
sub
sbb
fcoml
into   
(bad)  
hlt    
divb
mov
dec
adc
aaa    
dec
sti    
mov
das    
xchg
std    
jecxz
fcmovb
out
jl
and
jge
in
xlat
and
pop
jecxz
or
ja
(bad)  
je
(bad)  
fwait
cld    
ror
int3   
out
mov
jae
jbe
lea
test
mov
jl
and
retw
and
sub
mov
mov
and
xlat
leave  
mov
adc
scas
sar
mov
inc
mov
xchg
add
inc
xor
stos
xchg
inc
int3   
mov
cmp
cmpsb
enter
(bad)  
fcompl
cmpl
jmp
jg
add
and
push
xor
pop
jecxz
mulps
fildl
jp
rdmsr  
test
test
stos
ss xchg
push
push
sti    
sbb
ds
lods
adc
aaa    
inc
loop
mov
xchg
sbb
pop
popa   
(bad)  
popf   
or
out
lcall
inc
mov
out
(bad)  
mov
ret    
push
pop
jmp
sub
data16 mov
outsb
mov
stos
(bad)  
cmp
mov
dec
sbb
mov
shl
leave  
lahf   
or
jae
shll
fiaddl
mov
push
push
shrl
jb
add
mov
xchg
int
jle
mov
sub
pop
pop
mov
cli    
and
sarl
cmp
out
dec
sub
mov
pop
aam
xchg
sub
es
out
dec
ret    
pop
mov
cmp
ret    
pushf  
ret    
mov
lods
mov
aas    
enter
stos
mov
imul
xchg
mov
daa    
pop
ds into 
ja
mov
cmp
lcall
insb
mov
mov
jb
stc    
mov
inc
add
aas    
shl
and
jg
push
jecxz
shll
lret
out
(bad)  
and
jbe
xor
and
mov
shll
jns
loop
movsb
je
fs add
sbb
jns
imul
insl
or
fmul
xchg
leave  
sub
xchg
(bad)  
cld    
push
(bad)  
inc
sar
cltd   
mov
adc
in
mov
cmpsl
xchg
je
jns
mov
popa   
xchg
popa   
mov
mov
iret   
movsb
add
scas
lahf   
sbb
loope
jmp
dec
sbb
stc    
xchg
out
stos
sbb
test
mov
dec
lret
stc    
push
jge
lret   
and
cmp
loop
rolb
sub
(bad)  
(bad)  
cld    
inc
shll
aaa    
inc
add
sub
or
xchg
fwait
inc
inc
inc
jno
stos
mov
imul
xchg
ret    
dec
sub
xor
lcall
lret
fbld
aaa    
leave  
inc
sub
imul
insl
or
inc
pop
lahf   
push
xchg
jle
push
xchg
(bad)  
cld    
push
(bad)  
inc
sar
cltd   
mov
adc
in
mov
mov
mov
popa   
cmpsb
fldenv
popf   
xchg
test
mov
out
dec
pop
clc    
mov
and
shr
(bad)  
roll
mov
pop
fdivs
xor
lcall
cwtl   
daa    
jns
imul
insl
or
fmul
xchg
shrl
daa    
adc
push
(bad)  
inc
sar
cltd   
mov
adc
int
inc
movsl
out
mov
or
adc
fwait
inc
inc
inc
jno
stos
mov
imul
xchg
or
xchg
pop
ds into 
dec
std    
(bad)  
cmpsb
sub
test
adc
add
or
(bad)  
mov
mov
mov
ror
inc
pop
out
fadd
cmp
pop
mov
add
inc
into   
cmp
leave  
test
mov
imul
xor
subb
mov
in
jmp
sbb
orl
sub
xor
loop
cmp
cwtl   
bnd js
cwtl   
xor
movsl
xchg
inc
mov
movb
jno
xlat
cmpsl
mov
test
std    
push
test
xchg
out
mov
add
test
mov
and
mov
adc
lds
(bad)  
mov
mov
mov
add
scas
push
outsl
cmpsb
inc
dec
repnz inc
add
sub
sub
nop
inc
notb
test
xchg
outsb
cmp
mov
inc
xor
dec
cs call
push
pop
nop
aaa    
xchg
loop
push
push
push
fcomip
mov
push
add
mov
jp
imul
fsub
mov
and
popa   
(bad)  
call
cmc    
dec
adc
aaa    
dec
cmc    
mov
leave  
scas
xchg
fcoml
into   
fdivp
cmpsl
push
fwait
or
or
in
aam
sti    
(bad)  
scas
(bad)  
fwait
sub
and
(bad)  
out
mov
test
xor
inc
add
neg
out
mov
sbb
in
out
cmp
hlt    
mov
bnd jge
(bad)  
into   
push
int
(bad)  
mov
and
(bad)  
pushf  
push
pop
decl
mov
xchg
xchg
andl
pop
fwait
mov
nop
fnstsw
mov
pop
das    
xchg
hlt    
xchg
sti    
stos
leave  
sti    
mov
les
sbb
mov
adc
mov
pushf  
sahf   
inc
ret    
mov
pop
sub
loopne
jg
cmpsb
fwait
cmpsl
xchg
lea
movsb
mov
jl
lock push
dec
dec
(bad)  
pop
popf   
stos
test
lock cli 
lods
js
or
or
movsb
jb
cltd   
insb
push
jmp
test
inc
popa   
xchg
stos
jns
jns
dec
leave  
adc
mov
mov
xchg
(bad)  
or
jp
out
dec
cmp
mov
jl
stos
iret   
mov
test
cmp
in
sub
adc
hlt    
imul
inc
popa   
xchg
stos
or
imul
adc
mov
mov
sbb
aad
scas
repnz xlat
into   
pop
adc
push
push
add
add
mov
mov
xorb
je
mov
sar
adc
cmp
xlat
lret
adc
or
insb
add
fdivr
mov
jmp
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
inc
cmc    
popf   
and
jo
aaa    
iret   
pop
lods
push
or
inc
push
imul
fdivs
cmp
mov
je
subl
lcall
mov
arpl
in
movl
jge
fcomip
xchg
xchg
scas
lcall
lods
push
mov
test
mov
fcompl
dec
dec
sti    
mov
jg
mov
iret   
out
dec
and
jnp
fmul
pop
dec
add
insb
add
and
out
and
pop
ljmp
jbe
xchg
icebp  
mov
mov
lock
mov
es xchg
mov
pop
jbe
in
mov
xchg
xor
inc
mov
rclb
push
test
cld    
mov
popa   
mov
mov
cltd   
push
mov
mov
dec
jne
int3   
lcall
cmpsl
in
mov
inc
(bad)  
stos
(bad)  
mov
cmp
add
loopne
ret    
inc
inc
and
(bad)  
stc    
(bad)  
or
lods
stos
push
mov
mov
mov
add
sub
aas    
insl
lahf   
cmp
mov
push
inc
fcoms
mov
icebp  
fiadd
mov
addl
inc
xchg
dec
rcll
cld    
fild
sub
mov
xor
verr
pop
nop
stos
cli    
popf   
jle
sbb
pop
mov
lds
cmp
movsl
lods
cmpsb
sbb
push
mov
mov
mov
imull
xchg
push
sub
(bad)  
ret    
stc    
jg
stc    
(bad)  
ljmp
dec
nop
add
inc
(bad)  
cmp
leave  
test
adc
mov
movsl
pop
stos
mov
adc
pop
lret
dec
repnz cmpsl
cmp
mov
call
push
sub
addr16 push
push
(bad)  
rorl
and
sti    
rcr
aaa    
daa    
push
pop
pusha  
(bad)  
rorl
xchg
mov
fadds
cmpsl
mov
lock orl
add
shlb
(bad)  
clc    
pop
aad
or
jb
inc
imul
sub
adc
sbbl
and
adc
das    
aam
inc
pop
push
imul
fyl2xp1 
arpl
pusha  
jp
and
lret
sub
popa   
rorl
vpmovzxbd
or
out
popa   
nop
mov
mov
jnp
push
(bad)  
rorl
dec
or
aaa    
test
jecxz
mov
dec
ret
mov
pop
lcall
inc
mov
iret   
mov
and
dec
mov
dec
xchg
sub
mov
daa    
or
fs or
sbbl
sti    
pop
pop
push
fwait
or
fimul
pop
leave  
gs push
adc
and
idiv
push
rcrl
sub
jno
rcll
pop
jecxz
sub
sbb
jg
sti    
lods
mov
pop
lcall
inc
mov
out
xlat
and
pop
pop
out
push
dec
dec
xchg
sub
and
push
xchg
rclb
les
jmp
push
dec
jl
mov
adc
cmp
(bad)  
mov
ds cmp
add
push
mov
push
inc
mov
aas    
cmp
sub
and
pop
das    
arpl
sub
adc
sahf   
popa   
or
push
mov
xchg
(bad)  
sarl
stc    
test
popf   
sub
add
sub
pushf  
(bad)  
mov
or
jmp
or
mov
lahf   
inc
int
mov
std    
movsl
jo
call
cmpsl
cmp
xlat
mov
and
les
(bad)  
enter
lock xchg
xchg
or
popa   
and
repz clc 
jne
clc    
mov
inc
push
mov
mov
jb
verr
(bad)  
std    
mov
iret   
mov
hlt    
lahf   
arpl
fdivs
pop
dec
dec
jp
shlb
out
rolb
repnz rcrb
shrl
cmc    
lret   
or
pop
and
enter
add
push
jmp
(bad)  
in
int3   
mov
mov
mov
imulb
pop
ja
xor
cmpsb
xchg
lods
xor
inc
fcoml
lods
mov
clc    
inc
outsl
mov
add
stos
iret   
insl
test
push
cmp
fidivrl
pushf  
movsl
lahf   
movb
xlat
cmpsb
mov
cbtw   
fwait
jecxz
(bad)  
add
scas
mov
(bad)  
lock jecxz
add
mov
scas
jbe
mov
call
popf   
cmpsb
xchg
lods
dec
inc
add
cmp
jo
push
inc
outsl
mov
add
sub
insl
test
push
cmp
movsl
mov
push
xorl
push
pop
cmpsl
jno
xchg
syscall 
xor
mov
xor
jmp
rolb
xchg
inc
jle
dec
outsb
out
mov
imul
push
mov
inc
mov
cltd   
loop
push
cmp
dec
(bad)  
pop
(bad)  
insl
data16 adc
jg
lds
enter
lret
dec
push
aam
mov
dec
push
xor
xchg
test
(bad)  
sti    
outsb
mov
fidivr
xchg
imul
inc
or
add
sbb
xchg
xchg
or
jno
sub
xchg
inc
jle
dec
outsb
out
inc
and
cli    
sub
xor
insl
les
outsb
movsl
dec
shr
lods
ss jno
sbb
(bad)  
dec
cltd   
aas    
or
inc
mov
push
test
dec
iret   
aas    
mov
(bad)
add
mov
xchg
das    
pop
adc
inc
mov
cltd   
loop
mov
xor
inc
dec
shll
insl
data16 adc
jg
lds
xchg
dec
movsl
lret
adcb
movsb
dec
andl
xchg
test
jl
(bad)  
mov
ficom
lds
nop
dec
enter
sbbl
popa   
jo
push
xchg
mov
loop
je
test
lds
xchg
sub
movl
sarb
mov
adc
aaa    
dec
stc    
mov
add
imul
dec
xlat
sub
jge
pop
inc
les
dec
(bad)  
xor
icebp  
dec
dec
and
dec
(bad)  
xor
(bad)  
cwtl   
(bad)  
add
(bad)  
cmp
jp
fisub
ja
jo
push
and
fadd
push
out
inc
insb
adc
adc
fisubrl
or
ljmp
fdiv
notb
and
jb
xor
sbb
push
sub
aaa    
push
add
inc
or
push
fsub
xor
push
je
mov
inc
fmul
mov
inc
cmp
sub
std    
and
cmp
test
repz mov
out
adc
shrl
(bad)  
out
enter
pop
inc
les
mov
mov
cmp
pop
cmc    
cmc    
add
add
fstps
cld    
lods
jb
or
iret   
xchg
aaa    
push
cli    
cmp
mov
or
fs or
test
jg
mov
pop
push
fwait
or
sahf   
ficompl
gs test
ret
adc
add
xlat
or
mov
and
cmp
jno
aad
out
push
stc    
adc
jne
sbb
jg
sti    
mov
lret   
pop
xchg
pop
xchg
and
push
daa    
inc
mov
out
xlat
and
mov
dec
dec
xchg
sub
mov
mov
cmp
xorl
in
jg
mov
pop
push
fwait
or
(bad)  
cs pop
aad
test
ret
adc
cmp
(bad)  
adc
sub
jno
std    
mov
pop
notl
cld    
sbb
jg
sti    
mov
insl
mov
sbb
jp
mov
sbb
xlat
pop
iret   
lret   
bound
push
pusha  
jnp
cmp
pop
cld    
lods
arpl
dec
mov
pop
(bad)  
iret   
cmpsb
jae
push
push
inc
gs mov
lahf   
mov
xchg
ja
adc
loope
pop
add
in
mov
cmp
call
fsubl
fs mov
jmp
inc
xor
rcrl
push
verr
inc
push
test
adc
int
(bad)  
xchg
(bad)  
pop
int3   
xor
and
out
sub
pop
add
mov
dec
stos
inc
mov
dec
jno
int3   
push
cs mov
mov
cltd   
(bad)  
jp
inc
gs mov
xchg
dec
mov
cltd   
test
cmp
mov
sub
sub
mov
fwait
dec
ljmp
mov
fdivr
sub
sub
add
inc
mov
das    
js
cmp
jbe
or
mov
jnp
je
jecxz
fisttpll
sbb
inc
push
sub
adc
jae
push
or
mov
enter
lock xlat
mov
orl
fdivr
push
pop
jbe
or
(bad)  
jp
into   
mov
pop
mov
pop
mov
loope
and
push
jnp
(bad)  
pop
mov
xor
dec
cld    
mov
sub
fiadd
inc
inc
sub
mov
jp
push
add
push
sldt
(bad)  
rcrl
push
mov
lahf   
xor
pop
inc
or
push
clc    
mov
rdmsr  
sub
iret   
or
mov
fidivrl
(bad)  
or
jg
sbb
cmpl
pushl
ret    
pop
jg
jbe
adc
adc
pusha  
outsb
stc    
xchg
cmpsb
xchg
lods
mov
adc
pop
sub
or
mov
add
cltd   
mull
lea
cmp
rcrb
pushf  
movsl
lahf   
mov
dec
push
or
mov
jno
(bad)  
loopne
and
mov
test
call
push
daa    
pop
jg
jbe
loope
jb
xor
les
cwtl   
inc
cmp
cmc    
enter
xchg
mov
test
call
pop
inc
pop
jg
jbe
jb
jno
xor
in
mov
xor
mov
push
lea
add
addr16 fwait
loope
gs jg
jbe
into   
insl
jno
xor
and
mov
xor
mov
push
(bad)  
fdivrs
pop
push
push
jae
mov
jp
mov
shll
pop
daa    
inc
fwait
or
fiaddl
lods
cmp
fwait
test
mov
int
hlt    
sbb
ljmp
pop
adc
xchg
mov
dec
loop
xchg
into   
loopne
pop
xor
jp
push
lret   
arpl
cmc    
rep movsb
lds
ljmp
(bad)  
inc
aam
mov
mov
mov
jno
mov
fimul
mov
ficom
pop
adc
clc    
dec
add
shll
cmp
pop
mov
sub
test
xchg
(bad)
mov
sahf   
aaa    
xor
cmp
stc    
pop
rcrl
aaa    
lcall
dec
aas    
or
pop
mov
mov
and
add
mov
or
pop
adc
xchg
mov
dec
loop
into   
cltd   
cmp
pop
xor
arpl
std    
xlat
movsb
(bad)  
push
test
lret
js
aam
mov
mov
mov
add
mov
fisub
adc
dec
mov
inc
ffreep
gs xchg
pop
sbb
inc
fwait
or
fnsetpm(287 only) 
push
cmp
stos
popf   
mov
outsb
test
xchg
(bad)
mov
sahf   
aaa    
xor
add
sahf   
mov
stos
imul
test
mov
es jnp
jns
rorb
mov
popa   
sub
in
jmp
mov
hlt    
and
dec
es mov
jno
mov
and
jp
icebp  
stos
iret   
and
pop
std    
sbb
mov
test
into   
dec
out
negl
cmp
in
stos
adc
aas    
loop
iret   
fsubrl
(bad)  
push
sbb
jno
les
loop
ds inc
cld    
add
pop
iret   
add
jae
test
in
push
pop
fimul
xor
femms  
sub
xchg
pop
or
ljmp
fdiv
stc    
pop
in
sub
xor
sub
scas
out
(bad)  
das    
xlat
popa   
wrmsr  
out
fimull
sbb
jl
out
xlat
push
movsb
(bad)  
and
stos
shrl
or
jns
and
fmul
dec
clc    
push
and
push
pop
dec
jle
mov
sbb
pop
push
add
sub
push
pop
push
pushl
out
xlat
xor
jae
mov
push
rcr
xor
push
je
mov
add
jnp,pt
int3   
ret
fstps
push
inc
xor
sahf   
push
shrb
(bad)  
sub
xor
out
xlat
negl
cmp
in
stos
jecxz
mov
xor
push
jp
push
sbb
and
sbb
cmp
adc
jmp
xor
iret   
fdiv
mov
out
add
jno
leave  
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
pop
out
jg
xor
inc
lahf   
pop
cmp
out
(bad)  
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
and
stc    
loopne
popf   
jo
sbb
mov
out
xlat
icebp  
sar
mov
out
pop
pop
je
movl
or
out
pop
out
add
inc
xlat
arpl
iret   
push
push
pop
fmull
mov
and
mov
mov
pop
rcrb
jno
and
(bad)  
(bad)  {%k6}{z}
mov
or
int
sbb
clc    
push
push
ss push
mov
cmp
mov
mov
out
fstps
les
dec
jae
sub
clc    
fsts
jnp
push
sbb
int3   
and
inc
test
adc
iret   
frstor
mov
js
je
cmpb
bound
enter
adcl
out
stc    
sahf   
cmp
pop
data16 cmp
cmp
adc
stos
les
lret
jecxz
daa    
xor
cmp
loop
(bad)  
mov
xlat
movsl
int3   
adc
pop
adc
dec
shll
cmc    
icebp  
getsec 
jne
inc
push
sub
cmp
scas
add
sbb
push
xor
pop
jecxz
repnz and
cmp
test
and
jno
xchg
ficompl
xchg
xchg
cwtl   
inc
add
pop
push
and
adc
mov
push
fisubr
imulb
mov
outsb
dec
test
imul
mov
movsl
mov
add
mov
fbstp
aas    
add
lds
repnz cltd 
mov
rolb
faddl
rcl
xor
pop
fnstsw
addr16 push
jae
or
sub
adc
jmp
(bad)  
stos
push
dec
jae
push
rorb
add
sub
flds
mov
push
jl
inc
cmp
xchg
enter
mov
fwait
lods
adc
insl
xor
movsl
outsb
push
xchg
push
push
and
shr
adc
ds cwtl 
mov
stc    
adc
xchg
dec
pop
jns
mov
pushl
test
(bad)  
test
mov
push
xchg
ja,pt
fnstenv
les
dec
push
ret    
ljmp
jmp
dec
pop
sbb
mov
adc
test
(bad)  
(bad)  
mov
adc
jno
ja
xlat
add
dec
cltd   
mov
pop
lahf   
push
in
insb
jle
cmp
cmpsb
jno
fucomip
pushf  
dec
jle
(bad)  
les
mov
pop
mov
rcrl
xor
and
sbb
mov
and
(bad)  
rorb
push
aaa    
rolb
jmp
cwtl   
lds
lahf   
ficomp
inc
push
(bad)  
mov
(bad)  
push
aaa    
cmp
cwtl   
xchg
sbb
aam
cli    
add
mov
lods
lret
and
mov
push
sti    
add
and
scas
or
mov
inc
xchg
mov
adc
test
xor
lahf   
dec
xlat
xchg
insb
jb
and
mov
jo
jno
add
or
add
or
lods
popa   
(bad)  
xchg
cmp
push
sbb
pushf  
cmp
out
dec
test
mov
mov
add
sub
push
jmp
test
int3   
mov
lods
xor
xlat
cmpsl
notb
ret    
dec
outsl
out
and
(bad)  
outsl
xor
repnz sbb
jmp
fldt
nop
sub
push
xor
rorb
xor
jb
dec
pop
push
movsb
sub
mov
mov
mov
add
sub
jl
xor
add
mov
and
xchg
dec
pop
jns
mov
adc
cwtl   
test
stos
sub
cmp
out
dec
sbb
jl
add
inc
std    
jae
pop
mulb
mov
loope
aas    
aaa    
and
mov
xlat
mov
push
xchg
jmp
es dec
sbb
pop
and
xor
or
in
xlat
add
fadds
fs
enter
hlt    
out
jl
and
bound
(bad)  
mov
(bad)  
or
inc
scas
xchg
fadd
jnp
test
mov
ja
push
add
cmovb
insb
adc
sbb
js
call
push
add
daa    
out
iret   
mov
jp
gs stos
repz fdivrl
int3   
cld    
xchg
sbb
hlt    
popf   
cmp
sub
cmpsl
or
pushf  
and
popf   
mov
divl
test
and
or
push
std    
addr16 mov
(bad)  
int
fistpl
mov
fdivr
xchg
in
les
shl
cmpsb
std    
rcl
lret   
dec
loopne
std    
std    
call
sub
inc
xor
test
loop
mov
arpl
sub
push
decl
jecxz
aaa    
sbb
ret    
inc
iret   
inc
inc
std    
mov
mov
add
scas
sti    
mov
stos
push
test
(bad)  
mov
lods
xlat
sub
and
pop
mov
xchg
pop
iret   
cmpsb
les
js
insl
popa   
mov
cltd   
cld    
(bad)  
gs push
and
cmp
outsb
add
mov
data16 cmp
ljmp
stos
inc
cmp
daa    
repz fucomp
and
orl
arpl
les
adc
loop
int
fwait
xchg
icebp  
sbb
rcll
pop
inc
mov
mov
inc
lcall
push
xchg
mov
loop
ljmp
cmp
push
and
sub
sahf   
(bad)  
mov
or
ret
cld    
lods
rolb
sub
stos
scas
je
std    
mov
inc
test
imul
push
lds
cmp
movsl
mov
fcoml
xchg
icebp  
sbb
rcll
pop
inc
mov
mov
inc
lcall
push
xchg
mov
loop
enter
jno
mov
xor
int
dec
xchg
jnp
sbb
insl
or
inc
imul
mov
xchg
(bad)  
(bad)  
je
adc
stc    
test
inc
sub
dec
lods
fucomp
pop
inc
dec
xchg
scas
add
inc
push
push
push
xor
pop
jecxz
mov
push
lcallw
mov
inc
inc
or
test
aam
cmp
mov
aaa    
xor
popa   
out
xor
add
test
shrl
xlat
out
repz ret 
add
rcll
into   
lahf   
test
pop
push
enter
inc
jp
push
jb
out
hlt    
sbb
mov
arpl
mov
pop
ret    
mov
in
jge
imul
xchg
clc    
xchg
cs add
pop
adc
repz test
cld    
inc
sub
(bad)  
enter
(bad)  
sahf   
xlat
cmp
mov
es pusha 
jp
phaddwq
mov
(bad)  
outsl
nop
js
pop
cmp
and
stc    
(bad)  
ss xor
jg
rcr
out
imul
int3   
stos
jmp
push
xor
pop
jecxz
pusha  
(bad)  
push
add
push
stos
lret   
push
xor
cmp
cli    
in
and
(bad)  
mov
xchg
inc
mov
jecxz
xchg
push
mov
fisub
sbb
ss repz and
js
xlat
adc
addr16 push
movsb
imul
imul
sarl
insl
int3   
roll
shlb
decb
fcompl
push
mov
sbb
lods
(bad)  
xor
cs mov
xor
sbb
adc
jbe
shlb
hlt    
xor
test
inc
sub
shrl
push
cmp
repnz push
or
adc
push
hlt    
shrb
fsubrs
fsubrl
jns
xlat
cmpsl
jae
jg
xlat
or
sub
orl
and
inc
int
outsb
sti    
jns
xlat
inc
pop
mov
xor
push
out
(bad)  
movaps
adc
sbb
jb
xor
sub
popa   
in
sbb
ret
iret   
movsb
ret    
mov
adc
sub
movsl
mov
xchg
sub
xchg
pop
(bad)  
arpl
in
arpl
clc    
cmp
hlt    
xor
test
inc
sub
ret
negb
lds
dec
adc
jp
stos
cmpsb
cmp
in
push
incb
les
adc
jecxz
push
loop
xchg
shl
stc    
xchg
mov
scas
xchg
sub
sub
ret
or
xorl
and
es inc
in
push
xchg
lock pop
sbb
imul
addr16 cs dec
cmp
or
mov
lahf   
adc
mov
(bad)  {%k6}{z}
ret
into   
pop
mov
ret    
mov
push
out
pusha  
jge
jo
int
xchg
jmp
and
pop
sub
sub
insb
sub
xchg
movsb
int3   
jge
cmp
jne
jno
add
jne
pop
push
cmp
fcmovu
jns
xchg
add
push
imul
scas
int3   
(bad)  
xchg
mov
jnp
mov
(bad)  
adc
pushf  
inc
mov
test
mov
xlat
pop
stc    
das    
(bad)  
(bad)  
idivl
mov
xchg
push
test
repnz xchg
jno
sbb
and
lret
mov
test
push
push
xor
mov
fcompl
and
into   
or
lods
add
jae
iret   
jae
or
mov
xchg
push
in
and
js
and
adc
int
sbb
add
mov
mov
in
js
fs cwtl 
mov
into   
add
stos
scas
xchg
in
add
inc
sub
jno
call
push
(bad)  
cmpsl
ljmp
aaa    
cmpsb
or
xchg
add
jae
iret   
arpl
or
fsin   
sub
or
pop
js
push
adc
jge
inc
xor
mov
xchg
lods
add
xlat
sbb
jno
dec
pop
in
out
mov
inc
sub
sbbl
sbb
push
js
jbe
add
lods
or
stos
das    
nop
les
push
xor
scas
lods
jle
mov
jnp
mov
inc
push
mov
js
jl
push
leave  
lods
or
stos
das    
nop
les
and
and
outsl
int3   
cs icebp 
push
push
xor
scas
clc    
inc
inc
mov
jnp
mov
popl
add
xchg
jns
add
insl
xchg
fcompl
push
xor
insb
arpl
sub
cmp
push
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
das    
int
scas
inc
iret   
sub
mov
pop
add
mov
in
sbb
add
inc
ret
iret   
movsb
adc
imul
or
or
mov
sbb
mov
(bad)  
jle
add
cmp
dec
andl
daa    
loope
dec
(bad)  
mov
fadd
jge
add
ficom
loopne
pushf  
insb
cmp
xchg
push
daa    
cmp
std    
mov
inc
outsl
cld    
cs icebp 
aad
scas
out
data16 jo
pop
sbb
add
les
cmc    
and
or
mov
insl
inc
clc    
cs icebp 
push
push
xor
mov
dec
loopne
and
scas
jne
dec
flds
cmp
lret   
(bad)  
jno
xlat
cmpsl
sub
ljmp
js
or
cmp
and
push
int3   
xor
jmp
mov
addr16 push
movsb
imul
popa   
mov
sbb
rcrl
inc
jle
cs mov
push
test
dec
enter
js,pt
xchg
dec
out
push
jg
test
mov
mov
inc
pop
fsubs
push
enter
jno
not
adc
addr16 push
movsb
imul
cmp
into   
lock popa 
int
adc
in
and
stos
push
ds cltd 
std    
mov
mov
fcompl
or
inc
push
and
dec
cmp
stc    
mov
inc
dec
lds
mov
adc
add
cli    
pop
cli    
aas    
xchg
jp
pop
lahf   
or
adc
jg
pop
int
js
sbb
push
in
mov
cs lret 
icebp  
sub
test
xlat
dec
les
push
gs inc
cmp
aam
push
adc
rorl
dec
cld    
outsb
(bad)  
aas    
fsubrl
jno
xor
test
adc
imul
ss adc
add
and
push
xchg
sub
(bad)  
std    
xor
fimul
movsb
cmp
cwtl   
mov
(bad)  
movaps
js
inc
fist
jmp
lret   
mov
fwait
xor
xchg
daa    
aam
fisub
jle
xor
movb
add
mov
cli    
(bad)  
jb
(bad)  
xchg
sub
add
mov
cmc    
mov
roll
add
aas    
xlat
dec
fdivl
(bad)  
adc
add
mov
sub
int
repz xlat
adc
xchg
in
push
std    
std    
cmpsl
add
ja
xchg
clc    
je
sti    
pop
scas
jnp
sbb
sbbb
inc
pop
mov
and
(bad)  
shrl
ret    
gs mov
inc
xor
adc
pop
adc
xchg
fisttpl
lahf   
and
(bad)  
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
jecxz
(bad)  
mov
arpl
xlat
mov
mov
iret   
movsb
dec
scas
jb
push
sub
popf   
mov
xchg
sub
xchg
xor
clc    
cmp
hlt    
xor
test
jg
adc
inc
test
pop
sbb
push
out
or
cmpsb
cmp
add
les
adc
lahf   
ljmp
into   
xchg
cwtl   
mov
cmp
push
test
xor
outsl
add
push
cwtl   
xor
lods
mov
out
(bad)  
std    
cmp
lahf   
sbb
adc
and
sub
es iret 
cmp
dec
cmpsb
movsb
test
adc
fidiv
loop
xor
mov
pop
loop
jno
rolb
pop
add
(bad)  
mov
and
js
mov
fcompl
pop
movsl
les
imul
cmp
push
sub
mov
int
movl
fimul
movsb
cmp
sbb
(bad)  
push
xlat
xchg
jle
push
sahf   
xor
(bad)  
sbb
push
(bad)  
mov
insb
xchg
adc
xchg
jno
fucomip
cltd   
inc
popf   
andl
jno
sahf   
addr16 push
movsb
cmp
or
mov
cmp
ljmp
fmuls
movsb
cmp
pushl
jge
or
dec
outsb
hlt    
mov
cmpsl
mov
inc
out
out
mov
mov
cmc    
js
lea
sub
add
cld    
mov
jnp
lods
pushf  
adc
sbb
push
stc    
pop
(bad)  
fstpt
mov
fnsave
dec
xor
lock jge
xlat
cmpsl
insl
jno
sub
dec
mov
icebp  
js
popf   
(bad)  
repnz fwait
je
ds stos
mov
xchg
sarl
sbb
imul
or
mov
lods
cli    
and
cmp
xchg
mov
std    
and
xor
popa   
and
repz and
js
xlat
adc
addr16 push
movsb
imul
popa   
mov
ljmp
cmp
mov
push
aaa    
test
dec
enter
xor
dec
dec
bound
push
xchg
xchg
jae
shl
jl
scas
loopne
daa    
loop
cmp
dec
(bad)  
in
js
sub
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
into   
scas
das    
adc
xorb
(bad)  
negl
movsb
aam
hlt    
pslld
mov
mov
fcompl
sub
inc
test
pop
sbb
or
jp
mov
cmp
inc
inc
insl
(bad)  
mov
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
icebp  
push
cmp
or
mov
xlat
push
test
xchg
cwtl   
lods
dec
pusha  
pop
out
inc
repnz ss mov
sarl
cmp
or
dec
add
mov
cmp
fmuls
xchg
or
jne
sub
mov
mov
inc
dec
lds
mov
cwtl   
popf   
and
push
iret   
add
jle
push
xor
ret    
or
insl
mov
cmc    
push
out
stc    
movsl
mov
std    
adc
stc    
cmc    
push
inc
jg
and
dec
lods
dec
sti    
test
lcall
push
cmpsb
les
cmp
test
xlat
loopne
lock pop
xlat
aas    
loopne
xchg
(bad)  
sarl
sub
mov
and
iret   
pop
iret   
outsl
nop
lahf   
sub
and
cmp
divb
adc
(bad)  
cmpsb
es repz jnp
or
stos
push
ss test
dec
enter
cmp
pop
cmp
mov
inc
test
pop
sbb
jae
jp
mov
cmp
inc
inc
cmpsb
(bad)  
jbe
xlat
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
dec
negl
cli    
(bad)  
scas
mov
xlat
push
xchg
scas
insb
xor
inc
pop
xor
push
insb
xor
mov
sbb
mov
fimul
mov
inc
add
scas
mov
or
jae
or
jp
sub
xchg
mov
pop
stc    
mov
inc
dec
lds
mov
pop
and
push
iret   
add
jle
push
xor
ret    
stc    
cmp
insl
mov
gs push
out
stc    
movsl
mov
cld    
mov
add
cmp
inc
and
and
dec
lods
sbb
jp
sub
cltd   
test
push
cmp
test
xlat
loopne
inc
test
inc
js
sub
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
lods
mov
push
push
pusha  
xor
iret   
(bad)  
cltd   
pop
fdivrl
mov
or
sti    
test
xlat
adc
xchg
inc
loop
std    
std    
cmpsl
add
ja
xchg
clc    
je
sti    
adc
cmp
sbb
sbbb
inc
pop
mov
daa    
int
scas
push
(bad)  
shrl
ret    
sub
lret
stos
adc
pop
adc
xchg
mov
into   
outsl
nop
mov
imul
lods
mov
xor
push
outsb
adc
js
sub
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
rcl
sub
in
cmp
jle
xor
iret   
(bad)  
std    
lods
ss jns
or
hlt    
pslld
mov
mov
fcompl
sub
inc
cwtl   
stc    
das    
adc
repnz dec
in
out
enter
cmc    
mov
roll
sbb
dec
mov
dec
mov
repnz inc
add
jns
xlat
cmpsl
xchg
add
sub
or
int3   
lock jbe
arpl
sbb
mov
push
add
popf   
das    
aad
push
add
imul
push
movsl
mov
mov
jns
sbb
dec
jg
pop
scas
rorl
add
pop
daa    
int
(bad)  
rcll
enter
pop
jae
imul
out
test
xchg
sub
xchg
(bad)  
scas
les
in
arpl
dec
add
mov
stc    
mov
idivl
jns
sbb
mov
aaa    
out
pop
jae
sub
bsf
test
ljmp
xor
(bad)  
xlat
adc
addr16 push
movsb
imul
popa   
pop
push
cmpsl
cmp
scas
mov
aaa    
roll
jmp
cmp
inc
xlat
inc
sub
iret   
jbe
ds
out
dec
fmull
dec
and
outsl
scas
push
mov
fs sub
mov
stos
rcrb
pop
iret   
outsl
nop
mov
in
shrb
rcrl
dec
add
cmc    
mov
sub
dec
pop
(bad)  
pop
mov
mov
mov
divl
daa    
push
aad
push
dec
cmp
mov
mov
xor
(bad)  
cmpsb
dec
push
ja
xchg
xbegin
add
sbb
sbbb
inc
pop
mov
cmp
(bad)  
shrl
ret    
push
mov
pop
xor
adc
pop
jge
arpl
hlt    
xchg
adc
int
addr16 nop
mov
jns
mov
xchg
cwtl   
push
fsubrp
test
push
adc
(bad)  
cmc    
in
cmp
add
stc    
rcll
mov
jae
out
cmp
roll
jae
aaa    
xlat
dec
je
mov
add
pop
inc
push
ret    
adc
sbb
pop
clc    
ljmp
inc
ret
iret   
movsb
(bad)  
mov
jle
xchg
mov
roll
sbb
ss lcall
add
xor
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
cmp
mov
mov
incb
cmpsb
cmp
jae
out
cmp
mov
ja
lret   
inc
inc
and
adc
lcall
add
sbb
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
cmp
push
aaa    
inc
mov
into   
ja
mov
lds
and
cmpsb
cmp
jae
out
cmp
jno
push
sub
jp
lret
imul
add
adc
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
cmp
push
cmp
sub
add
test
rolb
cmp
jae
out
cmp
ss ror
das    
mov
lds
add
ss lcall
add
jns
push
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
cmp
push
cmova
loope
kxnorw
add
cwtl   
fisubrl
cmp
dec
shr
mov
mov
push
loop
mov
fcomip
add
fmul
xchg
add
jno
push
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
cmp
push
xor
sub
mov
sbb
lds
popf   
repnz xor
out
cmp
push
lods
push
das    
mov
out
aam
pop
mov
and
jae
push
sbb
adc
jae
shlb
hlt    
xor
test
jbe
add
pop
mov
add
sti    
ss cli 
sbb
nop
imul
add
out
cmp
rcl
sub
sub
adc
repnz out
sub
inc
mov
cld    
mov
cmp
adc
xor
cwtl   
loopne
mov
psubq
daa    
jg
cmp
fsubrs
xchg
fbstp
ret    
sub
out
xor
cld    
rorb
out
std    
mov
mov
mov
out
fs jne
sti    
popa   
xor
adc
add
std    
hlt    
pusha  
jge
mov
lcall
scas
cmp
test
sbbb
ss ds mov
iret   
xor
or
mov
repz sbb
cmp
mov
fldenv
sub
inc
inc
inc
in
test
inc
sahf   
push
mul
cltd   
cmpsl
jno
arpl
test
mov
lock sub
int
and
loope
fadd
sub
ret    
jno
push
push
mov
ror
movsb
mov
popa   
jg
xchg
or
cmp
cltd   
cli    
subb
(bad)  
out
sub
inc
mov
inc
jmp
or
adc
xchg
xor
push
cmp
adc
inc
jecxz
repnz fsubrl
jns
xlat
cmpsl
xchg
add
xor
push
and
dec
jb
or
gs pop
lahf   
jle
imul
mov
int
clc    
je
sti    
ja
push
jl
mov
cmpl
out
xlat
cmpsl
mov
mov
cmp
ficom
in
arpl
(bad)  
(bad)  
test
xlat
cmpsl
inc
hlt    
mov
dec
push
inc
xchg
js
dec
pop
test
pop
cmp
ficom
in
arpl
xchg
pop
and
dec
jp
fcmovnbe
arpl
hlt    
xchg
clc    
mov
sbb
push
add
sub
repz mov
or
inc
mov
add
les
sub
sbb
mov
fcompl
sub
out
mov
pusha  
add
cld    
data16 jge
cs test
loope
dec
jbe
(bad)  
scas
aam
fisubr
xor
mov
fnstsw
dec
imul
(bad)  
ror
inc
mov
outsl
mov
test
mov
ret
loopne
stos
call
or
push
(bad)  
out
sub
inc
imul
repz cmp
sbb
add
test
xor
push
sub
sub
xor
scas
mov
in
cmp
push
sub
sub
test
jns
jecxz
aas    
repz cmp
(bad)  
ja
xchg
xlat
icebp  
inc
push
sti    
xor
mov
out
xlat
inc
pop
mov
sbb
push
adc
pop
push
or
cli    
aaa    
xor
sub
cwtl   
adc
into   
lods
hlt    
stc    
das    
adc
xor
adc
out
enter
cmc    
mov
rorl
repnz ljmp
ja
insb
xchg
div
pmaxsw
mov
xchg
das    
jno
int
xor
xor
push
scas
imul
sarb
adc
lods
hlt    
stc    
das    
adc
test
or
mov
out
dec
cs into 
cmp
inc
sub
inc
cmp
jnp
and
mov
jp
jbe
int3   
jnp
and
ret    
xor
pop
shl
shll
xor
cld    
xchg
fcoms
(bad)  
pop
mov
js
fdivp
fbld
dec
lret   
mov
js
fsubrp
arpl
inc
movsb
xchg
adc
fldcw
sbb
movsl
pop
inc
fimul
mov
mov
pop
inc
loopne
xor
ret
push
xor
push
lret
test
movsl
mov
push
(bad)  
push
jecxz
and
stc    
movsl
mov
aaa    
push
mov
or
mul
enter
mov
cmc    
xor
push
test
cmp
lahf   
cmc    
mov
fs sub
add
push
mov
pminub
ja
xchg
xlat
icebp  
inc
push
sti    
mov
mov
sbb
sbbb
inc
pop
mov
pop
int
repz int3 
addr16 push
and
ret    
sbb
and
daa    
xchg
movsb
xor
sbbb
outsb
sub
sti    
pop
aam
out
sbb
sub
divl
stc    
fiadd
les
loopne
outsl
rcrl
mov
push
sub
xor
rcrb
pop
iret   
xchg
cwtl   
dec
stos
mov
in
cmp
jmp
sub
cwtl   
in
jg
ficomp
(bad)  
cmp
stc    
loopne
xchg
scas
push
iret   
(bad)  
insl
inc
jo
sub
push
repnz pop
jnp
jns
xlat
cmpsl
mov
jae
ja
or
push
or
cmp
xor
xchg
cwtl   
inc
push
cmp
and
xchg
jb,pt
int3   
pop
push
and
adc
int
lret   
int3   
pop
push
or
nop
and
xchg
mov
aas    
mov
mov
sub
inc
gs mov
in
out
stc    
movsl
mov
lret
js
inc
in
in
aaa    
fcoml
sub
push
imull
jge
cmp
jnp
and
stc    
aam
xchg
cwtl   
sub
xchg
or
push
(bad)  
xor
xor
pusha  
xchg
push
and
jns
cmp
ret    
mov
scas
push
and
addl
fimull
andl
(bad)  
xor
test
push
sub
out
loope
cmp
sahf   
sbb
shrb
frstor
fsubrl
jns
xlat
cmpsl
pop
test
xlat
dec
jp
mov
es add
cmp
add
neg
outsb
sti    
jns
xlat
inc
pop
mov
adc
lret   
push
into   
dec
jge
adc
inc
sbb
xor
js
popa   
in
sbb
add
inc
ret
iret   
movsb
or
dec
jg
push
mov
sub
movsl
mov
xchg
sub
xchg
(bad)  
sub
clc    
cmp
hlt    
xor
test
sub
ret
negb
(bad)  
jmp
out
or
cmpsb
cmp
repz cltd 
out
sub
les
outsl
scas
push
(bad)  
shrl
ret    
movsl
(bad)  
insl
xor
rcrb
pop
iret   
outsl
nop
xchg
in
in
shrb
rorl
dec
add
cmc    
mov
push
cwtl   
add
in
int3   
mov
add
cmp
(bad)  
push
(bad)  
mov
jmp
(bad)  
dec
dec
add
add
xor
add
icebp  
fsubrl
jns
xlat
inc
pop
mov
adc
(bad)  
push
into   
pop
inc
daa    
adc
cmpsl
cmc    
mov
push
pop
fsubl
pop
sbb
add
inc
ret
iret   
movsb
insb
xorl
movsl
mov
xchg
sub
xchg
aaa    
cld    
or
in
arpl
clc    
cmp
hlt    
xor
test
das    
sub
ret
negb
lds
jp
stos
cmpsb
cmp
push
push
jnp
les
adc
aaa    
inc
loope
ret    
push
and
mov
jne
jb
inc
ret    
push
and
cltd   
cmpsl
fist
mov
int
out
ret    
push
and
mov
mov
cmpsl
adc
popa   
xor
ja
js
jb,pt
dec
aas    
push
loopne
mov
mov
mov
roll
xchg
xchg
xlat
dec
call
mov
fs sub
fnstsw
test
pop
sbb
add
inc
ret
iret   
movsb
scas
sbb
shll
xchg
sub
xchg
je
adc
clc    
cmp
hlt    
xor
test
das    
sub
ret
negb
lds
imul
cmp
dec
repnz pop
das    
les
adc
int
cmpsl
or
jge
lods
in
shl
in
sub
loop
ds popf 
cmc    
and
dec
testb
push
and
iret   
pop
iret   
outsl
nop
aad
add
in
cmp
jg
or
mov
lret
movsb
std    
sub
repz inc
pop
pop
test
lret
and
mov
js
lcall
fwait
pop
mov
add
jb
xchg
in
inc
iret   
and
scas
and
stos
pop
push
je
push
cmovbe
ret    
mov
push
inc
in
fimull
jp
mov
push
shlb
hlt    
xor
test
cs sub
lcall
fmull
sti    
sbbl
scas
loopne
add
test
fsubrl
jns
xlat
cmpsl
stc    
adc
imul
mov
es mov
push
lods
or
daa    
lcall
or
mov
(bad)  
out
dec
test
add
sub
addr16 xchg
sti    
ja
hlt    
leave  
(bad)  
int3   
cmpb
sub
js
add
icebp  
fsubrl
jns
xlat
inc
pop
mov
sbb
push
popl
into   
pop
imulb
insb
jp
cwtl   
fisubrl
cmp
jae
out
cmp
push
pop
ja
mov
lret   
inc
inc
dec
lock push
es insl
jne
add
jo
add
icebp  
fsubrl
jns
xlat
inc
pop
mov
sbb
push
mov
daa    
push
into   
adc
loope
(bad)  
xchg
jp
popf   
repnz xor
out
cmp
lcall
add
xlat
inc
pop
mov
adc
push
cmp
call
xor
test
xor
xchg
fisttpl
lods
xchg
lret   
fcoml
ficom
loopne
sub
stc    
inc
mov
lods
add
push
fisubrl
push
pop
das    
fidivl
pop
aam
or
(bad)  
dec
pop
push
xor
inc
rcl
xchg
push
jnp
(bad)  
jae
jecxz
out
sub
jne
adc
jne
ja
add
pop
xor
stos
iret   
movsb
sbbl
jno
popa   
sti    
jne
inc
or
divb
or
cmp
cltd   
cli    
adc
cmpl
inc
mov
inc
mov
add
unpcklps
out
xchg
cmp
adc
mov
add
mov
xchg
mov
pop
push
out
xchg
mov
test
in
cmp
lahf   
lods
or
inc
fisttp
cmc    
in
inc
mov
mov
mov
fdivrl
push
dec
xchg
mov
mov
jg
out
or
frstor
iret   
jbe
ds
out
dec
xchg
pop
xchg
fsubl
push
cmc    
jo
xchg
test
ss lahf 
dec
inc
mov
sub
adc
pop
in
bnd fs jns
sti    
push
loopne
mov
mov
mov
roll
or
test
ja
cltd   
mov
sub
popa   
dec
and
cmovno
and
inc
add
jl
xlat
adc
xchg
(bad)  
std    
cmpsl
add
ja
xchg
clc    
je
sti    
cli    
dec
fnstenv
mov
out
xlat
inc
pop
mov
adc
push
scas
push
(bad)  
shrl
ret    
repz dec
fwait
or
adc
pop
adc
xchg
add
xor
add
and
imul
ret    
test
and
add
test
cmp
cmp
adc
mov
sub
fmulp
jbe
ds
out
sub
inc
mov
leave  
push
or
test
(bad)  
cs mov
push
push
push
cmp
fwait
js
inc
xor
jecxz
repnz fsubrl
jns
xlat
cmpsl
pop
sahf   
fs sbb
or
shrb
rcrl
inc
adc
dec
(bad)  
rcll
enter
push
dec
jle
imul
xchg
sub
xchg
(bad)  
movsl
(bad)  
adc
arpl
dec
cmp
pop
cmp
pusha  
in
push
xchg
xor
inc
mov
mov
enter
mov
(bad)  
ja
xchg
xlat
icebp  
inc
push
sti    
lock inc
fbstp
mov
out
xlat
inc
pop
mov
pop
int
jnp
out
push
or
push
xchg
sub
xor
test
xchg
and
xchg
fwait
icebp  
pop
adc
arpl
dec
add
and
adc
xor
pop
mov
test
daa    
mov
loope
sub
(bad)  
inc
jecxz
jl
add
clc    
popf   
add
into   
fsubrl
jns
xlat
inc
pop
mov
pop
int
dec
(bad)  
jmp
into   
ret    
jg
and
test
pop
push
adc
popa   
in
sbb
(bad)  
hlt    
inc
ret
iret   
movsb
mov
popf   
jo
(bad)  
mov
mov
xor
push
and
cltd   
movzbl
sti    
mov
jae
or
sub
push
mov
ds fmulp
pop
and
cmpsw
in
sub
(bad)  {%k6}{z}
(bad)  
cltd   
pmaxsw
sbb
out
or
imul
push
mov
test
out
aaa    
andl
jb
xorb
icebp  
add
pop
mov
cld    
dec
xchg
sar
jecxz
mov
jns
mov
rorl
out
jns
(bad)  
jae
or
je
sub
mov
sub
ror
jbe
ds
out
sub
inc
mov
iret   
je
xor
pop
adcl
xchg
hlt    
jl
sbb
nop
mov
movsl
mov
push
shlb
hlt    
xchg
leave  
push
test
nop
cmp
pop
dec
jae
loop
push
and
dec
adc
cmp
cltd   
cli    
or
test
jbe
ds
out
sub
inc
mov
push
and
xor
push
adcl
in
pusha  
movsb
mov
repnz ds enter
inc
test
fsubrl
jns
xlat
cmpsl
scas
xchg
sub
(bad)
shrb
rorl
lcall
push
dec
enter
push
dec
out
pushf  
cmp
pusha  
adcl
xchg
adc
arpl
dec
cmp
dec
je
jbe
std    
mov
divb
xchg
clc    
je
sti    
cld    
push
mov
sbbb
inc
pop
mov
insl
int
scas
push
(bad)  
shrl
ret    
rcl
jno
xor
adc
pop
adc
xchg
pop
incl
insl
aaa    
xor
jae
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
mov
lods
sub
xlat
mov
mov
iret   
movsb
scas
pop
mov
push
sub
pusha  
adcl
ja
in
arpl
clc    
cmp
hlt    
xor
test
and
ret
negb
lds
fnsave
jp
stos
cmpsb
cmp
dec
in
dec
and
les
fwait
adc
lahf   
ljmp
push
cmpsl
or
call
(bad)  
cmc    
out
ja
and
adc
or
push
cmpsl
or
sbb
adc
gs dec
ja
add
clc    
lea
iret   
movsb
mov
popa   
xchg
in
inc
fiadd
push
shl
mov
add
dec
sub
test
jbe
ds
out
sub
inc
mov
dec
xchg
xor
inc
addl
in
(bad)  
test
push
cmp
jnp
iret   
inc
xor
test
fsubrl
jns
xlat
cmpsl
nop
push
fisub
(bad)
js
xlat
adc
addr16 push
movsb
imul
inc
add
js
xlat
adc
xchg
lds
std    
mov
divb
xchg
mov
inc
insl
sbb
sbbb
inc
pop
mov
insb
int
scas
push
sub
aad
ss xor
adc
pop
adc
xchg
movsb
hlt    
xchg
lahf   
test
lret
mov
nop
jb,pt
inc
dec
push
loopne
pop
cmp
jbe
mov
roll
xchg
int3   
and
inc
ja
jns
sarb
xor
lahf   
push
inc
pop
sbb
ret
iret   
movsb
add
sbb
repz inc
pop
pop
test
lret
and
xor
stos
mov
js
or
mov
roll
and
and
xchg
outsb
adc
es
(bad)  
inc
ret
iret   
pop
iret   
outsl
nop
mov
stos
sbb
cmp
jg
or
movhps
frstor
push
inc
jo
fimull
jnp
pop
push
shlb
hlt    
xor
test
es sub
adc
cmp
int3   
sar
mov
nop
je
imul
sti    
jns
xlat
cmpsl
pop
negl
add
sub
and
lock pop
pop
push
jp
cltd   
test
inc
mov
fdivp
xor
test
and
insl
add
xor
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
adc
push
and
out
push
icebp  
popf   
sbb
sbb
adc
add
stc    
mov
mov
fdivrl
push
dec
and
jnp,pn
cmp
push
sub
xor
(bad)  
xchg
adc
mov
lds
pop
pop
push
shlb
hlt    
xchg
add
insl
xor
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
mov
movsl
inc
and
mov
iret   
movsb
jmp
sub
mov
xchg
sub
xchg
push
imul
add
cmp
hlt    
xor
test
and
test
pop
sbb
jnp
jp
stos
cmpsb
cmp
lods
fs and
inc
outsl
scas
push
(bad)  
shrl
ret    
push
shr
xor
stos
rcrb
pop
iret   
outsl
nop
or
and
in
in
shrb
rorl
dec
add
cmc    
mov
and
sbb
rorb
(bad)  
push
(bad)  
mov
sbbb
add
mov
cld    
mov
mov
fdivrl
push
dec
cmovp
jl
sub
xor
int3   
xchg
ret
inc
mov
lds
mov
arpl
hlt    
xchg
jnp
insl
xor
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
mov
mov
xlat
mov
mov
iret   
movsb
lcall
push
sub
mov
xchg
sub
xchg
add
sbb
clc    
cmp
hlt    
xor
test
pop
sub
ret
negb
lds
dec
push
out
or
cmpsb
cmp
jns
mov
les
inc
outsl
scas
push
(bad)  
shrl
ret    
sub
shll
xor
rcrb
pop
iret   
outsl
nop
adc
xor
in
in
shrb
rorl
adcl
int
add
cmc    
mov
fs inc
or
cld    
push
jecxz
dec
dec
(bad)  
ficoml
dec
pop
testl
xchg
inc
mov
mov
mov
fdivrl
push
dec
fldl
out
push
out
or
lret   
test
cmc    
repnz adc
mov
lds
dec
fwait
(bad)  
push
shlb
hlt    
xchg
sbb
xor
sti    
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
jecxz
(bad)  
mov
fwait
and
xlat
mov
mov
iret   
movsb
xchg
push
mov
push
sub
mov
xchg
sub
xchg
jb
pop
or
arpl
clc    
cmp
hlt    
xor
test
inc
sub
ret
negb
lds
push
out
or
cmpsb
cmp
inc
shlb
inc
outsl
scas
push
(bad)  
shrl
ret    
xor
stos
rcrb
pop
iret   
outsl
nop
aaa    
cmpsb
sub
in
in
shrb
rcrl
clc    
in
or
dec
add
cmc    
mov
jo,pt
in
cld    
push
jecxz
dec
dec
(bad)  
ficoml
dec
jns
and
sbb
sbb
mov
std    
mov
mov
fdivrl
push
dec
fistpl
push
out
add
test
xor
pop
(bad)  
xor
xor
push
shlb
hlt    
xchg
sbb
insl
xor
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
mov
cmpsb
cmp
xlat
mov
mov
iret   
movsb
mov
pop
jmp
adcl
jae
in
arpl
clc    
cmp
hlt    
xor
test
inc
sub
ret
negb
lds
xor
stos
cmpsb
cmp
inc
inc
sbb
les
inc
outsl
scas
push
(bad)  
shrl
ret    
bswap
cmp
xor
rcrb
pop
iret   
outsl
nop
cmp
in
shrb
shll
test
add
cmc    
mov
cmp
in
les
insl
imul
arpl
and
loopne
lret   
cltd   
leave  
pop
xchg
xchg
jmp
mov
cs test
fwait
ja
adcb
and
pop
pusha  
or
or
shrl
add
cmp
(bad)  
sti    
push
inc
imul
inc
jae
dec
mov
lret   
add
aaa    
add
js
add
sahf   
sti    
icebp  
out
into   
(bad)
dec
xchg
push
loopne
push
and
out
cmp
roll
movsb
cmp
xlat
dec
push
inc
scas
ja
lods
mov
das    
mov
cli    
jmp
sbb
ret
iret   
movsb
mov
push
add
xor
movsb
imul
fimul
aad
cmp
dec
pop
xor
lahf   
add
inc
ret
iret   
pop
iret   
outsl
nop
sarl
pop
push
or
sti    
adc
(bad)  
aad
mov
add
jl
xlat
adc
xchg
xor
or
std    
cmpsl
(bad)  
ficomp
dec
pop
lret
ljmp
ret
iret   
pop
iret   
outsl
nop
out
(bad)  
je
cmp
sbb
xor
out
sub
test
mov
add
jl
xlat
adc
xchg
scas
in
ret
adc
imul
ficom
cmp
dec
es mov
cmp
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
push
lods
test
rclb
xchg
int3   
(bad)  
jle
inc
pop
mov
add
jo
xlat
adc
xchg
dec
push
movsb
imul
ficomp
out
aas    
cmp
dec
and
cmp
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
add
cmp
cld    
inc
xor
xor
int3   
(bad)  
xor
pop
mov
add
jo
xlat
adc
xchg
push
ret
pop
movsb
imul
or
cs stos
jno
ljmp
ret
iret   
pop
iret   
outsl
nop
int
call
hlt    
inc
xor
ret    
push
int3   
(bad)  
lock out
pop
mov
add
jl
xlat
adc
xchg
iret   
sbb
add
ja
xchg
clc    
je
sti    
dec
rcll
sbbb
inc
pop
mov
add
push
scas
push
(bad)  
shrl
ret    
sbbl
pop
adc
xchg
iret   
add
add
xor
add
or
or
sar
addr16 mov
pop
std    
sbb
mov
sub
push
(bad)  
sub
fimull
xchg
arpl
hlt    
xor
test
pop
sub
testb
mov
fs fs nop
imul
add
out
cmp
add
fs ja
in
jmp
(bad)  {%k6}{z}
xchg
(bad)  
mov
mov
or
push
(bad)  
out
sub
inc
mov
(bad)  
sub
lret   
clc    
je
sti    
(bad)  
sbb
jp
imul
push
fmulp
sub
test
ret
negb
(bad)  
mov
out
enter
cmc    
mov
roll
jnp
sbb
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
cmp
stos
cli    
mov
add
xor
icebp  
nop
or
imulb
push
pop
cmp
(bad)  
sti    
les
pop
fadds
mov
lock fsubrl
jns
xlat
inc
pop
mov
or
push
jecxz
outsl
push
into   
adc
jmp
lea
mov
out
int3   
out
cmp
popa   
cmpsb
xchg
cld    
push
dec
adc
inc
repz or
and
push
cmpsl
fmul
jbe
ds
out
sub
inc
mov
xlat
lret
push
sub
and
adc
shrb
xchg
and
sub
mov
arpl
hlt    
xchg
push
push
das    
or
xor
sti    
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
mov
adc
xlat
mov
mov
iret   
movsb
xlat
pushf  
(bad)  
imul
pop
(bad)  
rcr
jnp
les
jmp
imul
imul
sbb
fimull
andb
(bad)  
xor
test
pop
sub
movb
sbb
sti    
mov
mov
imul
sti    
jns
xlat
cmpsl
in
sub
sbb
push
inc
cmp
xchg
sbb
pop
dec
cmp
mov
push
fimull
andl
(bad)  
test
push
sub
loop
sbb
xchg
push
xor
sti    
jnp
pop
bound
(bad)  
imul
into   
out
cmp
or
jne
in
jmp
(bad)  {%k6}{z}
xchg
(bad)  
mov
test
sbb
mov
out
push
(bad)  
out
sub
inc
mov
push
test
xor
addl
imul
fwait
imul
sub
int3   
cmp
sub
inc
test
pop
sbb
push
out
enter
cmc    
mov
roll
or
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
fwait
jne
or
or
mov
mov
sbb
jno
movsb
and
xchg
pop
cmp
(bad)  
sti    
movb
adc
jno
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
add
push
(bad)  
int
push
into   
outsl
pusha  
cmp
fwait
imul
cmp
dec
shr
mov
mov
inc
push
cld    
cmp
sub
aam
loope
popa   
aas    
test
fdivrp
in
(bad)  
push
push
in
imul
mov
mov
fdivrl
push
dec
ljmp
fstl
sub
shll
add
or
jo
scas
ror
jbe
ds
out
dec
adc
fstps
add
inc
in
inc
xchg
and
xor
ret    
push
iret   
push
and
adc
jb,pt
dec
lret   
push
loopne
mov
mov
mov
roll
adc
xlat
dec
sbb
(bad)  
jbe
stc    
xor
ret    
cmc    
push
test
mov
ret
sbb
ret
iret   
movsb
out
lret
and
in
adc
in
push
xchg
cld    
push
fimull
(bad)  
mov
arpl
hlt    
xor
test
pop
sub
out
std    
add
ds dec
nop
sub
cmpsb
xlat
andl
(bad)  
imul
int
cmp
mov
mov
jmp
(bad)  {%k6}{z}
xchg
(bad)  
mov
mov
or
push
(bad)  
out
sub
inc
mov
fcmovbe
cmp
addl
popa   
sbb
jp
imul
dec
push
jnp
cmp
mov
inc
test
pop
sbb
imul
jbe
mov
roll
subl
les
sub
push
repnz inc
add
jns
xlat
cmpsl
int3   
mov
or
or
mov
in
cld    
data16 jae
or
out
or
out
fnstenv
test
cmp
adc
xor
(bad)  
or
int
mov
push
or
or
xlat
loopne
loop
xor
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
pop
dec
popa   
push
in
cmp
jl
xor
out
cwtl   
int
addr16 cwtl 
dec
pop
mov
hlt    
pslld
mov
mov
fcompl
sub
inc
test
pop
sbb
push
adc
mov
roll
push
jmp
dec
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
add
pop
or
or
shrb
(bad)  
mov
cmc    
pop
int
(bad)  
rcll
enter
push
dec
or
outsl
out
mov
xchg
sub
xchg
cmc    
dec
repnz push
in
arpl
dec
cmp
adc
std    
scas
adc
pop
sbb
xchg
(bad)  
pusha  
mov
addb
sub
jbe
cmp
mov
inc
imul
dec
jl
xlat
adc
addr16 push
movsb
imul
inc
rcrl
test
aad
fistl
mov
dec
and
inc
sub
iret   
jbe
ds
out
dec
fwait
cmp
les
in
outsl
scas
push
(bad)  
shrl
ret    
pop
(bad)  
cmp
rcrb
pop
iret   
outsl
nop
outsl
je
or
in
shrb
(bad)  
icebp  
scas
loope
int
add
cmc    
mov
dec
push
add
in
les
sbb
push
sub
(bad)  
xorl
ret
scas
cmp
mov
fcompl
sub
repz fsubrl
jns
xlat
inc
pop
mov
sbb
int
mov
out
mov
jbe
push
adc
or
mov
jno
paddsw
add
xor
xchg
add
bound
xor
sub
sub
cwtl   
add
add
add
outsb
sti    
jns
xlat
inc
pop
mov
sbb
das    
push
into   
pop
rcll
(bad)  
dec
arpl
jb
adc
popa   
in
sbb
mov
hlt    
inc
ret
iret   
movsb
(bad)  
adc
shll
xchg
sub
xchg
sbb
arpl
clc    
cmp
hlt    
xor
test
push
sub
ret
negb
lds
xchg
sub
out
or
cmpsb
cmp
test
add
les
outsl
scas
push
(bad)  
shrl
ret    
push
pop
cmpsb
daa    
xor
rcrb
pop
iret   
outsl
nop
es icebp 
aaa    
paddsw
shrb
(bad)  
mov
repnz sbb
stos
push
xorb
pop
adc
fisttpl
xlat
in
int3   
mov
in
fstps
pop
jmp
daa    
ret    
sub
lods
or
or
push
(bad)  
pop
cmpsb
push
mov
pop
icebp  
pop
sub
arpl
jecxz
lret   
dec
inc
ret
cmp
jge
sub
test
push
(bad)  
aam
cltd   
push
sbb
inc
add
(bad)  
ss out
sub
xchg
sbb
jg
mov
int3   
xor
add
loop
sbb
cmp
sub
xchg
fldl
mov
out
(bad)  
hlt    
cmpsl
dec
(bad)  
xor
mov
sub
test
sbbl
in
(bad)
and
das    
negb
xor
mov
les
jbe
(bad)  
jecxz
lock out
push
into   
outsl
inc
inc
mov
push
pop
stc    
sahf   
movsb
push
test
xor
rcr
stc    
mov
xchg
icebp  
sbb
je
inc
mov
lea
in
cld    
push
adc
shll
aas    
add
dec
fsubrs
das    
negb
xor
mov
dec
int3   
push
jbe
(bad)  
jecxz
lock scas
push
push
jle
sbb
into   
outsl
inc
decb
lods
aas    
ret    
or
and
push
movsb
(bad)  
mov
add
inc
or
test
add
push
leave  
rcr
stc    
add
sarl
mov
push
push
jle
cmpsl
scas
clc    
jl
xlat
cmp
les
les
sarb
test
js
insb
add
mov
das    
negb
xor
sub
scas
xchg
fisttpll
lret
ljmp
js
pop
adc
pop
ret    
in
push
and
mov
clc    
and
cmc    
enter
out
loop
jmp
test
and
lret   
daa    
stc    
ficom
lds
jecxz
lret   
repz inc
pop
loopne
cmp
test
push
fildl
mov
divb
adc
or
sbb
cmp
mov
xchg
aad
push
or
fldcw
les
lret   
rcl
sbb
addr16 int
push
loopne
xor
jmp
fisttp
popa   
and
push
into   
rcll
mov
es add
subl
sbb
test
xor
add
loop
adcb
lods
sub
push
mov
cmp
and
or
xchg
sub
in
push
in
ljmp
mov
mov
pop
jge
sub
lahf   
xchg
lds
mov
lcall
dec
sub
(bad)  
add
daa    
jmp
stos
sub
gs nop
or
lret
imul
xchg
loopne
lahf   
cld    
add
in
out
fisub
out
xor
call
lock mov
fcmovbe
adc
add
les
push
xor
cltd   
cmpsl
or
test
or
inc
outsb
adc
int
add
add
std    
call
dec
fidiv
out
mulb
xchg
fild
add
test
clc    
int
arpl
out
push
or
mov
sub
add
inc
ret
iret   
pop
iret   
outsl
nop
cwtl   
lock or
in
cmp
pushf  
mov
in
push
cwtl   
into   
(bad)  
movsl
push
mov
ss add
pslld
mov
mov
fcompl
sub
inc
test
pop
sbb
imul
enter
cmc    
mov
roll
test
dec
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
dec
lea
(bad)
shrb
shrl
mov
int
(bad)  
rcll
enter
push
dec
inc
rcrl
adcl
xchg
clc    
in
arpl
dec
cmp
dec
jp
ret
scas
adc
jmp
pusha  
dec
int
push
or
dec
test
stc    
jbe
cmp
mov
push
js
movsb
xor
and
js
xlat
adc
addr16 push
movsb
imul
popa   
cmpsl
hlt    
iret   
inc
shl
lods
std    
(bad)  
shll
pusha  
shlb
stos
push
aas    
cltd   
decb
fcompl
or
(bad)  
cmp
dec
fisub
pushf  
in
push
mov
mov
ds
out
sub
inc
mov
insl
rclb
xor
pop
xchg
mul
xchg
xchg
adc
out
xchg
scas
call
mov
push
shlb
hlt    
xchg
imul
call
push
test
ljmp
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
dec
push
dec
aad
push
into   
pop
cli    
frstor
lds
ds rol
divb
cmpsb
cmp
jae
out
cmp
insb
dec
(bad)  
mov
stos
(bad)  
dec
lods
leave  
inc
inc
inc
jb
mov
jmp
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
rorb
out
cmp
hlt    
mov
in
into   
(bad)  
sti    
lock
xor
add
jo
xlat
adc
xchg
je
rclb
mov
je
movsb
imul
inc
mov
mov
mov
fdivrl
push
dec
test
add
out
mov
dec
sub
popa   
and
xor
add
jo
dec
mov
(bad)  
out
dec
test
js
or
and
cld    
add
out
aam
jg
inc
fidivr
xchg
clc    
je
sti    
adc
mov
sbb
sbbb
inc
pop
mov
dec
push
scas
push
(bad)  
shrl
ret    
sub
icebp  
adc
adc
pop
adc
xchg
cmpsl
cltd   
pop
jmp
pop
ret
xchg
shl
shll
sbb
push
mov
sub
(bad)  
scas
or
mov
ljmp
inc
mov
inc
jge
sub
cli    
lea
ds
out
sub
inc
mov
outsl
mov
xchg
jnp
xchg
sub
fwait
in
cmp
cmovno
inc
xor
fsubl
fsubrl
jns
xlat
cmpsl
(bad)  
dec
mov
cmp
jb
or
or
(bad)  
imul
scas
push
(bad)  
shrl
ret    
mov
xlat
adc
rcrb
pop
iret   
outsl
nop
test
in
shrb
shll
dec
add
cmc    
mov
shll
stc    
xlat
in
les
jne
into   
loope
inc
xchg
adc
mov
xlat
bound
in
add
(bad)  
clc    
xchg
push
sub
add
jns
in
pop
jne
sub
push
mov
sbb
inc
xchg
jl
pop
cmp
fstp
adc
mov
inc
cmp
jmp
push
push
or
push
imul
xchg
xor
(bad)  
dec
ja
add
roll
push
cmp
push
mov
(bad)  
out
sub
inc
add
pushf  
rorl
out
pushf  
lds
xchg
and
gs push
(bad)  
and
cmp
inc
out
popf   
(bad)  
sbb
inc
dec
push
xchg
ret
(bad)  
out
xlat
inc
pop
mov
(bad)  
sti    
cmc    
push
pop
aad
or
mov
ljmp
inc
mov
addr16 and
lea
ds
out
sub
inc
mov
fcoms
xor
jge
je
adc
jge
jmp
out
cmp
sbb
enter
inc
fsubl
fsubrl
jns
xlat
cmpsl
pop
test
mov
stos
mov
pop
pop
ret    
cmc    
int
(bad)  
rcll
enter
push
dec
jae
mov
pusha  
adcl
pushf  
in
arpl
dec
cmp
mov
std    
mov
divb
xchg
clc    
je
sti    
out
jg
(bad)  
sbb
sbbb
inc
pop
mov
hlt    
int
scas
push
(bad)  
shrl
ret    
cld    
mov
lea
arpl
hlt    
xchg
push
xor
std    
ret
and
cli    
fnstcw
add
imul
pushf  
bound
leave  
xchg
sbb
cmpsl
loopne
cltd   
xor
jnp
jo
adc
or
mov
adc
je
xor
cli    
xchg
dec
xchg
or
arpl
mov
inc
adc
leave  
mov
sub
out
jnp
xlat
cmpsl
ret    
jmp
aam
push
sarb
sarl
push
inc
jb
movsl
jbe
xchg
dec
lret
or
sbb
push
insl
inc
fs push
sbb
adc
cld    
test
xor
pop
pop
jo
aam
data16 aam
in
jmp
cmc    
jmp
mov
(bad)  
sti    
jnp
out
scas
push
lea
aam
dec
xor
inc
cmp
cmp
lds
mov
sub
ja
lock inc
iret   
outsl
inc
sahf   
mov
ret    
push
out
sbb
cmp
cmpsl
fucomi
dec
into   
pusha  
push
movsb
cmp
jmp
fmuls
movsb
mov
(bad)  
js
push
adc
rcll
mov
cli    
mov
xchg
and
xor
mov
mov
xchg
cmp
fidivl
jb
ret    
jmp
cmpsl
sbb
cmp
sarl
addr16 push
pop
push
fimull
andl
(bad)  
test
push
sub
push
add
cmp
data16 insb
xlat
sti    
test
sub
nop
imul
jne
out
cmp
xchg
push
push
xlat
in
jecxz
(bad)  {%k6}{z}
xchg
(bad)  
mov
adc
or
push
(bad)  
out
sub
inc
mov
out
mov
addl
aam
mov
orl
xor
movsb
popa   
ret
negb
lds
addr16 fsub
jp
mov
cmp
inc
inc
rorl
or
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
gs xor
or
or
mov
xlat
and
adc
xor
addr16 or
sub
out
pop
push
mov
jno
sub
mov
add
push
xchg
or
and
lods
xor
popa   
push
or
inc
or
xor
in
pop
sub
xchg
fsubrl
mov
push
dec
push
and
fstps
mov
add
pop
mov
sbb
push
or
push
jmp
push
mov
test
test
mov
xor
xchg
mov
(bad)  
lret
dec
xor
std    
or
out
mov
aaa    
out
ss inc
push
mov
adc
lcall
mov
adc
loopne
mov
cmp
orb
jae
ret
or
push
cwtl   
jmp
jne
inc
in
test
mov
xor
call
cli    
stos
sub
mov
xor
mov
sub
push
lea
xor
lock
sub
sbb
mov
(bad)  
jnp
mov
inc
ss fwait
pcmpeqw
jl
mov
stos
inc
sbb
leave  
fwait
pop
cmp
pop
std    
cmp
sahf   
push
test
xchg
fsubrl
mov
lds
or
mov
add
ret    
xchg
sub
ret
or
xor
jle
dec
add
jg
sub
sbb
cmp
mov
scas
cli    
imul
mov
xor
jmp
jne
dec
dec
loop
leave  
inc
fcom
xor
ret    
xchg
sub
scas
mov
sbb
inc
pop
pop
xchg
inc
jp
xor
adc
fs mov
sti    
xchg
fisubrl
mov
loopne
into   
sti    
push
jne
mov
fdivr
lods
or
stos
inc
sbb
adc
add
pop
xchg
sahf   
push
dec
ret
icebp  
xchg
fsubrl
mov
test
mov
fldenv
in
in
cmpsl
cmp
inc
orl
mov
test
pop
insb
fdivrs
or
fsubrl
jns
xlat
inc
pop
mov
lock int
xlat
inc
iret   
sub
jg
int
(bad)  
adc
arpl
pop
pop
insl
fsubl
pop
sbb
mov
hlt    
inc
ret
iret   
movsb
lods
hlt    
sub
push
sub
rcl
push
mov
inc
mov
jno
xchg
out
and
cmp
xchg
sub
inc
jl
fistpl
mov
xchg
jae
les
lock lea
out
sarb
iret   
clc    
lock insb
jle
xchg
leave  
add
shlb
jecxz
fcmovnb
jns
cmpsl
(bad)
mov
or
mov
mov
leave  
das    
and
dec
pop
sub
rcll
les
pop
mov
push
xchg
cld    
or
(bad)  
(bad)  
push
shlb
hlt    
xor
test
or
out
std    
or
pop
into   
enter
jo
xlat
scas
inc
test
imul
sti    
jns
xlat
cmpsl
popf   
daa    
imul
push
xor
inc
inc
addr16 cmp
clc    
lcall
push
inc
pop
aad
add
cmp
or
fsubrl
jns
xlat
inc
pop
mov
(bad)  
int
scas
inc
(bad)  
sub
and
stc    
sbb
nop
jge
ffreep
ret
cmpsb
cmp
dec
int3   
out
cmp
mov
and
jge
xor
andl
and
jnp
cmp
xchg
fnop   
rorl
mov
adc
sub
push
mov
mulb
pusha  
jp
push
scas
imul
lock or
pusha  
xor
cmp
lea
push
int
popa   
fwait
jae
cmp
insb
arpl
fistpll
pop
jp
adc
push
adc
roll
mov
sbb
outsb
xlat
inc
imul
in
or
call
in
or
inc
ficom
mov
sbb
or
mov
cs sub
and
jne
xor
xchg
(bad)  
dec
rolb
sub
xchg
cmp
or
mov
lock jb,pt
inc
das    
sub
mov
xchg
je
daa    
jne
cltd   
jnp
pop
xorl
call
add
or
cmp
lret   
fldenv
cwtl   
daa    
push
xlat
dec
clc    
or
jne
pop
clc    
mov
aam
push
adc
rcll
dec
cld    
outsb
xchg
xor
sub
xor
or
stc    
jnp
cmp
push
insb
pop
(bad)  
dec
cmp
repz int
mov
and
or
mov
lret
jne
sub
(bad)  
(bad)  
ret
iret   
pop
iret   
outsl
nop
aam
dec
cld    
in
cmp
jge
xor
jmp
movsb
roll
mov
add
js
xlat
adc
xchg
decb
sbb
mov
mov
add
lods
ss sahf 
out
or
xchg
push
pop
sub
sub
call
xchg
shl
sarl
aas    
push
mov
sar
std    
cmp
scas
push
mov
add
pop
int3   
cmp
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
int
push
or
sub
pmulhw
sbb
imul
arpl
fs pop
jl
popa   
in
sbb
add
inc
ret
iret   
movsb
mov
sub
movsl
mov
xchg
sub
xchg
lret   
faddl
clc    
cmp
hlt    
xor
test
pop
sub
ret
negb
lds
mov
or
cmpsb
cmp
cmp
lahf   
pop
les
outsl
scas
push
(bad)  
shrl
ret    
call
stos
rcrb
pop
iret   
outsl
nop
int3   
popf   
push
(bad)  
in
in
shrb
ror
cmp
int
add
cmc    
mov
test
xlat
in
int3   
mov
ret
loope
mov
mov
call
mov
sbb
loopne
jmp
lock sub
jbe
cmp
ret    
into   
out
adc
inc
out
leave  
jle
cltd   
dec
pop
data16 sbb
ds pop
out
stos
or
int
or
ret
in
cmp
push
shrb
out
push
add
aaa    
ret    
icebp  
cmp
(bad)  
inc
xchg
aas    
popa   
ret
or
push
out
fldl
xchg
divl
add
(bad)  
xchg
or
cmp
adc
sti    
sysenter 
(bad)  
rcrl
inc
sti    
jmp
cmc    
into   
mov
arpl
mov
mov
lock ret 
(bad)  
rorb
das    
sarb
push
gs lret
loopne
mov
mov
mov
roll
scas
mov
stos
repz jne
jno
(bad)  
xor
aas    
out
jecxz
mov
out
and
inc
add
je
xlat
adc
xchg
data16 jge
std    
std    
cmpsl
add
ja
xchg
clc    
je
sti    
pushf  
clc    
and
sbb
sbbb
inc
pop
mov
repz int
scas
push
(bad)  
shrl
ret    
mov
int
xor
adc
pop
adc
xchg
mov
xor
(bad)  
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
jecxz
(bad)  
mov
leave  
lret
mov
mov
iret   
movsb
dec
mov
int3   
push
sub
(bad)  
(bad)
mov
pop
mov
rclb
ret
and
movsl
push
lret
repnz movb
in
jnp
cmp
and
(bad)  
or
addl
rolb
dec
inc
sbb
data16 cmp
ljmp
push
out
lahf   
or
xchg
sbb
call
ret    
fs jns
cld    
push
adc
sar
lahf   
mov
mov
(bad)  
jno
into   
outsl
inc
(bad)  
jmp
insb
mov
mov
sti    
lods
jb
xchg
and
mov
sar
lds
lret
popf   
jmp
inc
dec
pop
and
or
sub
sahf   
xor
movsl
test
or
(bad)  
mov
jae
mov
out
aaa    
rolb
out
cmc    
sbb
lret
xor
cmp
(bad)  
out
stc    
test
in
mov
je
dec
and
aam
push
adc
roll
add
mov
out
xor
out
stc    
test
in
push
cwtl   
and
lahf   
jb
mov
(bad)  
inc
or
aaa    
rolb
fimul
lds
sub
lcall
or
(bad)  
ss out
repz and
repz
lret
and
repnz sbb
cmpsl
repnz xchg
daa    
jle
into   
(bad)  
xor
jne
outsl
js
sti    
xor
loop
sbb
xor
outsl
inc
lret
and
add
jge
and
mov
(bad)  
leave  
outsb
je
scas
mov
push
or
sub
sub
and
jmp
xchg
cli    
out
sub
iret   
jbe
ds
out
sub
inc
mov
lock inc
add
lods
lds
in
xchg
mov
movsb
sub
dec
xor
push
shlb
hlt    
xchg
in
sbb
repz xchg
lret   
ret    
sti    
lods
js
pop
fidivrl
stos
pop
loope
cltd   
lahf   
push
rcll
mov
(bad)  
je
pop
mov
add
push
sub
cmp
ret
test
rolb
cmpsb
xchg
lods
fld
into   
jl
xchg
lods
push
(bad)  
fsts
out
ljmp
ret
iret   
pop
iret   
outsl
nop
cmp
jmp
xchg
mov
in
sbb
daa    
fsubs
mov
add
je
xlat
adc
xchg
(bad)  
xor
stc    
test
rcll
jo
xchg
ljmp
imul
je
lret   
sbb
stos
sarl
mov
mov
mov
fdivrl
push
dec
in
push
xor
cmp
insl
adc
cmp
xchg
and
aaa    
sbb
iret   
jbe
ds
out
dec
movsl
push
(bad)  
and
mov
mov
mov
bound
ss xchg
mov
(bad)  
lods
jge
jbe
jns
mov
xor
jp
out
lea
popa   
and
loop
pushf  
sub
outsl
shl
rcll
mov
mov
in
mov
cmp
lods
(bad)  
ljmp
sub
lret
rolb
dec
jae
lds
es xor
xchg
fsub
lods
bound
jae
sti    
leave  
cmp
fimull
movl
es mov
movsb
cmp
outsl
adc
and
repz lds
or
xor
mul
subl
int
cmc    
jle
fucomi
jne
(bad)  
push
and
std    
mov
lret
into   
aas    
inc
mov
lds
test
mov
ljmp
test
mov
push
shlb
hlt    
xor
test
and
jle
or
mov
cltd   
call
hlt    
shrb
fldcw
fsubrl
jns
xlat
cmpsl
call
dec
icebp  
add
cld    
test
imul
jmp
rolb
js
sub
aaa    
lds
pusha  
jp
cmp
and
push
pop
out
fs add
inc
lret
cmp
bound
in
scas
vmwrite
inc
iret   
outsl
inc
push
orl
add
and
(bad)  
fsubs
xchg
xchg
nop
xor
and
jo
xlat
adc
addr16 push
movsb
imul
cmp
jbe
cmp
shrl
mov
mov
push
mov
cli    
mov
mov
fcompl
mov
xchg
jae
(bad)  
(bad)  
movsb
ds mov
xor
cld    
leave  
loopne
stos
cld    
dec
lea
out
mov
xchg
sbb
out
jg
jbe
int
cmp
scas
jbe
adcb
or
fsubrl
jns
xlat
inc
pop
mov
out
int
pop
dec
dec
sub
and
jmp
gs into 
arpl
fs pop
jl
popa   
in
sbb
mov
hlt    
inc
ret
iret   
movsb
mov
adc
push
sub
movsl
mov
xchg
sub
xchg
adc
jecxz
in
arpl
clc    
cmp
hlt    
xor
test
cmp
ret
negb
lds
or
cmpsb
cmp
and
and
les
outsl
scas
push
(bad)  
shrl
ret    
adc
stos
rcrb
pop
iret   
outsl
nop
xlat
dec
inc
aam
in
shrb
sarl
dec
add
cmc    
mov
(bad)  
call
int3   
mov
rol
into   
loope
arpl
or
lret   
aaa    
add
cmp
out
icebp  
lods
sbb
ljmp
dec
inc
sub
add
mov
mov
roll
cltd   
pop
call
dec
pusha  
sbb
shlb
ret    
(bad)  
icebp  
addr16 push
mov
out
and
inc
add
jl
xlat
adc
xchg
cmp
into   
std    
std    
cmpsl
add
ja
xchg
clc    
je
sti    
fs ds
iret   
sbb
sbbb
inc
pop
mov
in
push
scas
push
(bad)  
shrl
ret    
pop
cld    
aad
xor
adc
pop
adc
xchg
xchg
cmpsl
jmp
aaa    
xor
add
ljmp
add
jle
cmp
data16 and
int
bound
les
iret   
movsb
xor
mov
pop
xchg
push
insl
pmaxsw
mov
mov
inc
repz fcompl
add
insb
movb
(bad)  
popa   
jp
mov
jge
and
and
jne
xor
and
jo
xlat
adc
addr16 push
movsb
imul
cmp
inc
or
shrl
jbe
inc
jge
inc
sub
iret   
jbe
ds
out
dec
stos
out
aas    
les
in
outsl
scas
push
(bad)  
shrl
ret    
insl
je
sysenter 
stos
rcrb
pop
iret   
outsl
nop
pop
insl
and
in
in
shrb
roll
mov
mov
cmc    
mov
lds
xlat
in
les
dec
sarb
(bad)  
ljmp
jl
lea
out
into   
addr16 nop
jmp
cmc    
les
fiaddl
mov
or
inc
push
mov
jne
lcall
add
add
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
jmp
push
sub
sub
neg
jne
lds
xor
in
sbb
mov
hlt    
inc
ret
iret   
movsb
sub
or
cltd   
cmp
mov
mov
fdivrl
push
dec
cli    
push
jne
out
push
jp
sub
push
sub
cwtl   
xor
pop
and
add
jae
mov
mov
sub
mov
and
cltd   
cli    
or
stos
iret   
jbe
ds
out
sub
inc
mov
jle
or
pop
or
xchg
cmp
ljmp
jb
sub
leave  
sbb
add
mov
out
mov
jmp
out
xchg
push
pusha  
fnstsw
mov
outsl
push
bt
outsl
nop
(bad)  
out
pop
aad
mov
(bad)  
add
pusha  
hlt    
push
jae
mov
mov
pop
popa   
xchg
inc
iret   
mov
add
mov
test
fsts
mov
or
cmp
lret   
cmc    
jno
xlat
cmpsl
pop
lods
and
jnp
jne
(bad)  
dec
pop
in
cld    
push
adc
(bad)  
repnz dec
pusha  
loope
dec
cld    
outsb
(bad)  
sub
add
sbb
jge
test
sarl
xchg
fst
sub
pop
inc
lahf   
sub
push
dec
push
pop
scas
jne
sub
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
mov
gs aad
cmp
jne
xor
push
push
add
(bad)  
or
cmp
add
jo
xlat
adc
xchg
daa    
push
xor
inc
jb
sldt
push
dec
jmp
inc
lret
adc
adc
pop
jp
or
inc
inc
ds cltd 
cmpsl
jne
repz jg
aam
jae
ret
or
repnz fistl
sub
ret
cmp
jmp
popa   
push
sbb
or
jle
fsubr
stc    
test
out
xchg
insl
or
loopne
movsb
leave  
rorb
mov
addr16 pop
pusha  
pushf  
js
mov
pop
dec
sub
lds
dec
mov
in
cmp
and
cmp
and
loope
scas
cmp
frstor
sti    
add
lret   
std    
adc
inc
arpl
xlat
dec
pop
enter
mov
or
xor
jo
addr16 push
movsb
cmp
enter
lcall
(bad)  
imul
jbe
cltd   
xor
xor
fadds
call
aas    
push
popf   
adc
inc
xchg
mov
sbb
jb,pt
lret   
jnp
loopne
mov
mov
mov
roll
mov
sub
movsl
jbe
ret    
lea
sbb
call
divb
xlat
adc
xchg
adc
bound
fdivl
adc
out
jg
inc
inc
jg
fidivrl
cmp
test
je
les
pop
add
(bad)
clc    
imul
je
rolb
in
and
xlat
dec
cmp
gs je
out
into   
fsubrl
jns
xlat
cmpsl
das    
movsb
xchg
ljmp
add
ljmp
sbb
and
les
add
(bad)  
ficompl
icebp  
je
aaa    
mov
stos
(bad)  
(bad)  
arpl
ret    
fsubrl
repnz pop
jo
and
mov
mov
pop
popa   
push
imul
jecxz
lds
pop
ss pop
ljmp
iret   
out
dec
cwtl   
imul
fldcw
shrd
shll
clc    
aad
pushf  
movl
pusha  
sub
int3   
pop
add
xor
fimul
pop
sti    
fs sub
lock jge
xlat
cmpsl
and
cmp
inc
lods
out
xchg
test
test
cmp
lahf   
arpl
ljmp
cli    
and
sub
or
sub
cli    
dec
inc
loopne
add
pop
je
popf   
movsl
push
and
push
cld    
fadds
xor
fldl
xchg
mov
adc
xor
cwtl   
mov
mov
jnp
xlat
cmpsl
stos
shrl
insl
je
cwtl   
dec
pop
and
jns
test
or
push
je
xchg
dec
lret
outsb
jae
sbb
aad
add
shl
adc
lods
(bad)  
bound
lods
(bad)  
xor
lods
sbbb
imul
add
and
jns
pop
in
or
cmp
lret   
add
loope
push
not
dec
adc
mov
loop
jbe
outsl
push
shrd
push
(bad)  
push
clc    
aad
pushf  
movl
shrb
int3   
pop
add
xor
fimul
aas    
jnp
sub
lock jge
xlat
cmpsl
sub
insb
not
dec
sbb
je
hlt    
jmp
loope
mov
(bad)  
add
pusha  
hlt    
pop
lods
adc
sub
out
jb
dec
ret    
push
loopne
cmpsb
arpl
out
cmp
roll
inc
sahf   
call
cmp
and
cmp
pop
clc    
fiadd
mov
out
and
inc
add
jl
xlat
adc
xchg
mov
std    
std    
cmpsl
adc
jg
add
cltd   
sub
push
in
jle
inc
mov
pushf  
adc
cwtl   
loop
fistpl
xor
sub
mov
xor
adc
fcom
and
add
xor
clc    
lods
or
xor
xchg
cwtl   
ljmp
jp
xor
in
inc
mov
cmc    
mov
xchg
cli    
loope
cmp
add
xor
xchg
js
(bad)  
out
or
(bad)  
cmp
(bad)  
test
rcrb
xchg
xchg
pop
sub
les
rcl
out
repnz mov
fiaddl
pop
into   
inc
sar
cltd   
mov
popf   
inc
insl
add
stos
out
sbb
jno
data16 aaa 
imul
fcmovne
ret
out
jp
jns
(bad)  
je
mov
xchg
mov
push
or
xchg
test
and
fdivr
jp
inc
lea
inc
imul
fmuls
jg
into   
cld    
(bad)  
pop
cltd   
cmc    
xlat
cmp
scas
jbe
add
sub
cmp
in
xchg
jae
jg
data16 jo
mov
xlat
cld    
push
adc
rcll
dec
dec
cld    
mov
and
pusha  
jp
bound
or
inc
push
jecxz
int3   
push
jecxz
fucom
xchg
gs out
test
adc
lahf   
xchg
stos
jmp
lods
cltd   
rorl
mov
and
stos
push
mov
or
cmp
jae
sub
je
sbb
push
push
rorb
jb
shlb
hlt    
xor
test
xor
xchg
jecxz
fdivrp
pop
js
cmp
mov
imul
int
cmp
push
cmp
jmp
(bad)  {%k6}{z}
xchg
(bad)  
mov
mov
or
push
(bad)  
out
sub
inc
mov
test
xchg
clc    
je
sti    
(bad)  
jno
ds sbb
jp
imul
pop
std    
loope
cmp
mov
inc
test
pop
sbb
(bad)  
out
enter
cmc    
mov
roll
ret
xlat
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
ds dec
fs neg
or
mov
xlat
and
sbb
xor
lret   
leave  
or
push
add
inc
shll
cmpsl
scas
jmp
int
iret   
push
daa    
push
jnp
iret   
imul
roll
xor
cmp
ret    
pusha  
fdivrp
jl
mov
or
inc
push
xchg
rorb
in
mov
rorb
xor
sub
inc
fnstsw
aam
adc
lds
movsb
fsubr
cmp
jp
xor
clc    
jne
add
xor
dec
notl
pop
inc
rcl
fiadd
rcrl
dec
insb
fxch
pop
lret   
pop
sbb
fisttp
and
mov
xor
mov
xchg
mov
inc
jae
inc
pop
push
into   
xchg
jmp
and
(bad)  
lock or
out
stc    
push
shrb
ficom
jnp
push
mov
rdmsr  
idiv
mov
jno
cmp
inc
imul
lds
sub
and
inc
dec
and
jno
adc
pop
iret   
pushl
jecxz
mov
xor
dec
mov
or
addr16 ss jb,pt
ret    
(bad)  
push
or
divb
test
test
in
cmp
push
stos
repz xor
mov
les
fimul
pop
mov
dec
in
xchg
or
testb
test
xchg
icebp  
loope
cmpsl
loopne
or
and
out
and
adc
(bad)  
(bad)  
test
adc
fdivrs
or
fsubrl
jns
xlat
inc
pop
mov
loop
push
outsl
ret    
xchg
out
movsl
and
pop
enter
(bad)  
(bad)  
cmp
shr
mov
mov
out
in
xlat
in
imul
iret   
outsl
nop
mov
into   
in
xchg
mov
cmpsl
xchg
jp
call
std    
cmp
cltd   
cli    
subl
(bad)  
out
sub
inc
mov
sti    
insl
add
push
mov
jle
notl
xchg
fldt
fcomps
xor
push
shlb
hlt    
xchg
sub
xchg
xor
push
aaa    
fcomp
mov
insl
add
shl
dec
clc    
xlat
and
cli    
les
repz and
je
xlat
adc
addr16 push
movsb
imul
pop
bnd jmp
shrl
sub
rcl
mov
fnstcw
push
cmp
mov
fcompl
sub
and
stc    
add
jno
or
verr
ja
add
aaa    
jb
lret   
sti    
push
loopne
mov
mov
mov
roll
push
outsl
jecxz
dec
test
icebp  
je
or
lret
inc
add
and
add
inc
ret
iret   
movsb
or
stos
cmp
fadds
xchg
jle
pushf  
out
fnstcw
add
fisub
ret    
pushf  
and
jmp
push
xchg
lock lods
or
shl
(bad)  
mov
cmp
inc
imul
(bad)  
mov
arpl
hlt    
xor
test
in
sub
pop
popf   
orl
(bad)  
out
dec
cmp
inc
fsubl
fsubrl
jns
xlat
cmpsl
test
inc
jecxz
out
xor
mov
add
sub
jno
mov
cmp
nop
or
add
ficomp
shll
sbb
es push
insb
test
xchg
cmp
(bad)  
and
out
and
shlb
pop
std    
adc
in
cmp
lcall
cmp
iret   
inc
mov
mov
mov
fdivrl
push
dec
push
jnp
and
cmp
pushf  
sub
rcrl
ret    
(bad)  
loope
inc
imul
mov
lds
mov
arpl
hlt    
xchg
pop
xor
fdivs
xor
sti    
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
xor
out
cmp
jecxz
mov
mov
iret   
movsb
rorb
push
sub
mov
xchg
sub
xchg
mov
arpl
clc    
cmp
hlt    
xor
test
adc
ret
negb
lds
jp
stos
cmpsb
cmp
mov
pop
adc
les
mov
xchg
int
imul
test
mov
ss cli 
sub
mov
xor
jae
ret    
fist
add
jbe
mov
roll
fbstp
call
daa    
mov
ret    
jge
lods
icebp  
mov
shlb
pop
sbb
ret
iret   
movsb
clts   
sarb
push
sbb
or
sbb
mov
inc
loopne
mov
(bad)  
je
(bad)  
out
cmp
xor
push
push
nop
orb
iret   
imul
or
fsubrl
jns
xlat
inc
pop
mov
(bad)  
push
inc
dec
push
push
into   
(bad)  
jge
and
xor
decb
cmpsb
cmp
dec
int3   
out
cmp
fldt
(bad)  
in
cld    
push
dec
insb
roll
hlt    
pop
jg
loope
jp
mov
ds cmp
cmp
cltd   
cli    
mov
ds
out
sub
inc
mov
(bad)  
into   
icebp  
xor
dec
addb
xchg
mov
popa   
mov
mov
arpl
hlt    
xchg
jae
add
int
outsl
nop
inc
xor
nop
mov
dec
jo
xlat
adc
addr16 push
movsb
imul
popa   
scas
stos
mov
roll
test
(bad)  
fidivr
push
and
dec
enter
(bad)  
movsl
icebp  
cmp
mov
inc
test
pop
sbb
and
jp
mov
cmp
inc
inc
and
dec
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
(bad)  
dec
test
xlat
or
jl
shl
(bad)  
xor
cmp
and
jo
or
jo
shlb
hlt    
xor
test
adc
add
(bad)  
sti    
in
dec
ss nop
imul
cmpsb
cmp
jae
out
cmp
cmc    
xor
mov
cmp
negb
movsl
outsb
loop
arpl
cmp
ljmp
add
push
outsl
test
push
mov
mov
sbb
les
(bad)  
int
fldenv
xchg
stc    
pop
xchg
call
loopne
and
jg
adc
jns
rorb
jno
jb
xchg
inc
adc
jno
pop
fs mov
sub
cmp
sahf   
hlt    
and
push
loopne
mov
mov
mov
roll
mov
out
xlat
dec
insb
sub
jl
ret    
and
bound
out
and
inc
add
je
xlat
adc
xchg
jbe
ds std 
std    
cmpsl
add
ja
xchg
clc    
je
sti    
mov
mov
out
xlat
inc
pop
mov
aad
push
scas
push
(bad)  
shrl
ret    
mov
(bad)  
lock xor
adc
pop
adc
xchg
mov
xor
(bad)  
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
jecxz
(bad)  
mov
in
mov
repz mov
iret   
movsb
dec
adcl
aam
rcr
scas
ret    
jns
movsl
mov
xor
jge
lea
sub
push
and
movsl
push
lret
repz sub
and
in
jbe
dec
je
sub
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
and
pop
(bad)  
in
cmp
jp
xor
xchg
fisttp
adc
mov
mov
hlt    
pslld
mov
mov
fcompl
sub
sub
mov
and
mov
jno
inc
gs dec
or
stc    
test
xchg
dec
(bad)
test
ret    
push
repz je
mov
mov
sub
std    
nop
mov
mov
lahf   
dec
(bad)
lea
ret    
dec
test
or
push
jnp
ss mov
dec
jnp
pop
sbbb
icebp  
push
push
xor
mov
push
dec
or
and
jns
xchg
mov
dec
or
add
fidiv
push
pop
mov
shlb
jge
iret   
mov
mov
rorl
and
lret
inc
inc
out
decb
push
cmp
xchg
je
jge
pop
cmp
xor
(bad)  
jbe
out
dec
popf   
cmp
in
sub
push
sbb
dec
inc
std    
jb,pt
inc
xchg
push
loopne
mov
mov
mov
roll
pop
dec
in
xlat
dec
push
pop
lods
je
fnstsw
inc
cmp
sub
outsb
popa   
pop
sbb
(bad)  
(bad)  
ret
iret   
movsb
xor
or
xor
(bad)  
hlt    
xchg
inc
jge
mov
andnps
fcmovbe
sbb
into   
test
test
xchg
in
out
jne
or
fidivl
jns
ss xor
aas    
inc
mov
mov
push
shrl
push
jns
mov
xchg
mov
and
cli    
cmp
jle
adcl
push
pop
cmp
fimull
test
arpl
hlt    
xor
test
out
sub
fdivl
add
add
fsincos 
outsl
pop
idivb
nop
imul
jae
out
cmp
dec
xchg
xor
xlat
in
jmp
(bad)  {%k6}{z}
xchg
(bad)  
mov
inc
jb
xlat
mov
out
push
(bad)  
out
sub
inc
mov
mov
xor
addl
xor
mov
orl
hlt    
cld    
cmp
mov
inc
test
pop
sbb
cmp
jp
mov
cmp
inc
inc
andl
in
xlat
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
aaa    
dec
imul
or
shrb
roll
dec
(bad)  
rcll
enter
push
dec
xchg
and
jmp
sub
xchg
pop
push
ret
inc
lea
sub
push
and
std    
fwait
or
cmpb
push
pushf  
and
mov
mov
loop
xor
frstor
ljmp
xlat
jg
cmp
sub
out
xlat
cmpsl
inc
in
into   
shll
and
sbb
cmp
scas
xchg
mov
int
std    
(bad)  
rcrb
repz and
js
xlat
adc
addr16 push
movsb
imul
roll
popf   
ret
fdivl
int3   
dec
xlat
inc
sub
iret   
jbe
ds
out
dec
pop
lea
les
in
outsl
scas
push
(bad)  
shrl
ret    
rorl
cld    
xor
rcrb
pop
iret   
outsl
nop
fwait
adc
in
in
shrb
sarl
and
mov
cmc    
mov
cmp
xlat
in
jecxz
(bad)  {%k6}{z}
xchg
(bad)  
mov
mov
in
xlat
mov
out
push
(bad)  
out
sub
inc
mov
mov
lret   
xor
addl
cmp
jp
imul
lods
cmp
cmp
mov
movsb
popa   
ret
negb
lds
std    
cmp
jp
mov
cmp
inc
inc
sbb
(bad)  
fcmovbe
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
scas
mov
mov
xchg
fucomip
cld    
bound
(bad)  
push
(bad)  
mov
sub
and
or
xor
insl
daa    
mov
sbb
bnd jns
inc
cs test
nop
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
sti    
adc
shr
cmp
sti    
dec
or
pop
adc
fiaddl
mov
add
jl
xlat
adc
xchg
mov
cmp
stc    
test
and
add
stos
add
outsb
sti    
jns
xlat
inc
pop
mov
ror
push
jmp
pop
and
mov
add
(bad)  
push
cmp
ss stos
cmp
popa   
in
sbb
ret
iret   
movsb
scas
fdivrl
shll
xchg
sub
xchg
jns
hlt    
shr
arpl
clc    
cmp
hlt    
xor
test
jmp
adc
inc
test
pop
sbb
cmp
jp
stos
cmpsb
cmp
inc
stos
int
les
outsl
scas
push
(bad)  
shrl
ret    
cmp
rcrb
pop
iret   
outsl
nop
ret
fsubrp
in
shrb
shll
mov
ror
dec
add
cmc    
mov
cli    
jmp
mov
xor
out
cmp
xlat
mov
out
push
(bad)  
out
sub
inc
mov
push
sub
xchg
clc    
je
sti    
mov
sub
sbb
jp
imul
or
xchg
out
mov
negb
lds
jp
mov
cmp
inc
inc
push
mov
(bad)  
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
cli    
fldl
(bad)  
or
mov
mov
mov
or
push
sbb
aas    
add
mov
les
sub
xor
(bad)  
cwtl   
xor
rcrl
clc    
enter
inc
push
mov
lret
ljmp
inc
into   
jo
mov
divl
push
sub
popa   
mov
movsb
jbe
push
jle
rcr
pop
dec
lea
(bad)
cltd   
or
sub
mov
hlt    
inc
ret
iret   
pop
iret   
outsl
nop
ficoml
loop
inc
or
arpl
(bad)  
jecxz
outsb
loopne
or
dec
push
hlt    
pslld
mov
mov
fcompl
sub
inc
test
pop
sbb
cmp
jp
mov
cmp
inc
inc
add
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
xchg
into   
pop
fcomp
or
mov
fcmovne
ret
adc
adc
cmpsl
dec
jmp
jge
xchg
mov
push
or
xchg
test
aad
jmp
clc    
ret    
sub
cmpsl
test
sar
insb
daa    
or
imul
and
mov
dec
jo
xlat
adc
addr16 push
movsb
imul
popa   
aaa    
cltd   
push
xor
jp
jno
(bad)  
xor
out
dec
jbe
dec
repz aam
sub
iret   
jbe
ds
out
dec
xor
test
les
in
outsl
scas
push
(bad)  
shrl
ret    
in
sub
lcall
outsl
nop
(bad)  
and
fsubr
in
shrb
ror
fisubr
(bad)  
int
add
cmc    
mov
pushf  
pop
(bad)  
in
jecxz
(bad)  {%k6}{z}
xchg
(bad)  
mov
in
fcom
mov
out
push
(bad)  
out
sub
inc
mov
or
divl
addl
aaa    
sbb
jp
imul
loopne
sbb
cmp
mov
lret
(bad)  
mov
rorb
push
lea
xchg
mov
(bad)  
lods
jge
gs int
jge
stc    
loopne
sbb
xor
addr16 nop
(bad)  
movsb
and
in
imul
popf   
arpl
(bad)  
sti    
movsl
mov
data16 cmpsb
sub
mov
cld    
data16 jge
cs test
stc    
sub
push
lods
push
fwait
lods
cltd   
jge
dec
divl
or
(bad)  
lahf   
mov
jbe
mov
or
fldenv
fwait
cmp
repz and
jo
xlat
adc
addr16 push
movsb
imul
lret   
xchg
sub
mov
mov
mov
push
mov
cli    
mov
mov
fcompl
sub
cmp
popf   
add
mov
mov
(bad)  
xchg
mov
xchg
mov
(bad)  
lods
jge
mov
js
(bad)
mov
jno
mov
xchg
fimul
pop
movsl
lahf   
push
inc
aad
cmp
enter
add
mov
mov
roll
fs int
xlat
dec
cmp
cmp
icebp  
cmc    
mov
jb
pop
sbb
add
inc
ret
iret   
movsb
mov
sub
rcl
ffreep
adc
rorl
cmp
insl
mov
push
and
ja,pt
fidivl
rorb
adc
pop
test
lea
cmp
ret    
mov
or
jno
shlb
hlt    
xor
test
out
add
hlt    
sbb
xchg
and
add
movsl
xor
les
cmpsb
cmp
jne
out
cmp
cmp
inc
fcmovbe
in
jmp
(bad)  {%k6}{z}
xchg
(bad)  
mov
sarb
xlat
mov
out
push
(bad)  
out
sub
inc
mov
push
or
xor
addl
sub
imul
adc
das    
cmc    
cmp
mov
inc
test
pop
sbb
xor
adc
mov
roll
gs
in
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
loopne
call
cli    
mov
leave  
fcmovne
ret
push
add
mov
mov
xchg
mov
lods
jmp
loop
jnp
add
iret   
fisttpl
xor
cli    
(bad)  {%k6}{z}
rcl
fisttpl
popf   
cmpsl
sub
jo
xor
addr16 nop
lcall
push
in
imul
out
cwtl   
xchg
mov
loopne
xor
push
cltd   
jns
rcl
adc
out
fwait
xchg
lahf   
fisttpll
test
lock sbb
(bad)  
ljmp
rcl
pop
sub
inc
test
cmp
fidivl
(bad)  
mov
leave  
or
jmp
xchg
leave  
das    
inc
std    
loopne
sbb
stc    
inc
xor
mov
mov
fdivrl
push
dec
icebp  
lahf   
fidivr
out
lds
mov
add
xchg
push
rcll
fisttpl
push
xchg
mov
adc
cmp
shrb
add
mov
mov
roll
stos
in
dec
or
push
jae
cmp
xchg
cmp
mov
out
and
inc
add
js
xlat
adc
xchg
std    
cmpsl
adc
pushf  
fsubr
fimul
mov
jecxz
jle
mov
adc
pop
mov
pusha  
pop
dec
jp
or
fwait
pop
inc
xor
mov
cwtl   
test
sbb
into   
xor
inc
pop
jmp
xchg
cmpsb
mov
xchg
mov
es push
cmpsl
push
outsb
mov
leave  
mov
inc
aad
push
outsb
mov
leave  
icebp  
sub
mov
dec
pop
cmp
dec
lods
add
sbb
(bad)  
adc
(bad)  
testb
xchg
dec
out
pop
dec
jp
or
rolb
iret   
mov
test
ds
out
sub
inc
mov
mov
jecxz
push
aad
or
adc
and
cmc    
xchg
xchg
movsl
cmp
lahf   
stos
daa    
and
mov
push
shlb
hlt    
xchg
out
add
aaa    
xor
test
xchg
ds inc
pop
fidivr
jb
or
mov
mov
cmc    
(bad)
jge
(bad)  
jge
and
mov
cwtl   
jno
xchg
ficoml
cmpsb
push
outsb
mov
leave  
rcrb
test
das    
bound
and
repz and
test
xlat
adc
addr16 push
movsb
imul
popa   
adc
push
xor
cmp
fldpi  
shrl
mov
mov
jle
xchg
jne
pop
xchg
sahf   
pop
jns
mov
dec
sub
dec
out
pop
dec
jp
or
push
dec
push
jg
pop
mov
(bad)  
(bad)  
mov
sti    
ss cltd 
add
idivb
fdivs
stc    
add
fsubrl
jns
xlat
inc
pop
mov
enter
dec
fbld
into   
mov
sysenter 
(bad)  
inc
adc
adc
in
sbb
ret
iret   
movsb
mov
sub
sub
movsl
mov
xchg
sub
xchg
jo
fxch
in
arpl
clc    
cmp
hlt    
xor
test
add
ret
negb
lds
mov
out
or
cmpsb
cmp
inc
scas
and
les
outsl
scas
push
(bad)  
shrl
ret    
setne
lcall
outsl
nop
cmp
in
shrb
shll
fs push
enter
mov
cmc    
mov
cli    
(bad)  
xlat
in
mov
xor
out
rolb
rcl
mov
out
push
(bad)  
out
sub
inc
mov
or
loope
addl
sub
jp
imul
or
xchg
out
mov
negb
lds
jp
mov
cmp
inc
inc
insl
dec
adc
xlat
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
icebp  
aaa    
aaa    
rcr
or
shrb
roll
mov
rcll
enter
push
dec
pop
(bad)  
out
out
mov
xchg
sub
xchg
and
arpl
dec
cmp
movsl
pushf  
or
std    
std    
mov
xchg
clc    
je
sti    
int
mov
sbb
sbbb
inc
pop
mov
into   
int
scas
push
(bad)  
shrl
ret    
push
mov
lea
arpl
hlt    
xchg
dec
lret
aaa    
xor
arpl
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
shl
xchg
(bad)  
mov
iret   
xor
xlat
mov
mov
iret   
movsb
and
movsl
sub
rcr
jb
shrl
or
mov
cwtl   
cmp
andb
jmp
test
xchg
mov
es push
sti    
insb
jb
xchg
leave  
mov
inc
aas    
into   
dec
nop
adc
sub
stos
test
adc
or
pop
jae
xchg
jnp
jb
jnp
stos
dec
jp
or
and
adc
mov
loop
out
mov
es cmp
dec
movsb
lea
and
(bad)  
adc
mov
mov
stos
dec
jp
ljmp
sub
lea
sar
mov
ja
inc
push
test
leave  
daa    
dec
sub
mov
jb
xchg
leave  
rcrb
test
jb
or
xchg
inc
js
rolb
outsl
gs push
or
fimull
andl
(bad)  
test
sbb
cli    
push
in
cmp
aam
jnp
scas
stos
adc
insb
jb
cltd   
xchg
das    
shrb
xchg
fiaddl
and
sub
lea
add
pop
icebp  
add
fsubrl
jns
xlat
inc
pop
mov
(bad)  
fisttpl
and
addr16 inc
jnp
(bad)  
aaa    
sub
fstp
popa   
in
sbb
add
inc
ret
iret   
movsb
mov
sub
movsl
mov
xchg
sub
xchg
and
clc    
cmp
hlt    
xor
test
pop
sub
ret
negb
lds
pop
mov
stos
cmpsb
cmp
push
test
les
outsl
scas
push
(bad)  
shrl
ret    
pop
mov
lcall
outsl
nop
sub
in
shrb
(bad)  
mov
dec
(bad)  
add
cmc    
mov
subl
sbb
and
lea
sti    
shr
pusha  
xor
xchg
dec
mov
(bad)  
scas
rcll
test
xor
and
xor
or
xchg
mov
lahf   
movsb
insl
test
jge
xor
lods
frstor
adc
jne
push
mov
imul
mov
leave  
das    
pop
in
and
and
in
shll
xchg
js
sbb
jg
rolb
repnz out
pop
push
test
sub
int3   
mov
or
(bad)  
ja
es push
mov
lea
push
sti    
push
loope
sbb
jg
rolb
push
pop
jae
sub
xchg
cmp
xchg
mov
popa   
fldenv
pushf  
sbb
repz and
jl
xlat
adc
addr16 push
movsb
imul
popa   
addl
xor
negb
mov
shll
lret
insl
int3   
push
xlat
inc
sub
iret   
jbe
ds
out
dec
sbb
dec
and
outsl
scas
push
(bad)  
shrl
ret    
enter
xor
rcrb
pop
iret   
outsl
nop
in
add
in
in
shrb
shrl
or
int
add
cmc    
mov
sub
xlat
in
jecxz
(bad)  {%k6}{z}
xchg
(bad)  
mov
mov
(bad)  
mov
out
push
(bad)  
out
sub
inc
mov
sahf   
aaa    
in
xor
addl
and
imul
xlat
xchg
fucomi
cmp
mov
lret
sarl
cli    
mov
mov
(bad)  
cmp
ss xchg
mov
(bad)  
lods
jge
(bad)  
mov
mov
push
lahf   
ds lret
pop
iret   
addr16 nop
ljmp
jg
xor
aaa    
mov
cmc    
pop
(bad)  
adc
(bad)  
dec
pop
test
cmp
inc
lea
cmp
incl
or
jno
shlb
hlt    
xor
test
sbb
jmp
jo
sti    
into   
insl
popf   
and
inc
jecxz
repnz fsubrl
jns
xlat
cmpsl
lret
(bad)  
or
mov
mov
ljmp
and
inc
cld    
or
cmp
adcl
dec
add
shrl
xor
mov
mov
fdivrl
push
dec
imul
cmp
cmp
adc
out
(bad)  
lret   
pop
inc
aas    
sbb
xor
dec
xor
push
shlb
hlt    
xchg
jmp
xor
sti    
push
in
mov
les
sub
adc
or
mov
addr16 push
movsb
imul
jecxz
(bad)  
mov
dec
xchg
(bad)  
mov
mov
iret   
movsb
inc
sub
sub
sub
mov
xchg
sub
xchg
fisubr
xor
cmp
hlt    
xor
test
adc
adc
inc
test
pop
sbb
adc
jp
stos
cmpsb
cmp
outsl
in
inc
adc
les
inc
outsl
scas
push
(bad)  
shrl
ret    
leave  
sbb
xor
rcrb
pop
iret   
outsl
nop
repz add
in
in
shrb
(bad)  
jne
or
mov
cmc    
mov
sub
in
les
cmpsl
sbb
fnop   
xor
or
imul
jle
ret    
subl
xor
add
(bad)  
icebp  
push
pop
sub
lods
lret   
cmp
int3   
inc
ret    
subl
dec
addr16 push
lods
pop
aaa    
lahf   
out
data16 sbb
push
out
(bad)  
mov
fwait
js
sub
pop
jns
dec
xchg
xor
js
adc
sbb
xor
xchg
cs aaa 
dec
out
mov
adc
jg
das    
(bad)  
mov
jg
inc
sbb
popa   
xor
cltd   
std    
mov
mov
fdivrl
push
dec
cmp
sub
cmp
push
loop
lret   
or
popa   
pop
leave  
xchg
mov
mov
or
js
jae
out
mov
adc
pop
mov
divl
(bad)  
fidivrl
fidivr
cltd   
cli    
mov
ds
out
sub
inc
mov
cltd   
aad
xor
in
inc
loopne
adc
push
repz notb
push
cmp
lcall
fist
out
xlat
cmpsl
icebp  
enter
or
shrb
roll
mov
rcll
enter
push
dec
pop
sar
out
mov
xchg
sub
xchg
and
arpl
dec
cmp
movsl
mov
sub
std    
mov
divb
xchg
clc    
je
sti    
int
mov
sbb
sbbb
inc
pop
mov
(bad)  
int
scas
push
(bad)  
shrl
ret    
push
sbb
adc
pop
adc
xchg
dec
int
(bad)  
aaa    
xor
std    
ret
popa   
mov
or
jae
sub
push
and
iret   
pop
iret   
imul
cmp
sbb
or
sbb
int3   
faddl
mov
hlt    
pslld
ds daa 
out
in
sub
iret   
jbe
ds
out
dec
sub
rclb
cmp
xor
das    
(bad)  
push
dec
dec
mov
mov
les
jp
(bad)  
dec
daa    
out
mov
ret    
inc
mov
(bad)  
stos
inc
sub
sbb
in
sub
testb
xchg
add
push
or
jb
rclb
(bad)  
lcall
cs push
lods
call
push
aas    
loopne
notb
lahf   
test
xlat
add
stos
mov
add
roll
(bad)  
add
pop
cmp
ljmp
test
fnsave
xchg
cwtl   
jno
xchg
ficoml
rcrb
ret    
sti    
mov
and
cltd   
lahf   
push
rcll
mov
or
imul
and
or
cld    
jecxz
(bad)  
loopne
sbb
pop
pop
stos
adc
dec
lods
nop
pushf  
pop
inc
cmpsl
enter
sub
sbb
sub
xor
mov
mov
fdivrl
push
dec
imul
cmp
js
cmp
popa   
adc
add
xlat
xchg
jbe
arpl
iret   
jbe
ds
out
dec
pushf  
sub
or
faddl
mov
adc
movl
pusha  
rorb
adc
jecxz
jnp
cmp
std    
out
jne
mov
push
std    
push
scas
push
test
xchg
das    
sarb
clc    
pushf  
test
faddl
es inc
aad
xlat
subl
push
adc
roll
mov
loopne
jbe
xchg
jne
addr16 mov
mov
push
sti    
daa    
mov
pop
push
and
aad
je
add
fsubrl
jns
xlat
inc
pop
mov
(bad)  
push
popl
and
outsl
mov
xor
and
pop
frstor
pop
sbb
mov
hlt    
inc
ret
iret   
movsb
fiaddl
push
push
sub
movsl
mov
xchg
sub
xchg
inc
mov
shr
add
cmp
hlt    
xor
test
adc
ret
negb
lds
jp
stos
cmpsb
cmp
mov
jnp
les
outsl
scas
push
(bad)  
shrl
ret    
jle
mov
xor
rcrb
pop
iret   
outsl
nop
dec
xor
int3   
in
in
shrb
rcrl
(bad)  
dec
add
cmc    
mov
mov
mov
xor
out
jge
xlat
xlat
mov
out
push
(bad)  
out
sub
inc
mov
movsl
dec
out
addl
push
sbb
jp
imul
dec
sbb
xchg
out
mov
negb
vucomisd
out
enter
cmc    
mov
roll
inc
push
(bad)  
xlat
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
into   
dec
je
(bad)
shrb
shrl
xor
int
(bad)  
rcll
enter
push
dec
into   
out
cmp
adcl
or
in
arpl
dec
cmp
stos
xlat
pop
and
mov
roll
ror
mov
pop
cwtl   
mov
xchg
ds mov
xor
xor
jbe
push
rcll
jle
aaa    
adc
sbb
push
and
push
pusha  
(bad)  
out
addr16 jl
out
jmp
rcr
mov
pop
rcll
pop
data16 sahf 
bound
xor
lods
jbe
movsb
xlat
ficom
jbe
dec
ret
jae
sub
mov
and
iret   
pop
iret   
outsl
nop
and
cmp
add
or
mov
push
or
push
push
hlt    
pslld
mov
mov
fcompl
sub
inc
test
pop
sbb
and
adc
mov
roll
aad
aad
stc    
in
mov
les
sub
push
repnz inc
add
jns
xlat
cmpsl
and
aad
or
mov
fcmovne
ret
out
jp
jns
pop
ljmp
push
or
xchg
test
xor
lods
xchg
push
dec
xor
loopne
sbb
pop
pop
cmpsl
or
xlat
loopne
scas
jbe
fstpt
mov
add
sub
sbb
sub
cmp
and
mov
iret   
mov
out
dec
or
or
push
jg
aaa    
jb
inc
inc
push
into   
loopne
mov
sbb
std    
cmp
lret   
sub
aas    
xlat
cmpsl
enter
(bad)
lcall
rcl
and
cld    
fdivl
sub
adc
push
imul
xchg
ret    
cmp
cmp
jno
cwtl   
fsubp
cmp
idivb
in
es add
ret    
mov
xor
aaa    
jb
int
push
or
loope
(bad)
cmp
xor
xlat
and
je
xor
push
push
fdivs
push
imul
movsb
outsb
(bad)  
es std 
cmp
aam
lcall
mov
sbb
add
add
add
mov
push
push
jnp
push
imul
xchg
cmpsl
push
fwait
mov
jb
inc
sbb
dec
mov
pop
sahf   
std    
cmp
lret   
or
fistp
idivl
rclb
enter
push
pop
adc
jl
pusha  
fsub
jl
loop
(bad)  
imul
fwait
test
fildl
mov
(bad)  
rorl
aaa    
and
(bad)  
(bad)  
rcr
clc    
roll
pop
and
jp
icebp  
aad
and
mov
xchg
jnp
adc
dec
aas    
jg
leave  
icebp  
push
in
ljmp
icebp  
fadd
inc
(bad)  
(bad)  
mov
and
jp
icebp  
aad
sbb
rcrb
adc
aas    
ljmp
adc
aaa    
dec
cmc    
mov
leave  
scas
xchg
fcoml
lock
hlt    
stos
adc
je
mov
sub
dec
stc    
mov
into   
and
inc
repz xor
or
out
xlat
xlat
sub
mov
aaa    
dec
decl
jg
ss test
jl
and
retw
out
and
sub
dec
cmc    
mov
aaa    
push
add
xchg
jnp
adc
pop
sub
mov
aaa    
dec
cmc    
mov
pop
push
cmp
xchg
jnp
adc
pop
outsb
(bad)  
jp
or
jmp
adc
fwait
sub
and
leave  
out
add
repz out
stc    
mov
dec
adc
aaa    
mov
mov
or
dec
inc
jbe
ds adc
popf   
cmp
sub
cmpsl
add
sub
and
int3   
out
add
je
out
sbb
push
mov
mov
fwait
sub
and
int3   
out
adc
xor
dec
cltd   
out
dec
adc
aaa    
dec
decl
insb
push
xor
and
fs mov
fstps
cmp
cmp
inc
or
cmp
test
(bad)  
hlt    
stc    
aad
cmp
inc
or
cmp
repnz fdivrl
dec
stos
out
lock out
cmpsb
(bad)  
repnz movsl
in
or
icebp  
aad
cs push
mov
lcall
adc
jne
stos
mov
mov
aaa    
mov
mov
fstpl
jecxz
or
unpckhps
sub
mov
pop
push
fwait
sub
and
int3   
out
cmpsb
jl
lcall
out
dec
adc
aaa    
mov
(bad)  
(bad)  
das    
dec
fisttpll
cs sbb
sti    
adc
fs cmc 
iret   
cmp
sub
cmpsl
or
ljmp
cmp
cltd   
lock fxtract 
clc    
in
add
sub
gs loopew
(bad)  
fwait
sub
and
shr
lods
fistl
inc
pop
dec
(bad)  
lds
dec
out
add
mov
jp
data16 ror
fdivrl
jge
inc
mov
(bad)  
out
xlat
cwtl   
mov
sub
inc
popl
jle
jp
pusha  
push
push
pusha  
or
cmp
mov
adc
je
mov
das    
(bad)  
xchg
jnp
adc
ret    
mov
pop
and
jp
mov
popa   
pop
ds dec
push
jae
push
sbb
mov
ljmp
or
icebp  
stos
iret   
sbb
push
loopne
jnp
adc
(bad)  
dec
jno
(bad)  
push
add
daa    
lret   
mov
sub
and
iret   
out
adc
pop
or
out
hlt    
mov
aaa    
pop
xchg
fwait
(bad)  
cmp
inc
ja
inc
pop
or
and
addr16 cmc 
ret
adc
aaa    
dec
stc    
mov
sub
add
and
outsb
ret
xor
rorl
sub
and
(bad)  
out
mov
adc
mov
mov
push
cmp
sub
push
jne
cmp
xchg
fdiv
popf   
cmp
sub
popf   
or
pop
xor
pop
fstpt
cmp
xchg
fdiv
lret   
dec
cmp
push
das    
iret   
adc
jb
rorb
push
mov
out
push
pop
jmp
enter
and
jp
imul
xor
pop
and
jp
in
ror
pop
stos
pop
dec
adc
jno
adc
adc
mov
mov
in
mov
cmp
sbb
jl
and
imul
xor
in
xchg
add
aaa    
fwait
sub
and
shr
stos
xor
(bad)  
adc
fisubl
(bad)  
xor
mov
jp
push
andl
dec
hlt    
cmp
popf   
cmp
sub
out
and
jp
pop
(bad)  
lock fadd
sub
movsb
outsl
jmp
mov
or
icebp  
stos
iret   
pop
mov
dec
bnd lock jnp
adc
ret
pop
rcll
dec
adc
aaa    
mov
mov
cmp
jl
dec
ljmp
and
xlat
pop
and
jp
jmp
xchg
fwait
sub
and
xlat
out
adc
pop
inc
lock cmp
jb
imul
or
xchg
mov
fwait
sub
and
out
mov
in
push
mov
fcomip
mov
or
pop
(bad)  
repnz fadd
imul
jne
jno
pop
flds
jp
jmp
loopne
sbb
dec
ret    
popf   
adc
andl
mov
sub
dec
push
adc
ljmp
xchg
jnp
adc
pop
testb
loop
iret   
mov
jp
arpl
icebp  
fadd
addr16 daa 
jbe
imul
push
cmp
or
or
in
iret   
sbb
add
lret
out
jl
and
arpl
xor
jb
fmuls
and
iret   
out
adc
pop
or
(bad)  
hlt    
mov
aaa    
dec
decl
aaa    
ljmp
or
not
xor
and
fwait
sub
and
(bad)  
movsb
xor
fist
or
icebp  
stos
iret   
into   
mov
lahf   
xor
cmp
xor
hlt    
test
gs jl
xchg
cmpl
out
(bad)  
outsb
xor
adc
imul
mov
mov
push
dec
jne
in
into   
xchg
jnp
adc
push
loope
aam
ret    
mov
aaa    
dec
icebp  
test
roll
pusha  
mov
cmp
xor
hlt    
int3   
jle
aam
mov
dec
adc
aaa    
mov
(bad)  
(bad)  
cmp
rorb
cmp
sub
cwtl   
rcrb
out
aaa    
and
out
add
fnop   
std    
xchg
dec
lahf   
adc
aaa    
dec
stc    
mov
sub
push
(bad)  
xor
or
icebp  
xlat
push
mov
aaa    
fnsetpm(287 only) 
xor
push
je
mov
sub
and
leave  
out
add
pop
jb
aaa    
pop
push
push
loope
dec
adc
aaa    
dec
stc    
mov
daa    
(bad)  
lock stc 
mov
and
outsl
mov
std    
aaa    
in
xor
push
sub
xchg
jnp
adc
pop
inc
faddl
sub
mov
pop
xor
and
jl
and
pusha  
(bad)  
out
xlat
in
sahf   
mov
aaa    
mov
pop
xor
cmp
jl
and
jl
repz xlat
push
stos
xchg
sbb
or
push
jb
mov
nop
cmp
popf   
cmp
sub
inc
test
adc
sbb
fcoml
enter
js
mov
pop
je
sub
pop
inc
dec
adc
cmp
test
(bad)  
push
loope
jb
adc
iret   
mov
jp
outsl
scas
int
aaa    
push
pop
lret   
popf   
cmp
sub
xchg
and
or
aas    
dec
call
jnp
adc
push
icebp  
sub
gs pop
mov
xlat
iret   
mov
jp
push
andl
clc    
pop
and
popf   
cmp
sub
mov
fld
fwait
sub
and
xlat
out
adc
add
adc
pop
or
imul
aaa    
and
leave  
out
adc
xor
enter
sub
(bad)  
decb
aaa    
mov
mov
xor
jl
xor
xchg
push
sahf   
xor
popf   
cmp
sub
lods
aaa    
xor
fnstenv
cmp
xchg
fdiv
not
jle
jg
sub
and
clc    
dec
les
and
out
adc
xor
sub
jns
lds
mov
sub
mov
cmpsl
arpl
sub
sti    
adc
pop
push
pop
and
jp
in
ror
and
fimull
sbb
fdiv
popf   
cmp
sub
lods
xor
ja
adc
pop
push
xor
or
hlt    
xlat
add
pop
shlb
sub
cwtl   
neg
hlt    
lds
sub
pop
jp
mov
fwait
sub
and
iret   
out
jmp
xor
ret    
int
or
dec
adc
aaa    
dec
cmc    
mov
cmp
or
xchg
jnp
adc
pop
in
dec
xor
adc
jmp
pop
imul
(bad)  
fwait
sub
and
out
out
dec
loop
push
inc
add
xchg
incl
aaa    
dec
cmc    
mov
(bad)  
(bad)  
fcoml
enter
pusha  
in
repz icebp 
jecxz
mov
mov
jp
push
into   
fsubl
xchg
(bad)  
lahf   
aam
mov
cmp
sub
fwait
(bad)  
jmp
test
and
int3   
out
loop
lahf   
xchg
mov
test
dec
adc
aaa    
mov
mov
sub
pushf  
xchg
mov
mov
adc
mov
test
(bad)  
mov
xchg
jnp
adc
mov
jp
icebp  
stos
iret   
add
lock xchg
fidivrl
adc
loope
dec
jg
leave  
adc
fisub
mov
jp
arpl
icebp  
fdivrl
xchg
pop
adc
or
sbb
icebp  
sbb
or
jmp
pop
in
decl
or
jl
and
outsl
mov
aad
dec
adc
or
sbb
icebp  
sbb
fcoml
neg
hlt    
not
sbb
mov
shld
fwait
sub
and
enter
roll
inc
xor
or
mov
cmp
mov
fcoml
lock jecxz
not
push
(bad)  
(bad)  
data16 or
loop
or
push
in
in
sbb
xor
out
scas
xor
or
hlt    
xlat
xor
scas
enter
(bad)  
call
jnp
adc
pop
in
sbb
int
aam
iret   
mov
jp
push
into   
fcompl
test
pop
(bad)  
fnstcw
adc
pop
decl
dec
outsb
push
jmp
jle
in
in
sbb
xor
out
add
or
test
(bad)  
out
ja
and
and
push
ja
aaa    
lret
jge
push
xlat
iret   
mov
jp
jg
fstp
xor
dec
ret    
test
mov
push
push
data16 sbb
ss fwait
sub
and
fucomip
sbb
and
sbb
adc
cmpsl
jmp
cmp
(bad)  
pop
jle
sbb
jno
push
(bad)  
out
jl
and
gs mov
flds
aad
dec
dec
jle
out
imull
nop
iret   
xchg
jnp
adc
pop
in
sbb
jns
inc
mov
xlat
iret   
mov
jp
pop
(bad)  
repnz fadd
adc
jae
leave  
iret   
sbb
or
jmp
out
fistl
cmp
or
not
aas    
inc
xor
sti    
cmp
fimull
and
out
add
clc    
(bad)  
jl
scas
mov
jecxz
(bad)  
sub
or
sbb
hlt    
popf   
cmp
sub
mov
mov
push
jo
cli    
jnp
adc
ret    
cltd   
xlat
pop
and
jp
in
iret   
add
test
(bad)  
out
jl
and
fs mov
fstps
ss push
push
pop
addr16 xor
push
adc
jnp
adc
dec
clc    
push
pop
xor
sub
pop
(bad)  
lock fadd
cwtl   
sub
add
aas    
ljmp
or
in
ror
enter
push
lret
(bad)  
and
hlt    
sbb
adc
stos
call
aaa    
mov
lcall
xor
xlat
lret   
js
add
xor
mov
aaa    
dec
jecxz
(bad)  
xor
ret
xor
fild
fdiv
popf   
cmp
sub
mov
fldt
adc
cmp
mov
pop
notl
xor
jmp
pop
or
cltd   
rcr
xchg
jnp
adc
pop
mov
ret
xor
fild
mov
jp
pop
(bad)  
lock fmul
(bad)  
xor
cmp
xlat
pop
and
jp
in
aam
ret    
out
mov
fwait
sub
and
shr
shr
popf   
cmp
sub
xchg
push
fwait
sub
and
leave  
out
adc
xor
and
dec
add
aaa    
dec
stc    
mov
sub
or
aad
xlat
fnstenv
and
arpl
std    
movsl
sar
mov
(bad)  
fwait
sub
and
ret    
out
adc
xor
sub
sub
jno
cmpsb
rcl
iret   
mov
jp
pop
(bad)  
repnz fdivrl
and
mov
mov
and
jp
jmp
call
push
loopne
cmc    
lods
xor
or
not
pop
mov
cmp
repz daa 
jo
(bad)  
fwait
sub
and
int3   
out
add
ficomp
out
mov
aaa    
mov
lcall
enter
mov
or
mov
adc
aaa    
mov
lcall
sbb
fdivrs
or
mov
adc
aaa    
pop
xchg
xchg
(bad)  
outsb
xor
jg
jbe
jnp
cmp
int
gs push
cli    
mov
xchg
xchg
(bad)  
aas    
dec
aad
sbb
pop
jg
jbe
jnp
cmp
int
gs push
cli    
mov
loope
(bad)  
outsb
xor
or
mov
adc
mov
mov
jmp
daa    
fstp
xchg
popf   
jnp
adc
pop
fisubrl
fdivs
stos
xlat
or
sub
and
ret
mov
add
loopne
add
out
or
jnp
(bad)  
cmp
insl
cmp
out
int3   
jnp
adc
aad
or
jnp
(bad)  
cmp
push
sub
sub
out
int3   
jnp
adc
aad
or
jbe
fcmovu
cmp
insl
push
or
mull
sub
jb
in
cmpsl
or
jnp
(bad)  
cmp
push
adc
andl
mov
mov
jp
outsl
scas
int
and
cmp
sar
mov
xchg
pusha  
jbe
lods
jle
dec
sub
mov
cmp
sub
push
cmp
jecxz
sub
adc
xor
ret    
or
sbb
fcoml
enter
push
cmp
mov
or
in
ror
and
jno
je
inc
add
cmp
sub
mov
sbb
or
cmp
mov
(bad)  
hlt    
rorl
loop
hlt    
mov
aaa    
mov
mov
ret
imul
push
and
lock fstps
ret    
decl
pop
adc
adc
or
mov
clc    
lods
cmp
test
xor
push
dec
jge
sti    
sbb
and
xchg
jnp
adc
hlt    
inc
cmp
loop
xor
pop
iret   
mov
jp
pop
stos
sti    
(bad)  
aaa    
jge
push
and
add
mov
dec
bound
aaa    
scas
test
aaa    
and
int3   
out
mov
pop
jecxz
ss adc
popf   
popf   
and
mov
(bad)  
(bad)  
iret   
push
out
sub
jge
and
mov
stos
(bad)  
mov
fwait
stc    
fcmovbe
in
pop
fwait
sub
and
(bad)  
out
mov
cmp
sub
mov
inc
lret   
stc    
add
outsb
inc
dec
mov
jnp
adc
data16 aam
arpl
xor
sub
xchg
or
fs
enter
stc    
out
jl
and
fs mov
push
ja
xchg
shrb
dec
jnp
fcmovnu
xchg
jnp
adc
add
pop
out
inc
jp
js
rorb
push
mov
loopne
pusha  
sbb
jp
in
stos
iret   
int
jp
imul
cmp
xor
hlt    
adc
bound
inc
sbb
imul
aaa    
pop
xchg
fwait
(bad)  
sub
into   
out
(bad)  
mov
adc
push
inc
lock sbb
adc
aaa    
mov
mov
into   
dec
cmp
(bad)  
in
loope
and
fsubrs
or
in
fmul
icebp  
xor
mov
push
inc
ret
sbb
jl
and
mov
xchg
xlat
or
(bad)  
mov
dec
enter
cmp
movsb
push
sbb
lcall
sbb
test
jnp
adc
add
test
in
out
adc
push
cli    
sub
or
test
mov
push
out
into   
cmp
xor
add
fcoml
out
hlt    
stos
add
daa    
adc
bound
cmp
push
add
ds das 
pop
pop
push
inc
push
cmp
push
enter
adc
aaa    
mov
lcall
pop
jb
or
int3   
test
and
pop
in
into   
hlt    
mov
aaa    
js
mov
addl
xor
pop
adc
and
cmp
cs ffreep
cmp
adc
push
inc
(bad)  
jo
sub
xor
or
jne
sub
and
aam
mov
inc
loopne
cmp
add
insb
jns
push
fcoms
(bad)  
fwait
sub
and
(bad)  
out
adc
cmc    
aam
es push
add
insb
jns
push
push
arpl
sub
sub
ret
bound
push
cmp
in
aas    
jae
inc
add
xchg
mov
xor
dec
aas    
pushf  
test
fdiv
popf   
cmp
sub
sub
ljmp
shr
pusha  
outsl
push
xor
or
repnz xlat
jmp
rcl
iret   
mov
jp
mov
jbe
xchg
sahf   
mov
inc
adc
loopne
sbb
dec
outsb
xchg
enter
ret
sbb
sar
and
pop
pop
inc
jo
or
loop
jo
mov
insb
sub
loopne
add
les
iret   
popf   
jecxz
sub
loopne
jge
lds
add
jae
(bad)  
xchg
fstps
and
cmp
test
and
xlat
cmp
xlat
or
(bad)  
mov
and
lds
mov
and
ds popa 
js
gs inc
data16
lret   
jo
imul
arpl
pop
xor
(bad)  
dec
inc
mov
js
push
or
push
inc
cmp
out
cmp
sub
div
dec
or
ret    
pop
je
adcl
jge
hlt    
mov
aaa    
mov
lcall
jno
fucomp
in
jg
inc
adc
nop
xor
mov
aaa    
mov
mov
cmp
aam
sbb
sbb
ret
adc
scas
sar
mov
sbb
pop
mov
xor
fisttpl
or
dec
ret
cmp
cmp
stos
into   
faddl
int
xor
lds
icebp  
cmp
sub
xorl
(bad)  
aaa    
and
mov
jns
mov
xlat
pop
and
jp
test
cmp
mov
int3   
stos
test
cmpl
test
mov
jecxz
scas
mov
hlt    
popf   
cmp
sub
enter
icebp  
into   
mov
(bad)  
out
jl
and
outsl
mov
(bad)  
mov
hlt    
cltd   
mov
mov
jnp
adc
fnsave
jae
jne
fcomp
mov
mov
jp
push
into   
fdivrl
dec
mov
mov
mov
and
cmp
pop
xor
pop
mov
jl
and
nop
(bad)  
call
out
ljmp
mov
and
in
cs mov
and
outsb
ret
in
(bad)  
pop
mov
orl
int
loop
test
(bad)  
jno
fcoms
adc
cmp
faddl
sar
cmp
jge
stos
loop
pop
and
jp
in
fmul
sub
shrb
js
scas
xor
jl
and
arpl
lock mov
stos
and
test
aaa    
and
mov
or
jge
mov
or
cmc    
ror
add
mov
stc    
xchg
mov
xchg
pushf  
dec
and
popf   
cmp
sub
inc
inc
inc
jo
inc
jns
inc
inc
shr
out
jl
and
outsl
mov
cltd   
mov
adc
push
cmp
or
fdiv
mov
cmpsl
addb
xlat
pop
and
jp
cmc    
test
and
xor
xchg
jnp
adc
push
loope
mov
cld    
and
(bad)
and
ret    
out
adc
roll
fsubr
lahf   
mov
or
imul
(bad)  
adc
xchg
jl
and
popa   
(bad)  
call
out
adc
aaa    
dec
cmc    
mov
(bad)  
xlat
xchg
fcoml
enter
(bad)  
xchg
xlat
pop
and
jp
in
fmul
sbb
icebp  
out
pop
cli    
out
jl
and
outsb
ret
cmp
test
idiv
popf   
mov
out
aaa    
and
iret   
out
pop
mov
subb
adc
aaa    
mov
mov
sub
fcmove
(bad)  
movsl
add
hlt    
popf   
cmp
sub
fwait
jecxz
sar
mov
fstpt
adc
jo
mov
mov
stc    
test
or
gs stos
repz fdivrl
addr16 mov
hlt    
popf   
cmp
sub
test
in
jmp
dec
iret   
(bad)  
out
jl
and
gs mov
in
ret
(bad)  
repz mov
cmc    
int
cs xchg
jnp
adc
insb
in
lock cli 
lahf   
cmpl
mov
fwait
sub
and
(bad)  
mov
arpl
pop
and
jp
jmp
ret    
les
mov
or
icebp  
xlat
cmpsl
repnz mov
(bad)  
lcall
pop
mov
xchg
scas
mov
ljmp
pop
xchg
fwait
(bad)  
sub
mov
lea
rcrb
aaa    
dec
decl
mov
xor
or
cmc    
xlat
ds mov
pushf  
stos
lcall
cld    
ret    
rcrb
lock fcomi
icebp  
jb
mov
mov
repnz mov
out
aaa    
and
int
jmp
fisttpll
fsubp
jmp
or
or
pop
(bad)  
repnz fdivrl
ja
mov
(bad)  
xchg
xchg
ljmp
iret   
sub
mov
popf   
xor
or
lock xlat
and
mov
pop
fwait
sub
and
iret   
out
jmp
fisttpll
mov
hlt    
mov
aaa    
mov
(bad)  
(bad)  
cmp
rorb
cmp
sub
int3   
icebp  
(bad)  
cmp
aaa    
and
ret    
out
add
icebp  
(bad)  
fwait
cld    
aam
xor
iret   
mov
jp
pop
(bad)  
lock fadd
jnp
repz loopne
xor
(bad)  
xlat
pop
and
jp
icebp  
stos
iret   
das    
stos
ret
mov
cmp
xor
hlt    
cli    
jae
lock sti 
std    
mov
dec
adc
aaa    
dec
jecxz
(bad)  
ds xchg
int3   
mov
into   
les
popf   
cmp
sub
shl
mov
sub
and
mov
repnz mov
and
jp
in
fmul
adc
xchg
fsubrp
jae
out
jl
and
push
test
mov
rcrb
(bad)  
fwait
sub
and
shr
mov
xchg
scas
out
mov
mov
jp
je
fcomp
leave  
jp
xchg
sar
xchg
xchg
mov
mov
mov
sub
cmc    
mov
inc
int
push
jp
push
inc
push
push
lahf   
pfcmpeq
push
mov
subl
mov
or
sub
xadd
xchg
cli    
mov
mov
pop
dec
cltd   
inc
adc
insb
es sti 
cmp
clc    
fldl
and
icebp  
je
jbe
aad
jae
xor
inc
push
xchg
dec
lret
jmp
or
mov
sub
mov
mov
stos
pusha  
sbb
leave  
(bad)  
sti    
aam
jb
ret    
pop
popf   
out
roll
push
cmpsl
mov
mov
push
mov
inc
xchg
inc
pop
and
jle
cli    
pushf  
add
xchg
leave  
(bad)  
sub
js
mov
std    
xor
(bad)  
icebp  
dec
add
rorb
xchg
push
in
inc
(bad)  
sub
shrb
add
imul
in
lods
ds aaa 
mov
leave  
addr16 xchg
xchg
mov
mov
jle
fs pusha 
iret   
sub
mov
scas
scas
jg
jp
fwait
imul
fbld
mov
leave  
icebp  
adc
(bad)  
out
lcall
adc
push
lods
add
shll
cmp
mov
mov
(bad)  
out
fstl
adc
cli    
pop
ljmp
inc
rorl
mov
xchg
xchg
dec
xchg
mov
inc
cmp
or
xorb
pop
cwtl   
pop
and
test
xchg
int
(bad)  
rcrl
into   
and
xchg
lods
jmp
lods
cmpsb
mov
lods
mov
es push
(bad)  
cwtl   
mov
push
sbb
pop
pop
aad
cwtl   
mov
or
mov
ljmp
adc
mov
inc
es ret 
jno
mov
cs mov
and
mov
mov
add
movsb
xchg
mov
inc
add
jge
xlat
cmpsl
jmp
xlat
mov
int
fnstsw
dec
movzwl
cmp
icebp  
scas
je
jp
data16 ror
fadd
jne
inc
mov
and
arpl
cmc    
movsb
les
mov
fwait
sub
and
(bad)  
out
cmpsb
mov
xlat
pop
and
jp
jmp
xchg
fwait
sub
and
(bad)  
out
repz aaa 
enter
adc
stos
(bad)  
mov
cld    
pop
dec
push
sub
and
mov
fnstsw
out
xlat
cmp
mov
outsl
insb
pop
adc
stc    
push
jae
or
sub
gs mov
loope
xchg
adc
faddl
and
cmp
jb
or
or
mov
das    
loope
xchg
addl
out
xor
out
mov
sub
mov
and
(bad)  
ret
cli    
out
xlat
iret   
fdiv
mov
decb
into   
cmp
fdiv
mov
out
xlat
iret   
fdiv
mov
add
(bad)  
xchg
fdivr
fisttp
pop
mov
ss jecxz
xchg
call
lahf   
stos
aam
jb
es aaa 
mov
test
mov
jmp
pop
inc
and
loop
(bad)  
out
ror
fdivp
ss scas
bound
dec
pop
xor
sub
mov
(bad)  
in
dec
aas    
jo
cmp
add
pop
push
push
add
or
(bad)  
hlt    
adc
push
push
mov
(bad)  
cmp
push
sub
int
(bad)  
or
test
out
daa    
mov
jge
mov
lea
es icebp 
or
jg
push
adc
mov
rcll
pop
mov
jb
sldt
cli    
imul
xor
arpl
je
cmpsb
xchg
roll
out
push
pop
inc
int3   
fsubrl
jns
xlat
inc
or
fistpll
xor
cmp
push
push
adc
ljmp
aam
movsb
(bad)  
aaa    
out
(bad)  
push
sub
mov
push
push
mov
push
loope
stc    
std    
jp
jns
std    
xchg
not
mov
lahf   
imul
push
verr
add
or
xor
jecxz
(bad)  
pusha  
test
push
inc
call
dec
add
inc
enter
inc
push
test
sub
or
mov
out
fs add
je
sti    
fs pop
and
pop
les
xor
insb
fnstsw
movsb
idivl
pusha  
jp
dec
adc
ja
clc    
iret   
std    
rcrl
or
mov
xor
mov
test
xor
clc    
pop
sub
std    
xchg
sbb
stos
lahf   
imul
push
or
pusha  
fwait
add
es mov
dec
mul
popf   
(bad)  
pusha  
test
push
inc
call
dec
xchg
cli    
vmulps
lock xor
lds
out
iret   
(bad)  
and
mov
lds
enter
imul
cld    
jmp
data16 xor
sub
dec
lods
jno
pop
mov
cli    
fs js
sbb
les
adc
imul
cld    
jmp
inc
jl
cmc    
sub
lret
repz jbe
lods
mov
push
mul
sbb
decl
mov
lds
xor
arpl
mov
or
loope
lods
sub
push
inc
cmp
out
lcall
sbb
stc    
xor
sbb
aad
or
rolb
dec
dec
test
mov
inc
idiv
imul
lret
or
movsl
push
rclb
cmpsb
das    
test
xlat
inc
fimull
call
imul
cld    
les
fnsave
push
bnd jle
jb
ljmp
aad
and
xor
adc
rorl
xchg
dec
es es or
mov
imul
xchg
cmpsb
outsb
jl
int
arpl
xchg
test
xor
ja
or
jecxz
cmp
into   
sub
movsl
or
inc
xor
subl
xchg
fcomi
fistpl
incb
fcompl
and
andl
sbb
je
jp
arpl
icebp  
fmul
je
xchg
(bad)  
fdivr
mov
mov
sub
add
lods
aam
iret   
mov
jp
push
dec
mov
mov
cmp
sub
mov
iret   
mov
jp
outsl
scas
int
leave  
je
test
lds
sub
cmpsb
sti    
fucomi
(bad)  
mov
fcoml
lock
hlt    
bnd jl
(bad)  
mov
(bad)  
mov
aaa    
pop
xchg
fwait
(bad)  
adc
inc
insb
push
or
or
bound
std    
sub
xor
aaa    
mov
pop
aas    
inc
lea
jl
and
bound
ljmp
or
push
into   
fdivrl
dec
mov
mov
movsb
fnop   
mov
in
mov
cmpl
mov
outsb
std    
inc
test
and
sar
lret
gs clc 
add
or
mov
add
mov
mov
call
les
ficompl
pop
xor
xlat
in
mov
inc
ret
iret   
movsb
mov
mov
adc
out
fsubs
sub
mov
xchg
mov
push
sbb
jp
roll
test
clc    
fmuls
mov
pop
add
out
rcll
dec
xchg
mov
enter
test
mov
int3   
ds into 
fwait
dec
(bad)  
popf   
mov
inc
int
mov
stos
je
pop
int3   
mov
ljmp
hlt    
jecxz
fisttpll
or
mov
sbb
mov
push
cmc    
mov
push
jecxz
xchg
mov
adc
xor
xchg
mov
in
rorl
xchg
subb
mov
ret    
inc
mov
(bad)  
stos
inc
sub
shl
in
sub
testb
movsl
out
lret
stos
mov
repnz out
stos
push
add
in
mov
mov
repz inc
jbe
call
les
popa   
cmc    
in
test
cmpsb
mov
test
faddl
dec
jae
sbb
xor
mov
sbb
rolb
inc
adc
and
sbb
iret   
sti    
push
or
out
inc
xor
inc
sub
out
sar
xor
mov
rcr
lea
out
push
jecxz
xchg
mov
adc
xor
mov
mov
nop
test
scas
inc
(bad)
subl
stos
fnstsw
xchg
mov
gs stos
cmp
mov
mov
dec
fldt
loopne
aad
jbe
xchg
jne
insb
mov
(bad)  
stos
inc
sub
shl
in
sbb
ret    
inc
mov
push
daa    
inc
sub
xchg
sub
ja
fmuls
lea
(bad)  
mov
imul
sub
ret    
push
mov
inc
mov
sahf   
push
push
gs and
dec
sbb
cmp
cwtl   
scas
xchg
sub
cwtl   
aas    
cmc    
jnp
stc    
jge
add
mov
jae
mov
cld    
inc
sub
mov
mov
stos
push
sti    
out
xlat
xor
cld    
mul
xorl
adc
jnp
ret    
mov
hlt    
mov
mov
testl
or
jmp
loope
mov
mov
mov
inc
adc
sbb
loopne
repnz mov
xchg
(bad)  
js
stos
jecxz
cwtl   
stos
mov
sti    
mov
push
sti    
iret   
fdivrl
dec
test
xchg
mov
dec
jecxz,pn
adc
jnp
pop
sub
stos
vshufpd
jge
jp
xor
push
hlt    
lods
cmc    
mov
and
push
jp
push
inc
push
push
lahf   
mov
inc
bound
mov
rcrb
dec
ljmp
(bad)  
int
int
sbb
test
movsl
adc
jo
xlat
adc
xchg
cmp
and
outsl
push
out
jle
mov
rorl
repz mov
inc
push
or
ljmp
jecxz
xor
cmc    
cmp
xor
into   
jno
in
inc
mov
mov
int
lret   
scas
loopne
mov
ret
in
mov
cmp
push
out
xor
add
mov
stos
mov
movsl
add
jmp
sub
shrl
test
ss jae
into   
aaa    
lahf   
pop
ljmp
push
paddsw
out
testl
std    
test
lret   
js
xchg
xor
jg
push
push
ficomp
mov
push
mov
loope
jno
and
test
data16 cli 
lock or
jae
or
xchg
psllw
mov
push
test
mov
rorl
dec
ja
mov
jb
negb
in
xlat
cmpsl
iret   
js
scas
xlat
cmp
cmpsb
in
xor
mov
cmp
out
inc
sub
(bad)  
pop
fadds
notb
dec
stos
inc
mov
mov
int
pop
(bad)  
mov
test
pinsrw
xor
stos
mov
cmpsb
inc
xor
imul
cmp
push
fisubrl
xor
aam
ds inc
(bad)  
notb
mul
xlat
cmp
dec
inc
mov
dec
lods
xlat
or
add
lea
(bad)  
out
dec
xor
jl
(bad)  
test
(bad)  
mov
lods
rol
xchg
scas
add
jnp
jmp
jecxz
repnz push
out
xchg
rorb
sub
dec
pop
loope
push
outsl
out
push
loopne
xchg
lods
decb
pushf  
movl
(bad)  
paddq
pop
aam
push
addr16 pop
sbb
mov
out
ljmp
xchg
pop
add
sbb
push
xchg
ret    
js
or
and
sub
pop
pop
cmp
cmp
jb
jns
mov
sbb
pop
aam
dec
hlt    
mov
cmp
imul
jbe
and
xchg
sub
push
insl
sub
xlat
xchg
dec
pop
ret
push
negl
add
std    
and
arpl
(bad)  
(bad)  
bound
cmp
cmp
xorb
orl
jp
lock sub
mov
add
(bad)
sub
jno
add
icebp  
test
sbb
inc
mov
ret    
sbb
shll
mov
arpl
hlt    
xor
test
scas
sub
push
sahf   
jmp
jo
sti    
ljmp
sbb
movl
lock sub
mov
mov
or
xchg
jmp
add
(bad)  
aas    
xchg
(bad)  
sub
adc
cmp
fnop   
imul
mov
hlt    
push
fs jns
mov
mov
int
pop
(bad)  
mov
ss mov
int
push
pinsrw
xor
stos
mov
cmpsb
inc
xor
pop
and
xchg
out
insl
push
js
aaa    
mov
mov
call
push
mov
cmc    
jmp
mov
enter
int3   
test
xchg
push
(bad)  
xlat
scas
pop
push
repnz xchg
push
or
call
mov
or
xchg
cmp
mov
push
sahf   
or
(bad)  
imul
es loop
sub
cmpsb
inc
xor
out
and
inc
imul
mov
fisttpll
push
aaa    
jae
push
xchg
dec
(bad)  
std    
cmp
lret   
idivl
xlat
cmpsl
push
jb
mov
sbbl
dec
leave  
fcompl
push
loope
jno
mov
(bad)  
mov
xor
adc
push
in
es
out
dec
inc
push
dec
inc
pop
lcall
and
dec
loopne
sbb
mov
mov
jp
outsl
scas
int
les
fwait
(bad)  
repnz test
sub
popf   
repz ror
(bad)  
mov
sub
and
(bad)  
out
repz aaa 
enter
adc
scas
sar
mov
mov
mov
jo
lcall
and
xor
mov
mov
out
flds
je
inc
pop
(bad)  
jb
jnp
push
sbb
int3   
cs popf 
cwtl   
hlt    
sbb
mov
mov
add
scas
pop
mov
decl
je
sbb
bound
pop
out
sub
loope
xor
mov
mov
out
fldcw
inc
clc    
mov
sub
add
jae
jnp
push
sbb
cld    
sub
mov
mov
add
scas
fwait
gs sub
mov
xchg
mov
sub
inc
push
cli    
bound
insb
ljmp
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
repz cmp
cmp
push
movsl
stos
mov
mov
pop
or
xchg
aaa    
test
(bad)  
sub
sarb
push
sti    
lahf   
outsb
and
call
mov
push
test
sbb
cmc    
add
mov
jecxz
lret
and
out
push
(bad)  
fsts
sub
sti    
(bad)  
push
inc
mov
xor
sub
pop
xor
push
scas
add
out
ja
xor
pop
jecxz
mov
add
lds
mov
push
add
scas
push
daa    
stc    
xchg
in
cmp
sbb
mov
pop
dec
mull
or
or
(bad)  
mov
push
push
(bad)  
push
xchg
mov
jge
(bad)  
mov
shr
inc
sub
cmpsb
dec
mov
inc
sub
and
loope
iret   
sub
xor
call
add
(bad)  
jb
mov
scas
jnp
xchg
sbb
(bad)  
test
lret   
dec
or
rorl
popa   
and
repz
or
mov
(bad)  
mov
mov
inc
cmp
or
sub
push
mov
rcll
add
xchg
test
out
cmpsb
in
xlat
cmp
inc
fstps
shlb
adcl
cmp
out
inc
xor
or
fadds
nop
movsb
pop
out
xor
ret
sbb
test
xchg
aad
inc
adc
movsb
in
pop
fstl
xor
std    
jb
jg
inc
cmp
ret
sarl
push
(bad)  
(bad)  
lods
shrl
and
or
lods
shrl
inc
fdivrp
mov
imul
sbb
incb
into   
lcall
aad
mov
test
imul
loope
xchg
or
push
bt
sub
xor
mov
push
lods
shrl
ja
stc    
mov
jp
dec
push
test
mov
sub
or
out
(bad)  
xor
cwtl   
lret   
imul
sub
leave  
in
sbb
add
loope
nop
addr16 jp
dec
push
mov
rcrl
leave  
cwtl   
aas    
sbb
sub
lea
pop
std    
sub
lret
out
testl
adc
mov
dec
xorl
dec
std    
and
sub
or
lret
inc
xor
or
fadds
sub
mov
dec
mov
std    
dec
and
cmp
push
std    
outsb
mov
aad
mov
xchg
and
and
cltd   
fmuls
xlat
or
mov
pavgw
and
pop
dec
and
pop
incl
test
and
int
jae
push
ds push
ret
add
inc
sbb
popf   
shl
xor
test
lret   
je
mov
jno
xchg
ficompl
xchg
imul
test
xchg
add
sarb
fstl
scas
cmc    
or
mov
out
jl
and
jl
repz xlat
and
iret   
inc
ss repz push
and
scas
add
and
lea
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
sub
cmp
dec
fcmove
xchg
sub
(bad)  
push
pop
(bad)  
lret   
popf   
and
mov
out
enter
into   
lahf   
out
push
dec
sti    
and
lea
xchg
mov
or
adc
sbb
pop
mov
inc
insb
pop
dec
loop,pt
aas    
and
fiaddl
inc
dec
rcrb
cmp
shll
push
ror
xchg
(bad)  
mov
xorl
xchg
ret    
push
inc
mov
(bad)  
jecxz
out
daa    
in
pusha  
sub
and
movsb
xor
xor
in
push
cmp
insb
dec
mov
dec
mov
mov
push
lds
cmp
aaa    
ljmp
aam
add
inc
insl
aad
inc
enter
js
aaa    
sub
mov
cmc    
in
xlat
or
dec
fwait
sub
testb
inc
aam
mov
inc
les
out
mov
ret    
inc
iret   
xor
icebp  
(bad)  
mov
xor
inc
stos
jno
and
shlb
cmp
and
loopne
jmp
mov
not
leave  
into   
imul
imul
(bad)  
or
sub
int
push
mov
mov
jecxz
movsb
xor
and
in
xor
inc
mov
inc
jnp
cmpsb
sbb
pop
xor
pop
pop
or
adc
imul
and
pusha  
fiaddl
pop
aaa    
(bad)
and
mov
xchg
xchg
addr16 je
fisubrl
push
jecxz
daa    
cld    
aam
jae
(bad)  
mov
inc
mov
mov
pushf  
leave  
jne
jnp
hlt    
push
in
pop
sldt
pop
jae
cli    
cmc    
fdivl
fmul
cmp
jae
or
sub
cltd   
out
sub
in
ds push
ret
push
fcmovnu
clc    
hlt    
mov
inc
cmp
pop
in
and
jb
inc
fmuls
xchg
sldt
pop
jae
js
fsub
sub
aam
pop
jae
jmp
mov
pusha  
sub
in
(bad)  
mov
inc
pop
stos
inc
cmp
xchg
sub
cmpsb
in
jmp
or
mov
inc
inc
dec
adc
mov
pop
pop
pop
push
fs out
mov
add
dec
test
xor
movsl
or
movsl
or
sbb
pop
jae
adc
aas    
fisttpll
dec
rcrb
(bad)
sti    
repz idivl
push
shrb
popl
or
pop
dec
test
xor
mov
(bad)  
out
dec
and
les
nop
pop
int
cwtl   
repnz fimull
xor
mov
fcoml
not
hlt    
imull
xlat
cli    
sbbb
ds sbb
pop
aas    
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
stos
das    
repz dec
push
mov
(bad)  
lahf   
pop
cmp
out
(bad)  
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
and
stc    
loopne
or
andb
or
xchg
xor
sbb
xor
insl
mov
ds mov
(bad)  
fsts
mov
cmp
jmp
(bad)
addr16 daa 
jns
rclb
enter
hlt    
inc
nop
jne
bound
or
aam
inc
dec
ljmp
(bad)  
int
repnz bound
fsts
(bad)  
dec
inc
dec
ljmp
(bad)  
int
sbb
in
inc
mov
stc    
mov
and
push
mov
add
insb
(bad)  
das    
pop
mov
or
pop
push
pusha  
add
pop
mov
inc
(bad)  
stos
loopne
or
and
testl
cmc    
das    
jmp
(bad)
aaa    
and
and
or
adc
imul
stos
(bad)  
pusha  
popl
ds or
pop
fnsave
fwait
(bad)  
push
(bad)  
mov
xlat
mov
cmp
fcoml
sub
mov
xchg
xchg
sub
and
xorl
adc
xchg
adc
into   
(bad)  
jno
push
std    
std    
decl
je
push
in
out
inc
arpl
sub
push
pop
jns
push
scas
push
lds
ficompl
loop
push
push
sbb
sti    
loopne
sub
leave  
fdivl
lret
and
out
push
(bad)  
fsts
sub
sti    
(bad)  
pop
inc
dec
jbe
jns
xchg
stos
xchg
inc
int3   
(bad)  
int3   
rcl
xor
(bad)  
(bad)  
push
cmp
jno
popa   
in
fstps
faddl
daa    
(bad)  
pop
xor
lahf   
into   
jnp
pop
call
jae
or
sub
loop
cmp
bound
test
push
or
imul
jno
mov
fld
mov
or
rcr
int
out
mov
mov
adc
imul
mov
cwtl   
test
orb
sbb
dec
adc
mov
out
push
(bad)  
seta
inc
mov
ret    
inc
iret   
jb
lods
repnz cs mov
and
addr16 adc
test
sub
aaa    
lahf   
pop
aam
mov
icebp  
das    
rcrl
(bad)  
jb
jmp
mov
xlat
out
inc
jae
loope
or
aam
sub
aad
mov
inc
popa   
pop
or
pop
dec
or
jbe
(bad)  
jp
push
mov
jbe
pop
sub
fwait
push
mov
push
inc
mov
sahf   
daa    
(bad)  
pop
aaa    
rolb
and
pusha  
pop
sub
(bad)  
dec
push
xchg
push
and
adc
jno
mov
clc    
mov
cmpsb
out
imul
sub
sub
push
xor
addr16 nop
xchg
mov
inc
outsb
pop
(bad)  
cld    
popa   
and
repz
or
jo
icebp  
jae
(bad)  
adc
xor
imul
icebp  
repz jle
bound
mov
(bad)  
lret
dec
aaa    
outsl
rcrl
adc
dec
ljmp
out
outsl
sbb
hlt    
cmp
xchg
inc
mov
inc
cmpsl
in
(bad)  
mov
cmpsl
pop
adc
mov
(bad)  
push
or
adc
aaa    
xchg
add
ss in
outsl
cmp
arpl
inc
out
sbb
(bad)  
fbstp
pop
in
xlat
mov
fs xor
mov
push
andb
mov
add
sti    
int
js
pusha  
dec
insl
pop
enter
cwtl   
mov
inc
iret   
sbb
stc    
push
dec
pop
mov
(bad)  
fmull
mov
cmc    
int3   
mov
mov
es dec
dec
or
mov
outsb
pop
(bad)  
cld    
popa   
and
repz
or
movsl
in
enter
in
test
pop
popa   
fwait
xchg
fucom
test
imul
shl
(bad)  
mov
cli    
xlat
stos
pop
push
pop
dec
mov
mov
sbb
push
mov
iret   
inc
jae
out
mov
or
adc
test
aad
insb
adc
and
inc
int
pop
(bad)  
mov
push
inc
mov
xlat
xchg
cmp
jnp
int
or
cli    
xlat
stos
pop
push
jns
shrl
add
xchg
mov
(bad)  
movsl
add
mov
(bad)  
addr16 mov
pop
cmpsl
inc
dec
fcomip
jae
or
lret
inc
ss out
pop
ljmp
and
inc
gs dec
sbb
(bad)  
dec
mov
rcrl
or
arpl
loopne
jne
mov
movsl
ds or
mov
mov
add
pop
inc
cmpsl
std    
pop
imul
aas    
add
or
lret
inc
ss out
pop
ljmp
lods
(bad)  
dec
es inc
leave  
pop
test
iret   
lahf   
lea
subl
cmp
push
imul
popa   
xor
pcmpgtd
out
testl
std    
addr16 mov
cmpsl
cmpsl
inc
dec
jmp
adc
push
mov
jns
movsb
shrl
push
cmp
iret   
addr16 nop
and
mov
jns
outsb
pop
(bad)  
cld    
popa   
and
repz
or
xlat
imul
mov
mov
mov
or
push
jg
fnstenv
inc
ret
add
fnsave
mov
mov
int3   
dec
or
cli    
jmp
inc
mov
mov
sub
jns
rorb
sbb
inc
cmpsl
lea
rcl
imul
xchg
xchg
xorl
movsb
push
andb
sub
loop
push
push
imul
adc
mov
mov
test
xlat
iret   
mov
jp
fs
enter
xor
jl
and
bound
lock mov
cld    
stos
xchg
stos
into   
fdivrl
jae
xchg
mov
cmp
sub
test
mov
push
mov
lcall
mov
inc
adc
faddl
outsb
movsl
test
imul
es data16 cmp
cmp
cmpsb
mov
iret   
fdivrl
iret   
fdivrl
push
lret
mov
repz icebp 
cmp
bound
add
xor
std    
pop
mov
in
jge
dec
inc
int
int
lahf   
mov
(bad)  
dec
fimull
or
repz push
pop
xor
sub
xlat
adc
stos
mov
xor
jne
push
fucomp
xchg
lret
out
ret    
lahf   
arpl
test
fmuls
int
fidiv
cmp
push
mov
inc
test
movsb
xor
aas    
fstpl
dec
mov
popf   
and
loop
push
push
sbb
loope
cmp
fwait
cwtl   
mov
notl
movsl
outsb
pop
test
imul
es data16 cmp
out
jmp
jecxz
mov
mov
xor
jo
add
loop
cmp
pushf  
mov
mov
out
jg
pop
daa    
xchg
outsl
jae
adc
add
clc    
(bad)  
mov
adc
imul
(bad)  
cmp
mov
(bad)  
xchg
fildll
fdivl
adc
mov
adc
jge
mov
sub
or
lahf   
rclb
jg
cmp
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
aas    
jbe
ja
hlt    
(bad)  
int3   
popf   
(bad)  
mov
fdivl
pop
loop
movsl
int3   
loop
mov
cmp
dec
fs mov
xor
out
repnz fisubl
rol
mov
push
cmp
je
jg
je
sbb
stos
mov
mov
in
mov
pop
lsl
call
lcall
out
xchg
or
sub
cmpsl
lods
dec
xor
add
pusha  
popf   
jnp
mov
or
or
dec
xor
adc
test
mov
inc
dec
push
jle
fldcw
or
imul
fistpll
lret   
sub
mov
(bad)  
rcr
int
out
stos
push
cmpsb
fist
pop
adc
imul
mov
cwtl   
std    
bnd call
jne
pop
dec
adc
xchg
jbe
out
ljmp
out
mov
ret    
inc
iret   
add
mov
(bad)  
addr16 adc
test
sub
(bad)  
cmpsl
pop
aam
mov
stc    
aas    
test
out
popa   
push
hlt    
pop
sahf   
mov
addr16 je
xlat
out
inc
jae
loope
or
aam
fwait
xor
xlat
mov
inc
popa   
pop
or
out
sahf   
paddq
or
(bad)  
out
(bad)  
(bad)  
sahf   
pmaxub
sbb
push
in
pusha  
xchg
jp
sbb
fldt
stos
into   
icebp  
outsl
out
stc    
std    
mov
push
pinsrw
xor
stos
mov
cmpsb
inc
xor
lods
xor
sub
dec
fwait
jae
test
add
mov
jmp
add
imul
out
inc
jae
loope
or
aam
fwait
xor
pop
mov
cwtl   
out
adc
aaa    
push
xchg
out
sti    
cmp
jmp
mov
jmp
cmp
push
stos
addr16 popf 
mov
cmp
adc
push
ds inc
fdecstp 
lahf   
push
or
jg
fst
cmp
dec
inc
fldl
repz mov
dec
ficom
(bad)  
pop
ljmp
ret
iret   
pop
iret   
outsl
nop
je
gs cmc 
in
cmp
cmp
cmpsl
jp
inc
imul
repnz stos
push
cmp
dec
enter
rcrl
fidiv
decl
xchg
mov
mov
out
lds
stc    
pushf  
xlat
mov
out
push
(bad)  
out
sub
inc
mov
pop
lds
jg
(bad)  
pop
in
movb
jmp
mov
orl
jmp
fimul
shrb
cmpsb
xor
dec
jp
nop
pop
mov
int
ljmp
repnz xor
loop
cmpsb
popa   
lret   
mov
sbb
push
mov
iret   
inc
jae
outsb
cmp
or
(bad)
add
lds
lret
js
add
xor
push
into   
setns
mov
ds
out
sub
inc
mov
push
mov
loope
jno
ljmp
pop
sbbl
int
mov
push
shlb
hlt    
xchg
call
dec
add
std    
push
repnz xor
add
fs
cmp
iret   
std    
icebp  
dec
xor
sbb
(bad)  
mov
fimull
test
arpl
hlt    
xor
test
fldt
inc
sahf   
stc    
outsl
cmp
adc
pop
in
fs aam
loope
push
ret    
inc
xor
test
lret   
scas
pop
push
in
cld    
(bad)  
imul
sbb
pop
dec
adc
xor
pop
mov
mov
sti    
mov
mov
fdivrl
push
dec
rorl
movsl
inc
bswap
fucomp
mov
rorb
dec
cmpsb
adc
inc
jae
(bad)  
addr16 and
mov
mov
in
push
and
pusha  
push
xor
jns
aaa    
mov
stc    
push
or
xchg
fnstsw
loop
ljmp
lock dec
inc
addr16 and
mov
cmp
or
mov
repz xor
fadds
mov
xlat
xor
test
lret   
stos
pop
lods
mov
and
pop
mov
ficompl
mov
out
mov
into   
stos
push
mov
xchg
push
jmp
cmp
lret   
idivl
xlat
cmpsl
fs pushf 
sbb
pop
add
dec
leave  
fcompl
sub
iret   
movsb
xor
jecxz
and
ja
sbb
icebp  
lods
je
jp
jmp
ret    
les
mov
or
in
xlat
xor
stos
xchg
(bad)  
enter
xor
jl
and
bound
lock mov
test
cmp
into   
fdivrl
jae
xchg
mov
cmp
sub
test
mov
mov
addr16 jmp
cmp
dec
adcb
imul
mov
jecxz
sub
and
ljmp
ret
add
push
or
les
jecxz
cvtps2pi
lret
cltd   
ss gs cmc 
xchg
dec
xchg
lods
jmp
stc    
mov
mov
leave  
push
push
stos
xchg
loope
mov
es push
pop
mov
jecxz
sbb
sbb
aad
mov
dec
dec
push
fldcw
sbb
out
mov
int3   
leave  
test
mov
inc
loop
(bad)  {z}
cmpsl
adc
(bad)  
xlat
adc
cmp
jns
pop
nop
popa   
sti    
xor
mov
mov
test
imul
ljmp
std    
in
(bad)  
mov
icebp  
dec
lahf   
sarl
pop
dec
dec
insl
arpl
int
add
(bad)  
jge
pop
stos
add
jp
pushf  
jg
in
mov
inc
jl
cmp
outsl
push
jle
sub
fcompl
jae
push
rorb
sbb
arpl
jge
xlat
cmpsl
push
cmp
(bad)
shr
dec
popa   
push
mov
jnp
pop
inc
pusha  
mov
in
push
sub
dec
cmc    
mov
(bad)  
(bad)  
fcoml
enter
mov
or
jmp
xlat
cmpsl
sbb
mov
sub
fwait
dec
ljmp
and
mov
stc    
(bad)  
rol
inc
inc
out
cmp
aam
and
repnz in
cmpl
into   
cwtl   
or
pop
out
test
and
xor
adc
stos
or
pop
jmp
je
jns
popf   
cwtl   
idivb
(bad)  
sub
scas
jbe
pmulhuw
lret   
xor
movsl
xlat
cmpsl
rorl
rcl
jp
or
arpl
ljmp
imul
xchg
inc
movsb
and
or
mov
xlat
jp
or
aas    
sub
lods
jle
cmovae
loopne
enter
sub
jno
je
loop
or
push
jno
jecxz
pushf  
dec
jae
push
rorb
dec
jne
push
pop
jmp
aas    
inc
std    
cmp
aam
and
repnz in
cmpl
pop
data16 test
outsl
push
cmp
cmp
clc    
adc
inc
sub
sub
dec
sti    
mov
shlb
das    
(bad)  
in
out
jl
and
popa   
(bad)  
call
mov
jecxz
adc
jle
xor
sub
iret   
loopne
pusha  
jnp
push
sbb
(bad)  
mov
add
add
or
dec
loope
push
mov
cmpl
jecxz
pop
add
sub
sub
push
cltd   
out
fldcw
jae
push
rorb
out
push
loope
mov
and
lods
aad
cmp
fcompl
sub
jg
js
add
jns
sub
mov
test
jne
bound
sub
pop
pop
inc
dec
ljmp
(bad)  
int
adc
aam
fwait
cwtl   
aaa    
inc
xor
or
lds
lcall
mov
inc
jle
out
dec
jns
and
ret
pop
inc
dec
ljmp
(bad)  
int
das    
lret   
into   
arpl
jnp
int3   
xchg
lret
repz cmpsl
in
fptan  
dec
ret
pop
xor
pop
jns
mov
in
data16
fimul
stos
mov
mov
add
scas
fbld
lods
je
rcrb
pop
jle
jae
inc
mov
mov
add
scas
sbb
pop
je
repnz decl
je
push
jecxz
pop
inc
push
ljmp
adc
pop
mov
xchg
fprem  
ja
mov
loope
movl
jge
pushf  
movsl
aam
lret
sub
mov
cmpl
decl
popa   
fwait
mov
dec
mov
shr
jne
pop
push
lds
cmp
mov
std    
add
mov
sbbb
xlat
mov
fdivr
adc
les
cmp
fidiv
xor
jbe
sbb
icebp  
lods
lahf   
dec
mulb
aaa    
es adc
lods
inc
scas
mov
and
inc
dec
out
stc    
lods
mov
xchg
enter
and
dec
pop
div
add
(bad)  
xchg
add
cld    
outsb
mov
jmp
mov
insb
fimul
mov
fsubs
add
pop
(bad)  
sbbl
cmpsb
adc
aam
cmc    
es dec
cltd   
push
adc
xchg
lods
(bad)  
mov
xlat
or
pusha  
leave  
cld    
shl
js
ficoml
pop
add
and
pop
fnop   
(bad)  
ficoml
repnz push
cmpsb
or
pop
data16 jbe
jae
int
sub
int3   
add
adc
movsl
movsb
into   
xor
int3   
add
repnz testb
iret   
(bad)  
sub
es jae
aad
lcall
mov
jbe
xor
jb
pop
push
xlat
or
fsubs
insl
mov
jo
lcall
cltd   
out
sbb
mov
cmpsl
push
or
cmp
and
mov
dec
enter
mov
clc    
sbb
mov
ja
pop
and
sahf   
(bad)  
jne
cwtl   
push
cltd   
push
jnp
je
(bad)  
iret   
movsb
mov
push
repnz cmpsb
lods
xlat
jp
mov
jp
push
xchg
sub
lock sbb
push
cmc    
fldl
movsb
sub
dec
sub
es in
test
bound
ror
int3   
in
inc
cltd   
or
push
into   
fdivrl
mov
int3   
mov
cmp
sub
mov
mov
xchg
lea
mov
nop
lea
jp
icebp  
stos
iret   
sbb
out
repnz in
out
cmp
(bad)  
enter
mov
or
jmp
mov
and
mov
sbb
pop
and
jp
icebp  
stos
iret   
cmp
pop
fild
mov
hlt    
adc
push
push
mov
hlt    
(bad)  {%k2}{z}
mov
dec
mov
adc
push
pop
push
lds
cmp
fdivrs
pop
push
sti    
sbb
sub
adc
mov
xor
out
lds
xchg
pop
jns
xor
outsl
jge
lret
dec
fisttpl
bnd jg
or
inc
sub
mov
xor
mov
ss das 
cli    
loope
pop
(bad)  {%k2}{z}
(bad)  
xchg
mov
out
mov
nop
mov
sbb
and
pop
call
movsb
mov
add
dec
jae
push
rorb
jecxz
sub
inc
dec
push
fsts
cld    
jnp
xlat
cmpsl
js
test
fwait
(bad)  
jl
in
(bad)  
jl
sub
push
aaa    
cmpsb
(bad)  
push
xor
es push
cmpsl
jns
in
jp
add
fdivs
pop
sbb
inc
or
xor
or
inc
jnp
add
fcompl
cmpsl
(bad)  
pop
fmul
pop
mov
sub
cmc    
pop
or
or
push
(bad)  
sahf   
lret   
dec
es
out
dec
rclb
lods
mov
sarb
pop
scas
lret
(bad)  
mov
pop
loope
call
add
mov
xor
(bad)
and
mov
cmp
enter
aam
inc
mov
jnp
(bad)  
jne
mov
(bad)  
out
frstor
cld    
pop
jge
mov
ss and
fidivl
or
lock dec
dec
inc
lret
lds
inc
push
fidivrl
mov
jg
out
mov
clc    
fcompl
shll
lock call
add
int3   
outsl
inc
push
mov
xor
xor
sbb
cld    
pop
int3   
bound
repz pop
jns
daa    
push
stc    
adc
jg
ljmpw
pop
test
push
xchg
mov
inc
jne
sub
bnd jns
pop
xorb
or
fimull
inc
push
into   
aam
arpl
pop
mov
jns
xlat
jbe
or
adc
jo
xor
(bad)  
sbb
push
or
aad
or
pop
aaa    
lret   
xor
xor
fcompl
es push
out
add
gs sub
adc
pop
fidivl
cmp
cmpsl
cmp
bound
(bad)  
movsl
dec
push
inc
dec
ljmp
(bad)  
int
and
fcmovu
add
mov
push
insl
(bad)  
lahf   
pop
in
and
mov
mov
sahf   
jne
mov
fcompl
cmpsl
stc    
xchg
(bad)  
fmul
pop
mov
or
jp
cmp
int3   
fidivr
(bad)  
out
dec
cmp
(bad)  
sub
sbb
jbe
cmp
xlat
rcrl
fwait
pop
in
adc
mov
and
cmpsl
cmpsl
dec
in
aas    
aas    
xor
aas    
jp
fisttp
cmp
std    
add
mov
loopne
jns
pusha  
inc
mov
inc
push
pop
inc
push
mov
xchg
mov
loop
aaa    
xor
popa   
mov
cmp
xchg
test
inc
cs xchg
lds
or
add
mov
or
mov
loop
xchg
rorb
popf   
dec
jae
push
rorb
cmpl
adc
xchg
sbb
push
(bad)  
dec
mov
pop
jns
mov
inc
fcoml
add
jecxz
mov
dec
mov
les
(bad)  
(bad)  
mov
cmp
std    
std    
scas
cmp
clc    
stc    
push
jae
call
sub
loop
push
push
imul
xlat
(bad)  
icebp  
bound
dec
push
es loop
or
data16 ror
fsubr
or
pushf  
xor
or
call
rorb
aaa    
dec
cmc    
mov
(bad)  
fcoml
into   
fdivp
(bad)  
mov
fstps
or
xchg
mov
cmp
or
stc    
push
pop
(bad)  
xor
mov
push
loope
insb
adc
and
iret   
out
mov
imul
xlat
jle
in
mov
aaa    
mov
mov
sub
in
inc
les
popf   
cmp
sub
mov
iret   
mov
jp
push
into   
fdivrl
mov
ljmp
push
inc
push
negb
sbb
addr16 push
mov
sbb
inc
es data16 cmp
loopne
(bad)  
and
inc
cs push
es ja
dec
addr16 out
and
inc
mov
mov
and
push
test
lea
and
hlt    
icebp  
push
arpl
nop
mov
mov
js
lea
inc
inc
movl
les
push
mov
xchg
xchg
(bad)  
xchg
popf   
lea
or
(bad)  
dec
(bad)  
cmpsl
jne
scas
ds lahf 
addr16 std 
inc
dec
xor
jle
sub
iret   
movsb
into   
and
imul
inc
add
fadds
movl
les
push
mov
popf   
sti    
pop
jge
mov
push
dec
(bad)  
inc
xchg
xchg
mov
cmp
pop
inc
xor
jl
das    
dec
jp
popf   
cwtl   
fcompp 
pop
test
add
scas
mov
repnz mov
mov
adc
call
sub
icebp  
scas
je
jp
outsl
scas
int
xor
xor
sar
mov
xchg
sbb
xor
addr16 mov
out
in
mov
orl
push
sub
cld    
xchg
jnp
adc
imul
icebp  
in
aad
aas    
lods
in
pop
inc
fcmovnu
test
sub
je
popa   
clc    
arpl
cmc    
inc
push
test
sub
lret
jmp
fldl
imul
push
lds
cmp
mov
push
pop
push
sti    
sbb
ds popf 
cmp
sub
imul
fnstcw
cmp
cltd   
aas    
enter
in
lahf   
sub
ret    
jno
xchg
(bad)  
push
inc
fwait
in
cmp
push
(bad)  
pop
(bad)  
insl
repnz ds dec
loope
les
lcall
aam
push
dec
test
xchg
and
int3   
adc
int3   
add
jb
jns
rcll
lcall
mov
jmp
dec
test
mov
or
in
sub
leave  
mov
dec
ss pop
mov
pop
cs mov
inc
or
adc
add
sbb
mov
sub
push
push
imul
push
jb
cmp
pop
inc
or
adc
add
sbb
jae
pusha  
push
cmp
imul
push
jb
cmp
pop
inc
or
adc
add
sbb
fwait
push
mov
push
push
imul
push
jb
cmp
pop
inc
or
adc
add
sbb
jae
pusha  
push
cmp
imul
push
cmp
sub
or
and
jae
pusha  
push
cmp
imul
push
loopne
(bad)
popa   
fildl
cwtl   
mov
in
es jecxz
stos
mov
sub
stos
or
outsl
dec
pop
push
pop
or
popa   
outsl
add
test
dec
lods
and
xchg
dec
dec
push
jb
cmp
pop
inc
or
adc
add
sbb
jae
pusha  
push
cmp
imul
push
jb
cmp
pop
inc
or
adc
add
sbb
jae
pusha  
push
cmp
imul
push
jb
cmp
pop
inc
or
adc
add
sbb
jae
pusha  
push
cmp
imul
push
jb
cmp
pop
inc
or
fidiv
repnz
jp
dec
mov
cmpsl
ret    
jge
jg
xchg
mov
xchg
in
sub
mov
and
mov
push
into   
and
imul
jp
enter
dec
sahf   
hlt    
mov
les
icebp  
mov
push
imul
imul
iret   
or
inc
aas    
cmp
popf   
mov
ret
dec
sub
sub
stos
lret
inc
out
mov
jp
pslld
jp
mov
subl
aam
sub
gs in
stos
push
push
dec
xor
lds
pop
into   
mov
into   
jbe
enter
dec
ror
imul
cmc    
xor
ljmp
push
dec
add
cmp
sub
frstor
rcrb
fimull
jae
cmpsl
in
add
and
loope
pop
pop
xchg
dec
out
jae
stc    
test
xchg
mov
pslld
jp
sbb
push
cmpsl
pop
lcall
aam
sub
gs in
int
nop
dec
xor
loop
xor
mov
pop
into   
and
jg
inc
dec
jae
iret   
inc
xor
jp
pop
out
mov
xchg
(bad)  
imul
mov
mov
sti    
xchg
xchg
xor
popf   
(bad)  
cwtl   
add
(bad)  
mov
adc
leave  
and
mov
mov
imul
mov
add
(bad)  
popf   
aam
push
push
mov
in
pop
sub
xchg
push
(bad)  
popf   
aam
push
push
mov
out
pop
sub
xchg
push
out
popf   
aam
push
push
mov
imul
(bad)  
sub
xlat
jge
or
fstpl
and
mov
movl
(bad)  
xchg
xor
jecxz
pop
add
pop
push
inc
(bad)  
jg
or
in
loope
outsl
jb
jno
mov
pop
call
jo
mov
xchg
cwtl   
mov
enter
and
sub
cs pop
inc
cmp
ljmp
sbb
out
fnstenv
pop
lds
inc
out
mov
or
pop
xchg
push
std    
mov
std    
jne
shrb
xchg
pop
aam
std    
test
fnop   
pusha  
les
push
cmp
(bad)  
xor
addr16 mov
in
cld    
mov
add
orb
loopne
iret   
loop
mov
sub
not
ja
mov
mov
add
scas
rcr
inc
add
decl
je
mov
push
ljmp
sbb
orb
lock
hlt    
loope
xchg
(bad)  
mov
mov
aaa    
dec
testl
(bad)  
enter
(bad)  
not
pop
and
jp
in
stos
iret   
sub
cmpsb
inc
loopne
fcoml
into   
(bad)  
hlt    
loope
lock rolb
int3   
mov
cmp
repz fmul
jle
pop
cwtl   
add
hlt    
popf   
cmp
sub
pushf  
mov
fwait
sub
and
mov
jge
adc
xlat
pop
and
jp
in
stos
iret   
sub
iret   
fcoml
into   
(bad)  
hlt    
loope
mov
xchg
hlt    
mov
aaa    
dec
sti    
mov
aaa    
dec
je
pop
mov
or
repnz xlat
ss mov
xchg
jbe
xlat
iret   
mov
jp
gs stos
repz fmul
jle
jg
add
hlt    
popf   
cmp
sub
dec
movsl
loope
pop
mov
push
mov
in
xchg
lret   
xlat
pop
and
jp
jmp
icebp  
fldl
xchg
lret   
jl
and
jge
in
xlat
ss mov
(bad)  
mov
addl
into   
fmul
(bad)  {%k2}{z}
aad
mov
cmp
sub
dec
(bad)  
xchg
cld    
(bad)  
adc
cmpl
xlat
cmp
mov
es pusha 
jp
phaddwq
(bad)  
insb
pop
inc
fsubs
pop
and
or
sub
arpl
mov
pop
cwtl   
lcall
mov
push
mov
(bad)  
mov
(bad)  
imul
mov
cmpsl
aaa    
je
dec
imul
pop
push
mov
dec
test
lock
aam
fisubr
push
(bad)  
aaa    
fsubrl
xchg
shl
jne
xor
loop
insb
les
repz push
xchg
xor
mov
mov
add
fcompl
cmpsl
or
outsl
mov
gs cwtl 
cmc    
and
jbe
mov
out
dec
jl
push
xchg
into   
lods
push
or
push
xchg
std    
std    
fwait
mov
aaa    
adc
loopne
add
out
mov
std    
xchg
mov
cltd   
and
aaa    
adc
mov
adc
push
mov
std    
mov
push
adc
mov
and
inc
mov
std    
lahf   
mov
xor
imul
xchg
stc    
mov
aas    
add
mov
(bad)  
arpl
mov
repz int
test
add
xchg
jge
or
jnp
cltd   
adc
clc    
and
stos
lds
push
inc
(bad)  
fwait
sub
and
mov
jbe
aas    
jge
jp
mov
cli    
int3   
jns
add
aas    
mov
jno
int
push
verr
fcmovnbe
mov
(bad)  
out
dec
iret   
ljmp
insl
or
movsl
outsb
sub
inc
es data16 cmp
adc
push
jb
ljmp
ljmp
push
adc
out
mov
mov
call
shrb
or
dec
outsb
lock pop
jge
mov
movsb
addb
xchg
vmovdqa
dec
jae
push
rorb
mov
xor
imul
mov
pop
verw
jle
xor
sub
mov
push
sbb
xchg
pop
(bad)
or
mov
mov
rol
push
fcompl
mov
outsl
inc
stos
push
outsl
fnstenv
add
bound
inc
jp
addl
decl
sub
push
stc    
(bad)  
pop
xor
xchg
mov
arpl
mov
jle
insl
test
imul
(bad)  
outsb
add
cwtl   
adc
mov
and
cmp
ret    
jo
hlt    
ficoml
push
jb
add
add
xor
sub
adc
cmp
jo
cmp
push
or
sti    
mov
mov
xchg
idiv
xorb
loopne
mov
sbb
inc
pop
enter
xor
out
mov
imul
ljmp
popa   
jbe
sub
lea
lahf   
and
mov
lea
jbe
adc
stos
lret
rol
imul
push
test
pop
ss push
cmpsl
mov
iret   
jp
arpl
clc    
cmp
hlt    
xor
movsl
mov
test
ficompl
and
fiadd
push
cmpsl
add
lds
arpl
dec
add
idivb
movsl
mov
xor
and
fyl2xp1 
mov
pusha  
jo
jbe
mov
jge
je
lahf   
dec
call
std    
std    
xchg
in
stos
int
jl
out
dec
xlat
mov
inc
push
not
push
mov
xchg
hlt    
pop
subb
call
out
xorl
and
sub
ds mov
xchg
xchg
xlat
or
mov
ljmp
cld    
les
jo
dec
adc
jecxz
xchg
xor
shll
les
iret   
(bad)  
and
and
xchg
push
mov
fistp
fcmovne
fdivrs
js
addr16 ljmp
(bad)  
cmp
mov
mov
push
mov
repz push
xlat
in
jge
imul
xchg
jo
add
adc
xchg
xchg
jbe
vhsubpd
mov
mov
or
out
xlat
xchg
mov
les
js
dec
pusha  
sbb
aad
xor
scas
enter
inc
mov
lods
dec
inc
pop
pop
push
lds
cmp
xchg
xlat
jno
mov
aaa    
xor
imul
pop
or
arpl
mov
or
adc
or
mov
addr16 push
fdivr
xor
and
(bad)  
xor
jb
(bad)  
mov
add
inc
imul
jp
jbe
mov
pop
mov
cld    
(bad)  
rorl
ucomiss
imul
pusha  
mov
xchg
push
push
mov
(bad)  
sbb
sub
fdivl
pop
jno
sbb
fsubl
dec
push
mov
push
push
fbld
sub
mov
ficomp
push
jle
dec
fsts
pop
pop
xchg
pop
adc
xchg
movsl
lahf   
pop
fs loope
cld    
mov
dec
mov
call
mov
dec
jns
pop
xchg
xor
mov
pop
cmpsl
scas
pminub
cld    
push
xor
dec
leave  
inc
call
inc
and
xor
loop
jmp
sbbb
inc
add
dec
inc
pushf  
dec
std    
std    
decl
je
mov
inc
inc
addr16 mov
push
int
jns
jl
and
pusha  
(bad)  
out
xlat
fldt
mov
out
xlat
iret   
fdiv
add
aas    
fnstsw
adc
out
enter
(bad)  
cld    
std    
lret   
mov
inc
adc
sbb
outsb
push
mov
mov
lds
cmp
or
and
push
orl
fwait
dec
aam
int3   
inc
out
or
fwait
cwtl   
imul
outsb
mov
inc
es data16 cmp
ljmp
inc
in
and
rep movsb
setbe
test
inc
int3   
leave  
test
mov
addr16 jns
repz pop
popa   
and
cmp
pop
cmp
and
fwait
sub
dec
jbe
push
fs out
mov
pushf  
jae
mov
or
mov
mov
jb
popa   
test
mov
call
mov
mov
loope
mov
imul
pop
push
push
ud2    
test
add
or
data16 jge
clc    
dec
sbb
je
lret
les
imul
data16 fdivr
inc
add
ljmp
sbb
in
or
data16 sub
cmc    
andl
shl
cmpsb
std    
rcl
stc    
mov
or
xchg
inc
fdiv
mov
jne
jno
xchg
ficompl
mov
imul
stc    
js
fwait
jl
ss test
inc
cmp
in
fwait
clc    
rorb
stos
sub
fsub
sbb
sub
push
fs jp
popa   
ljmp
dec
dec
jp
xor
sub
je
cmp
adc
in
test
mov
test
mov
cli    
mov
add
xor
out
pavgw
sbb
and
pushl
sub
call
mov
int
test
fwait
or
jecxz
repnz and
xor
push
push
xlat
and
xchg
xor
repz idivb
cwtl   
or
sbb
dec
(bad)  
rcll
enter
pop
jae
movb
cmp
std    
push
cmp
ficom
fidivrl
dec
add
cmc    
mov
inc
ljmp
jns
fwait
out
in
sbb
stc    
(bad)  
jle
adc
in
popa   
mull
push
add
nop
test
fs hlt 
xlat
in
movsb
inc
sub
dec
lcall
(bad)  
notl
adc
sub
jmp
(bad)  
mov
jbe
and
jb
sub
stc    
lods
xlat
bound
cmp
inc
jno
std    
adc
fildll
(bad)  
mov
loop
shrl
push
data16 lods
loope
fnstenv
inc
rcr
add
in
in
(bad)  
mov
loop
adcl
rorb
gs jbe
xchg
pop
orl
dec
imul
repz lds
push
fistp
fildl
sbb
mov
mov
jns
mov
pop
mov
mov
push
sti    
into   
scas
outsb
xlat
in
jge
imul
xchg
adc
dec
addr16 add
jb
arpl
jge
mov
inc
adc
aaa    
dec
cmc    
mov
rcl
loope
leave  
mov
add
jo
jmp
add
xchg
jmp
fstpl
movsl
outsb
arpl
in
sub
inc
es data16 cmp
ljmp
(bad)  {%k2}{z}
std    
stc    
inc
push
sub
xchg
ds popf 
dec
cmp
sbb
push
in
arpl
clc    
cmp
hlt    
xor
std    
mov
mov
and
popf   
jge
jp
lahf   
movsl
and
in
bound
jp
xchg
dec
test
fcompl
push
test
sbb
pop
fs loope
mov
inc
mov
out
test
dec
mov
cmp
iret   
pop
in
aad
not
out
loope
test
pop
pop
(bad)  
out
push
outsb
inc
test
push
les
mov
pop
test
jp
push
pop
ret    
sub
fdivl
add
pop
ror
push
xchg
insl
or
insb
mov
shlb
lea
xor
mov
and
imul
xor
test
dec
xchg
addr16 hlt 
mov
shl
arpl
mov
push
loope
test
imul
xchg
fisttpl
data16 aaa 
xor
popa   
and
pop
sub
inc
xor
mov
aaa    
dec
cmc    
mov
sbb
sub
hlt    
mov
out
xlat
iret   
ss inc
jl
cmpsb
xchg
xor
or
cmc    
enter
mov
popf   
sti    
in
and
jae
fildl
push
cmp
lret   
cmp
out
sbb
adc
xor
sbb
sub
mov
not
enter
sub
mov
(bad)  
jle
jo
sub
mov
(bad)  
inc
pop
mov
mov
in
xlat
enter
mov
iret   
fdiv
imull
arpl
(bad)  
ljmp
jmp
fnsave
ljmp
mov
xchg
scas
add
aaa    
(bad)  
adc
xor
pop
jecxz
pusha  
mov
add
mov
les
jecxz
repnz and
out
sub
push
sub
mov
out
xchg
fwait
insb
in
push
ret
mov
cmpsl
in
inc
cmpsl
iret   
movsb
pusha  
xchg
mov
popa   
je
in
sbb
and
xor
mov
jl
cmp
(bad)  
notl
adc
jno
xchg
scas
loopne
data16
hlt    
fdivr
shl
xchg
ficomp
fcmove
pop
pop
xor
lods
mov
hlt    
lahf   
fwait
stc    
xor
fst
lock sbb
mov
lcall
rorb
mov
js
add
xchg
negl
mov
adc
fnstenv
dec
dec
pop
nop
adc
adc
leave  
subb
or
insb
je
jno
out
inc
repz fcompl
push
test
dec
pushf  
cmp
dec
lds
fs inc
mov
jbe
notl
pop
pushf  
xorl
(bad)  
xor
jno
mov
jns
mov
dec
call
xchg
dec
jae
push
rorb
add
sub
push
cmp
or
and
pop
out
ds sub
(bad)  
outsb
lock stc 
mov
sahf   
outsb
ja
inc
daa    
mov
sahf   
clc    
popf   
cmp
sub
stos
in
xor
hlt    
xor
shll
idivl
adc
aas    
ljmp
mov
mov
jmp
loope
cli    
mov
inc
decl
std    
test
pop
sahf   
mov
out
or
sub
fxch
cmp
xor
negb
mov
aad
loopne
cmp
cmpsb
les
add
xchg
loope
call
hlt    
xor
(bad)  
push
pop
dec
adc
mov
mov
add
xor
mov
pop
mov
dec
punpckhbw
push
mov
xor
jb
cmp
push
clc    
(bad)  
xor
mov
add
out
mov
mov
js
and
lcall
and
jle
mov
push
fldenv
jmp
xchg
ret    
mov
test
mov
mov
loop
push
and
add
das    
insl
xor
cmp
shrb
mov
mov
add
scas
mov
mov
inc
decl
jge
mov
std    
decl
je
in
mov
jae
rorl
dec
or
mov
jae
mov
lock add
mov
hlt    
iret   
int3   
lods
sbb
stc    
xchg
jge
inc
xchg
dec
pop
pop
xchg
push
sbb
(bad)  
dec
xor
mov
or
dec
ja
movsl
mov
mov
arpl
pusha  
add
jmp
cli    
cmpsl
add
sub
fsts
jb
pusha  
jp
call
popl
or
mov
shrl
(bad)
repz ds inc
or
lret
in
sbb
int3   
jge
loop
pop
clc    
mov
out
aam
push
xlat
iret   
fdivrl
std    
mov
jge
repnz lret
jmp
sti    
xchg
fdivl
stos
dec
ljmp
test
dec
popl
xor
and
or
sub
dec
mov
and
or
sub
adc
mov
mov
movsl
les
jg
test
test
mov
lods
dec
inc
mov
or
inc
aas    
mov
mov
in
xchg
dec
imul
jnp
mov
andl
jne
add
sub
xor
inc
insl
sahf   
xchg
push
mov
movsb
sahf   
inc
and
mov
mov
add
stos
mov
repnz stc 
lds
lcall
es popa 
hlt    
jp
js
jne
xchg
sub
jg
aas    
lahf   
dec
pop
ficoml
hlt    
pop
and
stos
adc
mov
repnz mov
mov
mov
or
or
enter
std    
stos
dec
ljmp
movl
pop
sub
ud1    
out
mov
(bad)  
rorl
pop
and
jp
in
aam
testb
and
shr
out
in
(bad)  
popf   
cmp
sub
xchg
or
mov
cwtl   
mov
out
leave  
verr
dec
inc
dec
lods
mov
loope
adc
inc
es data16 cmp
std    
pushl
push
or
lock ljmp
add
inc
dec
ljmp
(bad)  
int
hlt    
add
dec
xchg
imul
adc
pop
dec
repz xor
dec
inc
lahf   
jno
dec
bound
ja
mov
ret
xor
adc
(bad)  
test
or
mull
pop
aaa    
add
fsubs
test
stc    
inc
les
xchg
pop
aam
shl
aam
mov
mov
mov
fst
mov
dec
mov
ss ret
cld    
inc
push
inc
sbb
ds push
dec
mov
sub
xchg
fistpll
clc    
adc
data16 int
(bad)  
rcll
enter
pop
jae
or
inc
out
test
daa    
ret
push
arpl
dec
add
mov
jmp
std    
std    
scas
mov
scas
sbb
jno
mov
pop
jns
xlat
inc
pop
mov
jl
push
rcrl
push
lds
aaa    
lock mov
lea
(bad)  
arpl
hlt    
xchg
xor
jge
xor
outsl
push
loopne
cld    
jae
pop
mov
sub
fisttp
sub
dec
leave  
cli    
js
sbb
out
ljmp
push
ja
mov
mov
iret   
movsb
cmp
pushf  
mov
icebp  
fiadd
(bad)  
out
mov
and
pop
movsb
mov
lret
cmpsl
and
js
movsl
ret
push
(bad)  
jnp
push
popf   
loopne
mov
cltd   
mov
movl
add
imul
adc
and
jle
mov
adc
(bad)  
int
mov
out
cli    
xlat
not
add
jle
bound
mov
outsl
sub
das    
or
dec
sbb
call
add
xlat
ret
cltd   
inc
je
sub
into   
push
mov
movsb
hlt    
mov
mov
mov
adc
hlt    
mov
jle
enter
push
in
mov
jl
ficompl
ficompl
pop
int
inc
adc
mov
ficompl
mov
das    
xchg
js
cli    
cmpsl
push
inc
movsb
push
mov
(bad)  
mulb
imul
mov
dec
pop
jns
mov
cmp
mov
mov
cmp
out
dec
stos
je
xchg
les
sub
sarl
cmpsl
aas    
(bad)  
jae
pop
or
lret
in
test
mov
aaa    
mov
mov
fucom
add
pop
cmp
adc
xlat
(bad)  
hlt    
popf   
cmp
sub
repnz std 
iret   
mov
jp
gs stos
repz fadd
xor
cld    
fdiv
popf   
cmp
sub
xchg
or
movsl
in
scas
(bad)  
aaa    
and
(bad)  
push
cs rorb
add
mov
outsl
insb
pop
(bad)  
xor
or
sub
add
clc    
bnd call
clc    
outsl
jg
mov
popf   
fcmove
or
mov
popl
or
jnp
(bad)  
jmp
sub
dec
mov
(bad)  
push
fwait
dec
ljmp
fnsave
insb
adc
add
add
adc
push
int3   
mov
std    
mov
or
sub
pusha  
aaa    
mov
jnp
je
sbbl
or
jmp
nop
je
arpl
jp
jnp
push
sbb
mov
arpl
and
out
sbb
mov
sbb
mov
fsubs
les
add
cmp
mov
rol
push
push
orl
push
lret   
push
and
mov
(bad)  
in
rcrl
fisubrl
movsb
adc
xor
inc
in
in
(bad)  
mov
sbbl
je
in
in
enter
inc
adc
aaa    
sbb
mov
out
inc
xchg
aas    
inc
imul
push
nop
rclb
lret   
jae
addl
(bad)  
imul
sbb
push
cmp
mov
into   
loopne,pt
xchg
mov
jge
lods
and
imul
pmuludq
daa    
jns
and
jae
ror
into   
imul
push
push
sahf   
pop
imul
(bad)  
or
mov
push
mov
mov
jecxz
test
hlt    
pop
dec
cmp
cmp
xlat
daa    
mov
jle
jecxz
sbb
mov
mov
pushf  
in
xor
mov
out
dec
adc
repz xchg
sub
es push
std    
add
stc    
dec
pusha  
fnstsw
and
mov
jecxz
test
hlt    
adc
in
mov
sahf   
push
test
pop
push
adc
jno
ds dec
lods
cmp
mov
or
call
xchg
sub
add
inc
js
imul
test
imul
lds
mov
pop
push
hlt    
mov
(bad)  {%k2}{z}
cld    
pushf  
xchg
sbb
arpl
js
xchg
dec
xor
and
testb
out
dec
cwtl   
mov
xlat
or
movsl
mov
adc
dec
pop
jns
mov
(bad)  
out
jl
xchg
or
jb
(bad)  
dec
test
fsubrs
(bad)  {%k2}{z}
cld    
pushf  
ret
out
and
outsb
xchg
(bad)  
insl
fnstcw
xchg
add
xchg
mov
loop
xor
jp
loopne
std    
add
mov
test
mov
sub
lea
out
shrb
sub
in
jmp
add
int
fsubrl
dec
cmp
mov
mov
mov
or
not
xor
addb
sub
and
(bad)  
out
repz aaa 
enter
push
pop
xor
cs mov
icebp  
das    
jo
sbb
add
call
out
aam
push
xlat
iret   
fdivrl
std    
mov
cmc    
sbb
pushl
sub
call
sub
xor
pushf  
xor
xor
int
push
cmp
stc    
mov
mov
arpl
stos
and
mov
fistpll
inc
sbb
test
outsb
lea
adc
xlat
les
adc
inc
popf   
movsl
mov
subl
mov
ss dec
aam
xchg
xchg
stc    
(bad)  
int3   
pop
mov
imul
add
jge
mov
dec
insl
push
aas    
stos
addr16 jp
push
verr
jge
inc
out
lea
mov
fist
and
lcall
(bad)  
repz jmp
jp
push
sldt
(bad)  
shll
mov
dec
cmp
fcomps
push
(bad)  
mov
push
xchg
mov
loop
fildl
das    
add
cmp
movsb
insb
jne
lods
jp
xchg
sub
mov
scas
push
test
lock stos
inc
fistl
push
or
faddp
xor
stos
repz cmp
sbb
push
xchg
pop
inc
rcl
imul
xchg
jge
or
push
jecxz
outsl
push
or
push
mov
sbbb
cmp
(bad)  
gs dec
into   
mov
xchg
sbb
jl
xchg
sub
test
out
inc
mov
and
xchg
or
sub
inc
pop
push
sub
movsb
push
inc
loopne
cmp
fucomip
jb
int
adc
push
and
jb
aas    
mov
push
mov
pop
push
mov
ficompl
mov
int
push
into   
stos
push
mov
xchg
std    
cmpsl
adc
imul
ja
inc
std    
std    
decl
je
sti    
or
and
dec
imul
adc
jo
jmp
(bad)  
fwait
sub
and
fucomi
adc
cmc    
aam
lahf   
out
cmp
fisttp
mov
push
pop
or
dec
gs je
add
xor
cld    
hlt    
mov
aaa    
dec
cmc    
mov
into   
xlat
out
fcoml
lock
hlt    
stos
jmp
ss jae
sub
aaa    
jg
mov
loop
iret   
(bad)  
out
shrb
pop
inc
lock sbb
ds push
pop
push
insl
inc
cmp
(bad)  
lock sub
cmp
mov
ds cmp
les
add
insb
nop
rorb
push
push
xchg
adc
push
fwait
dec
ljmp
gs jbe
sub
lea
lahf   
es inc
sbb
imul
out
and
fistp
push
test
xor
mov
cmp
xlat
add
data16 cmpsb
out
cli    
outsl
mov
xchg
movsb
rol
imul
in
rolb
adc
pop
nop
test
jnp
xlat
in
pushf  
dec
sub
dec
lcall
(bad)  
notl
adc
xorl
ljmp
sbb
les
bound
cmp
inc
jno
out
mov
(bad)  
mov
loop
shrl
insb
subl
or
mov
outsb
fnstenv
inc
shrl
(bad)  
mov
jnp
adcl
rorb
or
xchg
pop
ss sbb
dec
imul
pusha  
jmp
cwtl   
push
fistp
fcmovnbe
popf   
test
arpl
pop
jns
mov
dec
pop
jg
inc
xor
gs jbe
dec
push
and
in
adc
xchg
(bad)  
aad
push
add
popa   
adc
xchg
jbe
vhsubpd
mov
mov
fs mov
(bad)  
cmc    
mov
mov
loope
int3   
push
xor
cmp
mov
xor
or
call
mov
jecxz
sbb
dec
pusha  
sbb
aad
xor
scas
enter
inc
mov
in
leave  
jl
push
lds
cmp
xchg
xlat
sub
test
xor
imul
pop
fs mov
cmp
inc
adc
or
mov
addr16 push
fdivr
ffree
fs mov
and
jge
mov
xchg
sub
push
int
add
cmc    
mov
ljmp
in
xchg
cltd   
push
shrl
or
or
or
test
push
push
mov
(bad)  
sbb
sub
fdivl
pop
jno
sbb
jecxz
test
mov
dec
push
mov
sbb
adc
push
sub
mov
sbb
and
jle
dec
fsts
pop
addr16 pop
aas    
adc
aas    
movsl
lahf   
pop
fs loope
xor
into   
insb
mov
call
jge
sarl
pop
xchg
xor
mov
jae
pop
js
push
in
cld    
push
call
inc
call
inc
and
xor
loop
mov
and
lds
cltd   
sub
movl
das    
icebp  
ds pusha 
je
inc
les
xchg
inc
addr16 mov
push
int
jns
jl
and
pusha  
(bad)  
out
xlat
fldt
mov
out
xlat
iret   
fdiv
add
aas    
fnstsw
adc
stc    
hlt    
enter
(bad)  
cld    
std    
lret   
ret    
xchg
fwait
mov
divps
adc
inc
loop
arpl
add
jo
xor
dec
gs je
add
dec
sub
leave  
mov
mov
push
dec
sti    
xchg
ds out
fnstcw
add
dec
dec
jae
sub
(bad)  
daa    
(bad)  
pusha  
jnp
push
sbb
mov
cld    
rcll
sub
loop
mov
xorl
insl
cmp
inc
fnstsw
(bad)  
and
and
dec
scas
push
sub
fistp
mov
clc    
dec
xchg
inc
sub
dec
push
call
mov
test
rol
hlt    
mov
out
xlat
(bad)  
fisttp
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cld    
pop
xchg
stos
outsb
xchg
mov
dec
mov
mov
jns
xchg
xchg
iret   
andb
or
outsb
cmp
fldt
aas    
fs jle
adc
xchg
or
mov
dec
test
dec
cmp
popf   
jle
mov
loop
xor
js
outsb
add
dec
fdiv
movsl
push
in
or
fcompl
sbb
mov
movl
iret   
mov
stos
iret   
mov
test
mov
aad
mov
stos
iret   
mov
(bad)  
mov
fmul
mov
fxch
mov
fxch
mov
fmulp
mov
fmulp
mov
ror
mov
ror
mov
ror
mov
ror
mov
(bad)  
mov
(bad)  
mov
ror
mov
ror
pop
pop
lret   
popf   
stos
push
je
shrl
or
jo
mov
pop
sti    
(bad)  
lcall
pop
movsl
cmp
loop
mov
jnp
test
imul
xor
lock les
sbb
mov
xchg
in
jmp
hlt    
jnp,pn
jns
rorb
pop
mov
mov
and
ret
sbb
(bad)  
mov
or
adc
(bad)  
negl
lock cwtl 
aam
fdiv
mov
std    
xlat
fcomp
enter
jmp
inc
dec
push
pop
push
outsl
gs jae
sbb
cmp
imul
jns
icebp  
nop
add
cmpsl
dec
and
xchg
cwtl   
nop
xor
popf   
ficomp
addl
cli    
mov
cmp
push
adcl
push
mov
(bad)  {%k2}{z}
int
cmp
out
dec
mov
dec
fptan  
test
adc
mov
std    
std    
xchg
jnp
xchg
mov
lods
(bad)  
sub
test
ret
dec
loopne
mov
repz mov
pop
das    
lret
inc
mov
hlt    
push
test
loop
cmp
push
sti    
jns
mov
repz jle
cld    
xchg
hlt    
loop
inc
jno
sub
xchg
test
aaa    
test
mov
push
mov
ficoml
dec
pop
mov
adc
imulb
jb
verr
das    
out
pop
(bad)  
push
mov
push
mov
cli    
imul
or
lcall
out
pop
pop
aam
adcl
sub
js
or
mov
scas
or
pop
jl
xchg
jecxz
fidiv
(bad)  
hlt    
push
out
adc
(bad)  
or
xchg
jo
add
push
cwtl   
xor
adc
test
push
sub
cmpsb
inc
mov
fisttpl
push
sti    
mov
les
insb
lods
ret
iret   
stos
movb
push
test
pop
fadds
or
cmc    
xchg
test
dec
and
mov
jns
lcall
cli    
push
dec
cmpsl
mov
cld    
push
scas
xacquire xchg
mov
dec
sbb
dec
loope
mov
(bad)  
(bad)  
movsl
nop
and
cmp
lods
inc
lahf   
movl
xchg
xchg
inc
fdiv
fwait
test
imul
xchg
jmp
scas
lods
int
inc
sbb
mov
rol
out
jl
call
sub
cmp
mov
nop
lcall
fdivp
xchg
xor
lret
xor
mov
xchg
push
leave  
shl
mov
push
aaa    
xor
adc
shrb
cmpsl
aas    
adc
orl
and
inc
jns
xlat
pop
and
jp
lea
lret   
fwait
sahf   
mov
int3   
adc
out
fidivl
push
jbe
add
adc
jne
mov
push
xor
fwait
sub
and
mov
cwtl   
lea
or
jnp
int
push
cvtps2pi
xor
pop
push
pop
aam
sbb
lock aad
cmp
jae
inc
call
and
fucomi
add
movsl
pushf  
cs pop
or
ja
wrmsr  
adc
in
xor
add
adc
outsb
std    
hlt    
mov
aaa    
pop
cltd   
cltd   
(bad)  
aas    
push
mov
xchg
bound
adc
sub
or
jp
(bad)  
fstl
adc
pop
je
dec
or
adc
lahf   
loop
jl
xlat
int3   
ret    
sub
push
mov
out
lea
xorl
mov
pop
jmp
mov
xor
fisub
cmp
std    
mov
dec
mov
mov
lds
cmp
pop
mov
lea
jnp
xlat
cmpsl
leave  
mov
adc
and
jns
in
enter
fisubr
and
sub
xchg
test
lock out
mov
dec
lea
xlat
pop
jns
push
dec
into   
cmp
cmp
xor
xchg
stos
sbb
aas    
popl
loopne
into   
out
jns
out
icebp  
popf   
in
sub
mov
ss xor
fwait
cwtl   
mov
or
(bad)  
sub
cwtl   
scas
fist
loopne
ret
jns
scas
jbe
imul
cmp
dec
push
(bad)  
fiadd
mov
jns
rorb
mov
push
xor
imul
lds
xor
dec
and
inc
sub
push
lret
in
insl
or
inc
imul
fisttpl
pop
pushf  
mov
inc
push
lahf   
movb
scas
loop
xor
lret
(bad)  
jb
loope
mov
dec
out
xchg
sbb
rcrl
or
int
mov
(bad)  
dec
aaa    
mov
lret
mov
push
jg
mov
shrb
insl
xor
inc
lea
ficompl
or
mov
push
adcl
loop
stos
clc    
adc
inc
sub
gs cli 
push
pop
jbe
lea
sahf   
dec
sbb
mov
cmp
and
sbb
ds push
dec
push
xchg
xchg
not
pushf  
cltd   
hlt    
xor
jbe
jl
repnz adc
pslld
sbb
cmpsl
inc
imul
sub
jecxz
pop
add
inc
dec
add
xor
cmp
adcb
jmp
movsl
dec
xor
(bad)  
sub
std    
mov
mulb
ljmp
mov
rep movsl
add
jns
out
jae
jp
dec
cmpsb
xchg
xchg
cli    
push
push
mov
push
cmp
enter
dec
pop
mov
jmp
sahf   
jo
mov
movsb
ja
lret   
xchg
fsubrs
mov
dec
icebp  
je
dec
push
test
outsb
jge
mov
mov
mov
xlat
dec
pop
xor
jo
mov
pop
in
cld    
(bad)  
lods
lret
rolb
mov
xchg
inc
mov
inc
mov
xchg
mov
pop
fcos   
pop
imul
int3   
lahf   
mov
inc
cmp
mov
xor
fsubl
xlat
adc
arpl
jmp
pop
das    
and
sbb
out
mov
out
mov
jl
ror
mov
jmp
(bad)
xchg
jp
lods
leave  
jbe
rcrb
aaa    
jle
mov
mov
add
scas
mov
repnz dec
push
in
(bad)  
mov
sub
insb
add
jl
into   
jne
mov
subb
dec
mov
mov
inc
sbb
in
xor
insl
(bad)  
repz fwait
pop
fnstenv
xor
cmp
int
jp
lahf   
icebp  
pusha  
xchg
adc
stos
lods
inc
jns
mov
mov
inc
shlb
sub
(bad)  
mov
popa   
lret   
mov
rcl
movsl
cmp
js
icebp  
mov
ret    
jae
test
lahf   
dec
add
arpl
test
lahf   
fmul
outsb
adc
icebp  
aad
add
nop
cmp
lock
hlt    
repnz pop
out
cmp
test
mov
aaa    
mov
mov
cmp
pop
sub
(bad)  
xor
popf   
cmp
sub
bnd jp
das    
mov
dec
ds inc
(bad)  {%k2}{z}
call
fdivs
and
push
cmc    
xlat
fwait
int3   
mov
inc
add
movsl
adc
jb
(bad)  
jnp
adc
push
(bad)  
fimull
in
aam
jecxz
xlat
mov
popf   
stos
cwtl   
arpl
add
adc
scas
xchg
or
mov
outsb
cwtl   
(bad)  
js
cs inc
es data16 cmp
ljmp
(bad)
xchg
mov
fwait
xor
xchg
imul
rorb
bound
or
and
cmpsl
cmc    
gs adc
testb
mov
lahf   
adc
das    
mov
cmp
adc
mov
loope
inc
movsb
leave  
fsub
dec
adc
cli    
mov
aad
mulb
dec
bound
les
loop
inc
dec
ljmp
(bad)  
int
pop
add
(bad)  
int3   
push
ja
or
mov
imul
mov
ja
outsb
and
enter
dec
or
cmp
int3   
stos
imul
pop
inc
jne
xchg
sub
enter
mov
test
lret   
sub
dec
imul
dec
vhsubpd
push
pop
cmp
mov
js
lods
push
inc
push
xchg
adc
lds
push
xor
mov
out
adc
push
push
mov
mov
sbb
pop
cs int
cmp
(bad)  
lahf   
push
pop
jecxz
mov
add
cmp
loopne
bound
out
mov
mov
sub
pop
bound
pusha  
push
dec
ds das 
jno
popf   
xchg
outsb
xor
in
orl
bound
mov
jns
(bad)  
sbb
jnp
cmp
inc
cs
mov
das    
jno
mov
push
and
popl
popf   
jp
testl
add
stc    
test
imul
int
mov
cmpsb
cmp
adc
sub
dec
leave  
jo
aaa    
mov
stos
(bad)  
(bad)  
cld    
inc
iret   
sbb
mov
inc
pop
pop
or
or
in
insb
das    
lods
push
int
xor
xlat
pop
jns
popf   
add
jle
call
das    
lods
nop
(bad)  {%k2}{z}
iret   
scas
push
ds push
les
xchg
adc
sub
pop
pop
repz and
jae
xor
mov
push
xor
jns
(bad)  
mov
das    
pop
mov
insb
cmp
test
or
pushf  
sti    
jae
mov
adc
pop
mov
(bad)  
mov
and
fdivs
in
ret    
push
lods
pop
(bad)  
std    
xchg
cs popf 
daa    
(bad)  
fcmovne
inc
and
push
xor
jns
and
adc
pop
mov
insb
cmp
popf   
ja
or
add
loop
icebp  
adc
jnp
xchg
hlt    
adc
popa   
aaa    
(bad)  
jns
or
jge
add
(bad)  
das    
icebp  
adc
inc
into   
sbb
adc
jne
jns
sub
pop
repz and
inc
xchg
cmp
add
xchg
inc
push
popl
or
pop
(bad)  
test
ss in
dec
iret   
out
dec
adc
fwait
les
xchg
sub
movl
xchg
cmp
lret
in
push
sub
and
(bad)  
out
(bad)  
mov
hlt    
popf   
cmp
sub
push
add
mov
jp
fs
enter
adc
sbb
lods
jo
push
inc
add
jge
call
das    
aam
sbb
push
jp
push
lds
cmp
jae
mov
jae
xlat
cmpsl
dec
xchg
loop
mulb
dec
bound
es dec
(bad)  
addl
sub
int
arpl
push
test
xor
sbb
cmp
or
sbb
lahf   
sub
or
adc
push
jp
movsl
out
das    
icebp  
push
in
or
lea
jge
xlat
cmpsl
daa    
fist
ja
cmc    
xchg
pushw
and
jb,pt
into   
imul
arpl
ret    
cmp
adc
pop
pop
jns
add
ja
push
dec
lret
fist
jecxz
cmp
rcrl
and
(bad)
push
lock push
(bad)  
xor
mov
lret   
mov
mov
fadds
push
jbe
lea
in
sbb
dec
inc
xchg
sub
cmp
add
imul
adc
adc
or
mov
mov
call
sub
inc
sub
sub
mov
xlat
iret   
fdiv
mov
out
mov
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
and
add
jg
xor
inc
lahf   
pop
cmp
out
(bad)  
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
and
stc    
loopne
(bad)  
mov
(bad)  
out
xlat
enter
sub
mov
(bad)  
std    
fistl
inc
inc
or
pop
or
shr
inc
push
adc
mov
ja
sub
out
xchg
divl
ds or
bound
test
or
sbb
mov
(bad)  
lock pop
je
les
ljmp
sub
inc
inc
mov
icebp  
pop
fprem1 
jle
mov
pop
dec
dec
cmpsb
xchg
inc
dec
ljmp
(bad)  
int
pop
roll
je
shlb
addr16 ds shr
je
jl
popf   
add
pusha  
jno
sub
add
pusha  
add
push
cltd   
add
andl
fidivl
(bad)  
hlt    
insb
sub
mov
cld    
cmpsb
push
add
(bad)  
popf   
mov
imul
push
fcmovb
cmp
cld    
cmp
ret
push
push
dec
sbb
sahf   
mov
jle
mov
xchg
pusha  
jnp
pop
pop
adc
das    
out
stos
sub
shll
lcall
pushf  
or
cmp
into   
mov
dec
cmp
std    
jl
out
xchg
mov
test
dec
imul
cltd   
ljmp
jns
jno
cmp
xchg
push
cmp
(bad)  
(bad)  
dec
iret   
enter
jnp
inc
mov
or
(bad)  
xor
ds inc
xor
scas
das    
mov
xchg
fisubr
adc
ficom
and
sub
inc
or
sbb
cmp
dec
inc
rorl
loopne
dec
ficoml
out
inc
inc
mov
imulb
aad
aas    
sub
shr
(bad)  
(bad)  
jo
fnstsw
adc
xlat
add
movsb
push
inc
push
insl
sub
push
es push
jb
pop
mov
and
repz
or
mov
shrl
push
loop
add
cli    
lcall
dec
xor
push
call
or
popf   
(bad)  
sldt
jbe
xor
push
icebp  
call
pop
mov
push
(bad)  
fmull
mov
cmc    
int
mov
mov
mov
(bad)
pop
shrl
dec
push
movsb
imul
mov
mov
dec
pushf  
lock and
pusha  
inc
lea
ficompl
cltd   
ja
mov
mov
mov
das    
call
sub
cmp
ror
jnp
mov
or
sub
push
aaa    
loope
xor
int
push
mov
adc
aas    
ffree
mov
jae
mov
mov
add
scas
and
xor
mov
jno
xlat
cmpsl
loope
adc
cmp
popa   
ljmp
sub
sbb
nop
adc
inc
xor
mov
faddl
and
dec
fcmovu
xor
or
jmp
cmp
push
jae
ret
rcrl
out
leave  
verr
dec
inc
ja
fwait
ljmp
and
jo
adc
test
fidivr
pop
out
rol
pop
aam
add
pop
pop
sub
into   
(bad)  
mov
les
scas
jb
pusha  
push
sahf   
mov
iret   
fsub
test
mov
inc
es data16 cmp
ljmp
scas
leave  
lock push
xchg
sti    
pusha  
es iret 
ds dec
push
fiaddl
cmp
les
inc
int
(bad)  
rcll
enter
pop
imul
xchg
inc
dec
fwait
out
cmpsl
nop
or
inc
in
arpl
je
xchg
sub
pop
std    
std    
stos
sbb
ja
xchg
xchg
in
or
sbbb
inc
pop
mov
inc
int
cmpsl
push
scas
fcmovu
test
jnp
stos
adc
fs jne
arpl
hlt    
xchg
fldenv
inc
aaa    
xor
test
hlt    
adc
push
push
xlat
or
mov
das    
and
aam
mov
fucomip
push
pusha  
es push
hlt    
(bad)  
jne
inc
sbb
cs out
mov
mov
cltd   
sub
pop
movsb
xor
jae
mov
jne
aam
push
iret   
push
cwtl   
stos
lret   
imul
xchg
sbb
add
sub
shl
ss ds dec
fbstp
or
data16 cmp
gs add
fldenv
lret
push
mov
stos
addr16 xor
inc
inc
cmpsl
inc
dec
test
inc
adc
scas
pop
jge
and
push
push
xlat
or
movsb
pop
and
mov
jl
cmpsl
dec
dec
xchg
les
push
inc
pop
inc
hlt    
into   
push
xor
lods
jl
cmpsl
sahf   
xor
dec
in
cld    
jp
ja
sub
and
outsl
sub
cmpsl
(bad)  
mov
fidivrl
jmp
adc
(bad)  
testb
jmpw
out
outsl
pop
mov
(bad)  
mov
xchg
lods
ja
icebp  
and
jmp
or
sub
pop
sub
mov
arpl
mov
negb
xor
into   
mov
jno
int3   
jbe
jl
shrb
add
outsl
mov
cwtl   
jno
xchg
ficompl
mov
pop
lret
neg
pushf  
and
push
cmp
mov
iret   
movsb
aas    
jmp
sbb
mov
sub
sbb
je
jp
in
aam
mov
aaa    
and
(bad)  
out
decl
xor
popf   
cmp
sub
sahf   
mov
mov
repz
in
mov
je
sub
arpl
pop
sbb
loopne
adc
cmp
daa    
outsl
jle
imul
bt
jne
jl
and
push
cmc    
xlat
xor
inc
inc
or
into   
shrl
pop
fs inc
imul
(bad)  
push
aas    
sub
arpl
pop
(bad)  
cmc    
or
cmc    
rorb
stos
cmp
adc
cmc    
aam
cltd   
lds
or
sbb
pop
popa   
sub
cmp
popf   
test
adc
cmp
in
mov
adc
push
lds
or
pop
iretw  
ja
ss jns
jns
and
loope,pn
xor
mov
jp
mov
cmp
add
add
lret   
sub
insb
jne
xlat
pop
and
jp
adc
mov
loope
mov
push
jb
cmp
jns
xchg
mov
xlat
cmp
rol
xor
add
cs stc 
repz xor
sti    
repz sbb
sub
jmp
in
cmp
adc
lods
into   
ds cmp
(bad)  
xor
aas    
popf   
cli    
inc
into   
xchg
ja
mov
aas    
out
insb
pop
cmp
out
lahf   
push
mov
(bad)  
inc
lret
dec
dec
xor
in
sbb
pop
and
dec
mov
and
popa   
adcl
(bad)  
fdivr
rcl
jge
xchg
dec
pop
jmpw
jb
adc
rol
pop
daa    
mov
and
fldenv
mov
popa   
sub
hlt    
mov
les
jnp
push
cmc    
xor
and
(bad)  
mov
mov
add
scas
repnz sub
mov
fbld
je
popf   
cmp
pop
inc
push
jmp
and
lahf   
rolb
mov
fwait
lods
adc
sbb
outsb
dec
enter
inc
es data16 cmp
ljmp
add
dec
pop
jns
mov
cmpl
mov
(bad)  
cld    
outsl
ret    
sbb
out
mov
mov
pop
iret   
cmpsb
les
js
jge
repnz lret
(bad)  
lods
or
jo
sti    
xchg
ds out
fstps
arpl
push
mov
inc
int
xchg
cwtl   
or
cld    
ret
(bad)  
lods
movsb
popl
sub
jae
or
sub
in
dec
and
or
sub
push
fcomi
or
fstpl
sbb
int
push
adc
mov
gs mov
test
inc
xchg
test
in
push
test
mov
and
outsb
sub
pop
fs out
cmpsl
xlat
movsl
push
xchg
test
cmp
cwtl   
in
(bad)  
das    
lods
sbb
inc
add
test
fs out
add
push
xchg
test
cmp
cwtl   
in
cmpsb
out
sbbl
lahf   
icebp  
das    
das    
pop
in
mov
cmpsl
or
push
cmc    
ficomp
scas
or
out
repz cld 
xor
mov
loop
push
and
mov
pushf  
dec
dec
add
xchg
popf   
dec
xchg
adc
dec
dec
test
ja
mov
mov
sahf   
xor
jmp
sar
pop
aas    
fucom
add
cmp
stos
lret
call
xchg
jnp
adc
(bad)  
lahf   
xlat
pop
and
jp
in
aam
mov
and
fsubrs
sub
push
pop
and
cld    
bound
or
inc
dec
jae
jbe
ret
pop
das    
or
add
aad
adc
fdivs
mov
cmpl
ds out
(bad)  
pop
(bad)
mov
inc
jne
bound
push
dec
mov
inc
dec
ljmp
(bad)  
int
repnz bound
imul
ljmp
(bad)  
int
shrl
lcall
(bad)  
aam
movsb
push
jne
mov
inc
pop
pop
test
lret
pop
jecxz
inc
mov
cmpsl
sahf   
fs stc 
mov
je
dec
push
fdivr
pop
movsb
out
sar
addr16 mov
(bad)  
pop
in
cld    
pop
jmp
pop
mov
xchg
test
adc
sub
fs call
jl
push
inc
cmp
and
push
mov
or
push
sahf   
test
imul
cmpsb
xor
push
cmpl
add
jns
sbb
test
push
add
cmovb
insb
adc
sbb
js
call
push
add
daa    
out
iret   
sub
cmc    
pop
push
push
verr
imul
stc    
(bad)  
sar
adc
pop
mov
nop
inc
and
or
sub
inc
fs inc
and
or
sub
cmpsb
pop
fimull
fstpl
cs inc
roll
push
inc
loop
shrl
cmpsl
and
lea
nop
mov
sbb
aad
xchg
mov
test
pop
stos
cmp
inc
jnp
mov
push
dec
js
xlat
inc
cmpsb
jbe
push
dec
in
cmpsb
add
stc    
movsl
cmp
sbb
std    
mov
xor
ss xor
scas
or
jecxz
or
iret   
imul
pop
add
adc
lock pop
and
cwtl   
mov
outsl
pop
sbb
shrl
mov
xor
mov
push
rorb
push
jg
sub
pcmpgtd
aas    
and
outsb
nop
push
seta
jns
mov
sub
xchg
mov
mov
out
dec
cmp
lea
mulb
mov
loope
aas    
aaa    
and
call
add
push
pop
push
pop
and
cld    
bound
or
inc
dec
jae
jbe
xchg
lahf   
mov
daa    
push
js
adc
sub
sub
cmc    
xor
push
je
pop
test
and
arpl
je
aas    
push
sub
call
aaa    
and
(bad)  
out
xorl
sub
sti    
inc
jp
sahf   
in
lcall
iret   
fmul
mov
or
lret
out
add
push
les
jecxz
fidiv
sub
inc
ret
xchg
loop
lods
inc
pmulhw
ds cltd 
fwait
popf   
and
dec
pop
and
repz in
pause  
aam
addl
int3   
cmp
test
mov
data16 jne
mov
pop
dec
int
add
nop
or
inc
stos
sbb
or
sbb
cmp
icebp  
mov
lcall
out
push
jl
inc
xlat
stc    
loopne
mov
mov
jge
sub
ret
xchg
int
mov
mov
inc
dec
lds
(bad)  
jbe
stc    
push
pusha  
adc
jno
xchg
ficompl
mov
popa   
inc
incb
fcompl
and
orb
loopne
clc    
jno
mov
and
jp
xchg
fmul
and
jbe
add
mov
inc
jge
jo
xor
lock cmp
or
sub
cs push
je
push
(bad)  
negb
sbb
or
arpl
iret   
mov
jp
imul
rolb
shrl
out
xlat
into   
(bad)  
(bad)  
mov
aaa    
dec
cmc    
mov
lret
fmul
mov
or
mov
push
punpcklwd
aam
stc    
mov
add
inc
ljmp
sub
inc
inc
test
xchg
scas
add
lret   
enter
les
jecxz
call
outsl
out
mov
jno
add
xor
std    
jp
mov
dec
cmpsl
or
xchg
icebp  
push
pop
iret   
fwait
dec
or
sub
pop
mov
loop
fs imul
sbb
xor
mov
mov
stc    
imul
or
xor
cmpsl
cmp
(bad)  
mov
fdivl
in
cld    
(bad)  
popf   
mov
les
xor
scas
mov
loope
leave  
cmp
testb
push
cmc    
ret
stc    
std    
jp
xchg
ljmp
lahf   
fs stos
ficompl
test
add
sub
cltd   
add
inc
push
fidiv
adc
or
jb
out
dec
int
(bad)  
cmp
sahf   
ret    
popa   
push
aas    
cmc    
sbb
dec
movl
loope
lahf   
popa   
mov
inc
add
lret   
xor
inc
std    
insb
inc
cli    
lahf   
cwtl   
dec
mov
daa    
in
cld    
(bad)  
popf   
fldt
fisubl
lods
add
dec
sbb
sahf   
lods
loope
jg
jbe
inc
ja
icebp  
scas
inc
jne
cmp
into   
fwait
dec
scas
push
add
pop
mov
ret
sub
test
and
or
fldenv
sub
xor
test
in
cmp
sbb
scas
mov
in
int3   
fcompl
daa    
mov
(bad)  
icebp  
in
lock adc
and
stos
(bad)  
scas
mov
cs dec
xchg
nop
cltd   
aad
push
mulb
mov
sub
pop
in
pop
cmp
mov
dec
xlat
or
dec
cwtl   
outsl
jg
mov
mov
mov
push
dec
jo
mov
(bad)  
and
xchg
xor
icebp  
scas
loope
mov
int
fwait
dec
fidiv
and
pop
mov
rolb
mov
in
jmp
xor
pop
sbb
cwtl   
push
mov
and
xchg
jecxz
mov
jae
push
rorb
fistpll
int3   
test
xlat
cmpsl
or
dec
ds push
int
dec
add
es mov
mov
or
jmp
xor
and
shr
(bad)  
frstor
movsl
fcomip
mov
or
fs
enter
adc
jl
and
pusha  
(bad)  
out
xlat
cwtl   
mov
sub
dec
cmc    
mov
fcom
stc    
fcoml
enter
ret    
cltd   
xlat
pop
and
jp
in
aam
mov
and
(bad)  
out
mov
cmp
sub
xchg
(bad)  
or
fs
enter
ljmp
(bad)  
out
xlat
xchg
lods
lods
mov
aaa    
dec
cmc    
mov
aad
loopne
xchg
jnp
adc
aas    
(bad)  
aaa    
inc
test
fdiv
mov
push
lahf   
xchg
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
cmpsl
push
adc
(bad)  
xchg
fdivr
fisttp
pop
mov
ss jecxz
xchg
call
lahf   
stos
aam
jb
es aaa 
mov
test
mov
jmp
aaa    
data16 cli 
mov
shl
(bad)  
out
ror
fdivp
ss scas
bound
jae
cmp
inc
insb
test
pop
mov
sub
shlb
daa    
rolb
mov
test
enter
lcall
and
cld    
push
dec
mov
movsl
mov
dec
mov
test
mov
pop
push
lds
cmp
sahf   
sub
xchg
icebp  
sti    
mov
pop
and
pop
jb
cwtl   
mov
cmpsb
cli    
movups
in
(bad)  
lods
aaa    
in
cmp
(bad)  
jl
mov
and
mov
fwait
(bad)  {%k2}{z}
in
or
xor
movsl
(bad)  
stc    
aaa    
xchg
push
frstor
fldcw
pop
dec
pop
je
sbb
inc
inc
insl
add
rcl
outsl
inc
xchg
or
push
xchg
sub
mov
out
mov
mov
iret   
movsb
inc
cmpsb
push
cmc    
jmp
jbe
(bad)  
mov
mov
mov
jp
fs
enter
imul
sbb
lods
dec
out
test
xlat
and
popf   
jnp
fdivrl
fnsave
cmp
adc
push
or
jnp
movsl
mov
rcll
xchg
pop
push
sti    
sbb
ds
repz mov
add
cmp
adc
les
mov
je
dec
sub
sub
sub
pop
lock ds
stc    
je
mov
sbb
jge
or
sbb
xchg
aam
ss int3 
push
mov
sti    
mov
fildll
test
dec
lret
xor
iret   
or
dec
lds
in
cld    
push
(bad)  
jp
pop
cli    
out
adc
sub
stos
in
imul
pop
shrl
(bad)  
lcall
aam
and
movsl
mov
out
notl
sub
mov
or
adc
and
repnz shr
pslld
push
mov
lret   
xor
push
xchg
into   
jmp
or
out
inc
add
pop
aam
jp
imul
out
rcll
add
xchg
(bad)  
xorl
jl
arpl
(bad)  
lods
movsb
inc
fisubrl
push
mov
out
push
dec
shrl
or
dec
cmp
adcb
faddl
imul
or
sbb
orb
and
insb
out
sub
pop
aam
add
cmp
mov
sbb
add
dec
jbe
cmp
lfs
jbe
pushf  
lret   
add
xchg
sbb
ds pop
push
data16 int3 
fisttp
inc
insl
ds
out
dec
jb
call
repz pushf 
lret   
add
xchg
sbb
jo
imul
mov
xchg
sbb
sbb
addr16 mov
(bad)  
daa    
pop
lret   
(bad)  
xchg
cmpsl
and
push
sub
push
dec
enter
and
push
(bad)  
daa    
pop
lret   
(bad)  
xchg
cmpsl
cmp
adc
in
arpl
jbe
jl
mov
and
iret   
movsb
inc
movsl
insb
adc
sub
movsl
dec
lods
adc
sbb
sub
sarl
cmp
mov
mov
ljmp
cmp
lods
adc
sbb
sub
insl
sbb
(bad)  
mov
mov
outsl
and
mov
cmp
(bad)  
in
les
and
pop
cmp
cld    
pop
jae
in
rcrl
adc
ds cltd 
(bad)  
jb
mov
test
pop
addr16 nop
pusha  
popf   
mov
xchg
or
pop
sub
in
inc
out
sub
pop
aam
add
andl
fcmovbe
jns
xor
jmp
loop
mov
(bad)  
daa    
pop
lret   
(bad)  
xchg
cmpsl
add
push
sub
push
dec
enter
mov
mov
(bad)  
daa    
pop
lret   
(bad)  
xchg
cmpsl
sbb
or
in
arpl
jbe
jl
mov
and
iret   
movsb
mov
sub
in
pop
(bad)  
ss push
loop
mov
mov
in
sahf   
stc    
aam
fwait
cwtl   
popf   
jno
addr16 xchg
or
outsb
push
jne
xchg
sub
repz dec
aaa    
orl
xchg
mulb
inc
xor
dec
xchg
sub
pop
ret    
jae
mov
mov
lea
iret   
movsb
aad
add
jnp
test
xlat
cmpsl
sub
jmp
sub
cmp
out
dec
mov
add
out
jb
cmc    
push
xchg
mov
fwait
sub
and
(bad)  
out
cmpsb
mov
sub
stc    
and
nop
and
(bad)  
aaa    
and
mov
iret   
cmpsb
std    
jbe
mov
or
cmc    
test
sbb
cmp
xchg
jnp
adc
jbe
pop
addr16 adc
ds adc
jp
push
into   
fadd
jns
cmpsb
(bad)  
repnz pushl
movsl
fcomip
mov
or
fs
enter
xor
jl
and
pusha  
(bad)  
out
xlat
sahf   
mov
mov
ds sbb
xlat
lods
cmc    
icebp  
getsec 
jne
inc
push
out
sti    
inc
dec
xchg
scas
add
jne
dec
xor
les
jecxz
repnz and
sbb
test
pop
pop
sub
jno
xchg
ficompl
mov
xchg
cwtl   
(bad)  
les
and
cmp
outsb
and
test
and
inc
(bad)  
mov
imul
icebp  
getsec 
jne
inc
push
sub
dec
xchg
scas
add
adc
les
jecxz
repnz and
sub
test
test
sub
jno
xchg
ficompl
mov
xchg
cwtl   
inc
lods
inc
sub
or
daa    
sub
test
and
pmaxsw
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
movsl
add
mov
scas
inc
iret   
insb
dec
loop
mov
iret   
and
aam
jb
es aaa 
mov
test
mov
lods
ljmp
shll
nop
pmaxsw
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
sub
movsl
push
sbb
(bad)  
xchg
fdivr
fisttp
pop
mov
ss jecxz
xchg
call
lahf   
stos
aam
jb
es aaa 
mov
test
mov
jmp
ja
cmp
and
jmp
outsb
mov
jg
lret
jecxz
stos
and
dec
icebp  
sub
xor
cwtl   
aaa    
rclb
or
pop
adc
(bad)  
out
sti    
mov
mov
in
mov
xor
mov
mov
mov
sbb
rorb
lea
stos
imul
fwait
test
mov
iret   
in
and
mov
dec
mov
mov
add
sub
xor
outsl
jo
add
sub
inc
cmp
sub
or
pop
xchg
aam
and
push
jnp
mov
repz push
(bad)  
mov
add
inc
bound
in
pop
xor
int
int
adc
or
ljmp
push
jmp
mov
call
dec
mov
das    
int3   
mov
and
or
repnz dec
mov
insl
ds clc 
imul
sbb
fidivr
stc    
or
imul
push
mov
into   
push
inc
add
inc
add
popa   
iret   
ljmp
jae
scas
shl
and
ljmp
mov
mov
ret    
fildll
xor
add
pop
lock arpl
xchg
xchg
jmp
(bad)  
mov
push
and
sahf   
fistl
inc
aaa    
ja
outsl
ljmp
cmpsl
into   
imul
arpl
fcmovnbe
shrb
cli    
jns
jnp
lock jmp
sbb
vsqrtss
mov
out
sti    
gs sub
jecxz
mov
sub
mov
repz mov
rolb
push
les
hlt    
dec
leave  
fcompl
and
mov
adc
sub
loop
push
push
imul
add
xor
cmp
mov
add
mov
lret   
inc
int
mov
and
jne
xor
les
jecxz
call
imul
rcrl
into   
call
dec
data16 loopne
cmp
int3   
cmpsl
insl
cmp
adc
mov
into   
cmpb
aam
or
lds
adc
or
xor
pop
xchg
push
xchg
mov
inc
mov
bound
mov
movsl
dec
fadds
add
in
icebp  
daa    
inc
jecxz
aad
or
fmull
adc
aas    
adc
fwait
stos
jo
pop
mov
sbb
sti    
cmp
fldl
xchg
(bad)  
daa    
jbe
(bad)  
(bad)  
icebp  
push
scas
cmpsl
mov
outsl
rorl
pop
mov
inc
test
les
iret   
into   
lahf   
inc
and
jg
inc
inc
popa   
ss jnp
mov
enter
mov
cltd   
rcl
aam
jmp
or
pop
mov
adc
jge
xor
cmpsl
fcoml
mov
jp
dec
fcmovbe
imul
sub
and
lcall
jb
mov
sahf   
dec
dec
roll
int3   
icebp  
add
jg
(bad)  
in
pop
and
jp
push
or
das    
icebp  
jl
push
mov
clc    
aas    
stos
fldcw
enter
data16 icebp 
fcmovne
sub
rolb
or
testl
and
cld    
inc
sub
in
mov
and
jnp
sbb
mov
lods
das    
jecxz
stc    
xor
sarl
fstl
addb
xchg
in
push
stos
cwtl   
leave  
cmp
mov
jge
push
jl
add
(bad)
or
cmpsb
in
inc
adc
(bad)  
pop
mov
add
jg
mov
lahf   
std    
push
sldt
(bad)  
shl
add
pop
(bad)  
in
ss inc
in
add
out
movsb
xchg
or
imul
imul
push
mov
cld    
jg
(bad)  
lods
mov
xor
add
scas
push
jecxz
insb
cmpsl
dec
add
jo
pcmpgtd
xchg
mov
ficoml
and
or
test
(bad)  
into   
inc
dec
test
outsb
dec
xor
add
std    
scas
sbb
xchg
popf   
mov
repz mov
jp
arpl
icebp  
fdivrl
sahf   
and
stos
ss dec
push
inc
in
inc
sbb
sbb
adcl
xor
and
push
adc
lahf   
ror
loope
loopne
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
daa    
loope
xchg
inc
outsb
pop
iret   
mov
mov
test
jmp
outsb
neg
lahf   
scas
(bad)  
les
mov
mov
and
xor
lret   
add
stos
ljmp
push
mov
push
cmp
pop
or
sub
cmc    
inc
sbb
cmpsb
ljmp
stos
mov
sub
push
mov
jnp
push
sbb
xchg
repz cmp
push
in
dec
mov
dec
les
mov
mov
std    
mov
adc
sbb
daa    
sub
into   
fwait
xchg
icebp  
sbb
rcrl
ret    
dec
(bad)  
out
xchg
test
dec
cld    
dec
adc
mov
xor
popa   
and
cmp
(bad)  
or
in
jl
or
xor
sub
dec
dec
in
sti    
inc
inc
cmp
pop
cmp
orl
lret   
mov
(bad)  
mov
pop
arpl
add
sub
fnstenv
jle
arpl
sahf   
mov
sbb
inc
jp
inc
(bad)  
rorl
aaa    
and
out
mov
dec
mov
in
xor
nop
pop
mov
or
xor
xor
pop
fs insb
mov
pop
inc
sti    
fstpl
mov
inc
cmpsl
jecxz
sbbb
mov
scas
jbe
leave  
pop
jp
scas
jbe
or
lods
dec
mov
in
das    
dec
pop
insl
dec
stc    
push
stc    
(bad)  
cmc    
movsl
push
add
fdivs
sbb
sbb
int3   
leave  
mov
call
pop
loope
dec
mov
dec
in
lods
add
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
call
push
paddusb
and
inc
dec
lds
mov
into   
adc
(bad)  
push
xchg
cmp
(bad)  
lods
jmp
outsl
shr
mov
nop
(bad)  {%k2}{z}
stc    
push
mov
dec
or
dec
imul
and
inc
imul
pop
mov
push
and
cmp
movsb
push
mov
or
js
jecxz
jle
mov
adc
pop
mov
pusha  
pop
dec
jp
or
sahf   
test
add
ljmp
mov
sub
cmpl
out
jb
xchg
leave  
das    
(bad)  
adc
out
pushf  
push
daa    
inc
mov
push
sti    
inc
out
or
mov
push
ss mov
jp
push
pop
xchg
mov
sub
popa   
jp
mov
jge
jae
enter
push
xor
rorb
mov
pop
jecxz
push
push
jmp
xchg
lea
push
fdivp
loope
mov
out
dec
jnp
xlat
dec
cwtl   
loope
inc
add
mov
std    
cmp
mov
aas    
(bad)  {%k2}{z}
lock jb
popa   
cmp
sbb
inc
cmpsb
lds
jl
cmpsl
xor
gs int
dec
bound
pop
scas
cmp
int
int
mov
xchg
mov
mov
jle
bound
xor
mov
int
xlat
or
xchg
(bad)  
popf   
movsl
daa    
mov
int
or
and
rorb
rcl
inc
mov
test
mov
and
aaa    
mov
punpckldq
pop
adc
add
cli    
fiadd
imul
cld    
pop
leave  
push
add
jp
imul
pusha  
xchg
xor
jno
add
push
iret   
mov
mov
cmpsl
in
inc
cmpsl
iret   
movsb
push
sahf   
js
mov
cmp
insb
cltd   
shll
adc
push
adc
dec
sbb
sarl
cs int3 
in
inc
push
and
or
xchg
pop
mov
adc
test
mov
mov
in
fnop   
ficom
add
leave  
xchg
cmp
pop
inc
jl
lahf   
loopne
rcll
ss xor
mov
not
leave  
into   
sub
dec
icebp  
(bad)  
daa    
popa   
jp
mov
jge
pop
jae
inc
out
dec
mov
fwait
sbb
cmc    
pop
dec
jnp
push
mov
int3   
xchg
dec
iret   
idivl
imul
out
mov
cmp
(bad)  
xor
pop
fdivrl
fisub
(bad)  
xor
fimull
jl
aam
inc
pop
push
adc
mov
aaa    
inc
push
push
in
adc
and
xchg
xchg
jecxz
test
rdmsr  
pop
stc    
je
pop
mov
sub
mov
xchg
pcmpgtd
out
testl
xchg
jg
mov
or
mov
std    
lret
mov
aad
xor
adc
imul
cmp
push
test
cmp
mov
pop
ds inc
adc
or
fdivs
fsubl
mov
sub
inc
push
scas
rcrl
bound
mov
mov
adc
stc    
out
dec
cmp
repz sbb
or
fldl
pop
and
mov
fdivrs
dec
sti    
sub
sbb
call
sbb
test
scas
mov
ds lock dec
in
inc
jp
gs xor
adcb
inc
mov
sbb
ret    
inc
iret   
in
cmp
or
mov
es and
movsl
mov
xor
mov
cltd   
lahf   
mov
push
lock jb
xchg
jecxz
and
mov
push
iret   
movsb
in
int3   
pop
adc
cwtl   
pop
sbb
shll
cld    
std    
decl
ja
pop
xor
inc
cld    
jp
(bad)  
rorl
stos
cmp
scas
dec
mov
xchg
scas
sub
and
cmp
lds
jecxz
inc
add
mov
call
sbb
imulb
push
xlat
neg
add
cmp
inc
sub
movl
mov
mov
int
es push
mov
mov
out
sub
loope
dec
xchg
scas
add
jl
push
xor
les
jecxz
repnz and
out
sub
repz loope
mov
sub
insl
rcrl
sub
mov
cmp
aad
stos
dec
jae
icebp  
push
adc
sbb
mov
ss int3 
mov
mov
xchg
or
pop
jns
xchg
pop
test
mov
jns
in
ret    
pushl
out
jmp
adc
leave  
rcrl
fildl
pop
lret
jns
stos
movsl
push
inc
imul
gs add
lods
xor
aas    
ss and
jp
insb
mov
dec
mov
inc
pop
jne
mov
add
out
inc
push
push
insl
rcrl
sub
xlat
pop
mov
push
push
popf   
mov
mov
cld    
inc
mov
add
jmp
mov
cli    
mov
ja
push
lahf   
mov
mov
pop
pop
jbe
push
popf   
mov
lcall
fwait
mov
adc
mov
xorb
inc
int
loop
(bad)  
or
push
xor
sahf   
xchg
mov
adc
mov
aam
sub
push
push
insl
xchg
cmc    
stos
pminub
mov
aam
xor
in
mov
imul
repnz push
loopne
or
xchg
mov
cltd   
inc
dec
rorb
repz
push
(bad)  
pop
out
mov
movups
pushf  
add
cwtl   
pop
adc
jg
stos
outsl
jb
fnstsw
adc
xlat
pop
jns
adcl
dec
daa    
add
ds ss repz sahf 
jl
loop
push
sub
adc
orl
xchg
popa   
jg
dec
repnz
inc
fdivrs
aam
push
or
gs loopne,pn
or
xor
push
roll
aaa    
push
arpl
adc
call
sarb
push
mov
movsl
in
sbb
imul
int
jl
out
dec
stos
sbb
pop
mov
push
jns
mov
pop
xchg
push
mov
jns
xchg
pop
dec
jl
imul
mov
leave  
sub
jne
in
xchg
lret
lret
repnz xlat
cmpsl
fldpi  
dec
gs jne
mov
mov
pop
pop
ja
xor
mov
jmp
call
mov
pop
lods
addr16 pop
adcl
mov
ficoml
or
test
cltd   
or
sbb
incl
out
cmp
xchg
mull
aad
sub
cld    
pop
jae
inc
arpl
mov
pop
in
sti    
mov
in
push
out
cmp
mov
sub
dec
les
lret   
pop
(bad)  
pop
ds xchg
jge
sub
andb
mov
cwtl   
cltd   
(bad)  
in
sbb
or
ffree
ljmp
or
imul
push
push
lods
int
pop
and
mov
fwait
push
dec
dec
sahf   
addr16 cs mov
into   
repz out
inc
shrb
xor
cmp
ja
repz das 
push
inc
mov
push
jne
jbe
adc
or
mov
push
or
dec
dec
push
sbb
and
rcrl
addr16 xchg
jg
(bad)  
xlat
inc
sub
(bad)  
push
nop
lods
imul
stos
mov
sub
fisub
icebp  
cmp
loop
and
cmp
mov
fs shr
mov
(bad)  
push
jns
imul
xlat
loopne,pn
or
pop
jbe
xchg
je
repz xlat
inc
imul
fsubl
push
cmp
jp
xchg
std    
sub
aam
bound
movsl
xchg
pop
mov
push
shrd
fcmovne
inc
loopne
mov
int
pop
lods
js
pusha  
sbb
iret   
inc
inc
mov
lret   
inc
and
jne
fwait
sub
cs inc
jbe
repz jnp
jge
mov
pop
mov
add
out
fild
addr16
loope
loopne
jo
adc
jbe
fldt
cmp
(bad)  
cld    
sbb
and
push
jo
andb
movsb
lahf   
jb
jnp
les
lods
xchg
popl
push
xchg
lcall
jns
outsb
das    
iret   
in
popa   
and
repz sahf 
jl
mov
pushf  
mov
lods
pop
scas
pop
jbe
repz jnp
pusha  
jp
push
pop
mov
mov
stc    
sbb
lahf   
xor
inc
cmpsb
jp
push
lahf   
xor
pop
pop
fwait
add
fnop   
data16 jp
mov
push
jne
xchg
sub
jg
out
mov
scas
ss
or
push
mov
inc
cmp
mov
iret   
movsb
mov
and
jbe
out
hlt    
test
mov
insl
out
hlt    
imul
inc
sbb
into   
ljmp
inc
sub
cmpsl
dec
mov
imul
mov
adc
sahf   
or
jno
jmp
ss sahf 
or
divl
hlt    
dec
jae
je
into   
mov
push
sbb
inc
daa    
inc
cmpsl
iret   
pop
pop
fbld
mov
ja
push
(bad)  
pop
lret   
rep lods
sbb
sub
add
scas
test
lea
(bad)  
mov
push
rclb
call
mov
dec
ret    
inc
test
push
(bad)  
mov
gs cs mov
sub
sbb
sub
jge
push
mov
aaa    
fwait
cmp
aam
pop
mov
(bad)  
jnp
pop
mov
pop
(bad)  
std    
pusha  
ret
push
mov
call
stc    
mov
lea
adc
xchg
jge
lcall
dec
cmp
dec
or
xor
jb
xor
or
jno
sbb
mov
lds
sub
cld    
or
(bad)  
lcall
adc
inc
mov
cltd   
sub
push
lods
ror
addr16 repz ja
aaa    
in
cmpsb
adc
andl
addr16 cld 
idiv
(bad)  
cmp
sarl
cmp
xchg
and
(bad)  
ss dec
icebp  
je
and
(bad)  
arpl
push
jle
rcr
jle
cs push
ja
test
insb
cmp
jne
mov
mov
test
les
fsubrl
es repz inc
lods
pop
(bad)  
xor
push
nop
adc
xor
mov
out
push
or
inc
push
cmp
push
ljmp
jp
out
and
std    
jp
inc
pop
or
cmp
dec
mov
lds
add
jnp
and
shrl
lcall
insb
cmp
xor
lcall
sbb
es pusha 
hlt    
lock in
bound
push
xchg
sub
(bad)  
mov
xchg
fxch
movsb
inc
lea
adc
pop
fcompl
in
mov
add
cli    
movsb
movsb
sbb
out
hlt    
mov
push
xchg
loop
push
int
jns
xlat
iret   
mov
jp
jae
rcr
outsl
push
push
jg
bound
cmp
push
add
push
jns
or
inc
jge
xchg
jnp
adc
imul
push
cmp
outsl
dec
inc
das    
mov
pop
(bad)  
jnp
adc
stc    
hlt    
(bad)  
imul
and
pop
add
jmp
fs sub
mov
scas
or
pop
dec
or
push
sbb
jb
test
fmul
mov
(bad)  
hlt    
adc
push
push
mov
hlt    
jb
jo
sti    
xchg
ds out
fldenv
mov
mov
sbb
pop
dec
and
inc
dec
ljmp
(bad)  
int
or
sbb
mov
xor
imul
lds
cmp
repnz or
add
push
nop
adc
fidivr
adc
mov
ret    
pop
sub
addr16 iret 
mov
into   
fcom
xor
adc
push
xor
mov
dec
and
outsl
mov
ret
mov
inc
cmp
aam
pop
iret   
ja
or
in
push
sti    
mov
das    
in
hlt    
and
dec
add
cmc    
mov
das    
addr16 sbb
in
jecxz
bound
movb
xchg
test
xor
push
(bad)  
out
sub
dec
inc
(bad)  
aas    
cmpsl
xor
es dec
push
or
mov
fwait
jl
mov
jmp
add
lret   
xor
sub
sbb
(bad)  
mov
cwtl   
mov
out
enter
cmc    
mov
rcrl
ljmp
cmp
(bad)  
pop
mov
rcrl
repnz dec
adc
jns
xlat
cmpsl
mov
mov
fmuls
push
sti    
mov
dec
jb
sbb
dec
(bad)  
rcll
enter
push
sub
pop
popa   
out
inc
inc
add
out
cmpsl
or
arpl
inc
sbb
lods
idivl
adc
inc
cli    
aas    
cmp
mov
and
pop
jbe
and
rcr
test
js
dec
out
gs xchg
cltd   
ds adc
push
(bad)  
mov
(bad)  
sbb
fs popa 
(bad)  
pop
movsb
mov
(bad)  
xchg
lahf   
jp
xchg
mov
test
jbe
jo
addps
cli    
test
sbb
xchg
mov
adc
mov
or
sub
fildl
inc
add
aaa    
sbb
mov
(bad)  
fwait
push
pop
outsb
mov
cmp
ror
push
or
insl
aas    
or
fwait
clc    
adc
inc
sub
sub
mov
iret   
sub
cmc    
adc
lret
stos
hlt    
(bad)  {%k2}{z}
mov
(bad)  
xor
dec
mov
flds
sbb
adc
pop
sub
sbb
mov
mov
mov
lahf   
hlt    
lock stos
pop
push
lds
cmp
repnz or
add
push
nop
adc
fidiv
jne
jb
sub
xlat
push
test
pop
sub
jg
cmpsb
incl
xlat
push
or
adc
push
xor
mov
dec
cmp
outsl
cmpsl
push
add
mov
int3   
cmp
lcall
addr16 nop
lock push
in
in
in
fimull
(bad)  
outsl
lds
int3   
dec
add
cmc    
mov
test
pop
jmp
(bad)  {%k2}{z}
sti    
andl
in
and
mov
out
push
(bad)  
out
sub
pop
popa   
outsl
lds
es cltd 
xchg
sub
mov
jp
mov
stc    
dec
enter
dec
mov
cmp
mov
jge
imul
fidivl
xchg
mov
adc
mov
ljmp
sub
sub
push
cmp
xor
cwtl   
jno
xchg
ficompl
mov
popa   
inc
incb
fcompl
and
or
inc
(bad)  
fdivrs
rorl
pop
and
jp
in
aam
testb
fsubrs
(bad)  
nop
lock
mov
adc
mov
(bad)  
shll
(bad)  
insb
pop
sub
jae
or
sub
aas    
pop
or
xchg
dec
pop
repnz sub
test
adc
aas    
int
(bad)  
incl
push
pop
rcrl
push
lods
and
fstl
sbb
ljmp
ja
pop
cli    
cli    
sub
cmp
or
push
rcrb
sub
push
push
or
cmp
inc
fldcw
repnz enter
pop
push
in
arpl
clc    
cmp
hlt    
xor
xchg
mov
adc
mov
pusha  
dec
push
stos
mov
in
(bad)  
out
dec
dec
adcl
les
in
outsl
mov
mov
sub
repnz xor
stos
rcrb
pop
iret   
arpl
in
in
outsb
xor
loopne
ficoml
dec
add
cmc    
mov
push
add
(bad)  
in
jecxz
bound
inc
(bad)  
rolb
and
mov
out
push
(bad)  
out
sub
mov
cld    
iret   
xor
push
xchg
aam
mov
js
mov
in
dec
enter
(bad)  
fnstcw
sub
insb
test
cmp
data16 out
enter
cmc    
mov
rcrl
push
sub
stc    
jo
mov
sti    
pop
mov
xchg
push
push
das    
inc
push
repnz dec
sbb
jns
xlat
cmpsl
xchg
jb
sub
or
test
fadd
adc
cld    
pop
int3   
mov
scas
jbe
lods
mov
jg
adc
or
cmp
sub
push
push
or
mov
ljmp
test
repz das 
pop
mov
ficompl
insb
in
loope
xor
add
or
push
inc
push
cmpsb
andl
cmp
lds
sub
dec
jns
jg
(bad)
into   
or
iret   
mov
in
push
sub
and
(bad)  
out
mov
test
add
push
(bad)  
nop
cli    
idivl
cmp
xor
les
jecxz
(bad)  
dec
sub
(bad)
push
bound
out
inc
les
ljmp
(bad)  
int
cli    
sub
xor
mov
jg
loope
out
imul
push
or
add
sbb
out
mull
out
fnsave
cmp
outsb
(bad)  
out
and
inc
aam
outsb
sub
daa    
sub
push
adc
mov
push
je
insb
cli    
lahf   
out
sub
das    
das    
inc
adc
or
mov
addr16 push
mov
inc
lahf   
addr16 jbe
rcll
(bad)  
pop
inc
scas
out
jle
xor
repz xchg
jne
and
iret   
movsb
mov
sub
test
sub
mov
cmp
sub
arpl
clc    
cmp
hlt    
xor
cltd   
mov
das    
adc
mov
jl
jp
stos
mov
mov
(bad)  
out
dec
or
les
in
outsl
mov
(bad)  
(bad)  
out
test
cmp
aam
pop
iret   
jg
xor
in
bound
mov
iret   
pop
rcrb
int3   
dec
add
cmc    
mov
rcl
add
in
jecxz
bound
(bad)  
pop
inc
scas
out
in
fwait
das    
(bad)  
mov
out
push
(bad)  
out
sub
mov
sahf   
inc
sti    
xor
es mov
(bad)  
into   
outsl
(bad)  
in
mov
mov
icebp  
dec
enter
dec
lahf   
xor
sub
xor
(bad)  
sub
out
out
mov
adc
lods
sarl
bound
xchg
test
adc
pop
xor
add
add
bound
icebp  
or
sbb
pop
sub
xor
pop
mov
or
pop
pop
pop
or
inc
and
jbe
mov
mov
fisttpll
jp
out
sub
xlat
cmpsl
rorb
and
dec
es mov
jno
mov
fcoml
enter
ret    
mov
pop
arpl
in
mov
push
shlb
fidiv
test
test
int3   
into   
outsl
nop
jb
jle
in
cld    
pop
jae
jg
jns
stc    
stc    
mov
xchg
imul
lds
cmp
push
fsubrs
add
push
das    
outsb
pop
dec
jae
sub
fnop   
shlb
push
sbb
xchg
pop
jb
iret   
mov
sub
inc
iret   
mov
dec
dec
dec
roll
fcmovne
inc
jnp
std    
sub
(bad)  
js
fmulp
mov
out
mov
fmuls
dec
mov
adc
mov
test
pop
and
imul
or
sbb
bound
push
retw   
push
dec
(bad)  
mov
mov
jbe
mov
cwtl   
xchg
fwait
inc
in
in
(bad)  {%k2}{z}
fmulp
ret
inc
dec
outsl
adc
imul
sarb
jmp
aaa    
jae
test
mov
or
test
inc
push
mov
jne
cmp
dec
xchg
adc
dec
js
std    
pop
pop
pop
or
inc
and
jbe
mov
mov
fisttpll
bound
loopne
sub
aam
call
xchg
daa    
fmuls
mov
jbe
and
mov
daa    
push
int
rcrb
js
rorl
repz mov
jp
fs
enter
stc    
out
jl
and
popa   
(bad)  
call
mov
js
dec
in
xor
ret
mov
cmp
fstps
dec
xchg
scas
add
xchg
xchg
xor
les
jecxz
repnz and
jb
add
jp
pop
push
cmp
mov
xor
mov
mov
mov
mov
iret   
movsb
xor
push
insl
inc
and
jbe
roll
mov
or
cli    
xlat
ds inc
mov
lcall
iret   
fmul
mov
add
push
out
xor
les
jecxz
sbb
mov
arpl
adc
mov
in
dec
stc    
or
sbb
int
call
dec
xchg
mov
loop
sbb
sahf   
mov
add
inc
dec
pushf  
fdivrs
out
pmaxsw
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
lahf   
cmpps
(bad)  
xchg
fdivr
fisttp
pop
mov
ss jecxz
xchg
call
lahf   
stos
aam
jb
es aaa 
mov
test
mov
jmp
aaa    
(bad)  
jbe
xor
cmp
daa    
cli    
xor
dec
jno
dec
mov
fistpl
mov
or
jns
push
gs push
sub
sub
in
(bad)  {%k2}{z}
out
cmp
add
and
dec
add
xor
mov
inc
mov
adc
jns
pop
push
lds
cmp
mov
push
jecxz
int
push
or
imul
(bad)  
testl
sahf   
lods
cmc    
inc
les
shlb
sbb
imul
push
nop
rclb
pushf  
sbb
xchg
in
or
iret   
clc    
imul
sbb
push
cmp
add
jmp
mov
xchg
mov
jge
pop
xor
dec
out
dec
mov
lret   
mov
cmc    
xor
in
adc
loop
cmp
stc    
je
sti    
imul
(bad)  
cmpsb
ret
push
lods
insb
cmp
sub
inc
inc
sahf   
arpl
lods
movb
mov
sbb
or
lcall
inc
in
and
inc
add
jb,pt
imul
nop
mov
inc
sbb
cmp
jge
push
call
cli    
jns
imul
stc    
mov
pop
sahf   
jns
pop
rcrb
(bad)  
std    
sub
in
xchg
out
mov
add
inc
lods
pop
jno
sbb
(bad)  
mov
mov
sub
lods
lret   
(bad)  
and
add
or
lret
inc
idivb
ljmp
and
repz aaa 
sub
les
cmp
mov
xchg
repnz push
push
jns
test
xlat
inc
pop
test
leave  
ljmp
outsl
movsl
outsl
pop
iret   
inc
push
test
mov
inc
cmp
loope
or
rol
pop
out
mull
fdivrs
add
jg
pop
int3   
outsl
sbb
adc
push
(bad)  
bound
mov
ljmp
int
push
pinsrw
xor
stos
pusha  
jp
outsl
xor
mov
test
jmp
push
pop
jae
push
pop
inc
cmp
dec
fcmovnb
orl
xor
fwait
add
scas
inc
dec
sub
pop
and
xor
pop
test
xlat
cmp
add
mov
popa   
stc    
(bad)
daa    
sub
lea
lea
jmp
xchg
sub
push
and
mov
adc
mov
(bad)  
mov
dec
nop
or
mov
xchg
dec
vhsubpd
push
inc
dec
adc
aaa    
dec
decl
in
xchg
mov
or
in
xlat
out
fstpl
mov
or
push
into   
fdivrl
jle
lea
not
and
rol
sbb
or
add
scas
hlt    
pop
xor
sbb
cmp
daa    
enter
xor
push
mov
hlt    
mov
out
(bad)  
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
pusha  
push
mov
out
jg
xor
inc
lahf   
pop
cmp
out
(bad)  
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
and
stc    
loopne
jae
(bad)  
or
mov
out
xlat
enter
sub
mov
(bad)  
in
dec
mov
icebp  
pushf  
ret    
imul
pop
(bad)  
mov
js
(bad)  
mov
sbb
pop
in
add
aaa    
xchg
or
sbb
insl
cmp
insl
mov
or
in
mov
out
iret   
cmp
mov
es mov
adc
adc
lods
aad
test
jnp
daa    
cmp
lcall
clc    
jg
jp
leave  
mov
testl
mov
jle
inc
mov
jl
jnp
(bad)  
mov
(bad)  
mov
mov
iret   
aad
lods
(bad)  
scas
adc
ror
pop
mov
loopne
jmp
sbb
dec
cmp
sub
add
sbb
inc
sub
pop
xor
pushl
ret
add
push
pop
call
jecxz
mov
add
lds
push
aam
fdivrs
cmp
cmp
sbb
mov
and
or
cmp
(bad)  
mov
sbb
loopne
xchg
mov
jge
or
int
out
push
jnp
arpl
ljmp
loope
iret   
sub
ss shr
sub
lret   
mov
ret    
ljmp
addl
ret    
xchg
adc
std    
addr16 mov
cmpsb
cmp
cld    
popa   
and
repz
or
push
and
(bad)  
mov
push
adc
xor
pop
xor
push
js
cmpsl
xor
cmp
lret   
dec
jae
shr
mov
dec
adc
cmp
push
std    
pop
aaa    
rorb
add
push
(bad)  
push
or
lret
inc
ss out
pop
ljmp
sbb
push
dec
xor
dec
je
push
test
or
inc
dec
pop
push
inc
cmpl
loope
add
sbb
popf   
das    
lcall
lret   
ret    
sti    
mov
sub
cmpl
ss js
loope
mov
btr
xor
mov
ds cltd 
mov
cmp
push
inc
mov
xchg
lods
arpl
xchg
jl,pt
icebp  
aam
adc
push
negl
js
cltd   
test
movsl
add
or
ss inc
aad
dec
repnz out
mov
pop
sarb
mov
lds
xchg
fld
xor
and
fnsave
mov
in
and
push
add
imul
cmp
ds add
test
and
(bad)  
(bad)  
lods
lret
mov
cmpsl
ljmp
jp
aad
xor
xchg
in
cld    
(bad)  
lods
lret
inc
mov
test
cmp
adc
inc
xlat
aaa    
mov
hlt    
pslld
stos
lret   
push
sub
push
shlb
jb
inc
int
pop
(bad)  
mov
fistl
and
imul
pop
iret   
imul
nop
dec
add
dec
cli    
xchg
pop
mov
fcompl
adc
enter
sbb
(bad)  
mov
push
andb
mov
push
mov
xchg
dec
xor
cmp
jmp
mov
dec
xor
movsb
sbb
mov
gs jecxz
into   
cmpsl
std    
pop
jae
xor
sub
insb
mov
mov
test
ljmp
fwait
jecxz
mov
cmp
mov
sub
cltd   
mov
cmp
push
inc
je
jno
loopne
and
jo
scas
punpckldq
mov
shlb
cld    
pop
jmp
jno
movsb
jb
dec
mov
mov
add
scas
repz jge
out
xor
pop
faddl
lret   
lock jge
xlat
cmpsl
add
cmp
fmuls
shr
pop
push
jg
ja
pushf  
outsl
shll
fwait
push
lret
in
test
bound
cmc    
mov
out
mov
or
push
into   
fdivrl
jle
lea
not
and
push
jb
add
jmp
xor
rcr
jge
add
shlb
adc
xorl
addr16 push
mov
test
sub
adc
or
jmp
jae
jns
rorb
out
call
mov
mov
adc
pop
aas    
sbb
xchg
enter
pop
jo
mov
outsb
dec
jmp
out
pop
icebp  
rcl
inc
sbb
or
aam
int3   
mov
cmpsl
or
bound
in
pop
iret   
inc
dec
ljmp
(bad)  
int
out
fwait
dec
jbe
jno
les
cmp
nop
ss cmpsl
and
xchg
leave  
psrad
sbb
jp
mov
sbb
jecxz
dec
sbb
xchg
mov
out
cmpsb
mov
loope
xor
mov
mov
out
fnstenv
jae
sub
xlat
scas
lret
or
jmp
aaa    
test
in
aaa    
lds
push
cmp
jb
loop
mov
mov
add
scas
sbb
ret
repnz decl
ja
jbe
jne
inc
push
cli    
bound
adc
aaa    
dec
cmc    
mov
fst
clc    
fmul
mov
outsb
adcl
out
stc    
push
pop
and
dec
pop
data16
scas
shrl
out
rol
out
stos
ss jge
stos
out
mov
mov
nop
sub
xorl
ja
mov
ljmp
or
cmp
test
or
frstor
dec
shll
popf   
cmp
sub
mov
iret   
sub
cmc    
icebp  
getsec 
jne
inc
push
divb
adc
scas
add
push
les
jecxz
call
or
js
mov
pop
mov
mov
test
ficompl
mov
xchg
cwtl   
rolb
add
ss mov
add
test
and
cmp
(bad)  
enter
(bad)  
lahf   
xlat
dec
xor
or
pop
call
sub
or
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsub
daa    
add
push
dec
add
(bad)  
int3   
popf   
(bad)  
mov
fdivl
pop
loop
movsl
int3   
loop
mov
cmp
dec
fs mov
xor
out
repnz fisubl
sub
push
xchg
cmp
lds
inc
adc
or
mov
fdivl
mov
xor
repz mov
fdivs
inc
xor
stos
xchg
inc
int3   
(bad)  
or
adc
xor
jno
or
jb
popa   
and
es inc
aad
xor
push
rolb
in
inc
push
ret
mov
mov
daa    
int3   
pop
push
lds
cmp
mov
add
mov
xchg
xor
cltd   
inc
(bad)  
movsl
jmp
xor
jg
adc
fcmovu
sbb
add
and
jp
and
lret
or
mov
inc
jmp
sbb
mov
nop
in
out
push
pop
call
imul
push
mov
into   
mov
add
popa   
iret   
ljmp
jb
ds dec
add
popa   
jmp
loopne
pop
xchg
add
mov
popf   
adc
push
push
fs xor
mov
push
andb
mov
test
xchg
lret   
pop
mov
loop
test
mov
xor
dec
xor
stc    
movsl
adc
adc
arpl
leave  
push
jb
imul
jb
add
or
pop
xor
or
push
mov
fcompl
lret   
imul
add
stos
mov
dec
repz hlt 
and
and
jg
sub
popf   
les
fcmovbe
inc
sub
imul
add
ss jb
loope
or
rol
pop
out
mull
sti    
push
or
lret
inc
ss out
pop
ljmp
scas
push
jg
add
push
add
call
push
movsl
mov
out
stos
lret
push
in
test
pop
sub
imul
adc
or
std    
(bad)  
rcrl
cmp
pop
faddl
lret   
dec
jo
mov
adc
je
jnp
mov
push
mov
pop
test
pop
mov
(bad)  
addr16 push
fdivr
jne
popa   
mov
iret   
outsl
nop
(bad)  
mov
xchg
push
or
mov
dec
pop
inc
mov
daa    
enter
popa   
fisttpl
loopne
push
and
out
cmp
shll
(bad)  
dec
adc
rcrl
or
mov
insl
sub
(bad)  
data16 test
es push
add
adc
push
out
mov
pop
jne
cmp
jge
xlat
inc
pop
test
int3   
into   
outsl
nop
sbb
pushf  
aam
imul
or
fimull
jnp
pop
push
shlb
hlt    
xor
std    
mov
add
push
xor
imul
enter
test
jnp
pusha  
repz iret 
add
mov
aam
mov
xchg
or
stos
sbb
outsl
test
es lcall
inc
xchg
inc
adc
cmp
mov
into   
cmpsl
int3   
jecxz
out
and
mov
sbb
mov
mov
fdivrl
(bad)  
rorl
cmp
xchg
xor
lret   
insl
call
test
nop
xchg
xor
imulb
loop
jnp
test
data16 icebp 
sbb
(bad)  
xor
rcrl
dec
dec
xor
mov
hlt    
xor
std    
mov
daa    
leave  
pop
cld    
mov
fdivrl
push
dec
inc
test
sti    
xchg
fld1   
mov
xchg
lds
sub
push
and
iret   
pop
iret   
fwait
cwtl   
fisub
push
mov
pop
in
xor
xchg
fistp
push
add
pop
sub
sub
lock jno
int3   
push
repz add
sbb
call
imul
imul
xchg
inc
int3   
fdivrl
(bad)  
(bad)  
(bad)  
dec
fsts
mov
iret   
outsl
nop
(bad)  
mov
shl
test
ficompl
dec
or
sahf   
or
pop
dec
into   
xchg
add
adc
sbb
sahf   
or
pop
int3   
(bad)  
ss in
pusha  
lods
lret   
cmp
mov
imul
sbb
jne
adc
sub
stos
iret   
movsb
inc
nop
imul
inc
add
jge
xlat
cmpsl
push
and
adc
int
mov
cmovg
jg
mov
mov
fcoml
enter
jo
(bad)  
mov
test
mov
adc
mov
jp
outsl
scas
int
int3   
gs lret 
subb
adc
cmpsb
fcomip
mov
cmpsl
mov
mov
jp
push
jle
lock
mov
hlt    
popf   
cmp
sub
cwtl   
loop
aad
jb
fwait
sub
and
mov
divl
out
xlat
ds in
sub
pusha  
xchg
cs or
mov
(bad)  
mov
ds mov
sbbb
xor
arpl
jp
inc
dec
(bad)  
das    
mov
cmp
mov
sbb
std    
xor
fptan  
or
sbb
xchg
adc
pop
jnp
xor
pop
pop
aaa    
insb
pop
pop
push
mov
and
or
sub
xchg
movsl
addb
hlt    
pslld
mov
das    
mov
mov
sub
repnz addr16 iret 
out
insl
and
jl
xlat
cmpsl
stc    
pop
outsb
or
or
jae
adc
lods
xor
nop
mov
mov
es or
iret   
push
in
mov
add
cwtl   
(bad)  
mov
daa    
push
es or
jge
shlb
cwtl   
(bad)  
mov
daa    
dec
sub
and
(bad)  
mov
pop
push
cs or
xor
sahf   
movsl
and
(bad)  
mov
pop
push
call
(bad)  
test
xchg
test
into   
daa    
adc
add
dec
(bad)  
mov
leave  
psrad
mov
lcall
das    
dec
imul
out
test
or
fwait
sbb
scas
mov
dec
xor
or
in
xlat
add
lea
(bad)  
or
fs
enter
aas    
out
sbb
lods
cmp
pop
mov
test
les
jecxz
mov
add
mov
sbb
ds clc 
xor
call
jno
push
jecxz
inc
jbe
les
adc
sub
inc
fs inc
xor
addl
pop
dec
rcrl
fmuls
sub
popa   
pop
(bad)  
pop
jno
push
adc
out
divl
verr
in
js
ss adc
cmp
in
cli    
dec
fildll
dec
pop
jns
mov
in
into   
mov
(bad)  
in
int
inc
and
jbe
fnstenv
sub
and
mov
rcr
into   
std    
nop
xchg
and
jp
icebp  
(bad)  
add
xchg
inc
mov
(bad)  
out
xlat
(bad)  
adc
imull
aaa    
lret   
cmp
out
mov
and
mov
push
jmp
movsl
outsb
je
inc
lock cs inc
es data16 cmp
cmp
(bad)  
jg
subl
out
mov
sbb
in
jo
mov
pushf  
lods
lret
dec
leave  
out
and
rcrb
push
iret   
movsb
lahf   
out
pop
and
or
scas
cmp
ja
push
mov
and
adc
lods
or
mov
icebp  
jecxz
mov
test
push
lods
adc
jns
mov
xchg
out
mov
jno
jp
mov
outsb
(bad)  
hlt    
movsb
pop
cwtl   
jno
xchg
ficompl
mov
shl
into   
test
cs test
es ja
loop
inc
xlat
cwtl   
stos
lret
in
test
sahf   
ret
xor
aam
pop
pop
mov
outsl
cs push
sahf   
xchg
mov
pop
and
jp
jmp
sbb
fwait
sub
and
(bad)  
out
mov
adc
cmpsb
fcomip
mov
lcall
mov
jo
arpl
cmp
je
leave  
jnp
insb
adcb
xor
mov
test
push
inc
push
xchg
or
xchg
lcall
jbe
or
mov
or
xor
mov
cltd   
push
push
repz fdivl
push
adc
out
sti    
nop
jge
cmp
int3   
sahf   
and
mov
js
std    
sbb
lret
(bad)  
aad
lea
std    
inc
addb
in
push
sahf   
dec
adc
xchg
scas
add
push
push
cmc    
xor
les
jecxz
mov
add
mov
cmpsb
and
cli    
mov
sub
mov
fdivrs
rcrl
pusha  
jnp
pop
pop
adc
ret    
xor
push
xor
push
sub
cmpsb
cli    
mov
or
fucomi
push
ljmp
imul
popf   
xor
xor
push
xorl
jp
dec
push
mov
jne
pusha  
lahf   
repnz lcall
jp
rorl
repnz int
add
jecxz
movsl
push
scas
sti    
cmp
cmpsl
xlat
xlat
push
mov
xor
cltd   
fldl
sti    
int
push
sti    
sbb
ds int
dec
into   
aaa    
ret    
aad
jno
mov
xlat
jo
xor
je
dec
scas
push
sub
push
jb,pn
xor
and
sub
jmp
scas
pop
andl
mov
xchg
loope
inc
mov
cmpsb
cmc    
pusha  
jo
clc    
nop
mov
(bad)  
dec
lret   
push
lock push
and
pop
pop
inc
push
push
xchg
rorl
subl
dec
adcl
mov
in
fisub
mov
mov
jnp
test
mov
sub
jb
xor
push
xorl
test
lea
adc
daa    
push
sub
jns
xchg
mov
add
or
scas
fild
mov
leave  
psrad
jno
add
mov
push
push
sub
out
mov
xlat
or
add
(bad)  
or
sub
push
mov
fdiv
cmp
ja
jecxz
insb
fild
es popa 
mov
loop
jecxz
cmpl
int
fmuls
cwtl   
fadds
inc
pop
xchg
(bad)  
jbe
fnsave
icebp  
scas
je
jp
arpl
icebp  
fcompl
das    
sti    
(bad)  
or
cmp
mov
pop
insb
or
repnz adc
sarb
in
dec
stos
daa    
or
scas
add
push
popa   
pushl
xor
pop
jecxz
repnz and
mov
nop
movsb
cmc    
fcmovu
daa    
mov
int3   
dec
(bad)  
rcll
enter
(bad)  
rcl
outsl
shrb
jmp
pop
mov
in
arpl
mov
movl
cli    
ja
xor
in
push
xchg
jb
pop
mov
out
xlat
inc
pop
test
int3   
push
fistpl
incb
or
cmp
scas
arpl
hlt    
xchg
loope
mov
xor
(bad)  
push
cwtl   
pop
add
jg
mov
into   
in
push
das    
inc
adc
or
mov
addr16 push
fdivr
popa   
pop
dec
pop
pop
rorl
movsb
out
fs push
in
(bad)  
mov
xchg
movsb
dec
lcall
(bad)  
jecxz
sub
(bad)  
out
mov
cmc    
push
rcrb
pop
jns
and
jb
push
dec
popf   
leave  
ds test
push
add
lods
rorl
mov
or
adc
adc
bound
jo
xor
outsb
mov
inc
xor
mov
inc
lcall
enter
mov
adc
fwait
cmp
and
and
push
cltd   
dec
movsb
cwtl   
inc
and
xchg
out
jl
cmpsb
jnp
cmp
dec
and
leave  
cmp
mov
test
verr
inc
push
or
pop
mov
inc
push
(bad)  
out
cmpsl
mov
dec
sbb
mov
add
cmp
roll
verr
inc
jp
push
loopne
jg
dec
push
lods
add
inc
push
push
data16 mov
xchg
dec
xchg
punpcklbw
push
verr
and
push
xchg
sub
fistpl
mov
mov
das    
pushl
and
jbe
fstpt
icebp  
lods
je
jp
in
aam
xor
mov
bound
ss out
fldl
ljmp
(bad)  
int
imull
add
add
jge
call
dec
xchg
mov
loop
lret   
daa    
cli    
mov
add
inc
dec
pushf  
fsubrs
inc
jmp
pop
clc    
pop
iret   
fdiv
mov
out
xlat
jecxz
in
test
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
lea
divb
aas    
cmp
push
movsl
stos
mov
mov
pop
or
xchg
aaa    
test
(bad)  
sub
sarb
push
sti    
lahf   
outsb
and
call
dec
fisubr
mov
fdivp
test
add
pop
out
pop
out
add
inc
xlat
dec
mov
mov
push
cli    
mov
and
cmp
cmovs
in
adc
fiaddl
add
push
lds
in
push
cmp
push
add
inc
fidivr
dec
je
lret   
ljmp
sbb
mov
arpl
and
jo
repz popf 
aas    
or
dec
cmp
jb
cli    
xchg
mov
mov
xor
hlt    
xor
add
repz aas 
push
push
adc
or
push
test
lahf   
addr16 jp
push
mov
jae
xor
bound
dec
adc
cmp
fstpl
or
sub
mov
inc
pop
jp
and
lret
ret
jg
call
jbe
fisttpll
jle
call
lret
stos
ret
repz cwtl 
lock sbb
test
mov
pop
sbb
pop
xlat
inc
add
popa   
iret   
ljmp
push
movsb
ds dec
add
aad
push
loopne
jo
mov
dec
xchg
pcmpgtd
imulb
cmp
ficompl
test
lahf   
pop
bound
lods
jge
jns
iret   
xchg
pusha  
sbb
xchg
xchg
push
fmuls
lret   
mov
(bad)  
lcall
imul
or
nop
cmp
sub
addl
iret   
movsb
xchg
xlat
movsb
pop
inc
fimul
or
mov
sbb
dec
add
add
pusha  
jp
shll
loop
pop
lret
popl
jb
mov
insb
xor
sub
xor
test
mov
mov
push
iret   
cs mov
mov
cwtl   
push
sbb
xor
andl
pop
mov
and
mov
add
stos
pusha  
jp
les
or
inc
dec
xchg
sub
loopne
cmc    
sbb
sbb
sub
stc    
std    
mov
and
mov
push
xchg
adc
lahf   
sub
xor
std    
push
jmp
pop
or
mov
pop
mov
mov
and
jp
in
iret   
sbb
cli    
sbbb
out
jl
and
pusha  
(bad)  
out
xlat
fldt
mov
jecxz
lret   
adc
ja
popl
std    
je
bound
xor
clc    
rolb
ljmp
(bad)  
int
rcr
sti    
push
out
add
(bad)  
clc    
dec
xchg
mov
loop
(bad)  
and
mov
mov
clc    
push
int
inc
lret   
add
sbb
stos
fstpt
divb
imulb
mov
aam
ja
push
int
pop
push
lds
cmp
movsl
mov
mov
lock je
xchg
sub
jb
(bad)  
mov
xorl
call
repnz cltd 
mov
stc    
repnz
out
xlat
iret   
fdiv
mov
addl
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
sbb
mov
mov
fcmove
xchg
sub
(bad)  
push
pop
(bad)  
lret   
popf   
and
mov
out
enter
into   
lahf   
out
push
dec
sti    
and
lea
xchg
mov
or
ja
adc
(bad)  
in
xlat
enter
mov
ja
hlt    
mov
lods
fisubrl
push
pop
in
add
cmp
mov
insl
imul
ja
ljmp
add
(bad)  
lds
lret
lds
pop
stos
cltd   
sub
add
sbb
dec
fistp
lds
cmp
dec
push
mov
pop
xchg
iret   
in
cltd   
lahf   
cmp
popa   
sbb
repz lret
inc
xchg
pop
shll
jp
jmp
xchg
fnstenv
sub
inc
test
mov
imul
popf   
add
and
xor
idivb
mov
imul
lret   
xor
mov
lret
or
pop
iret   
addr16 repz popf 
test
sti    
mov
lcall
dec
popa   
or
pop
add
inc
push
add
jns
ss repz xchg
mov
pop
fmull
jae
(bad)  
xor
xlat
cmp
fstpl
daa    
fsubl
mov
testb
jp
outsl
or
ljmp
cmp
cltd   
or
adc
je
push
str
pusha  
mov
push
pop
inc
and
push
mov
pop
dec
popa   
test
dec
jle
cmp
icebp  
aam
push
rorl
out
and
loope
mov
cmovnp
pusha  
mov
add
inc
dec
push
movsb
xor
ret
and
negl
hlt    
adc
add
(bad)  
lret   
inc
imul
enter
addr16 mov
mov
dec
int3   
inc
push
pop
aad
dec
mulb
fstpl
mov
ja
add
inc
sbb
stos
test
(bad)  
in
fwait
mov
out
sti    
push
(bad)  
lret   
cmpsl
pop
mov
mov
arpl
aaa    
cmp
scas
sub
xchg
ret    
out
mov
in
roll
pop
pusha  
fld
inc
push
add
push
bt
outsl
sub
jno
aas    
jge
inc
add
repnz mov
mov
xor
mov
int3   
pop
repz sbb
sbb
call
pushl
xchg
(bad)  
shrb
repz leave 
mov
(bad)  
int3   
xor
mov
in
ds xor
add
ja
adc
andl
and
int3   
les
out
jnp
adc
jnp
insb
dec
dec
mov
(bad)  
fldcw
imull
mov
cmpsl
pop
inc
dec
push
dec
popa   
test
ret    
les
push
adc
push
arpl
das    
inc
push
rcll
add
addl
push
sbb
out
idivl
xlat
cmpsl
adc
or
scas
iret   
inc
and
jbe
pop
mov
fs
cmpsb
rcrb
sbb
scas
aam
int3   
mov
cmpsl
insb
mov
stc    
je
bound
imul
ljmp
(bad)  
int
xor
mov
xchg
pop
or
mov
mov
fdivr
push
xchg
lock aam
std    
lretw  
mov
add
dec
cmp
mov
out
enter
pop
jnp
jge
(bad)  
arpl
mov
aas    
test
test
std    
or
(bad)
cltd   
(bad)  
or
aam
(bad)  
mov
or
adc
aaa    
dec
testl
and
outsb
adcl
out
stc    
and
xchg
rcll
push
pop
int3   
sbb
stos
les
ret
aad
(bad)  
arpl
mov
es popa 
in
in
shrl
(bad)  
mov
fstl
dec
shll
(bad)  
dec
inc
and
lret
ret
clc    
sbb
mov
in
pop
inc
push
shr
out
(bad)  
leave  
(bad)  
ss scas
bound
paddusb
mov
rcrb
int3   
xchg
mov
test
ud2    
test
add
scas
push
cmp
cmp
inc
dec
ljmp
(bad)  
int
call
sub
std    
je
pop
and
dec
jmp
cmp
cmp
push
cmp
cmp
add
bound
inc
mov
orl
or
inc
push
stc    
(bad)  
adc
sti    
(bad)  
xchg
mov
arpl
mov
movsl
sub
test
imul
or
add
sbb
xlat
bndstx bnd2,-0x7f(%esp,%ecx,4)
mov
push
inc
(bad)  
fwait
sub
and
fcomps
je
cmp
pop
arpl
lock lods
iret   
lret
les
lret
lods
(bad)  
shll
orl
fs cmp
ret
mov
cmp
dec
sti    
(bad)  
or
xchg
dec
pop
xchg
xchg
or
sbb
test
(bad)  
movsl
clc    
int
mov
sbb
outsb
push
lret
push
mov
add
xorl
cmp
nop
xlat
or
cltd   
pop
stc    
addr16 pop
cmp
inc
xor
mov
lret   
xchg
popf   
push
push
mov
das    
or
push
sub
sub
sub
repnz xor
test
fcompl
and
xor
lds
adc
or
jae
inc
sub
xlat
ds mov
sti    
add
insl
(bad)  
aaa    
pop
loop
mov
lock rcrb
mov
mov
(bad)  
mov
jnp
mov
jne
rol
push
scas
mov
test
jp
in
aam
in
rol
rcrl
xchg
sbb
int3   
lods
sbb
stc    
xchg
in
rcll
mov
sbb
imulb
inc
(bad)  
mov
xor
sub
inc
inc
loopne
jno
cltd   
(bad)  
jb
fldcw
mov
hlt    
hlt    
xchg
or
je
xchg
sub
adc
jne
and
iret   
movsb
aad
jns
inc
and
jbe
roll
adc
sub
and
xchg
lret
outsb
add
es data16 cmp
ljmp
cmc    
xchg
mov
dec
lock int3 
push
lret   
lahf   
(bad)  
dec
pop
mov
stos
fucomp
flds
jmp
shlb
xchg
add
rcl
repnz sarl
(bad)  
loope
outsl
test
push
imul
cwtl   
lcall
(bad)  
xor
fdivr
push
repnz rcrl
and
pop
frstor
pop
stc    
lea
shlb
mov
lcall
push
test
int3   
xchg
dec
pop
jns
mov
mov
cmpsb
cmp
add
jmp
loope
xor
sti    
addr16 mov
xchg
pop
mov
cmc    
mov
cmp
or
leave  
mov
add
jle
lock jmp
pop
data16 stos
push
push
rcrb
ds pop
out
stos
lret
bnd jo
aam
rclb
cwtl   
xchg
xchg
sub
and
mov
adc
in
inc
stos
xor
cltd   
cli    
ficoml
sub
mov
pop
insb
inc
jmp
cs xchg
pop
or
mov
and
inc
popf   
or
pop
fsubp
stc    
test
xlat
cmpsl
icebp  
jae
std    
xchg
jb
pop
or
adcb
cld    
in
push
pop
jbe
(bad)  
mov
mov
adc
cmp
je
pop
stc    
test
imul
loop
add
idivl
sbb
rorb
fs
enter
adc
sbb
lods
cmp
inc
push
mov
mov
insb
pop
pop
xchg
add
or
sub
adc
jp
or
mov
jo
lock in
adc
inc
je
jb
xchg
mov
add
std    
xchg
or
xor
decl
das    
or
cmpl
add
push
or
mov
mov
in
ja
adc
push
mov
in
and
aad
jns,pn
pop
in
pop
fldt
or
pop
push
push
clc    
(bad)  
push
jl
add
jns
rorb
cmc    
mov
inc
add
jge
xlat
cmpsl
ljmp
sub
cmp
mov
push
dec
aas    
aaa    
and
(bad)  
out
adc
hlt    
imull
jnp
in
(bad)  
mov
ljmp
xchg
imul
push
lds
cmp
mov
lods
xor
xor
(bad)  
mov
test
push
loop
adc
(bad)  
pop
stos
push
addr16 in
pusha  
hlt    
popa   
repnz pop
lcall
(bad)  
xor
mov
mov
iret   
movsb
add
mov
fdivrs
inc
xchg
pop
mov
icebp  
test
lret   
fsubs
aad
leave  
rolb
insb
(bad)  
jb
sbb
cmp
mov
jecxz
sbb
jge
ja
int3   
jmp
jae
dec
je
addr16 aas 
mov
pusha  
jnp
push
sbb
jle
inc
imul
jnp
pop
pop
adc
ret    
xchg
and
jne
js
ficom
les
mov
enter
cltd   
mov
out
ret
test
leave  
dec
add
icebp  
loopne
nop
pop
xchg
mov
(bad)  
sbb
inc
das    
rolb
fwait
ss loop
pop
gs int
imul
int
mov
iret   
push
push
mov
es push
nop
hlt    
test
push
mov
xchg
out
push
roll
jle
les
addr16 iret 
stos
dec
xlat
test
out
iret   
fwait
cwtl   
push
or
(bad)  
in
fimull
fistpl
inc
in
test
out
iret   
fwait
cwtl   
lret   
cmp
lods
pop
mov
ficompl
or
push
(bad)  
repz ja
insb
push
(bad)  
je
ficoml
xchg
cli    
push
push
sbb
cwtl   
jno
xchg
ficompl
mov
popa   
nop
cli    
pop
movsb
(bad)  
(bad)  
in
dec
mov
frstor
dec
int3   
out
or
ror
lds
push
inc
(bad)  
fwait
sub
and
enter
lds
inc
adc
dec
jg
and
incl
push
mov
fcoml
enter
push
loope
jae
push
add
out
add
sub
cmc    
repz jl
xchg
inc
fdivrs
ss aaa 
out
pusha  
jnp
pop
pop
adc
sti    
mov
paddsb
inc
cs add
jl
xchg
out
jbe
jge
push
xchg
mov
loop
push
and
iret   
cmp
stc    
idivl
dec
add
aaa    
jmp
stos
mov
inc
dec
adc
aaa    
mov
mov
add
inc
and
sar
jle
outsb
rolb
(bad)  
and
or
insb
pop
pop
out
les
mov
add
(bad)  
xor
cmp
rcr
(bad)  
nop
daa    
adc
jp
dec
dec
pop
jnp
jmp
ljmp
push
cmp
jo
aaa    
xchg
shrl
jmp
(bad)  
cmc    
mov
test
push
add
mov
in
aam
dec
iret   
xor
mov
pushf  
pop
pusha  
mov
lret   
push
fwait
pop
int
lret   
call
mov
(bad)  
icebp  
or
dec
adcb
ret    
aas    
sahf   
test
stc    
and
jg
aas    
jno
jno
sbb
aas    
fnsave
repnz lretw 
neg
enter
rclb
and
ja
jg
add
shll
mov
and
push
cmp
mov
jecxz
sbb
dec
push
repnz adc
mov
(bad)  
shrl
(bad)  
insb
pop
inc
inc
and
and
or
sub
addl
and
or
sub
loop
cmp
mov
test
lret
fnsave
fsubp
pop
push
lds
cmp
loope
in
jne
push
dec
fisubr
or
sbb
jns
rorb
sub
xchg
add
dec
cmp
jle
inc
sbb
std    
jge
jns
mov
outsl
(bad)  
push
test
out
or
inc
and
jbe
mov
mov
(bad)  
sbb
orl
sbb
xchg
dec
pop
jns
mov
mov
loope
add
stc    
outsb
jns
movb
cmp
xchg
cmpsl
mov
and
adc
jae
or
out
fldl2t 
push
je
insb
cmp
push
sbb
rclb
movl
ja
hlt    
xor
push
pop
jb
mov
and
fld
call
mov
pop
sub
dec
cmpsb
inc
jecxz
movsl
cmc    
je
cmp
add
loop
and
das    
jb
jns
mov
int3   
fucom
mov
(bad)  
lea
push
lds
add
push
divl
jmp
cld    
inc
sub
inc
xchg
iret   
hlt    
mov
out
xlat
cmp
mov
iret   
xchg
jp
mov
cltd   
cmp
pop
pusha  
adc
inc
xchg
mov
test
je
bound
xor
out
inc
dec
ljmp
(bad)  
int
les
out
inc
dec
icebp  
sub
imul
dec
push
mov
sub
(bad)  
and
jno
sub
test
call
test
mov
or
push
fcompl
xchg
sbb
lcall
push
xor
jmp
or
nop
daa    
(bad)  
push
aad
mov
or
test
jne
add
es ds cld 
cmp
jno
push
sbb
jae
jns
rorb
sub
shll
ds aas 
and
(bad)  
ja
ds xchg
dec
pop
jns
mov
cmp
out
inc
jbe
mov
push
ljmp
adc
xchg
sub
add
pop
sbb
arpl
jge
in
rolb
mov
pop
sub
in
lahf   
xor
sti    
xchg
ds out
fstps
in
jae
je
mov
jnp
push
sbb
(bad)  
push
jmp
mov
hlt    
xchg
dec
les
jns
(bad)  
iret   
inc
xor
pop
rclb
in
(bad)  
jecxz
in
int
stc    
dec
pusha  
and
and
(bad)  
lds
jl
sub
call
iret   
mov
or
jns
mov
movb
add
ret    
adc
loope
push
(bad)  
fcompl
arpl
mov
add
inc
sub
sub
out
xlat
iret   
es popa 
jbe
mov
xchg
outsb
pusha  
hlt    
dec
dec
add
jno
(bad)  
out
xlat
cmp
mov
es pusha 
jp
phaddwq
mov
mov
pop
push
xchg
ret    
loop
dec
ljmp
(bad)  
int
out
arpl
fcmovne
(bad)  
mov
sti    
fidivr
jge
cmp
jecxz
mov
jmp
loopne
call
stc    
xor
pop
push
push
cmc    
mov
fdivrs
in
cmp
inc
daa    
daa    
or
mov
call
mov
in
push
push
add
js
xlat
iret   
inc
cmp
jmp
lcall
add
(bad)  
jp
test
aam
enter
sbbl
and
repz popf 
xchg
push
lahf   
in
andl
push
mov
ja
adc
fsubr
fs jge
stos
nop
mov
lea
es dec
and
scas
and
scas
jbe
scas
push
int
cmp
add
lods
xor
or
cmpsl
cmp
inc
clc    
rolb
ficompl
bound
inc
xor
(bad)  
jge
push
adc
xor
cmp
(bad)  
(bad)  
add
mov
pop
lea
inc
lret
and
out
or
hlt    
fcompl
negb
(bad)  
sahf   
sbb
les
fcom
xchg
lods
push
xchg
mov
(bad)  
(bad)  
mov
push
cmp
push
rorb
adc
jge
xlat
cmpsl
push
inc
add
fmuls
(bad)  
dec
push
lret
add
jno
and
mov
cmp
dec
xchg
pop
and
jp
(bad)  
fcmovne
adc
lcall
push
add
cmovb
insb
adc
sbb
js
call
push
das    
cli    
aaa    
adc
stos
fcmovbe
iret   
mov
jp
pop
scas
cld    
fdivl
imul
lahf   
xorb
dec
inc
and
jno
out
inc
or
outsl
cmp
sbb
js
add
or
pusha  
je
imul
jle
jg
sub
jle
or
xchg
jnp
adc
push
out
push
pop
jnp
rcl
dec
(bad)  
xchg
or
scas
cmc    
fdivrl
xchg
or
jb
push
jne
das    
pusha  
je
imul
dec
adc
aaa    
mov
mov
and
sbb
cs rcl
push
or
adc
mov
fmul
sub
cmp
and
pop
jo
xor
jl
and
push
cmc    
xlat
cmp
push
add
insb
jns
push
sub
sbb
jnp
adc
aas    
ljmp
jmp
xchg
rcrl
sti    
xchg
ds out
(bad)  
jns
add
je
cli    
dec
gs out
pusha  
jnp
push
sbb
add
xchg
(bad)  
adc
fs mov
imul
mov
stc    
cwtl   
stos
mov
mov
mov
lret   
lret
xchg
add
pusha  
xchg
negb
jae
cltd   
mov
xchg
jnp
adc
push
xchg
mov
fsubrl
inc
push
dec
data16 aaa 
cmc    
xor
push
jl
add
push
je
push
(bad)  
negb
sbb
or
add
add
test
xor
mov
mov
fnsave
in
xor
stc    
test
cmp
dec
mov
xor
lahf   
out
pop
push
lds
cmp
sub
cltd   
jmp
xchg
nop
in
leave  
pop
jg
data16 mov
mov
pop
hlt    
cmpsl
ja
cwtl   
xadd
mov
jo
les
test
movsl
or
dec
hlt    
test
imul
aam
add
mov
je
xchg
lds
popf   
cmp
sub
mov
cmpsl
fcompl
mov
sub
push
jnp
jmp
or
in
xor
push
cmp
aas    
arpl
aaa    
dec
daa    
add
fs inc
dec
jle
jecxz
hlt    
mov
jecxz
sbb
rorb
mov
and
aas    
or
lahf   
out
pop
xor
mov
mov
mov
repz daa 
adc
push
push
sbb
xchg
sbb
imul
xchg
dec
aas    
mov
aaa    
xchg
xchg
sbb
mov
or
ja
cmp
add
mov
hlt    
xchg
push
out
int3   
(bad)  
push
mov
dec
fnstenv
fsts
or
das    
ja
adc
aaa    
xchg
addr16 je
aad
enter
inc
(bad)  
cld    
mov
push
xlat
fdivl
cs cltd 
or
sub
xchg
imul
xor
lret   
out
mov
inc
push
adc
dec
fidivl
xor
fmull
mov
ljmp
add
loopne
mov
jl
mov
jp
icebp  
adc
imul
inc
or
idivb
mov
mov
xor
mov
pop
int3   
or
jnp
(bad)  
mov
dec
lds
mov
daa    
sbb
(bad)  
cmp
and
(bad)  
lods
jmp
adc
or
push
and
xor
pminub
mov
ficompl
jp
jle
(bad)  
push
jne
imul
jle
loopne
mov
mov
test
xchg
inc
mov
negb
int
stos
lret
cmp
cmp
jg
or
sub
xor
sbb
mov
push
es inc
jne
in
sbb
cmp
imul
sti    
lods
mov
push
ficom
test
dec
cmp
sub
cltd   
lret
jmp
xor
daa    
pop
pushf  
and
test
(bad)
add
add
xlat
lcall
(bad)  
fimul
or
xor
jno
pusha  
mov
sub
jp
pop
mov
mov
and
out
push
bound
xchg
adc
testl
mov
aaa    
movsb
aaa    
loop
into   
fwait
cwtl   
addl
arpl
fcomps
lods
lock ja
sbb
sub
mov
sub
imul
push
ljmp
or
mov
cmp
push
rorb
das    
xchg
nop
and
outsb
or
dec
jb
aas    
sbb
xchg
sub
mov
sub
loope
add
jae
cltd   
lds
jg
jp
push
imul
and
out
into   
outsl
nop
mov
movsl
outsb
jns
sti    
nop
cs inc
es data16 cmp
push
movsb
shrl
cmp
loopne
push
dec
adc
insl
ja
jp
inc
repnz and
call
push
adc
adc
orl
ljmp
pop
push
stc    
adc
in
(bad)  
xchg
add
sbb
cwtl   
jno
xchg
ficompl
or
jle
and
or
(bad)  
fldcw
jl
arpl
mov
outsl
cmc    
mov
imul
cli    
loope
add
(bad)  
outsl
std    
sbb
jno
or
inc
sbb
dec
xor
push
call
fsubrl
insb
je
sub
or
jmp
aaa    
test
repz jecxz
jecxz
dec
notl
(bad)  
int
sub
popa   
das    
mov
aad
sub
sbb
hlt    
jle
loope
dec
mov
jg
std    
mov
push
cld    
pop
movsb
(bad)  
addr16 push
mov
les
cmp
add
sbb
add
call
push
mov
mov
mov
jecxz
fcompl
mov
lods
pop
int3   
iret   
or
sub
mov
mov
mov
mov
mov
sub
jbe
inc
dec
mov
test
pop
mov
push
and
inc
mov
add
cwtl   
daa    
cmp
test
xchg
add
mov
inc
(bad)  
loop
xchg
dec
push
loop
mov
jp
into   
shr
sarl
and
mov
stos
repz jno
xlat
cmpsl
cmp
rcr
push
dec
mov
jbe
sti    
jae
das    
inc
push
fdiv
or
das    
rorb
imul
xchg
mov
loop
loop
mov
jp
adc
and
fnsave
pop
iret   
mov
in
test
insl
mov
loopne
fsub
xor
push
je
pop
outsb
pop
jno
int
jmp
out
cmp
sub
mov
pop
pop
or
cs stos
sarb
pop
dec
(bad)  
dec
imul
jmp
out
dec
adc
aaa    
dec
cmc    
mov
sbb
sub
xchg
jnp
adc
neg
cmp
mov
mov
jge
and
xor
mull
fmull
fnop   
push
clc    
jp
mov
leave  
and
or
sub
mov
or
in
into   
or
loopne
pop
outsl
sub
inc
sub
in
out
lahf   
jg
(bad)  
popf   
dec
ds or
mov
popf   
outsl
test
push
imul
cwtl   
lcall
add
(bad)  
out
sub
sets
in
cmp
icebp  
inc
ss in
cmpsl
xchg
mov
lods
daa    
ss
pop
aam
add
xor
(bad)  
hlt    
sbb
adc
out
mov
cld    
jecxz
xchg
mov
loop
mov
jmp
jp
lock xchg
sbb
insl
fidiv
xor
(bad)  
and
das    
push
aaa    
xlat
sub
cltd   
dec
vhsubpd
push
inc
(bad)  
fwait
sub
and
(bad)  
out
adc
hlt    
imull
imul
aam
in
inc
ljmp
xchg
imul
push
lds
cmp
rcl
pop
push
lds
cmp
inc
push
fwait
ljmp
and
jns
fisttp
or
adc
xchg
inc
jle
mov
dec
mov
or
insl
push
loop
inc
push
sti    
push
jle
orps
mov
test
lds
cmp
pop
fwait
cwtl   
ficoml
xchg
call
hlt    
jle
and
lds
mov
sarb
xchg
rcrl
pop
pop
mov
in
insb
jmp
test
push
into   
add
je
icebp  
pop
adc
popa   
sub
push
mov
inc
mov
movsl
add
sub
sbb
and
rorl
adc
pop
inc
and
jbe
je
mov
iret   
cmp
sbb
mov
mov
add
sub
xor
mov
cmp
ret
mov
or
into   
mov
or
ds ffree
out
fisttp
daa    
sub
adc
inc
sub
lods
cmc    
inc
sbb
push
ljmp
mov
pop
insb
dec
repnz cld 
inc
dec
ljmp
(bad)  
int
add
jecxz
dec
sbb
icebp  
aad
loope
mov
or
xlat
mov
mov
stc    
out
dec
iret   
iret   
push
pop
mov
sub
mov
push
repz lret
test
les
sti    
fistpl
mov
lds
call
add
lret
movsb
out
cmp
xchg
pop
push
dec
sti    
or
out
dec
fsts
leave  
sub
cmp
fwait
adc
aas    
pusha  
in
iret   
andb
popf   
cmpsl
fildl
cmpsl
(bad)  
mov
iret   
inc
xor
or
in
inc
push
add
adc
sar
xchg
shrb
dec
cmp
mov
clc    
(bad)  
in
and
lods
dec
fmull
out
or
push
xor
jmp
jg
in
scas
cmp
mov
mov
dec
jg
js
mov
push
xchg
sub
inc
jnp
(bad)  
mov
stos
xchg
insl
scas
cmp
add
add
xchg
sbb
xchg
in
rolb
mov
test
mov
movsb
test
test
int3   
into   
outsl
nop
ficom
movsl
outsb
adc
notl
cmp
and
mulb
nop
dec
adc
xchg
jmp
jne
rorl
loopne
rcrb
cmp
rolb
cltd   
pop
xor
push
shrl
fmuls
movl
xchg
adc
(bad)  
mov
mov
loop
mov
in
stos
jp
dec
cmp
adc
fldl
js
fisttpll
pop
sub
mov
icebp  
orl
js
jmp
imulb
loop
and
sub
mov
stos
mov
mov
fisttp
lret   
dec
std    
jmp
fisubrl
inc
aas    
xor
or
lock xlat
or
sub
sub
mov
cld    
adcl
mov
sbb
insl
popa   
repnz adc
shll
fdivr
cmp
dec
pop
data16 jl
pop
rcrl
ds pop
out
rol
inc
mov
or
pushl
je
pop
sub
stc    
pusha  
jnp
push
sbb
movsb
mov
xchg
mov
xor
jmp
arpl
je
add
dec
or
ljmp
xchg
jns
lea
(bad)  
jmp
adc
cli    
andl
imul
addb
lret   
mov
pop
push
mov
cmpsl
ja
jge
lods
adc
(bad)  
mov
or
(bad)  
cli    
shrb
int
pop
mov
push
xchg
sub
jb
scas
clc    
jo
in
cld    
push
dec
in
and
loop
sub
push
xchg
sub
es jno
rorl
fiaddl
cmp
jae
xchg
push
pop
cmp
sub
sti    
inc
dec
jae
xor
or
fcoml
enter
js
mov
test
lea
jmp
mov
xchg
(bad)  
roll
mov
test
adc
lods
daa    
negb
lds
cmp
xor
lds
cmp
outsl
xchg
loope
insl
lret   
(bad)  
mov
sti    
fiadd
dec
cmp
sarl
push
inc
or
mov
mov
fisttpl
xorl
dec
repz fnsave
iret   
xor
fisttpl
lea
rorb
hlt    
xorl
test
call
popl
add
test
rolb
or
cmpl
shrl
pop
sarb
inc
(bad)  
je
xchg
sub
inc
jl
(bad)  
mov
mov
iret   
movsb
xchg
cs xor
and
jbe
fstpt
and
cmp
sub
sti    
inc
dec
jae
xor
or
fcoml
enter
js
mov
test
lea
jmp
negb
adc
push
mov
lcall
loopne
(bad)  
popf   
jnp
xchg
lcall
mov
js
push
or
(bad)  
xor
and
imul
or
add
imul
pusha  
jno
mov
lea
imul
add
mov
shll
into   
add
xor
mov
mov
pop
int3   
imul
xchg
jmp
repz imul
dec
ljmp
repz jns
jae
ja
ret    
pushf  
adc
rolb
sub
mov
out
stos
mov
xchg
aam
in
nop
jno
pop
pusha  
jnp
scas
stos
jge
test
scas
arpl
repnz test
or
push
prefetch
mov
inc
pop
int3   
imul
insb
cli    
iret   
xchg
imul
iret   
fwait
dec
mov
sub
les
std    
mov
imul
add
lods
addr16 jp
push
mov
imulb
pusha  
jno
mov
jge
push
push
dec
bound
repnz cmp
call
mov
(bad)  
std    
jp
xchg
int3   
test
je
xchg
les
or
cmpsb
hlt    
ja
sbb
adc
roll
or
inc
add
ds add
jns
jae
ja
mov
daa    
xchg
inc
jbe
mov
push
es pop
lahf   
cmp
addr16 push
fmuls
into   
lcall
mov
popa   
je
xacquire xchg
sti    
push
lsl
mov
lcall
imul
mov
and
push
xor
in
lds
add
lods
jbe
inc
pop
test
in
xchg
leave  
ds ss test
inc
push
mov
addb
pusha  
jnp
scas
stos
aad
lret   
insl
jbe
mov
jns
xchg
sti    
push
prefetch
mov
adc
gs out
stos
ljmp
in
out
nop
jb
mov
jnp
scas
stos
jge
sub
popa   
mov
xchg
ret
xor
push
sti    
push
prefetch
mov
ret    
pop
int3   
imul
je
jmp
outsl
mov
or
in
repnz test
adc
aas    
fisttpll
lea
enter
movsl
and
cmp
sub
mov
lret   
(bad)  
fwait
sub
and
mov
nop
cmpsb
xchg
cmp
pop
and
jp
cmc    
test
adc
ret    
sbbl
(bad)  
hlt    
leave  
ja
repz jmp
adc
aaa    
mov
pop
das    
xchg
mov
xor
or
xlat
push
lods
jmp
iret   
mov
jp
push
jo
lcall
adc
test
mov
enter
mov
sti    
sub
xor
(bad)  
es cmc 
jp
jl
(bad)  
or
xor
fisubl
or
aaa    
xor
mov
cmp
ja
pop
or
out
and
or
sub
insb
movsb
repnz and
or
sub
push
cmpsb
aad
and
lock into 
mov
scas
xchg
stc    
jp
dec
xlat
push
adc
fdivs
ds inc
lods
flds
xchg
fmuls
cmpsb
popf   
jp
cltd   
(bad)  
ja
(bad)  
fild
or
cmp
repnz mov
sbb
add
sub
sbb
outsl
add
(bad)  
cmpsl
jne
push
sahf   
ja
or
lret
popa   
add
push
rorb
pusha  
out
and
loope
push
shll
aaa    
loop
test
out
dec
(bad)  
test
out
mov
stos
sar
loop
shrb
hlt    
mov
xlat
inc
pop
test
ss jb
sar
or
dec
mov
icebp  
jp
push
lock daa 
popf   
or
sbb
leave  
ljmp
into   
jmp
xor
into   
add
push
cmp
cmp
in
faddl
xlat
fwait
(bad)  
or
adc
arpl
movsb
mov
push
out
mov
mov
iret   
movsb
xchg
repnz inc
xor
mov
idivb
xchg
stos
loop
push
mov
add
jle
(bad)  
das    
cmp
xchg
mov
adc
out
xor
sarl
repnz xlat
cmpsl
xor
jge
fmuls
shr
(bad)  
or
out
add
add
push
inc
outsl
xchg
push
(bad)  
rorl
aaa    
and
(bad)  
out
adc
hlt    
popf   
cmp
sub
or
iret   
mov
jp
fs
enter
xor
jl
and
pusha  
(bad)  
out
xlat
in
orl
pop
mov
xor
sbb
lods
jb
push
or
les
icebp  
dec
cld    
mov
and
xor
pop
jecxz
pusha  
mov
add
and
and
xor
pop
jecxz
repnz and
imul
sbb
into   
mov
lods
fsub
test
ds cs inc
es data16 cmp
ljmp
xlat
popa   
sub
inc
inc
jl
lock out
dec
int3   
or
dec
pop
xorl
lods
rorb
xlat
loope
mov
mov
pushf  
push
xchg
in
dec
jbe
das    
aas    
dec
sbb
xchg
dec
(bad)  
stos
adc
les
stos
hlt    
sbb
stos
mov
fidivrl
ret
sub
sbb
test
int
loope
(bad)  
(bad)  
in
adcl
xlat
gs mov
xchg
push
cmp
scas
(bad)  
out
dec
int3   
sub
hlt    
sbb
mov
jmp
or
inc
add
cmp
or
and
jne
jno
add
scas
xlat
aaa    
cs xchg
dec
pop
jns
mov
ds data16 stc 
scas
push
mov
sbb
arpl
cwtl   
inc
jnp
aas    
pop
cmpb
pop
les
jae
push
rorb
test
mov
int3   
into   
outsl
inc
fisubr
lea
les
je
cwtl   
fnop   
std    
jb
xchg
fwait
cwtl   
push
ss sbb
in
out
fist
out
outsl
cmpl
sbb
pop
insb
(bad)  
scas
push
movsb
cmp
push
shr
xchg
adc
jmp
repnz xchg
mov
les
ficompl
int
push
xchg
push
dec
and
jno
mov
fcoml
lock
hlt    
(bad)  
push
enter
jne
mov
sub
dec
sti    
mov
sub
ret    
jne
push
(bad)  
out
jl
and
bound
decl
xor
daa    
xchg
test
scas
int
sub
dec
push
sub
jmp
cmp
sub
push
bswap
mov
jp
fs
enter
loopne
jl
and
popa   
(bad)  
call
rorb
aaa    
dec
cmc    
mov
(bad)  
fmul
mov
pop
jecxz
ljmp
xchg
imul
push
lds
cmp
mov
adc
mov
aaa    
nop
aad
xlat
push
(bad)  
arpl
mov
test
pop
test
xchg
cmpsb
xor
pop
sbb
mov
pop
cld    
lods
rcrb
flds
jae
sub
and
jnp
push
sbb
jnp
shll
cltd   
cli    
movsb
test
mov
mov
add
scas
dec
mov
decl
ja
add
out
inc
push
clc    
bound
enter
je
int3   
lods
sbb
stc    
push
(bad)  
mov
data16
mull
sbb
rol
out
stos
es
out
mov
fsts
adc
iret   
cmp
jbe
shrl
jecxz
in
adc
dec
xchg
mov
loop
pop
fcoml
jp
mov
rcrb
int
je
sbb
sbb
xchg
mov
out
cmpsb
mov
sub
dec
aad
test
jp
imul
fsubl
mov
xchg
movsl
(bad)  {z}
(bad)  
mov
adc
sbb
movsl
outsb
inc
and
and
inc
es data16 cmp
push
pop
jmp
cs inc
es data16 cmp
add
cmp
jle
cmp
aam
cwtl   
sbb
fisubrl
mov
nop
cs lcall
adc
or
mov
mov
inc
outsb
push
push
pop
xor
mov
xchg
mov
or
movsb
popl
icebp  
jl
repz xor
test
icebp  
mov
sti    
shr
dec
adc
lret   
cmc    
ret
divl
insb
stos
loop
cmp
scas
adc
dec
rcr
fstps
test
mov
mov
or
push
cmp
push
icebp  
fs test
mov
js
jnp
idivl
pushf  
sti    
jne
push
lret   
mov
push
out
jp
lcall
fcoml
jno
xchg
ficompl
mov
cs out
std    
jp
int
mull
or
lcall
rorb
pop
sub
mov
(bad)  
jno
xlat
cmpsl
shrb
push
int
dec
leave  
sbb
mov
jno
mov
and
jp
jmp
mov
pop
sub
add
xor
or
out
xlat
xchg
mov
sub
dec
icebp  
test
add
hlt    
dec
sub
or
lret
aad
mov
dec
mov
add
and
xor
pop
jecxz
xor
xor
add
enter
mov
test
push
sub
or
aaa    
add
inc
push
and
sti    
outsb
in
cmpsl
add
jnp
ss lods
out
(bad)  
adc
jmp
rcll
dec
xor
cs rcr
(bad)  
dec
in
pop
(bad)  
fisubrl
jecxz
sub
jo
clc    
mov
pop
dec
(bad)  
xchg
or
jbe
mov
notb
ljmp
mov
push
jns
movb
sub
jmp
movsl
mov
es mov
inc
inc
es jo
in
cld    
data16 jae
inc
xor
popf   
dec
sbb
roll
cwtl   
jno
xchg
ficompl
mov
jns
testb
pushf  
call
add
and
or
stos
lret
decl
push
lods
aam
iret   
sub
cmc    
repz jl
xchg
lret   
je
jg
js
pusha  
jnp
push
sbb
bound
loopne
test
pusha  
repnz dec
push
mov
cwtl   
ret
xchg
mov
loop
aaa    
xor
pop
loop
cmp
mov
mov
or
hlt    
stc    
imul
or
in
stos
rcrb
xchg
inc
repz fdivl
dec
xchg
pop
inc
loopne
jbe
or
mov
aam
hlt    
imul
inc
sbb
mov
xchg
or
mov
(bad)  
rol
lahf   
(bad)  
cmp
xchg
clc    
cli    
and
or
sub
push
test
add
add
ja
cmp
outsl
xchg
loope
insl
lret   
(bad)  
mov
sti    
gs faddp
pop
jne
aas    
or
dec
pop
dec
xchg
cwtl   
adc
jg
sti    
or
std    
pop
jae
(bad)  
sbb
cmp
iret   
xchg
cwtl   
mov
inc
into   
and
xor
mov
xchg
xlat
loope
jae
push
rorb
sbb
jns
movsl
mov
or
xor
out
and
ljmp
les
dec
lods
ljmp
and
jne
or
paddsb
dec
pop
jns
mov
imulb
mul
cmp
mov
paddsb
adc
cmp
mov
das    
rorb
imulb
dec
xchg
mov
loop
(bad)  
mov
mov
fcompl
int
enter
sbb
jno
mov
mov
jp
imul
jns
mov
out
xlat
pop
and
jp
in
fmul
sbb
(bad)  
in
stc    
jno
out
jl
and
jge
in
xlat
cmp
or
imul
inc
sbb
scas
ljmp
mov
(bad)  
rcll
idivb
out
test
in
dec
mov
sti    
test
lds
cmp
mov
add
push
lds
cmp
outsl
xchg
loope
insl
lret   
(bad)  
mov
sti    
ficom
mov
push
inc
or
mov
cmp
adc
lea
enter
add
xchg
lods
cmp
rorb
mov
lea
jne
jns
rorb
incl
jns
(bad)  
lret
cld    
call
popl
bnd jns
fwait
(bad)  
jbe
xor
mov
ficompl
cmp
push
mov
mov
sub
pop
jmp
popa   
lds
sub
sti    
out
aaa    
adc
sub
iret   
movsb
iret   
outsl
xchg
es inc
and
jbe
fstpt
and
mov
(bad)  
and
jbe
call
xor
or
not
xor
vpsrlw
aaa    
and
(bad)  
int
xor
inc
testl
mov
aas    
mov
fcoml
into   
(bad)  
hlt    
stos
repnz dec
mov
dec
adc
aaa    
dec
sti    
mov
into   
adc
test
jl
and
popa   
(bad)  
call
adc
aaa    
dec
sti    
mov
shll
(bad)  
out
sbb
lods
jb
pop
add
jmp
pop
push
shll
lods
xchg
dec
or
or
jmp
call
(bad)  {z}
sti    
xchg
inc
adc
and
mov
mov
add
pusha  
sar
push
xchg
jb
aaa    
fwait
stos
mov
mov
pop
repz xchg
sub
arpl
stc    
popf   
sub
movsb
fnsave
cli    
cmp
inc
negb
adc
sti    
adc
ljmp
pop
pusha  
xchg
inc
mov
movzwl
inc
push
and
aas    
push
iret   
jo
jmp
xchg
jl
cmp
dec
and
pop
or
jb
clc    
loopne
dec
inc
cmp
pop
shl
push
insb
lods
add
xchg
mov
outsl
ss push
mov
ficompl
mov
insl
cwtl   
mov
call
sub
xchg
jge
mov
iret   
pop
cmp
sbb
les
js
jge
repnz adc
shll
fdivr
in
pop
jge
pop
and
out
adc
je
inc
aaa    
or
or
jmp
nop
je
imul
or
jmp
lret
(bad)  
addr16 push
fdivr
pop
test
xor
out
out
push
daa    
cs inc
es data16 cmp
loopne
push
dec
and
ja
incl
xchg
mov
int3   
mov
into   
movsl
mov
dec
mov
mov
add
scas
add
daa    
jns
movsl
add
or
icebp  
push
int
push
rclb
jns
mov
or
and
std    
add
jbe
adc
negl
xlat
dec
xchg
mov
loop
gs xchg
je
jp
dec
cmp
rol
push
adc
(bad)  
push
fmulp
or
iret   
mov
in
stc    
sarb
pop
arpl
mov
and
mov
fistl
add
fisubl
(bad)  
je
bound
in
jg
add
ljmp
(bad)  
int
rcll
fdivrl
data16 jnp
adc
(bad)  
in
and
sub
insl
and
(bad)  
or
rcr
push
xchg
mov
(bad)  
jp
or
dec
dec
std    
lret   
xor
paddsb
jns
cmp
nop
stos
push
mov
ficompl
mov
imul
mov
shll
and
xchg
negb
shrl
inc
mov
push
out
sbb
cld    
jecxz
adc
imul
or
sub
cmc    
adc
lret
rorl
icebp  
jge
pop
push
fcmovu
call
out
sbb
cmp
pop
and
add
mov
and
cltd   
jo
push
in
inc
out
leave  
or
insb
push
xlat
fdivl
xor
push
cmp
es pop
lods
ja
or
jb
sub
(bad)  
jp
je
popf   
sub
movl
fldenv
loop
shl
jns
out
mov
scas
sub
mov
jo
out
cmp
push
clc    
xor
scas
movsl
leave  
rcrb
popa   
cmc    
mov
lret   
sub
repz
sti    
sub
inc
pop
imul
lods
frstor
pusha  
push
adc
fs add
jno
pop
jbe
dec
mov
xor
xor
scas
mov
xchg
out
sub
std    
cmpsl
add
sub
test
pusha  
jp
call
mov
aam
mov
ficompl
mov
jno
in
inc
int3   
fcompl
and
nop
mov
lret
decl
jp
in
stos
iret   
loop
les
loop
iret   
fmul
mov
jecxz
bound
inc
std    
mov
inc
dec
ljmp
(bad)  
int
xorb
xor
subl
mov
dec
pop
jns
mov
adc
das    
inc
roll
mov
mov
lods
or
mov
ljmp
and
pushl
lods
sbb
stc    
fstpl
es xchg
dec
pop
pushaw 
insl
add
out
test
fabs   
adc
out
stos
lret
outsl
cmp
xchg
(bad)  
adc
or
fstps
adc
(bad)  
out
dec
cmpsl
mov
ret
pmaxsw
popf   
cwtl   
(bad)  
sub
mov
push
xor
lahf   
inc
pop
mov
mov
mov
das    
int3   
mov
dec
dec
mov
xor
inc
std    
call
iret   
mov
or
jns
mov
sbb
mov
jae
jns
rorb
push
sub
sub
fldcw
and
push
dec
lcall
xchg
loop
push
push
sbb
sti    
inc
mov
fistpl
lock fst
(bad)  
and
aaa    
lcall
int3   
rclb
popf   
cmp
ljmp
mov
jp
scas
(bad)  
pushf  
repz push
inc
adc
jae
inc
jno
sahf   
data16 mov
stc    
sarb
pop
arpl
loopne
popf   
das    
or
push
verr
aas    
insl
push
or
gs adc
outsb
sub
cmpsb
or
rcr
push
daa    
clc    
std    
aam
inc
loop
pop
mov
je
ds aaa 
cmp
pusha  
jnp
push
sbb
call
add
negl
xor
lock inc
mov
sub
cwtl   
pop
popa   
xchg
and
sub
sub
lods
mov
xorl
cmp
xor
aaa    
iret   
mov
ror
xor
out
xor
(bad)  
jae
push
rorb
push
sub
or
and
and
mov
cmp
mov
pusha  
mov
mov
sbb
pop
(bad)  
jecxz
aam
xor
loopne
or
xor
test
test
je
bound
jg
adc
dec
ljmp
(bad)  
int
repnz bound
cmp
cs adc
dec
ljmp
(bad)  
int
cmpb
add
jmp
pop
push
imul
fimul
jb
frndint 
sbb
clc    
xor
int
push
loopne,pt
imul
inc
into   
fstpl
push
sub
sbb
sbb
jmp
sub
push
incb
or
lods
hlt    
sbb
mov
pushf  
push
dec
jg
and
cmpsb
cmp
sub
inc
jne
dec
pop
jns
mov
mul
cmpsb
xchg
sarb
push
mov
adc
daa    
nop
(bad)  
pop
cmp
mov
mov
add
scas
jo
pop
int3   
ja
and
adc
lret   
idivl
xlat
cmpsl
(bad)  
ljmp
movsl
adcb
inc
and
jbe
pop
mov
lahf   
xchg
jnp
adc
push
repz and
ds push
push
pop
cltd   
test
inc
jbe
jle
shrl
in
out
sbb
lods
jb
pop
imul
sub
fnsave
jo
mov
inc
ret    
and
or
sub
pop
sbb
and
or
sub
pop
(bad)
repnz scas
mov
mov
mov
bt
fwait
cwtl   
mov
or
sbb
div
pop
test
nop
adc
or
cmp
xchg
jbe
movsb
xor
or
dec
mov
insl
in
jl
jnp
(bad)  
pushf  
mov
cltd   
inc
or
pop
in
enter
xor
out
fisttpl
mov
loop
mov
xchg
pop
and
out
sub
out
sub
xlat
add
in
xchg
xchg
movsl
or
mov
(bad)  
mov
adc
fst
mov
movsb
or
xlat
mov
in
push
sub
mov
mov
shll
dec
pop
insl
arpl
popf   
cmp
sub
mov
iret   
sub
cmc    
inc
push
inc
std    
sub
(bad)  
push
mov
fdivr
mov
push
and
pop
adc
sbb
test
in
stc    
sbb
hlt    
lods
daa    
sti    
mov
add
stos
test
add
xchg
arpl
add
mov
ret    
out
lret   
cltd   
cli    
push
cmp
cmp
mov
popa   
jmp
icebp  
nop
sbb
inc
and
je
je
xchg
sub
arpl
sbb
lret   
mov
cld    
push
adc
(bad)  
push
sbb
xchg
xchg
dec
pop
jns
mov
jb
or
shlb
sbb
xchg
iret   
jbe
fnstsw
icebp  
scas
lahf   
hlt    
popf   
cmp
sub
sti    
lret
mov
rcrl
js
hlt    
or
negb
test
movsl
outsb
pop
(bad)  
fmulp
cs inc
es data16 cmp
push
in
and
data16 cmp
xchg
dec
add
negl
stc    
lds
and
xchg
rcr
jo
adc
sub
loop
sbb
ljmp
mov
add
cmp
movsl
movsb
imul
dec
pop
jns
mov
mulb
sub
stos
cmp
mov
adc
jge
rcrl
sbb
into   
xchg
adc
xor
iret   
ja
decl
ja
pop
xor
inc
push
(bad)  
jns
rorl
aaa    
and
mov
repz xchg
add
xlat
ds mov
sahf   
inc
push
push
data16 xor
repz and
xchg
mov
mov
jae
mov
mov
xchg
cwtl   
push
fiadd
into   
cmp
sub
xchg
push
mov
fs insl
stos
mov
jbe
in
jbe
movsl
aas    
dec
ja
mov
mov
fcmovbe
jmp
(bad)  
jbe
das    
sbb
dec
xchg
push
add
lcall
cmpsl
xchg
push
cmp
je
sbb
dec
imul
mov
rclb
out
out
mov
xchg
(bad)  
divb
aaa    
dec
cmc    
mov
fst
clc    
fcoml
enter
ret    
cwtl   
xlat
pop
and
jp
in
aam
adcl
(bad)  
out
mov
cmp
sub
xchg
fmul
mov
jp
fs
enter
cmc    
out
sbb
lods
jo
sbb
lock xor
cmc    
test
std    
(bad)  
mov
push
cld    
mov
jmp
stc    
popw
lret
dec
pop
data16 arpl
lock sbb
roll
js
cltd   
fwait
adc
inc
mov
lahf   
call
cmpsl
mov
mov
(bad)  
mov
mov
jg
(bad)  
mov
repnz pop
xor
mov
mov
sbb
push
mov
iret   
inc
jae
dec
cmp
or
sarb
cld    
mov
sbb
loopne
test
adc
cwtl   
ss aad
inc
(bad)  
lahf   
test
notb
imul
mov
mov
std    
mov
hlt    
dec
(bad)  
push
in
adc
xor
inc
shr
mov
cmc    
pop
dec
and
int3   
mov
lea
cmp
add
pushf  
outsb
sbb
push
loopne
sbb
inc
mov
sbb
xor
ja
movsb
mov
and
lcall
or
in
test
insb
push
lcall
(bad)  
xor
mov
inc
loopne
and
loope
repnz and
dec
cmp
fisubr
xor
pop
mov
pop
push
adc
nop
mov
mov
bnd je
push
ja
jbe
xor
jl
mov
pop
movd
test
add
inc
es data16 cmp
adc
pop
sub
or
mov
out
push
nop
in
imul
cmc    
jmp
push
xchg
inc
repz fdivrl
mov
cmp
andb
push
mov
fdivrl
mov
(bad)  
pop
arpl
lret   
mov
mov
js
popf   
lret
in
mov
xor
into   
repz cmp
das    
aam
(bad)  
jbe,pt
repz
mov
loope
lock enter
leave  
mov
into   
mov
gs
in
cmp
daa    
sbb
or
and
icebp  
xor
cmc    
loope
aad
push
out
stc    
inc
inc
adc
push
mov
xchg
ret    
xchg
xlat
enter
lods
xor
das    
jnp
js
loopne
rolb
je
popf   
pushf  
iret   
dec
rcrl
aas    
daa    
rorb
insb
lea
repnz aam
sub
jbe
mov
das    
pushf  
iret   
pushf  
iret   
xor
not
pushf  
dec
add
pop
and
xchg
xor
ja
(bad)  
xchg
xorl
loopne
xchg
(bad)  
jbe
shrl
repnz out
loop
jecxz
movsb
js
pop
dec
inc
dec
adc
aaa    
dec
testl
pop
add
mov
xor
jecxz
call
push
roll
enter
push
add
xchg
inc
(bad)  
cmpsl
lock jmp
xchg
xsha1
cmpsb
or
pop
ljmp
nop
(bad)  
ror
xchg
nop
sub
test
in
xchg
inc
cwtl   
cmpsb
in
stos
sub
sbb
fcmovnu
inc
jp
mov
rcrl
cmp
inc
leave  
dec
sbb
push
les
inc
mov
mov
jge
lea
ja
sub
add
cmp
fisubl
je
sbb
jnp
push
sbb
and
imul
xor
ficompl
(bad)  
mov
imul
fwait
push
fbstp
jns
xchg
shrl
sar
fisubrl
in
pop
xor
adc
int
adc
leave  
xorb
out
cs icebp 
std    
xlat
(bad)  
mov
fsubrl
adc
sbb
dec
cmp
aad
aad
xchg
in
rcl
mov
add
mov
sub
pop
scas
mov
xchg
das    
lds
out
aad
sub
enter
mov
fsubrl
adc
or
mov
fildll
call
sub
nop
inc
xchg
loop
push
push
imul
xlat
out
and
insb
adc
aaa    
dec
testl
test
xor
push
xchg
adc
add
(bad)  
bound
cmp
arpl
mov
lods
inc
int
imul
stos
js
(bad)  
fistpll
pop
(bad)  
sub
sub
lods
mov
aaa    
fs
cmp
scas
add
mov
mov
out
sbb
lods
jb
dec
arpl
fldcw
cltd   
add
inc
ljmp
das    
rolb
js
rorb
add
xchg
push
aas    
xor
les
jecxz
loope
cwtl   
pop
xchg
mov
in
inc
dec
ljmp
pop
push
je
sbb
test
fmulp
in
adc
es sub
inc
dec
movsb
mov
pop
jp
insl
lahf   
addb
inc
outsb
ret
scas
sbb
xorb
rorl
add
sub
(bad)  
mov
aas    
mov
icebp  
jp
dec
lds
mov
rolb
or
iret   
addr16 nop
(bad)  
das    
sub
arpl
jae
cmp
sub
sbb
lods
imul
stc    
mov
lcall
vhsubpd
push
inc
dec
adc
aaa    
dec
icebp  
test
add
hlt    
dec
and
pop
inc
xchg
sahf   
pop
mov
fimull
sub
test
inc
xchg
mov
(bad)  
xchg
mov
xchg
xlat
lcall
lods
lret   
icebp  
xchg
mov
insb
addr16 inc
dec
fcmovnu
xor
or
hlt    
xlat
rorl
adc
lea
outsb
aaa    
leave  
out
in
(bad)  
(bad)  
mov
mov
adc
fisubl
cld    
enter
inc
xchg
mov
(bad)  
xchg
mov
xchg
xlat
lcall
lods
lret   
icebp  
xchg
mov
insb
addr16 inc
dec
fcmovnu
xor
or
lock xlat
add
cmp
jno
xor
lods
in
and
sbb
jg
fistpll
into   
outsb
mov
scas
xchg
fdivrl
mov
xchg
mov
icebp  
pushf  
mov
popf   
test
repz in
pop
jg
jbe
xor
sbb
sbb
sbb
jg
je
push
xor
pushl
(bad)  
icebp  
fdivrl
push
pop
push
xor
add
mov
inc
bound
ljmp
sub
int
xor
test
sbb
add
loop
shrl
cmpsl
pop
sahf   
cmp
inc
int
jecxz
cmp
push
xchg
cmpsl
pop
pop
data16 aam
mov
and
dec
xchg
mov
or
mov
ret    
add
push
(bad)  
jbe
adc
arpl
(bad)  
stos
dec
lea
sub
push
out
rol
es xchg
out
popf   
mov
mov
mov
mov
sbb
dec
cmp
movb
pop
dec
daa    
or
cmp
push
mov
mov
lcall
ss jmp
adc
cmp
in
into   
hlt    
mov
jecxz
sbb
cwtl   
adc
mov
(bad)  {z}
out
mov
and
sbb
xor
sar
sub
mov
dec
fcmovb
cmp
inc
es data16 cmp
loopne
or
jns
(bad)  
mull
adc
addr16
rol
mov
ds into 
pusha  
hlt    
rdmsr  
scas
mov
rorb
int3   
push
fwait
leave  
(bad)  
sub
pusha  
push
or
xlat
pop
push
pop
jbe
mov
ret
push
mov
jne
movsl
ficom
fdivl
pop
movsl
inc
cmp
sbb
mov
(bad)  
cmc    
add
movsl
or
pop
call
nop
pusha  
mov
je
or
cmc    
push
iret   
cmpsl
jg
stos
mov
xlat
inc
lea
sub
clc    
out
push
fstps
add
in
js
dec
mov
mov
mov
push
in
addb
sbbl
aas    
jns
cli    
inc
ret
sbb
xchg
aas    
dec
mov
sub
mov
ja
mov
andl
mov
addr16 push
xchg
hlt    
cmp
sbb
mov
inc
and
or
fidivl
or
rcrl
fidivrl
jb
sar
and
sub
movsb
cmc    
adc
xchg
pop
mov
cmp
cmp
(bad)  
inc
sbb
sbb
imull
and
sub
movsb
xchg
test
xchg
and
sbb
(bad)  
cmp
xchg
add
movl
mov
(bad)  
test
sub
sbb
int3   
pop
cmp
mov
fistl
push
sbb
mov
add
enter
ret    
sbb
cmp
mov
cmp
out
dec
out
in
into   
xchg
adc
add
(bad)  
cmp
mov
lock jge
xlat
cmpsl
(bad)  
prefetch
mov
push
rorl
aaa    
and
(bad)  
ret    
push
push
xor
sbbl
test
(bad)  
sub
add
lret   
lods
mov
ss add
cmp
sub
inc
dec
jae
jbe
dec
add
sbb
mov
and
imul
or
inc
pop
das    
rolb
pop
fwait
sub
and
out
add
insl
adc
test
push
adc
add
repz inc
sub
and
shr
fisubr
or
sub
xor
mov
jp
pop
(bad)  
lock fmul
cltd   
xor
push
jl
jmp
pop
and
jp
jmp
xor
lret   
pop
and
and
imul
or
inc
pop
das    
shlb
aaa    
and
leave  
out
add
insl
adc
mov
dec
out
dec
adc
aaa    
dec
cmc    
mov
into   
xlat
out
fcoml
into   
fdivp
stos
call
or
in
aam
adc
mov
adc
cmp
aad
jle
fbstp
imul
mov
pusha  
sahf   
jg
sbb
dec
(bad)  
pop
jbe
aaa    
lods
(bad)  
pop
xchg
cmp
sti    
push
pop
mov
inc
bound
dec
pop
rclb
das    
xchg
jbe
les
lock and
push
(bad)  
repz pop
(bad)  
xchg
lods
bound
and
gs cld 
sub
fstps
dec
sbb
xchg
inc
shl
push
mov
fneni(8087 only) 
mov
(bad)  
inc
add
pop
das    
scas
jbe
in
retw
dec
pop
inc
lret
idivl
lret
mov
ss je
adc
out
fxch
loope
cltd   
xchg
pmuludq
cmc    
mov
out
or
clc    
mov
mov
into   
std    
ret
inc
int3   
dec
repz jb,pt
not
in
mov
out
jmp
dec
sbb
xor
iret   
ja
dec
ret
(bad)  
ljmp
int
mov
rorb
in
sti    
cmp
cmp
enter
pop
int
fs sbb
sub
jns
lods
movb
scas
jbe
xchg
dec
inc
mov
sub
cmp
xor
out
jp
orl
and
cmp
fistpll
mov
pusha  
sbb
sbb
icebp  
adc
mov
ret
cmpl
cmc    
mov
in
or
push
and
loop
cmpsb
out
xchg
(bad)  
mov
ds clc 
adc
adc
mov
repz daa 
sub
mov
nop
or
lret
pxor
loop
jbe
xor
ja
and
add
add
and
inc
cmc    
cld    
lret
mov
pop
mov
fnsave
(bad)  
push
bound
and
leave  
in
jmp
jecxz
jns
lods
movb
enter
in
jbe
loop
sub
in
mov
imul
test
ret
mov
int3   
push
lea
sub
imull
sub
test
jmp
out
mov
mov
jle
and
imul
repz bound
pop
loop
fiaddl
cmp
enter
adc
or
sub
sub
mov
cli    
mov
dec
loopne
cmpsl
pop
sti    
pop
xor
inc
fwait
jbe
mov
rorl
mov
out
sbb
scas
adc
adc
jle
cmp
push
lret
imul
sbb
xlat
jle
ljmp
mov
(bad)  
(bad)  
sub
test
mov
sbb
sahf   
pop
in
sub
inc
jbe
pop
push
cmp
out
stos
mov
int
pop
ret
sub
fcmove
cltd   
pop
xor
jle
add
push
mov
int3   
push
(bad)  
movntps
mov
loopne
mov
lret   
and
mov
or
out
lret
cmp
outsb
rorb
cmpsl
mov
(bad)  
lock ja
mov
ret    
out
dec
int3   
xlat
cwtl   
mov
jnp
clc    
pop
(bad)  
clc    
pop
aam
hlt    
popa   
test
leave  
cmpsl
icebp  
and
aam
inc
xor
lea
or
xchg
pop
xchg
clc    
xor
scas
xor
push
jb
pop
xchg
jg
icebp  
and
outsb
imul
mov
adc
loop
sub
movsb
aas    
out
adc
push
incl
int
and
out
dec
add
jo
imul
les
nop
aam
hlt    
lods
ret
arpl
sub
push
sti    
xchg
cmp
movsb
xchg
movsl
mov
xor
fwait
aam
(bad)  
ret
jp
aam
inc
sub
ret
cld    
lods
jo
cwtl   
push
dec
xor
mov
ret
jle
sti    
xchg
ds out
(bad)  
mov
je
sbb
and
or
jmp
lret   
arpl
jmp
loope
hlt    
xchg
rcll
(bad)  
dec
cmp
repz or
jne
sub
sub
clc    
loope
hlt    
xchg
jne
mov
test
pop
xchg
test
xchg
in
adc
inc
je
jb
xchg
mov
xchg
add
push
mov
add
push
sarb
xor
ret
pop
mov
das    
lret   
adc
mov
jmp
(bad)  
mov
lret
dec
sub
mov
jge
mov
into   
data16 mov
js
arpl
jp
lods
mov
sbb
mov
shll
fmuls
dec
jb
sahf   
fidivl
push
dec
xor
mov
xor
mov
dec
mov
dec
adc
mov
out
cmp
adc
mov
stos
cmp
fwait
mov
adc
cmp
lods
pop
and
js
bound
cmp
push
mov
dec
js
in
pop
insl
push
jnp
mov
js
insb
xchg
icebp  
icebp  
push
cmp
cs or
and
lods
cs lret
repz xlat
pop
cmp
mov
into   
insl
pop
inc
insb
out
lea
js
test
stc    
lds
mov
mov
xchg
inc
push
mov
cmpsb
cmp
mov
add
sbbb
inc
pop
sti    
addr16 lret
in
push
sub
and
fsubr
ret
add
cmp
scas
add
add
mov
addr16 dec
dec
push
and
in
jl
and
xchg
mov
addr16 mov
pop
push
jp
jecxz
inc
pop
imul
mov
inc
pop
in
mov
jecxz
adc
jp
push
mov
and
add
scas
add
push
cmp
xor
les
jecxz
pusha  
mov
add
lock or
xor
les
jecxz
repnz and
or
push
dec
push
add
leave  
or
xchg
push
mov
cmp
cmpsb
add
sub
lahf   
(bad)  
xchg
dec
pop
jns
mov
negb
xor
fidivr
push
test
in
pop
mov
mov
mov
add
xchg
adc
pop
add
ja
cmpsl
cmp
mov
cs test
inc
test
xchg
loop
push
push
imul
cmc    
mov
into   
xlat
out
fcoml
enter
sbb
bnd jp
or
in
stos
iret   
cld    
shrl
xchg
jnp
adc
mov
pop
arpl
add
pop
cmc    
jecxz
out
jg
pop
sbb
pop
and
or
sub
sti    
push
pop
and
or
sub
xchg
fsts
repnz lahf 
mov
(bad)  
or
push
lret
or
dec
repnz xchg
out
dec
sub
push
cwtl   
jb
pop
roll
aad
mov
ficompl
dec
mov
push
xchg
sub
arpl
add
sub
lret   
out
rcr
fildll
scas
and
xor
test
mov
add
adc
in
aam
inc
and
jbe
fnstsw
icebp  
scas
je
jp
data16 ror
(bad)  
push
(bad)  
pop
xchg
xor
or
out
xlat
in
pushf  
cltd   
mov
aaa    
dec
icebp  
test
add
hlt    
dec
sub
mov
lock ficompl
lds
fdivl
arpl
pop
repnz movsl
fdivrs
inc
dec
ljmp
(bad)  
int
or
leave  
out
add
jp
cmpsl
negb
mov
xchg
mov
add
xchg
sti    
jl
mov
cmpsl
lcall
hlt    
ret
(bad)  
int3   
cltd   
bts
jb
(bad)  
adc
mov
dec
add
cmpsl
jo
scas
mov
mov
sub
push
xchg
sub
ret
or
mov
or
andb
mov
lds
dec
sbb
hlt    
mov
out
arpl
add
repnz
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
or
out
xchg
jg
add
inc
lahf   
push
(bad)  
enter
pop
mov
xor
(bad)  
mov
das    
test
mov
mov
or
or
loop
(bad)  
out
(bad)  
leave  
(bad)  
ss scas
bound
xor
clc    
mov
push
dec
dec
add
and
ds dec
dec
les
or
jle
xchg
cmp
mov
xchg
adc
imul
lds
add
adc
stos
lret
gs dec
or
movsl
pop
stc    
repz mov
rcl
loope
dec
mov
mov
add
scas
data16 xor
mov
ljmp
add
fs lret
push
ljmp
cmc    
(bad)  
mov
test
sbb
inc
stos
rcll
push
fidiv
pop
push
push
verr
inc
and
xchg
or
int3   
mov
cmpsl
arpl
mov
push
bound
(bad)  {z}
fcoml
inc
dec
ljmp
(bad)  
int
and
gs call
loop
mov
in
cld    
in
(bad)  
xchg
scas
push
(bad)  
decl
fimull
fsubr
(bad)  
xor
mov
sar
insb
push
inc
xchg
inc
inc
or
mov
loop
pop
in
lcall
push
mov
xchg
cld    
mov
fnstsw
scas
ss scas
or
int3   
sahf   
loop
push
push
in
inc
les
adc
repnz adc
js
bound
out
ja
sub
dec
ljmp
(bad)  
int
imul
cmpsl
mov
xor
push
jb
sub
push
paddsw
cltd   
sbb
jno
inc
gs mov
xor
pop
cmpsb
in
es jns
lds
clc    
loop
jnp
mov
repz je
xchg
sub
cmpsb
(bad)  
or
mov
xchg
add
mov
jae
xchg
gs cli 
push
add
mov
inc
clc    
ret
testb
je
(bad)  
mov
scas
cltd   
add
inc
ljmp
das    
rolb
outsl
mov
add
mov
enter
pop
jecxz
repnz and
adc
and
dec
and
lock dec
mov
in
jmp
sub
lret
test
xor
inc
std    
bound
jmp
sub
lret
inc
xor
inc
std    
bound
ljmp
jp
jb
repz in
jg
bound
out
ljmp
repnz out
pop
rorb
push
rcll
pop
lods
repz enter
cmp
xlat
ljmp
js
fsubr
xchg
inc
popf   
jo
inc
pop
jg
mov
push
aas    
and
stc    
lods
mov
inc
dec
mov
pusha  
pop
sub
aam
mov
fdivs
lock hlt 
aad
mov
test
shlb
repz leave 
jmp
xorb
xlat
shll
adc
mov
lds
mov
mov
jg
or
xchg
test
arpl
test
(bad)  
cltd   
fmuls
fmuls
and
stos
ds dec
jmp
clc    
shrb
xor
xor
sti    
outsb
lret
sarl
mov
aam
dec
add
shlb
push
lea
mov
add
rolb
ret    
mov
sbb
cmp
pop
and
and
out
or
cmp
mov
sbb
test
mov
mov
jbe
out
fistp
jg
mov
xor
dec
es pusha 
inc
fildl
(bad)  
fisttpl
and
xor
movsb
les
mov
orl
jns
mov
xchg
in
and
ds mov
jle
and
dec
add
jno
or
(bad)
cld    
lods
or
dec
push
stos
lret
in
test
jo
jns
jmp
repz pop
call
adc
loop
hlt    
imull
pusha  
inc
xchg
sbb
(bad)  
es pop
push
lds
cmp
mov
(bad)  
jmp
icebp  
cwtl   
xchg
xchg
sub
and
lock sbb
and
in
push
mov
hlt    
xor
std    
mov
fstp
loop
sbb
nop
jno
cmp
addl
adc
inc
sub
(bad)  
jecxz
sbb
mov
loop
push
push
lret   
adc
mov
mov
fnop   
sub
stos
or
lret   
mov
inc
dec
adc
aaa    
dec
stc    
mov
daa    
mov
mov
cld    
lods
cmp
cli    
dec
mov
jecxz
push
es pop
push
lds
cmp
mov
es into 
iret   
in
loope
stc    
std    
xchg
out
(bad)  
test
sarb
pop
test
fwait
xchg
pop
pusha  
lea
sbb
arpl
mov
lock ret
in
rorl
jle
repnz fisttpll
sub
or
shll
jp
icebp  
stos
iret   
sbb
mov
test
lods
push
mov
add
jg
leave  
xor
les
jecxz
fucomip
out
addr16 sub
fiadd
xchg
sub
ds inc
jle
mulb
xor
dec
std    
aas    
xor
xchg
push
leave  
pop
iret   
fdiv
mov
out
xlat
iret   
dec
pop
ljmp
mov
out
xlat
iret   
fmull
pop
fisubr
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
add
push
paddusb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
push
int
jae
test
adc
fdiv
mov
out
xlat
pop
das    
dec
jmp
(bad)  
bound
jne
xor
cltd   
leave  
bound
xchg
fiaddl
(bad)
inc
push
add
xlat
iret   
fdiv
mov
jp
add
jl
inc
mov
mov
out
xlat
ja
push
in
sub
cmp
hlt    
mov
out
xlat
iret   
fsubrl
push
fadd
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
addr16 cli 
push
jecxz
pop
mov
xor
mov
out
xlat
iret   
fdiv
scas
ret    
cli    
sbb
leave  
add
imul
iret   
fdiv
mov
out
scas
inc
insb
fsubs
pop
or
pusha  
movsb
sbb
nop
(bad)  
sub
mov
lret   
ss mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
subl
jp
orb
sbb
pop
aaa    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jp
xor
fsubl
or
hlt    
mov
out
xlat
iret   
hlt    
cli    
ljmp
mov
out
xlat
iret   
fdiv
pop
lret
lret   
dec
jne
stos
je
cmp
push
jl
xor
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
fstpl
push
jp
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubrl
ja
xchg
pusha  
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
arpl
(bad)
sbb
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sub
xor
xchg
push
push
(bad)  
cmp
(bad)  
out
xlat
iret   
fdiv
xchg
push
mov
lahf   
mov
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
sub
lea
xchg
lods
and
lea
(bad)  
test
or
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
push
sbb
or
adc
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
push
hlt    
jl
push
push
push
or
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivrl
inc
out
sbb
repnz
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
sbb
loop
jle
pop
insb
cmp
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
movsl
cmp
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
call
cmp
daa    
sub
es adc
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
faddl
daa    
leave  
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
outsl
cmpsb
fsubl
push
inc
jnp
pop
rolb
das    
ss jns
ljmp
mov
imul
xor
or
pop
fidivrl
jl
addr16 ss cltd 
imul
xor
sarl
hlt    
in
iret   
leave  
mov
dec
cs dec
or
addl
xchg
mov
mov
insb
loop
dec
lcall
inc
movsb
lods
adc
inc
les
push
andl
ds mov
sub
pop
in
aad
mov
dec
xchg
jns
loopne
ds pop
cmp
mov
mov
or
add
xor
pop
jecxz
lock
mov
and
xor
cmp
sbbl
loop
(bad)  
scas
inc
and
scas
xorl
(bad)  
mov
mov
fistp
jmp
clc    
(bad)  
test
jb
jo
lock fbstp
jb
sahf   
pop
sub
and
scas
in
push
cmp
scas
fildl
dec
mov
mov
add
scas
lcall
cmp
mov
and
jp
jmp
stos
aas    
outsl
cmpsb
in
pusha  
xchg
lods
mov
pushf  
aaa    
lret   
jb
pop
ret
mov
outsl
insb
pop
mov
jae
or
sub
mov
and
ds pop
(bad)  
dec
mov
subl
lock adc
dec
add
out
lods
push
(bad)  
jge
pop
nop
inc
leave  
mov
fisttp
fcmove
push
(bad)
xchg
sub
and
push
mov
iret   
icebp  
jle
adc
xchg
pop
fnstenv
scas
rcrl
mov
inc
xchg
mov
jns
ljmp
jne
xchg
inc
jb
popa   
jge
stos
cmpsb
mov
stc    
lds
call
push
rorb
pop
fnop   
frstor
rol
dec
cltd   
push
(bad)  
int3   
js
dec
mov
ret
ds inc
dec
ljmp
(bad)  
int
xchg
rcr
enter
xchg
pop
adc
mov
mov
lahf   
scas
aas    
lcall
add
test
stc    
lds
add
(bad)  
xor
int3   
sarl
xchg
sbb
fs mov
push
jo
out
loop
mov
mov
sub
bound
movsl
push
mov
sub
ficompl
flds
xchg
dec
jno
sbb
movsb
lcall
add
inc
or
xchg
mov
stos
pop
dec
and
xor
push
fs ret
cmpsl
stos
andl
jecxz
fldt
push
enter
sub
mov
push
mov
pop
loope
enter
mov
(bad)  
iret   
shrb
sbb
out
mov
push
and
rcll
inc
call
push
mov
push
jecxz
in
dec
enter
dec
dec
ret
cmp
sub
cmp
xorb
xchg
dec
sub
sti    
test
xor
lods
sub
popf   
dec
(bad)  
cmp
fcoms
cmp
cmp
lods
lds
inc
dec
subb
xchg
rolb
and
sbb
pop
sbb
scas
lret   
shlb
push
in
fst
mov
repz
std    
dec
pop
mov
aas    
stos
(bad)  
xchg
jo
and
idivb
jecxz
(bad)  
loope
lods
jnp
push
inc
mov
js
(bad)  
ja
mov
xchg
jnp
(bad)  
mov
and
sbb
into   
pushf  
popf   
xor
ja
sarb
xor
inc
ja
sub
sbb
push
mov
addl
sub
ds dec
mov
mov
xchg
mov
lods
(bad)
test
jp
pop
mov
sub
scas
outsl
es cs enter
push
das    
dec
cmp
xchg
push
cltd   
scas
btr
fnstenv
clc    
or
dec
clc    
xor
pop
xchg
ret
insb
int
sti    
(bad)  
into   
pop
ret
hlt    
jns
(bad)  
sub
ja
push
lods
ret
(bad)  
cwtl   
sub
push
aad
inc
sti    
ds pop
sar
lods
incl
fs or
mov
pop
dec
mov
add
aam
xchg
xchg
pop
test
arpl
fcompl
(bad)  
int3   
imulb
(bad)  
iret   
movsb
jbe
push
xchg
xchg
(bad)  
sub
das    
dec
xchg
xlat
cmpsl
or
(bad)  
ret
cmp
gs dec
out
out
dec
aaa    
xchg
add
or
jl
movl
orb
adc
outsb
mov
pusha  
inc
xor
cmp
jno
xorl
ss clc 
scas
adc
or
test
fnop   
cmp
jp
movsl
addb
push
lock mov
cmpsl
sub
inc
rol
notl
imul
jnp
xor
sbb
pop
inc
pop
shr
(bad)  
jmp
or
xlat
movsl
sbb
sahf   
or
jg
mov
stos
sbb
lret   
xor
dec
xchg
getsec 
sbb
imul
cld    
xchg
and
mov
shrb
mov
fcompl
fldenv
sub
shrb
inc
das    
aad
adc
sti    
inc
imulb
cld    
cli    
into   
xchg
aad
aad
(bad)
add
sti    
xlat
leave  
push
iret   
sbb
adc
pop
add
and
into   
xchg
jo
ja,pn
sbb
xor
sbb
fdivl
pop
add
in
sub
dec
call
add
add
(bad)  
int3   
js
gs mov
and
xlat
sar
push
cmc    
sbb
lret   
xor
imul
cs cli 
push
fnstenv
push
fsubr
lods
push
lret   
xor
mov
fneni(8087 only) 
sub
lcall
in
out
push
hlt    
cs cli 
movsb
sar
cmp
aam
shrb
imul
sbbl
mov
mov
xchg
push
mov
xchg
fildl
cmc    
dec
fbld
mov
stc    
mov
imul
adc
inc
xor
adc
fdivrs
int3   
enter
(bad)  
push
js
or
data16 incb
loop
xor
push
sbb
in
sbb
jl
mov
dec
mov
(bad)
adc
aad
jle
mov
add
aad
in
fldl
add
fimul
xor
push
out
int3   
add
mov
sbb
cmpsb
jmp
in
adc
xlat
mov
pop
xchg
xor
loope
jl
gs cli 
push
in
and
sbb
fnstcw
ss clc 
in
jmp
test
xchg
jns
imul
pop
popa   
fsubrl
dec
in
sbb
daa    
outsb
out
push
sub
cmpsl
xchg
in
jmp
out
out
mov
pop
dec
leave  
pop
ffreep
inc
push
mov
xor
dec
sbb
aaa    
dec
loope
xor
(bad)  
lods
push
lret   
xor
and
push
out
dec
mov
mov
add
scas
xabort
(bad)
(bad)  
or
aad
and
pop
xor
faddl
mov
mov
stc    
outsb
rolb
je
push
jno
or
fsubl
hlt    
roll
aam
sub
sub
cld    
or
add
mov
add
je
jmp
dec
pop
inc
iret   
(bad)  
(bad)
cld    
aas    
dec
cltd   
xor
aaa    
or
or
jge
adc
cwtl   
sub
ss clc 
cmpsl
adc
sub
cli    
jg
mov
push
fcmovne
cli    
adc
mov
ss push
bound
ret    
dec
popf   
lock xor
outsb
ljmp
push
loope
inc
mov
xchg
enter
popw
inc
cmp
data16
(bad)  
cmc    
xchg
add
jnp
cmc    
nop
fistl
fisubl
loopne
xchg
jae
dec
(bad)  
scas
(bad)  
aaa    
(bad)  
gs or
(bad)  
repz
loope
inc
mov
mov
js
gs aam
arpl
mov
xor
adcl
fstps
into   
mov
mov
daa    
sub
pop
or
inc
stc    
shl
dec
xchg
adc
inc
mov
sub
js
dec
mov
out
leave  
verr
dec
inc
ja
fwait
ljmp
push
ja,pt
xchg
dec
pop
data16 stc 
cltd   
pop
push
adc
ds pop
out
imulb
sbb
pop
test
pop
ret
mov
fcmovnbe
cwtl   
adc
loop
into   
mov
fcmove
dec
or
movsb
stos
and
or
dec
icebp  
sub
xchg
push
extrq
sahf   
lods
mov
jb
es fdivrp
call
mov
cmpsl
and
xchg
push
iret   
push
scas
mov
cmp
test
xchg
in
add
xor
daa    
adc
dec
in
and
adcl
adc
(bad)  
sub
xchg
jne
and
iret   
movsb
lds
cmc    
repnz pop
and
add
xor
jno
je
mov
mov
(bad)  
push
push
movsb
fdivr
dec
push
push
sbb
int3   
into   
dec
jmp
xchg
xor
push
push
or
pusha  
push
rcrl
inc
vzeroupper 
outsb
xchg
cmpsb
(bad)  
hlt    
jb
mov
dec
dec
out
lret
mov
pusha  
mov
push
pop
cld    
(bad)  
stos
mov
pop
cli    
mov
adc
mov
mov
iret   
push
sbb
hlt    
cld    
in
arpl
outsl
mov
cmp
cld    
mov
mov
jns
jno
xor
and
ficompl
pop
jo
and
mov
pop
xchg
enter
mov
movsb
jmp
jno
xchg
ficompl
cmpsl
sahf   
ficompl
mov
sbb
ja
fcomps
das    
in
inc
push
call
daa    
enter
mov
js
in
xchg
cmpsl
fdivr
mov
insb
mov
fstpl
sub
mov
xlat
sub
dec
hlt    
sbb
rolb
cmpb
and
mov
pop
xchg
mov
movsb
dec
in
pushf  
(bad)  
adc
or
dec
fs fcmovne
inc
and
push
shlb
push
lds
sbb
(bad)  
fsubrs
sti    
push
cltd   
mov
pop
push
mov
mov
or
or
out
lods
scas
mov
jnp
std    
cmp
adc
adc
xchg
sbb
dec
xor
imul
subb
push
dec
rorl
cli    
mov
cltd   
mov
pop
push
mov
mov
or
ficom
(bad)  
aas    
aas    
out
fsubrs
popf   
cmp
adc
mov
loope
(bad)
mov
xor
and
sub
cmp
insb
mov
or
mov
rcrb
mov
jge
in
ja
aam
and
(bad)
mov
fsubrs
dec
mov
add
mov
and
add
or
mov
fstps
mov
xchg
sarl
pop
mov
xor
xsha256
cmpsb
shll
sbb
push
int
lea
jnp
rorl
xchg
mov
adc
cmp
cli    
inc
push
mov
xchg
pop
pop
(bad)  
out
or
xor
repz adc
lods
pushl
lret   
pop
inc
jae
fs cmp
mov
(bad)  
ljmp
jb
jmp
cmp
push
stos
adc
and
ret    
or
jne
lret   
jb
lea
xchg
leave  
pop
push
mov
fcompl
cmp
out
add
mov
stc    
add
or
lahf   
mov
sub
movsl
loopne
lods
or
inc
dec
sbb
pop
decb
xor
(bad)
popf   
mov
xchg
add
xchg
mov
out
push
jbe
jb
nop
dec
mov
adc
push
lds
cmp
sub
es pop
mov
dec
or
subl
cli    
inc
fistpll
mov
out
xchg
call
or
xor
sahf   
(bad)
fs pop
or
subl
cli    
inc
ret    
xor
(bad)  
jne
mov
call
push
(bad)  
jbe
mov
jl
push
xor
sub
pop
mov
inc
lret   
lods
lods
jmp
imul
or
mov
jnp
popf   
in
cmp
cwtl   
mov
add
(bad)  
fisubrl
pop
in
fnstsw
jnp
jns
rorb
fidiv
test
in
sbb
sub
cmp
(bad)  
(bad)  {z}
fisttp
dec
xor
xchg
leave  
xchg
into   
jecxz
xor
mov
bound
hlt    
pop
int3   
fisub
in
fdivs
ljmp
das    
(bad)  
jp
cmp
popa   
pop
lock jmp
or
jp
dec
negl
xchg
adc
pop
sub
adc
add
popf   
or
xor
lea
sbb
jp
in
mov
gs insb
mov
aaa    
jl
sbb
int3   
push
jg
sti    
sub
movsb
xchg
movsb
cltd   
cli    
push
mov
(bad)  
sub
stos
les
jb
lea
add
repz ja
pusha  
and
ret
adc
mov
jmp
push
jo
mov
ljmp
das    
jae
sarl
and
adc
xlat
cmp
xchg
in
pop
jmp
cmp
push
stos
and
in
es
out
dec
dec
insl
dec
cmpsb
das    
add
orl
aam
addr16 xchg
and
pop
xchg
sarl
pop
cmp
out
loop
adc
jns
insb
sub
xor
andb
pop
xchg
sarl
pop
adc
sub
imul
xchg
cmc    
adc
xchg
int3   
push
dec
shr
or
jge
cmpsl
cltd   
fldcw
push
xchg
rcr
push
xchg
cmp
dec
mov
aad
push
jecxz
es pushf 
xchg
or
inc
cltd   
rcr
sub
jae
decl
aaa    
cmp
not
jp
pop
ret
sub
sti    
ljmp
sub
jae
decl
mov
(bad)  
imul
jp
sbb
xchg
divb
xlat
cmpsl
out
lcall
dec
jp
sbb
(bad)  
jo
and
(bad)  
js
pop
xchg
(bad)  
test
rol
add
xchg
les
and
ret    
or
and
cld    
in
pop
dec
dec
and
sub
adc
xor
dec
cwtl   
mov
jp
aad
jp
lds
push
(bad)  
ja
test
aaa    
sti    
(bad)  
data16 jne
and
(bad)  
dec
jns
add
sbb
sub
inc
insl
pop
inc
sub
aas    
sub
iret   
je
test
cmp
inc
and
or
loope
nop
lcall
push
push
add
cmp
js
aaa    
sub
pop
jbe
shl
dec
push
xchg
je
adc
add
pop
fstpt
es jo
aaa    
sub
jecxz
cmovb
push
push
jnp
movsb
mov
pop
fstpt
jo,pn
aaa    
ds inc
jns
mov
jg
fmull
push
mov
push
mov
fwait
xchg
(bad)  
xchg
call
cld    
sub
(bad)  
mov
std    
ds call
fisttpll
jbe
jp
push
inc
outsl
inc
or
out
rol
mov
jns
sub
cmpsl
mov
test
shll
sub
jbe
dec
inc
mov
jp
lds
dec
ret
pop
aam
cmp
dec
aaa    
sti    
inc
mov
(bad)  
sub
inc
or
(bad)  
xor
divb
push
cwtd   
jp
inc
int3   
(bad)  
push
lds
insl
and
add
lahf   
decb
mov
xchg
mov
xchg
fld
sub
cmpsb
inc
xor
pop
lahf   
sub
xchg
sub
mov
sbb
rolb
cmpb
and
mov
jae
lock fsubrs
push
aas    
out
jo
mov
dec
jp
or
leave  
push
mov
sub
rcr
mov
call
fnstsw
adc
xchg
jp
test
imul
fsubrs
sti    
push
cltd   
mov
pop
push
pushf  
stos
mov
lds
xchg
js
xchg
sarl
pop
push
xchg
nop
and
add
lods
aad
movsb
mov
cmp
jo
aaa    
in
mov
or
ret    
mov
in
jnp
pusha  
es sub
mov
jb
add
xchg
pop
icebp  
aas    
lea
add
adc
sbb
jbe
in
cmp
sbb
aaa    
sub
sbb
dec
ds fldz 
out
push
(bad)
mov
xor
out
(bad)  
ucomiss
jecxz
xor
dec
shll
or
popa   
push
or
jl
sbb
int3   
push
out
pop
and
add
and
add
out
das    
add
mov
psubsb
into   
sub
push
or
out
aaa    
fcoms
in
stc    
push
ss repz clc 
gs hlt 
test
sbb
int3   
push
test
iret   
shrl
pop
nop
cmp
das    
add
mov
pmaxsw
movsb
adc
mov
sbb
(bad)  
sub
stos
outsl
sub
jbe
push
(bad)  
popa   
shrl
mov
jb
int3   
push
jmp
add
or
cmp
out
cli    
xchg
add
pop
dec
push
lds
push
and
cli    
xchg
add
jp
adc
out
icebp  
pop
cmpsb
(bad)  {z}
aam
mov
xlat
sub
cmp
add
fistp
lds
arpl
push
(bad)  
mov
adc
xchg
add
je
xor
aaa    
je
pop
xchg
sarl
pop
movsl
xor
cmp
out
inc
adc
inc
inc
or
out
dec
in
iret   
sbb
insl
inc
in
cmp
fisub
lret   
or
mov
mov
or
adc
in
cmp
aad
inc
pusha  
fstpt
stc    
cmp
in
mov
popf   
push
ret
fwait
aaa    
rcrl
rorb
cmp
out
jns
adc
push
lds
outsb
movsl
popf   
or
inc
push
adc
ljmp
popf   
sti    
xlat
stos
push
pop
inc
call
fisttpl
mov
add
mov
(bad)  
mov
sbb
xchg
cmpsl
mov
repz inc
xor
ffreep
pop
cs into 
jecxz
xor
call
les
mov
pop
mov
jno
leave  
xor
add
incl
scas
ss inc
sbb
arpl
iret   
movsl
scas
inc
in
cmp
or
lock mov
cmp
outsl
addl
pop
add
and
out
outsb
pusha  
jp
call
cld    
sub
rcrl
sbb
mov
jns
aad
jp
lds
cmp
cmpsl
bound
push
out
fiaddl
jns
inc
(bad)  
loopne
(bad)  
sbb
push
lds
xchg
add
jno
pop
dec
enter
nop
mov
jp
xor
cltd   
sbb
xchg
test
fstpt
sbb
ss in
mov
cmpsl
iret   
sarb
pop
repnz mov
dec
xlat
xchg
addr16 mov
sbb
scas
or
fxch
aas    
(bad)  
push
fistpl
push
rorl
cs into 
jecxz
xor
call
les
cmpsl
jmp
roll
das    
shrl
mov
jb
dec
in
pop
aas    
jns
aad
jp
vmovq
dec
mov
xchg
hlt    
adc
xchg
fdivrl
sti    
pop
fstpt
jno
ss in
mov
inc
push
sarb
fwait
sub
fmull
jmp
sbb
cmp
popa   
repz addr16 cmp
outsl
or
lea
push
scas
cmp
cs clc 
ret    
inc
leave  
dec
iret   
shl
mov
imulb
lret   
or
adc
sahf   
mov
push
mov
ds add
or
pop
mov
mov
mov
mov
ret
jno
call
inc
jno
dec
shl
push
les
rdpmc  
sbb
or
inc
sbb
pop
adc
outsl
or
test
dec
cs das 
(bad)  
xor
cmpsl
aas    
pop
imul
jns
aad
jp
(bad)  
mov
test
les
cld    
sub
rcll
pop
movsb
push
daa    
jns
aad
jp
(bad)  
pop
lods
mov
in
mov
aas    
cli    
dec
jbe
icebp  
call
scas
jbe
(bad)  
add
pop
mov
test
push
rcrl
sbb
loop
push
pand
dec
bound
push
xchg
cs into 
jecxz
xor
fs in
les
inc
jmp
fisubrl
(bad)  
jno
test
je
fisttpll
inc
pop
jns
push
shlb
cmovae
es sub
xor
lret   
pop
and
clc    
xchg
sub
pop
call
(bad)  
das    
xor
jns
jle
ficom
cmp
xchg
mov
jmp
push
aam
test
sti    
das    
sti    
cmp
pop
sbb
movsl
sub
mov
add
jmp
cmp
or
ret
out
mov
sbb
dec
jp
cmp
(bad)  
and
adcb
sub
into   
mov
pop
mov
or
mov
and
ss xor
pop
jg
jl
ror
xchg
outsl
inc
aas    
call
or
mov
jae
(bad)  
arpl
mov
mov
inc
stos
and
in
cld    
pop
out
dec
sub
fs
cmpsb
mov
xchg
out
fldl
js
cs dec
adc
mov
(bad)  
iret   
mov
jp
outsl
scas
int
cmp
lock fcomip
mov
sub
test
sahf   
sbb
aaa    
and
mov
push
movsl
aaa    
out
xlat
pop
and
jp
icebp  
stos
iret   
add
les
jnp
adc
jb
xchg
sahf   
and
jp
cmc    
test
sbb
fisub
fcoml
lock
hlt    
iret   
(bad)  {z}
out
int
int3   
mov
aaa    
dec
stc    
mov
xor
mov
les
or
in
xlat
or
cmc    
mov
std    
or
pop
(bad)  
lock fdivl
jnp
xchg
lret   
cli    
lcall
or
in
aam
adc
(bad)  
fwait
sub
and
mov
fnstsw
out
xlat
pop
and
jp
icebp  
stos
iret   
pop
dec
mov
cwtl   
fistpll
adc
(bad)  
lahf   
xlat
pop
and
jp
icebp  
stos
iret   
sbb
mov
test
lods
sarb
adc
call
mov
or
push
into   
fdivrl
jo
mov
cmp
sub
mov
jmp
out
sahf   
fisubrl
aaa    
and
mov
sahf   
sahf   
mov
or
in
iret   
add
in
dec
iret   
(bad)  
out
jl
and
bound
scas
mov
or
gs stos
repz fadd
inc
(bad)  
sbb
hlt    
popf   
cmp
sub
cwtl   
repnz testl
mov
(bad)  
lcall
mov
aaa    
mov
mov
xor
clc    
xchg
cmpsl
int
mov
cmp
sub
mov
dec
add
push
mov
out
negb
xor
dec
adc
aaa    
dec
stc    
mov
enter
popf   
pop
jnp
les
and
jge
in
xlat
push
cwtl   
mov
mov
jp
gs stos
repz fdivl
jae
(bad)  
gs xor
hlt    
popf   
cmp
sub
dec
(bad)  
xchg
loop
aad
fwait
sub
and
mov
in
or
xlat
pop
and
jp
icebp  
stos
iret   
and
pop
std    
les
pushf  
aad
hlt    
popf   
cmp
sub
push
test
lds
iret   
fcoml
enter
jnp
pop
dec
and
jp
jmp
xchg
or
aaa    
and
out
add
adc
stos
(bad)  
(bad)  
mov
inc
jne
or
data16 ror
fadd
dec
fisubl
and
retw
ds mov
sub
dec
icebp  
test
aas    
imul
dec
jnp
adc
jnp
aas    
jae
or
in
stos
iret   
and
pop
aas    
(bad)  
iret   
fcoml
enter
(bad)  {z}
out
aam
shl
mov
mov
jp
arpl
icebp  
fsubl
xchg
shr
int
rcr
lds
pop
and
jp
jmp
mov
and
mov
call
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
psubw
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
fadds
xchg
dec
(bad)  
sti    
pop
inc
or
lret
rorb
inc
das    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
scas
jecxz
or
(bad)  
(bad)  
xlat
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
adc
cmp
fmull
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
fistpl
push
pop
out
mov
cld    
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cli    
mov
hlt    
rol
xchg
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
test
dec
xlat
lahf   
mov
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
xchg
pusha  
xor
(bad)  
mov
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsub
xlat
or
pop
iret   
sbb
lret
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
mov
(bad)  
es push
aaa    
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
adc
cmp
fadd
or
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
pop
dec
adc
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
ljmp
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
daa    
or
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
push
pop
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
xor
loop
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
outsb
xlat
dec
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivrl
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
inc
iret   
insb
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
and
push
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
outsl
pushf  
adc
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
pushf  
je
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
addr16 cmovl
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
aam
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
(bad)  
incl
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
mov
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cs push
or
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
daa    
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
push
enter
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
sub
push
aam
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
(bad)  
pop
mov
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
in
xchg
lcall
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
cs push
pmaxub
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
xor
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
aaa    
lea
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
push
dec
ror
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
out
xchg
xchg
test
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
lsl
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
pushf  
ja
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
into   
stos
xchg
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
repnz xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xor
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
ljmp
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
scas
sbb
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
or
int
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
in
fwait
xchg
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
scas
push
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdivl
not
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
pop
inc
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
fidivrl
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
lahf   
cmpsb
nop
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
mov
mov
push
add
mov
xor
inc
gs pop
insl
jae
xor
call
xchg
(bad)  
(bad)  
lods
mov
mov
jns
cmp
scas
neg
aaa    
test
out
xlat
iret   
fdiv
mov
out
xlat
int
(bad)  
mov
ljmp
out
xlat
iret   
fdiv
mov
out
ljmp
xchg
and
push
push
fmul
xor
pop
je
xchg
in
mov
je
inc
outsb
push
paddsb
je
std    
push
nopl
jo
push
dec
hlt    
mov
or
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
fadd
adc
mov
mov
loopne
mov
jecxz
mov
nop
scas
mul
mov
jecxz
mov
xchg
stos
lock loopne
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
data16 mov
hlt    
mov
insl
add
xlat
iret   
pop
hlt    
or
cs push
paddusb
fdiv
mov
out
aam
fdivp
test
out
ror
fdiv
xor
imul
pusha  
adc
lret
lea
ret
mov
mov
shll
pop
sti    
sbb
gs mov
test
lock mov
add
xor
add
out
gs sub
cli    
cmp
fnstenv
jbe
mov
pusha  
xor
and
loop
push
sub
(bad)  
sub
cmp
push
lds
xor
jo
das    
loopne
icebp  
jl
pop
leave  
inc
leave  
ja
fs lock jae
aas    
and
stos
flds
add
xchg
outsb
xchg
leave  
mov
scas
(bad)  
pushf  
pusha  
stos
lock addr16 add
loop
iret   
(bad)  
loopne
mov
sahf   
mov
(bad)  
mov
(bad)  
aam
jecxz
(bad)  
movsl
mov
fidivrl
cmp
paddusb
sub
leave  
fdiv
mov
out
ror
fcomip
mov
out
xlat
repz fdivr
mov
out
xlat
iret   
(bad)  
pop
out
xlat
iret   
fcompl
dec
sbb
xlat
iret   
fdiv
out
rcl
iret   
fdiv
mov
push
iret   
fdiv
mov
push
lods
fidivl
mov
out
outsl
jmp
out
xlat
out
add
xlat
iret   
test
test
xlat
iret   
fadd
push
(bad)  
pop
iret   
fdiv
push
das    
push
cmpsl
paddusb
mov
jecxz
sbb
mov
jle
pop
in
xor
(bad)  
out
out
std    
js
lret
xlat
addr16 push
js
pop
out
xlat
iret   
adc
inc
(bad)  
xlat
iret   
fdiv
cmp
stc    
pop
iret   
fdiv
push
test
cmpsb
paddusb
mov
addr16
ficompl
mov
bound
(bad)  
out
cmp
out
xlat
add
xchg
pop
out
xlat
iret   
or
(bad)  
xlat
iret   
faddl
fdiv
inc
mov
rorb
fdiv
mov
sti    
ret    
sbb
mov
outsb
pop
mov
xor
(bad)  
out
xlat
iret   
fdiv
lcall
data16 cmp
iret   
mov
jp
add
xchg
fidivr
rcrb
dec
mov
ds mov
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fmul
add
jb
dec
fdiv
mov
aaa    
rorb
fdiv
mov
gs call
rcr
aaa    
and
ljmp
xchg
into   
lock mov
xorl
adcl
fldenv
mov
arpl
shlb
sbb
test
sub
test
sahf   
fimull
sti    
pop
mov
jecxz
arpl
cmp
test
sub
loope
dec
dec
mov
(bad)  
fninit 
inc
arpl
adc
call
cmc    
test
out
xlat
into   
(bad)  
cmc    
mov
out
aam
fcomip
test
fs xchg
mov
popa   
push
stc    
subb
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
imulb
dec
int
hlt    
mov
out
xlat
iret   
fdiv
mov
popf   
push
or
pcmpeqb
adc
aaa    
and
jnp
out
xlat
enter
shr
iret   
(bad)  
(bad)  
xor
dec
(bad)  
out
xlat
dec
sbb
lret
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
fidivl
js
add
loope
pop
sub
push
push
ss mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
(bad)  
mull
push
adc
shll
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
shrb
iret   
fsubrl
pop
hlt    
mov
lods
xchg
or
mov
je
inc
lret
sahf   
mov
xor
mov
inc
(bad)  
out
xlat
mov
push
dec
mov
push
iret   
pop
movsb
pushf  
in
test
paddusb
lea
sub
loope
push
xchg
je
push
adc
cmp
icebp  
into   
mov
(bad)  
fwait
sub
jp
mov
sub
add
subl
mov
and
jne
and
jae
cltd   
mov
stos
lahf   
in
jg
add
inc
mov
cmpsl
jb
stos
test
dec
sti    
ljmp
sub
leave  
mov
test
test
call
fdiv
popf   
pop
sub
mov
ljmp
lret
fwait
pop
mov
mov
(bad)  
(bad)  
jl
push
adc
repz mov
xchg
xlat
lock mov
loope
stos
adc
(bad)  
adc
push
xchg
xor
(bad)  
popf   
xchg
lea
scas
push
nop
movl
jl
cmp
dec
push
fstpl
and
xorl
(bad)  
mov
and
ljmp
xchg
or
negl
and
mov
fwait
addr16 iret 
mov
jl
or
dec
add
push
sahf   
xorb
lds
sbb
jmp
nop
or
sti    
popf   
sub
loope
(bad)  
or
inc
xor
(bad)  
fwait
pop
iret   
ret
mov
js
notl
sub
push
(bad)  
jne
pop
not
xchg
jl
mov
add
cld    
popf   
fwait
daa    
mov
push
hlt    
mov
jp
or
cmp
into   
mov
mov
adc
mov
xlat
dec
fsubrl
pop
hlt    
mov
inc
push
(bad)  
jbe
xchg
aaa    
mov
pushf  
clc    
or
xor
xchg
mov
mov
mov
xlat
popa   
lods
dec
arpl
jno
insb
xlat
sarb
xlat
js
pop
cmp
hlt    
dec
subb
mov
sub
(bad)  
sahf   
nop
jg
mov
popf   
out
scas
xor
xlat
out
fcomps
mov
(bad)  
iret   
lock adc
hlt    
mov
out
(bad)  
leave  
(bad)  
mov
out
xlat
iret   
fdiv
test
ljmp
icebp  
stos
lock shl
mov
fdiv
popf   
cmp
sub
out
xlat
iret   
fcomip
mov
shl
mov
mulb
mov
std    
mov
cli    
mov
lock xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
xchg
in
mov
rdpmc  
xchg
xchg
iret   
fdivl
out
xlat
dec
fdivl
outsb
push
iret   
fdivl
out
xlat
iret   
pop
je
inc
out
push
iret   
pop
xor
(bad)  
cs cmp
dec
hlt    
mov
pop
and
popa   
(bad)  
out
jl
and
je
gs jl
and
jnp
adc
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcoml
cmpsb
fdiv
out
add
movsl
jno
movsl
ljmp
mul
(bad)  
mov
out
xchg
dec
pushf  
hlt    
mov
out
adc
dec
or
or
push
push
push
jl
xchg
out
add
push
mov
cmp
aad
stc    
sub
or
notb
int3   
in
dec
pop
push
(bad)  
xor
in
roll
and
lock
out
or
lret   
loopne
aas    
jecxz
or
mov
inc
test
xchg
and
dec
inc
jp
sub
push
push
sub
lahf   
int
dec
push
addr16 popf 
xchg
mov
fistpll
xor
ja
and
add
std    
sbb
cmp
dec
add
lods
jg
out
add
pop
or
cmp
lcall
cmp
rorb
int
dec
xor
inc
dec
mov
inc
add
dec
out
jp
addr16 push
or
inc
mov
or
fstps
sub
out
mov
push
dec
mull
cltd   
jae
inc
pop
adc
stos
xor
cmp
(bad)  
inc
ret
mov
stos
jnp
mov
sub
push
jb
in
push
mov
je
addr16 adc
dec
lds
stc    
pop
call
repnz push
ja
mov
int3   
or
fwait
testb
inc
cmpsl
arpl
pushf  
and
inc
add
es mul
std    
adc
loopne
cmp
jl
(bad)  
pop
ljmp
ja
sbb
repz dec
movsl
or
sbb
jno
jge
imul
fimull
cwtl   
iret   
mov
jmp
cmp
jb
mov
jo
sbb
add
cld    
xor
xchg
test
out
mov
xor
enter
nop
and
push
outsb
rorb
je
inc
xchg
das    
xchg
push
adc
jne
jns
stos
mov
int
movlps
inc
mov
cmp
aas    
xor
push
and
iret   
xlat
adc
mov
push
out
cmpsl
push
mov
(bad)  
and
scas
push
or
test
fwait
inc
mov
mov
jae
xor
push
mov
xchg
lea
nop
loopne
jge
add
mov
je
inc
cmp
ret
push
dec
pop
in
stos
out
dec
inc
jl
xor
insb
push
rcrl
dec
inc
repz push
fsubs
mov
or
sahf   
push
(bad)  
push
aaa    
popf   
mov
jne
dec
hlt    
lods
popa   
xchg
aad
jg
push
lea
mov
push
insl
dec
subl
ljmp
dec
mov
test
push
mov
rcrb
(bad)  
jne
mov
xchg
clts   
out
sub
cmp
mov
rorb
mov
outsb
cmp
sahf   
mov
add
iret   
jb
dec
pop
xchg
jnp
test
push
push
cmpsl
stos
adc
jbe
imul
xchg
fchs   
insl
inc
sub
test
les
xchg
or
or
fmuls
call
adc
xor
lds
push
sbb
jge
push
pop
test
fwait
sbb
dec
aaa    
sbb
ja
iret   
mov
std    
mov
pop
or
je
scas
xchg
js
stos
pushf  
int
adc
lret
push
inc
int
fdivrs
adc
adc
popf   
xor
ror
xor
stos
dec
out
push
xor
or
add
cmc    
push
xchg
fldl
ja
adc
push
inc
adc
cli    
out
icebp  
popf   
js
(bad)  
out
xlat
sti    
mov
(bad)  
jbe
popf   
lahf   
lcall
jge
les
movsl
cmp
jo
mov
sarb
add
ja
out
je
inc
aam
pop
(bad)  
int
lds
cmp
lret
aaa    
mov
(bad)  
or
jae
dec
cltd   
imul
inc
pop
jno
orl
pop
mov
or
int
mov
fnsave
push
jns
inc
out
push
rcrl
insl
xor
or
cmpsb
mov
adc
(bad)  
pop
adc
mov
pusha  
jns
push
jno
xor
pop
(bad)  
pcmpgtd
roll
das    
or
or
stos
or
mov
xchg
dec
push
sbb
fwait
loop
jb
shrl
mov
push
fdivl
hlt    
mov
repnz cmpsb
xor
mov
out
xlat
iret   
pop
mov
push
xor
sbb
ret
dec
sub
iret   
fsubrl
mov
(bad)  
jg
add
jl
adc
jle
pop
notl
and
xor
iret   
stos
adc
lret
or
cs pop
and
pop
add
rcrb
dec
int3   
pop
xchg
arpl
imul
or
mov
ljmp
loopne
push
or
fldenv
jmp
adc
lahf   
ret    
jae
int3   
push
and
push
pop
imul
pop
jo
lcall
gs daa 
iret   
jae
fsubr
and
dec
shrb
dec
cmc    
arpl
mov
jo
lcall
leave  
sahf   
aas    
je
aas    
pop
sub
xor
and
sbb
push
imul
test
sbb
mov
mov
aad
adc
push
(bad)  
fs sbb
or
mov
mov
mov
add
repz pushf 
divb
jle
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
not
into   
(bad)  
(bad)  
mov
out
xlat
iret   
fdiv
mov
cs push
paddusb
lret
xlat
iret   
fdiv
mov
hlt    
mov
outsb
pop
iret   
cld    
hlt    
stos
(bad)  
out
xlat
iret   
fdivr
mov
fdiv
mov
(bad)  
mov
out
xlat
iret   
fdiv
mov
out
ror
fdivp
mov
out
xlat
(bad)  
int3   
cld    
mov
out
xlat
iret   
cmp
ljmp
test
out
xlat
int
testl
xlat
iret   
fdiv
mov
out
sub
out
and
fnstenv
mov
in
(bad)  
repnz scas
icebp  
(bad)  
(bad)  
mov
hlt    
mov
in
and
fnstenv
(bad)  
out
xlat
inc
or
lret
xlat
iret   
fdiv
mov
out
xlat
iret   
fsubl
shrb
iret   
fmull
iret   
fdivp
mov
jmp
mov
call
test
(bad)  
xlat
(bad)  
clc    
mov
hlt    
mov
out
aam
fdiv
mov
in
(bad)  
cs push
paddusb
mov
out
(bad)  
leave  
(bad)  
mov
call
jp
adc
aaa    
dec
cmc    
mov
in
stos
int
testl
xlat
into   
(bad)  
(bad)  
mov
out
aam
(bad)  
mov
out
ror
fdiv
mov
out
ror
fdivp
mov
out
xlat
enter
inc
ja
es mov
jne
addr16 push
fmul
jle
aad
das    
jp
roll
mov
push
es mov
jns
fwait
test
lret   
xchg
cmc    
cmp
rorl
roll
push
loope,pn
outsl
std    
es pop
jge
xor
aam
jp
shl
dec
mov
mov
add
xor
xlat
iret   
fdivl
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
ds
cmc    
test
test
mov
ffreep
call
mov
out
xlat
iret   
fcomip
mov
out
xlat
iret   
faddl
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fmuls
or
test
clc    
test
fdiv
pop
lock jle
popf   
and
jp
sub
(bad)  
or
add
aam
inc
adc
std    
adc
les
sub
dec
aad
andnps
dec
mov
adc
pop
or
gs insl
lahf   
lret
cmp
mov
cli    
jecxz
xor
jp
xor
or
(bad)  
adcl
dec
cmp
cmpsb
adc
fldl
sub
and
xor
or
int
daa    
lret
adc
xor
add
out
add
jbe
jg
out
imul
lds
adc
sbb
sub
inc
aaa    
pop
test
adc
push
and
mov
fwait
lret   
lea
sbb
mov
fdiv
mov
imul
mov
out
xlat
iret   
fdivr
mov
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
mov
ljmp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
je
(bad)  
outsb
xlat
dec
fdiv
mov
out
neg
clc    
mov
in
(bad)  
jmp
cmp
jle
leave  
fdiv
mov
sti    
clc    
aaa    
and
popa   
push
orps
aaa    
mov
iret   
les
iret   
jp
scas
xchg
rolb
and
imul
(bad)  
mov
sbb
into   
xchg
cmpsl
iret   
fdiv
mov
out
call
fisub
call
fmuls
cmc    
les
scas
pop
in
hlt    
iret   
hlt    
xor
aas    
mov
jb
pusha  
dec
cmpsb
add
xchg
and
sbb
add
and
das    
pop
pop
add
ret    
in
icebp  
cltd   
dec
push
mov
ret
dec
mov
jmp
jb
addr16 push
jge
xor
xor
mov
xchg
shlb
xchg
outsb
sub
leave  
xchg
fiaddl
jp
movsl
and
mov
(bad)  
or
out
add
loopne
pop
xchg
movsl
shrb
jno
js
ljmp
outsl
outsl
xor
xchg
lds
jle,pt
les
lock inc
repz scas
push
push
cld    
push
out
pushf  
xor
cmp
in
sub
arpl
cmp
mov
lahf   
add
sbbb
fadd
mov
push
pushf  
dec
cmp
inc
jnp
or
mov
addr16 fwait
push
cmp
jle
stc    
push
jb
add
add
xor
cmp
and
(bad)  
leave  
stc    
ret    
cs
inc
sub
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
enter
shr
iret   
(bad)  
repnz test
repnz scas
repz fdivr
test
hlt    
test
sti    
mov
repnz stos
iret   
(bad)  
in
(bad)  
in
lock fdivr
mov
(bad)  
hlt    
mov
loope
mov
ljmp
xchg
out
hlt    
mov
(bad)  
xlat
cld    
cld    
mov
fcomip
mov
call
test
out
stos
not
hlt    
xchg
popa   
insb
xchg
pop
push
jb
pop
stos
(bad)
mov
pushf  
mov
movsb
addr16 inc
bound
add
mov
daa    
sbb
data16 mov
adc
mov
in
jnp
mov
adc
adc
ss push
sahf   
idivb
mov
add
outsl
xchg
cltd   
jmp
inc
loop
adc
inc
inc
fidivrl
xor
aam
scas
push
push
dec
loopne
mov
sbb
xchg
pop
push
jb
pop
stos
(bad)
mov
jmp
inc
bound
add
mov
daa    
scas
sahf   
shrl
add
jg
inc
bswap
sub
test
(bad)  
xlat
pop
fdivl
js
xchg
scas
ljmp
and
loop
mov
mov
push
xchg
out
cmpsl
pop
adc
aad
or
idiv
push
inc
pop
repnz int
daa    
insl
aam
jbe
mov
out
pop
arpl
pop
movsl
out
out
(bad)  
mov
sub
incl
jmp
rorb
cltd   
test
inc
and
add
xchg
std    
sbb
jnp
sti    
aad
mov
lods
and
inc
jecxz
ret
ret
jmp
jb
add
or
out
rorb
arpl
jb
push
cmp
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
outsb
pop
iret   
sbb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
js
push
cmpsb
jnp
sbb
push
or
xorl
icebp  
lods
jb
in
mov
(bad)  
mov
adc
push
or
orl
hlt    
mov
and
mov
cld    
jle
xchg
cmpsl
xor
std    
test
xorb
lret
cmpsl
lret   
cli    
test
mov
xchg
mov
stc    
(bad)  
sbb
mov
pushf  
insb
mov
aam
sbb
out
xlat
aaa    
cmc    
test
std    
out
mov
(bad)  
mov
sub
lret
push
enter
mov
mov
ret    
ljmp
and
(bad)  
adc
dec
imul
or
pop
andb
inc
dec
jnp
aas    
mov
bound
jle
push
jns
and
cli    
xor
mov
imul
cs daa 
xor
and
add
add
xchg
adc
loope
aaa    
lret   
mov
inc
movsb
push
push
push
jbe
add
out
or
add
adc
mov
jo
inc
aas    
cmpsl
sub
inc
je
leave  
adc
cmp
adc
mov
hlt    
mov
push
out
fcompl
stc    
rol
shl
out
int3   
cld    
lret
scas
mov
test
icebp  
fld
sub
ljmp
repz addr16 out
neg
cld    
cmp
outsb
scas
cmove
addr16 ja
repnz
out
mov
fadd
(bad)  
inc
lock jno
ret
scas
ja
in
mov
push
iret   
rcrb
les
das    
out
xchg
in
inc
int3   
push
scas
out
cld    
mov
negb
adc
repnz mov
mov
and
cmpsb
(bad)  
xchg
cmpsl
mov
icebp  
inc
cmp
mov
dec
add
rcr
frndint 
push
inc
shrb
pop
idivl
enter
jb
jae
sub
sti    
in
adc
(bad)
mov
lods
push
mov
pusha  
(bad)  
xor
adc
mov
insb
dec
push
test
sti    
mov
lock hlt 
(bad)  
mov
lock
ret    
out
fistp
incb
scas
icebp  
mov
test
icebp  
(bad)  
(bad)  
push
sbb
mov
push
int3   
push
addl
fsubrs
jnp
lcall
pop
sub
(bad)  
repnz loope
or
call
mov
jb
shrb
into   
les
inc
sbb
mov
les
lods
sbb
mov
xchg
or
push
sub
xchg
es cld 
ror
scas
sbb
repnz fld
push
mov
sarb
(bad)  
lcall
cld    
in
cmp
loope
lret
test
sbbb
(bad)  
(bad)  
cmc    
in
pop
stos
popf   
mov
cmc    
scas
rcrl
fidivl
jo
push
mov
push
inc
out
jg
std    
cwtl   
inc
push
into   
xlat
std    
mov
sbb
(bad)  
loop
cmpb
jae
out
pop
lret
ret    
movsb
scas
push
jne
lea
jo
mov
mov
(bad)  
cld    
cmp
je
sub
mov
lahf   
mov
mov
cmc    
mov
lahf   
mov
and
mov
xchg
(bad)  
rorb
icebp  
les
mov
std    
pop
enter
(bad)  
cmc    
mov
notb
jle
mov
lock mov
out
adc
scas
jg
adc
inc
scas
jecxz
xor
xor
cld    
add
scas
adcb
xlat
mov
(bad)  
int
or
popa   
xor
add
scas
cmp
leave  
mov
sahf   
test
fdivrp
mov
repnz mov
sub
mov
dec
inc
lods
sti    
xlat
loope
fidivrl
(bad)  
jmp
scas
mov
jmp
stc    
push
cld    
testl
test
in
ffreep
and
(bad)  
mov
pop
ret    
dec
mov
jo
cld    
cmova
scas
xor
xchg
mov
adc
mov
rcr
loopne
cltd   
(bad)  
jbe
mov
aam
mov
jle
rol
insb
(bad)  
neg
lret
or
out
icebp  
cli    
xchg
mov
mov
adc
(bad)  
icebp  
lcall
sahf   
or
lock xor
cld    
fxch
mov
(bad)  
repnz
movl
or
test
xchg
mov
sar
adc
scas
xchg
mov
lret
lds
aas    
sbb
in
js
lahf   
mov
sub
mov
repnz inc
jp
cmp
setl
or
std    
xchg
aam
(bad)  
stc    
mov
sbb
(bad)  
fldl
(bad)  
stc    
loopne
mul
in
ret    
cld    
(bad)  
scas
stos
imul
mov
insb
ret    
insl
out
stc    
sar
xor
pop
cmp
repz lea
(bad)  
in
cwtl   
sub
leave  
scas
jp
(bad)  
mov
sbb
shlb
ret
pop
and
lods
cltd   
sti    
std    
dec
shlb
call
push
(bad)  
adc
jo
sbb
pop
ja
cld    
stos
iret   
xchg
cmpsl
sarb
icebp  
lea
sbb
mov
cmpsl
or
(bad)  
cld    
sbb
scas
out
test
int3   
cld    
mov
and
pop
in
xor
sahf   
(bad)  
in
scas
xlat
je
mov
xchg
scas
rcrb
mov
jl
aas    
out
xlat
hlt    
std    
imul
mov
jbe
(bad)  
hlt    
mov
mov
mov
inc
cld    
loop
ss scas
pop
cmp
iret   
cmc    
stos
(bad)  
sbb
mov
xchg
dec
xchg
cmpl
loop
andl
loopne
mov
adc
(bad)  
enter
cs xchg
gs cld 
mov
repnz scas
jae
js
sti    
jle
(bad)  
mov
add
stos
test
mov
call
lods
or
mov
sahf   
add
add
mov
mov
cmp
faddp
lcall
(bad)  
rol
push
hlt    
ss mov
lcall
(bad)  
call
clc    
fwait
mov
stc    
movsl
mov
(bad)  
repnz icebp 
in
jp
popf   
mov
icebp  
scas
sub
repnz icebp 
shrb
mov
data16 mov
out
ja
std    
xchg
inc
arpl
fcomp
sti    
mov
adc
(bad)  
out
pushf  
mov
xor
push
out
push
ss cld 
lock lret 
mov
(bad)  
(bad)  
xchg
cmpsb
(bad)  
ss or
mov
pop
int
out
xlat
(bad)  
cld    
and
jo
and
pop
mov
xlat
in
mov
cli    
mov
popw
mul
cltd   
fcmove
cltd   
scas
sarl
mov
lcall
xchg
mov
les
jb
out
mov
sbb
inc
cli    
push
(bad)  
or
mov
fwait
or
std    
pop
sub
lods
ret    
test
lock jno
movl
in
sbbl
mov
aam
mov
inc
(bad)  
(bad)  
lock mov
add
jne
xor
or
jnp
mov
lds
push
cli    
cmp
adc
mov
std    
ja
mov
mov
jbe
(bad)  
out
(bad)  
stos
mov
in
(bad)  
out
icebp  
pop
cld    
sti    
dec
das    
scas
lods
sbb
aad
daa    
cs ret 
mov
jns
inc
sub
idiv
xor
scas
xor
shr
fwait
mov
in
fsubr
in
mov
imull
(bad)  
jbe
sarb
repz les
or
out
stc    
icebp  
pushf  
mov
std    
lods
xchg
stos
lahf   
mov
push
sbb
sti    
xchg
in
add
lret
cld    
xlat
(bad)  
xchg
scas
add
pop
mov
(bad)  
test
dec
out
mov
xchg
inc
sahf   
xchg
mov
(bad)  
cld    
out
inc
lret   
scas
xchg
hlt    
icebp  
mov
fwait
push
lret
aad
jns
and
and
in
sbb
scas
les
mov
(bad)  
lock rolb
hlt    
les
inc
out
pop
sbb
(bad)  
dec
jno
aam
divl
rcrl
mov
out
xor
cld    
leave  
lret   
cltd   
scas
mov
icebp  
faddp
and
mov
insl
aad
out
icebp  
(bad)  
cmp
imul
jmp
jnp
(bad)  
(bad)  
fsubp
cmp
jg
lret   
dec
sub
or
into   
shlb
fcmovb
das    
pop
cs out
xchg
out
jae
sbb
mov
repnz pop
(bad)  
sub
int
mull
divl
and
movsl
ret    
cmp
mov
xchg
mov
add
mov
mov
jge
fstp
(bad)  
adc
cwtl   
fwait
mov
xorl
loop
mov
sub
in
add
mov
imull
lods
lcall
sbb
les
xor
sbb
mov
fwait
push
push
test
mov
(bad)  
cmc    
repnz sarl
repz pushf 
ret
fstps
std    
inc
xor
xchg
repz
hlt    
mov
xchg
aam
negl
imul
mov
push
xor
jmp
(bad)  
cld    
std    
ror
shr
out
scas
mov
(bad)  
stc    
(bad)  
enter
pop
repz xchg
dec
sbb
mov
out
mov
out
movsb
lods
fsubp
(bad)  
mov
xor
sbb
repnz
mov
pushf  
lods
les
test
out
lret
enter
mov
(bad)  
leave  
call
cli    
sar
mov
repnz scas
iret   
(bad)  
ret    
cmc    
scas
iret   
int3   
jecxz
mov
call
xchg
push
dec
inc
cmp
mov
xor
aas    
lock testl
int3   
inc
jae
in
adc
daa    
std    
sti    
cmp
push
pop
cmp
(bad)  
repnz sub
aaa    
inc
push
lcall
aaa    
cmp
sub
or
hlt    
ret    
and
comiss
aaa    
jle
icebp  
add
xor
ret
adc
jbe
add
(bad)  
or
in
out
jl
or
mov
or
adc
stc    
cmp
fsubrl
adc
cmp
out
testb
add
add
cld    
sarb
idivb
mov
das    
push
aaa    
jle
repnz and
push
add
add
sbb
inc
rcl
add
inc
frstor
pop
push
jbe
lds
inc
cmp
xor
inc
add
add
aad
aas    
add
sub
add
pop
dec
push
xor
or
push
dec
imul
ret    
rcll
lods
xor
add
jns
push
sub
mov
dec
xorl
push
and
jnp
or
ret    
rclb
jp
into   
enter
loopne
fisubr
daa    
xor
and
add
add
in
add
ret
popa   
js
push
jbe
mov
jo
dec
cmp
and
mov
jle
fist
jnp
cmpsb
push
inc
dec
jne
xor
cmp
add
xor
rcl
into   
fdivr
test
in
(bad)  
jmp
mov
repnz int
(bad)  
xchg
cmpb
les
(bad)  
cld    
inc
jp
jns
add
mov
xor
inc
dec
ror
(bad)  
mov
xchg
mov
mov
iret   
cld    
xchg
mov
mov
leave  
cld    
xchg
test
mov
into   
lock nop
mov
mov
iret   
repz xchg
test
mov
leave  
lock fwait
mov
pushf  
mov
sahf   
test
jl
(bad)  
jmp
mov
out
mov
out
les
jbe
(bad)  
cs push
mov
jo
inc
jmp
test
out
mov
pushf  
xchg
aaa    
outsb
aaa    
or
mov
xchg
mov
(bad)  
xlat
leave  
cld    
xchg
mov
mov
leave  
lock xchg
cmpl
stos
div
lcall
test
cmpb
mov
sub
push
dec
sub
sbb
or
mov
sbb
js
push
jp
adc
and
and
jbe
adc
jbe
dec
pop
outsb
les
outsb
jnp
push
jae
data16 stos
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fcomip
mov
in
xlat
enter
(bad)  
out
(bad)  
leave  
(bad)  
mov
call
mov
ljmp
out
ror
fdiv
test
out
ror
fcomip
mov
jmp
mov
cld    
mov
repnz scas
repz fdivr
test
hlt    
xchg
stc    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
enter
shr
iret   
fdivp
test
out
ror
fdiv
test
out
stos
not
hlt    
xchg
stc    
mov
clc    
mov
in
stos
int
sti    
test
hlt    
mov
not
(bad)  
int3   
cld    
mov
out
(bad)  
loopne
icebp  
fdivr
mov
(bad)  
hlt    
mov
icebp  
xlat
lret   
int3   
loopne
mov
ror
ret    
out
mov
jmp
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
call
mov
repnz stos
iret   
shr
(bad)  
jb
jae
sub
sti    
out
imul
(bad)  
mov
or
test
sahf   
movl
ja
in
aas    
inc
xlat
subl
cmp
(bad)  
mov
mov
in
inc
and
mov
mov
iret   
data16 lock sub
adc
int3   
sahf   
dec
cltd   
out
leave  
iret   
(bad)  
in
ret    
jo
and
or
notb
jno
cs dec
sub
imul
call
mov
mov
(bad)  
enter
inc
cli    
popa   
out
icebp  
ucomiss
cwtl   
inc
dec
xlat
std    
loopne
mov
push
add
(bad)  
mov
cli    
icebp  
out
and
fcom
pop
and
int
lods
iret   
inc
clc    
xor
xor
add
out
mov
mov
ret
jb
iret   
rcrb
push
int3   
xor
or
in
mov
adc
mov
pusha  
(bad)  
in
stos
int
push
inc
out
adc
cmp
and
push
lods
int3   
cli    
mov
push
in
cmp
mov
xchg
(bad)  
mov
(bad)  
sbb
cmp
out
fmulp
(bad)  
(bad)  
xlat
xor
mov
iret   
out
rol
push
xlat
pusha  
int3   
sbb
or
xlat
pusha  
cld    
or
iret   
xchg
push
inc
(bad)  
in
lock int3 
insl
les
or
xlat
enter
inc
out
push
iret   
pcmpgtd
(bad)  
lods
push
mov
(bad)  
out
mov
sbb
xlat
test
inc
mov
pop
xchg
(bad)  
cmp
xor
out
cmpsb
mov
in
(bad)  
pop
xlat
fsubrs
iret   
ret    
(bad)  
mov
jns
inc
int3   
and
out
xchg
jno
in
mov
add
mov
scas
aam
jno
inc
out
add
in
aas    
mov
mov
xor
out
test
mov
out
sub
inc
in
aas    
xor
mov
lcall
(bad)  
adc
sub
mov
(bad)  
shl
daa    
mov
cmp
sti    
mov
int3   
sbb
jp
mov
mov
sti    
repnz mov
mov
leave  
push
fwait
add
rclb
enter
mov
out
cmp
cltd   
(bad)  
(bad)  
jbe
ds
pusha  
stos
jns
sub
jmp
inc
push
xlat
inc
cmp
shr
leave  
into   
jmp
shrb
int3   
pusha  
mov
out
adc
out
cmp
popl
mov
insl
xchg
lret
(bad)  
(bad)  
enter
inc
hlt    
popa   
out
xor
enter
lret
push
leave  
scas
imul
mov
out
inc
leave  
pop
out
mov
xor
add
mov
hlt    
icebp  
out
mov
ret    
sbb
pop
stos
sbb
ds or
rcrb
mov
(bad)  
(bad)  
mov
jl
dec
in
lret
repnz
xor
or
out
popf   
inc
mov
scas
mov
xchg
(bad)  {z}
pop
rclb
int3   
sbb
and
jge
mov
shr
lock mov
lcall
int3   
add
out
or
cmp
popf   
xchg
(bad)  
repnz subl
insb
icebp  
jno
in
xor
out
xor
rorb
insb
mov
add
mov
shll
push
out
out
cmp
xor
mov
jb
leave  
mov
ror
out
int3   
(bad)  
xor
mov
rcl
add
mov
add
lcall
mov
out
vcvtdq2pd
es mov
push
mov
adc
leave  
sbb
sarb
out
movsl
mov
out
xor
rolb
mov
imul
sbb
inc
rcll
out
(bad)  
rep stos
push
pop
cmp
je
mov
lret   
or
mov
inc
jecxz
(bad)  
int3   
jecxz
repnz outsb
sbb
sti    
in
mov
repz mov
adc
stos
(bad)  
sub
test
jl
mov
pop
dec
sbb
fdivp
loope
cmc    
aas    
(bad)  
stos
(bad)  
mov
sbb
aam
(bad)  
(bad)  
ja
inc
int3   
aas    
add
out
cwtl   
dec
xchg
rol
adc
call
jb
(bad)  
not
int3   
fmull
iret   
ret    
(bad)  
cmpsl
(bad)  
mov
lods
xchg
mov
mov
sti    
mov
neg
iret   
in
(bad)  
mov
sti    
scas
cli    
loopne
test
cwtl   
xchg
mov
idivl
fdivr
mov
int3   
loop
mov
incb
out
(bad)  
not
icebp  
aam
mov
in
scas
jecxz
test
(bad)  
lcall
test
imulb
(bad)  
out
xlat
int
(bad)  
mov
ljmp
icebp  
scas
int3   
fdivr
mov
out
aam
(bad)  
hlt    
mov
not
(bad)  
mov
call
(bad)  
mov
aam
mov
pushf  
xchg
mov
xchg
mov
fdivl
pop
out
pop
dec
sub
ljmp
mov
push
iret   
jl
sub
scas
push
(bad)  
fcoml
fdiv
mov
out
xlat
enter
shr
iret   
(bad)  
repnz test
repnz scas
repz fdivr
mov
out
scas
iret   
(bad)  
hlt    
mov
test
cld    
hlt    
stos
(bad)  
(bad)  
(bad)  
fdivl
pop
out
(bad)  
(bad)  
hlt    
or
outsb
xlat
(bad)  
pop
mov
(bad)  
in
xlat
enter
(bad)  
out
ror
fdivp
mov
jmp
mov
repnz aad
(bad)  
in
(bad)  
ljmp
out
(bad)  
aam
stos
(bad)  
mov
lahf   
mov
pop
iret   
cmp
ljmp
cltd   
jle
(bad)  
lret
mov
fcomi
mov
lods
jg
or
xlat
iret   
rorb
neg
hlt    
mov
out
jecxz
sarl
(bad)  
lock xchg
in
in
(bad)  
lock aam
aad
popf   
mov
ret
repz mov
fdivp
mov
in
mov
ret    
repz mov
mov
iret   
cld    
xchg
mov
mov
iret   
lock nop
mov
pushf  
mov
pushf  
mov
cwtl   
mov
cwtl   
mov
test
in
test
in
test
in
test
in
test
loopne
mov
loopne
mov
loopne
mov
loopne
mov
jecxz
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
lea
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
incb
mov
out
ret    
jmp
cli    
mov
call
mov
xchg
lret
xlat
(bad)  
mov
xlat
(bad)  
mov
rorl
mov
(bad)  
mov
lret
scas
mov
pushf  
lret
scas
mov
pushf  
lret
scas
mov
pushf  
lret
scas
mov
pushf  
lret
scas
mov
lahf   
lret
stos
mov
cwtl   
lret
stos
mov
cwtl   
lret
stos
mov
cwtl   
lret
stos
mov
cwtl   
lret
mov
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
(bad)  
lods
test
(bad)  
mov
mov
rorl
mov
(bad)  
mov
rorl
mov
(bad)  
mov
rorl
mov
(bad)  
mov
rorl
mov
(bad)  
mov
shr
call
ror
into   
repz mov
mov
(bad)  
mov
into   
loopne
mov
out
mov
pushf  
hlt    
lret
(bad)  
(bad)  
nop
lock lret
rorb
imulb
mov
jecxz
(bad)  
out
xlat
(bad)  
mov
cli    
(bad)  
out
xlat
(bad)  
mov
sti    
(bad)  
ljmp
ljmp
jmp
cli    
mov
in
cli    
mov
call
mov
call
mov
jmp
(bad)  
mov
xlat
(bad)  
mov
xlat
(bad)  
mov
xlat
(bad)  
mov
(bad)  
mov
rorl
mov
(bad)  
mov
lret
rorl
mov
(bad)  
mov
lret   
mov
pushf  
lret
scas
mov
pushf  
lret
scas
mov
pushf  
lret
scas
mov
pushf  
lret
scas
mov
cwtl   
lret
stos
mov
cwtl   
lret
stos
mov
cwtl   
lret
stos
mov
cwtl   
lret
stos
mov
cwtl   
lret   
(bad)  
stc    
or
imul
vmread
leave  
enter
iret   
fdiv
mov
out
xlat
iret   
pushf  
lds
or
cmp
movsl
js
leave  
enter
xchg
in
and
mov
test
push
test
sub
mov
ljmp
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
sarb
ds and
div
sbb
xor
push
iret   
faddl
sub
and
pop
hlt    
mov
xor
pop
cs ss
out
(bad)  
bswap
clc    
pop
loope
scas
in
js
xor
jp
iret   
out
(bad)  
idivl
fldenv
(bad)  
push
jnp
je
sbbl
mov
pusha  
mov
xchg
cmp
in
call
pusha  
hlt    
inc
out
push
clc    
jle
dec
xchg
mov
mov
leave  
xor
ror
pop
cmp
mov
inc
mov
inc
mov
inc
mov
inc
mov
jle
aas    
jbe
jno
jle
aas    
jbe
jno
sahf   
les
inc
mov
decb
pushf  
push
lock pop
sub
iret   
fdiv
mov
out
mov
push
dec
mov
fdiv
mov
out
xlat
iret   
call
scas
idiv
pushf  
mov
pushf  
mov
pushf  
mov
pushf  
mov
xchg
and
mov
repnz cmpsb
test
mov
movsb
les
(bad)  
fcomi
stos
mov
clc    
lret
stos
mov
clc    
mov
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
(bad)  
or
add
jbe
lret
mov
out
xlat
enter
stc    
cli    
xlat
iret   
fdivl
out
push
iret   
fdivr
push
inc
outsb
push
(bad)  
fs jp
outsb
push
(bad)  
fs jp
xchg
mov
mov
sbb
push
mov
lahf   
or
and
(bad)  
hlt    
mov
repnz scas
repz fdiv
mov
jl
inc
out
scas
neg
js
inc
out
iret   
int3   
in
(bad)  
out
xlat
iret   
int3   
in
(bad)  
out
xlat
imul
pushf  
mov
push
leave  
cmp
sub
dec
and
mov
pop
es xor
call
mov
out
xlat
iret   
fdivr
mov
fdiv
mov
out
xlat
iret   
fdiv
mov
xchg
negl
fdiv
mov
out
xlat
pop
and
jp
adc
mov
lock mov
jbe
mov
mov
mov
test
or
adc
aaa    
and
push
iret   
pushf  
(bad)  
test
adc
aaa    
and
jp
xchg
stos
daa    
int3   
mov
cmp
mov
mov
je
(bad)  
out
xlat
iret   
pop
hlt    
mov
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
inc
lcall
mov
cld    
mov
cld    
mov
cld    
mov
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
je
jbe
xor
je
jbe
xor
je
jbe
xor
je
jbe
xor
pop
mov
xor
jbe
xor
sub
and
jp
adc
aaa    
xchg
jg
cmp
imul
mov
in
mov
in
mov
in
mov
in
faddl
inc
push
push
dec
jl
add
push
push
dec
jl
add
push
push
dec
jl
add
push
push
dec
jl
add
push
daa    
or
hlt    
mov
test
push
xchg
les
out
xlat
push
pop
clc    
test
pop
fbld
cld    
test
nop
scas
cmc    
rcrb
mov
jmp
xchg
fdivr
sbb
into   
scas
mov
mov
mov
fbstp
add
xor
inc
aas    
jbe
xor
inc
inc
repz cmp
or
je
jbe
xor
jp
shrb
or
je
jbe
xor
je
jbe
xor
je
jbe
xor
je
jbe
mov
push
xor
je
jbe
xor
je
add
add
outsb
je
jbe
xor
je
jbe
xor
je
jbe
xor
je
jbe
push
faddl
jl
add
mov
leave  
cld    
xchg
test
adc
push
xchg
leave  
cld    
xchg
test
mov
add
outsb
push
or
(bad)  
out
xlat
mov
or
test
out
xlat
mov
mov
mov
mov
lcall
cwtl   
lret
stos
popf   
lahf   
xchg
pushf  
lcall
(bad)  
xchg
xlat
shr
lret   
(bad)  
mov
iret   
mov
fdiv
mov
test
out
xlat
mov
mov
cwtl   
lret
stos
dec
and
popa   
dec
adc
aaa    
inc
in
stos
dec
jno
mov
pop
push
mov
mov
cwtl   
lret
movsl
mov
cwtl   
mov
mov
hlt    
(bad)  
out
xlat
mov
stos
mov
xlat
(bad)  
mov
xlat
(bad)  
lods
div
in
xchg
bound
(bad)  
jge
ljmp
mov
xlat
(bad)  
mov
mov
in
xchg
xchg
cmp
nop
(bad)  
mov
test
(bad)  
mov
(bad)  
lods
test
rolb
scas
mov
movl
iret   
mov
xor
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
inc
or
lret
rorb
fdiv
mov
cmp
bound
out
cmpsb
pushf  
jns
jmp
stos
push
jle
out
iret   
push
sti    
xchg
int
or
jp
lret
push
aam
push
pop
inc
sbb
ds xchg
popf   
pop
pushf  
adcl
iret   
leavew 
push
(bad)  
mov
test
decb
dec
pop
cmp
cli    
push
pop
in
mov
adc
xchg
aas    
or
(bad)  
cwtl   
out
jle
mov
(bad)  
and
sarb
lahf   
xchg
mov
xor
or
scas
fldenv
xor
(bad)  
(bad)  
ds xchg
cltd   
sbb
mov
mov
dec
add
cmp
fnstcw
adc
ret
push
dec
cmpsb
loope
inc
mov
pop
lret   
testl
jns
jg
lea
ljmp
jge
cwtl   
and
and
inc
negl
push
dec
xchg
out
or
jp
or
sbb
jbe
pusha  
cmp
loopne
icebp  
fdivr
mov
(bad)  
xor
mov
fsubs
lcall
mov
push
jge
inc
idivb
mov
and
in
pusha  
xor
je
jb
fsubs
jnp
xor
(bad)  
(bad)  
aad
cwtl   
and
(bad)  
mov
test
fadds
adc
fnstsw
call
mov
outsl
jo
xchg
jae
int
loopne
mov
loope
insw
jle
mov
cwtl   
subl
xchg
pusha  
sbb
loopne
push
pop
test
sbb
mov
and
scas
jnp
rcr
dec
inc
scas
push
dec
leave  
rcrb
bound
gs out
dec
sub
inc
fcompl
ficomp
int3   
pop
(bad)  
subl
mov
fldenv
push
and
(bad)  
jnp
(bad)  
or
mov
pop
and
inc
jbe
movsl
jp
inc
mov
pop
das    
dec
pop
les
test
xchg
jl
inc
fincstp 
hlt    
pushf  
mov
xchg
iret   
and
arpl
push
mov
(bad)  
xor
mov
mov
or
mov
push
int3   
and
pusha  
out
mov
pop
sub
(bad)  
cmp
lret
cmpl
push
jmp
mov
push
push
mov
mov
(bad)  
push
sub
sbb
push
daa    
popa   
and
lods
dec
out
mov
mov
pushf  
jbe
adc
or
push
or
xor
sbb
sbb
ljmp
idivb
sbbl
lods
addl
cmp
out
jmp
(bad)  
adc
fildl
sub
mov
inc
jle
inc
fadd
loope
jbe
in
bound
ja
mov
insb
mov
je,pt
jb
(bad)  
(bad)  
imul
mov
jns
jge
pushl
jbe
mov
scas
mov
add
icebp  
mov
mov
or
mov
loop
(bad)  
dec
daa    
mov
push
adc
dec
out
lods
mov
lock jl
pop
leave  
adc
fldenv
sbb
mov
mov
ffreep
(bad)  
mov
rclb
rorb
sti    
sbb
xor
int
sub
push
rorl
insb
pusha  
mov
cmp
xchg
xchg
(bad)  
dec
mov
push
repz addr16 idiv
pop
or
xor
xor
mov
cmp
cs sub
movsb
adc
sub
test
rcrb
jo
gs out
dec
add
or
ret    
add
mov
daa    
cwtl   
cmp
lea
lock sub
jl
jo
cmpsl
push
mov
pusha  
sbb
in
pop
adcb
jb
inc
pushw
or
jo
jne
sbb
dec
mov
sub
out
dec
rolb
xor
(bad)  
fisubr
xor
in
pop
add
inc
mov
mov
lea
out
test
ds
mov
mov
in
mov
pop
(bad)  
or
leave  
push
fwait
pop
mov
les
jns
mov
fs
and
xchg
xchg
xchg
xchg
push
lret   
cmp
dec
out
imul
les
sbb
fcmovu
repz popa 
cwtl   
sbb
pop
add
push
mov
xorl
outsl
mov
cmp
add
test
popf   
out
cmpsb
rorb
jns
gs jle
sti    
xor
pop
jns
sub
outsb
movsb
xchg
test
lock push
scas
pop
(bad)  
fsub
out
divb
cmpsl
sub
push
orl
dec
push
dec
imul
inc
mov
outsb
push
popa   
mov
mov
mov
push
push
popa   
push
aad
fcomps
xchg
jne
and
ror
mov
push
xchg
insb
xchg
iret   
repnz add
or
das    
daa    
fwait
or
mov
and
jp
inc
ljmp
out
(bad)  
out
sub
or
lods
ss cmc 
ds call
mov
push
out
div
pop
inc
adc
cmpsb
mov
fildll
nop
insl
(bad)  
loopne
xor
mov
cmp
(bad)  
or
inc
mov
(bad)  
ss popa 
popa   
(bad)  
dec
push
cwtl   
stos
arpl
jne
add
fnop   
mov
inc
call
cld    
mov
cmp
or
add
add
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
sbb
xor
iret   
fdiv
mov
push
xchg
mov
push
(bad)  
out
xlat
iret   
fdiv
mov
out
jno
notl
std    
mov
out
xlat
iret   
fdiv
mov
adc
push
and
(bad)  
(bad)  
out
xlat
iret   
fcompl
pop
movsb
push
cwtl   
rcl
inc
push
jo
jp
fdiv
mov
out
xlat
iret   
hlt    
mov
mov
fmul
fdiv
mov
out
xlat
jae
lea
mov
cmpsb
popa   
mov
xchg
not
iret   
fdiv
mov
out
imul
mov
lea
xchg
int3   
out
xlat
iret   
fdiv
mov
cmp
sbb
jns
lret
cmp
pop
mov
out
xlat
iret   
fdiv
mov
lahf   
les
sbb
mov
xlat
iret   
fdiv
sbb
fcom
adc
cwtl   
jbe
(bad)  
(bad)  
out
xlat
iret   
fsubl
cmp
int
sbb
popa   
cmc    
mov
fdiv
mov
out
xlat
iret   
test
into   
sbb
test
fmul
fdiv
mov
out
xlat
mov
mov
cltd   
not
iret   
fdiv
mov
out
test
pop
std    
mov
out
xlat
iret   
fdiv
mov
push
das    
aad
inc
(bad)  
ficom
xor
out
xlat
iret   
fdiv
mov
xchg
jle
jmp
stos
push
adc
std    
mov
out
xlat
iret   
fdiv
(bad)  
les
dec
cmp
mov
out
xlat
iret   
fcompl
jae
repz jge
imul
add
mov
out
xlat
iret   
les
movsl
adc
cmpsb
dec
fmul
fdiv
mov
out
xlat
lea
test
or
xchg
not
iret   
fdiv
mov
out
pop
dec
mov
push
in
adc
xchg
int3   
out
xlat
iret   
fdiv
mov
js
jg
xchg
mov
inc
mov
out
xlat
iret   
fdiv
mov
mov
idivb
xlat
iret   
fdiv
into   
sub
mov
mov
hlt    
mov
out
xlat
iret   
faddl
pop
clc    
popa   
insb
jg
lret   
jecxz
xor
hlt    
mov
out
xlat
iret   
cmp
out
(bad)  
(bad)  
cmc    
test
xor
iret   
fdiv
mov
out
xlat
pop
mov
mov
or
scas
and
xlat
iret   
fdiv
mov
out
mov
mov
(bad)  
jo
nop
int3   
out
xlat
iret   
fdiv
mov
push
inc
sub
dec
in
popl
(bad)  
out
xlat
iret   
fdiv
mov
sub
es sbb
movsl
ja
call
out
xlat
iret   
fdiv
sub
leave  
lcall
mov
out
xlat
iret   
fdivl
mov
addl
dec
insb
movsb
rcrl
rorb
iret   
fdiv
mov
out
xlat
loope
scas
mov
(bad)  
scas
(bad)  
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
jne
add
test
xor
xchg
sub
dec
bound
inc
lea
sahf   
lock fdiv
mov
mov
pusha  
mov
in
push
sbb
insl
mov
out
xlat
xlat
or
int3   
mov
scas
lret   
scas
jg
mov
inc
aad
push
and
fldt
fcom
sahf   
test
push
arpl
xchg
fisttpll
mov
ret
add
jnp
adc
lahf   
sub
stc    
jl
or
mov
mov
ret
shl
push
xchg
(bad)  
ljmp
push
arpl
int3   
test
xlat
mov
inc
dec
out
shrl
mov
(bad)  
dec
cwtl   
ds imul
out
mov
cmp
test
outsb
mov
rcl
push
and
(bad)
rol
cwtl   
cmpsb
fcmovnu
jge
or
mov
push
test
dec
and
fmul
inc
push
lock fdiv
mov
es mov
adc
mov
push
stos
push
fmul
fdiv
cmp
cltd   
push
loop
jle
mov
and
mov
or
jge
loopne
add
mov
mov
dec
add
pop
lret
push
or
pop
xchg
(bad)  
out
jae
aaa    
mov
mov
push
pop
push
mov
setae
loopne
pusha  
mov
mov
dec
dec
xor
mov
add
xchg
ficom
pusha  
inc
sahf   
aam
pop
mov
dec
push
fsubrp
pop
xchg
ret    
std    
push
jge
arpl
push
jle
mov
movsl
inc
lods
mov
fs pop
mov
(bad)  
dec
pushf  
sub
popa   
in
mov
jnp
mov
or
in
push
inc
lret
mov
and
jnp
cmc    
jns
dec
cmc    
pushf  
dec
push
mov
push
insb
lret   
fldl
or
pop
(bad)  {z}
hlt    
add
mov
cs test
dec
sete
push
or
lds
insb
add
mov
push
jne
(bad)  
dec
ds mov
mov
fsubrl
imul
xchg
mov
(bad)  
out
pop
inc
mov
sub
push
sub
adc
imul
sbb
subl
mov
and
mov
ficomp
push
mov
mov
mov
shll
mov
push
inc
mov
xchg
and
mov
xchg
arpl
lods
pop
cs pop
fcompl
push
mov
(bad)  
mov
mov
lret   
ds lcall
add
andb
sub
sbb
movsl
or
pop
xchg
push
cltd   
push
imul
hlt    
js
out
xchg
mov
stc    
lods
mov
add
push
sbb
xorl
mov
pop
ffree
mov
lcall
xor
xchg
fildl
lods
mov
shrl
fisub
std    
dec
jecxz
fimull
fdivrs
mov
(bad)  
popa   
and
iret   
lcall
add
cmp
mov
xchg
(bad)  {z}
fstpt
fwait
xor
inc
push
sub
stos
pop
cmp
bound
xor
ret    
cmp
xchg
call
stos
xchg
jg
mov
push
and
push
sub
test
std    
cwtl   
mov
aas    
cmp
arpl
adc
pop
cmovb
imul
cmc    
sub
pop
or
sbb
pop
mov
test
fisubrl
mov
aaa    
in
mov
or
pop
push
jno
push
pop
dec
cmc    
test
subl
(bad)  
mov
movsl
clc    
mov
mov
out
fwait
pop
jg
insl
inc
ja
inc
sub
ret
rcr
xchg
mov
cmp
pop
pop
std    
in
ret    
scas
cs sbb
mov
mov
or
(bad)  
insl
aad
in
mov
mov
mov
and
mov
insl
mov
icebp  
(bad)  
ret
lahf   
in
inc
iret   
xchg
scas
pushf  
movsb
test
rcll
add
adc
out
call
and
test
mov
shll
scas
les
clc    
aad
cmpsl
(bad)  
std    
test
cmpsl
stos
(bad)  
lock jge
ret
jmp
sbb
fldenv
cmp
inc
lock popa 
lcall
or
jp
xchg
ret
pop
mov
xchg
jae
out
cmc    
sar
test
(bad)  
fwait
mov
(bad)  {z}
int
cmp
pop
sub
pop
push
int
sub
add
mov
ret    
xchg
sbb
xchg
jge
(bad)  
xchg
jo
loopne
(bad)  
vpand
lea
clc    
jg
(bad)  
(bad)  
(bad)  
or
adc
jmp
mov
out
xlat
sbb
xchg
inc
les
js
fildl
pop
mov
cmpsl
mov
xorl
adc
fsubrs
pop
leave  
loop
iret   
jg
sbb
lds
sub
cmp
mov
cmc    
lods
nop
repz divl
sti    
test
fldl
dec
and
out
adc
jecxz
dec
jmp
data16 xlat
popa   
mov
xchg
and
jne
push
mov
dec
pop
xchg
jl
xchg
jecxz
inc
push
lods
hlt    
(bad)  
cmc    
mov
lock rol
fild
lcall
jno
cld    
adc
lods
(bad)  
ds jmp
dec
call
sbb
fisubl
dec
lods
cld    
cmp
push
push
inc
mov
repz scas
enter
(bad)  
xlat
cld    
fmulp
out
(bad)  
adc
in
inc
xor
ficoml
sarl
lahf   
pop
(bad)  
push
test
iret   
push
int
in
push
inc
mov
mov
call
shr
sarb
stc    
ljmp
ret
cmp
mov
pop
mov
ret    
pusha  
xlat
jne
mov
dec
xchg
loopne
aas    
inc
roll
push
enter
ror
jmp
jmp
dec
adc
sbb
rol
and
mov
fs stc 
push
rcrb
rorl
jmp
xor
(bad)  
cmc    
fsubp
mov
ljmp
ret
paddsb
or
out
dec
lret
xor
lds
jge
dec
or
ljmp
mov
repnz lahf 
mov
ret    
push
dec
sbb
jmp
mov
add
(bad)  
jg
mov
(bad)  
dec
xchg
in
insl
ss mov
mov
call
leave  
repz cli 
ror
(bad)  
sub
xor
out
icebp  
xor
in
(bad)  
out
xlat
(bad)
cmp
push
(bad)  
pop
stos
les
dec
pushf  
in
xor
cmp
int
aad
aam
add
scas
in
(bad)  
jmp
in
ds ds aam
or
mov
push
addl
lds
movsb
in
xor
dec
cld    
mov
ljmp
(bad)  
xor
or
out
or
mov
and
and
push
leave  
mov
stos
(bad)  
mov
(bad)  
lock jg
dec
mov
fptan  
cmpl
int3   
jmp
in
int
icebp  
cmpsl
sub
(bad)  
hlt    
inc
les
icebp  
adc
into   
and
sbb
icebp  
push
repnz push
cmp
or
arpl
insl
(bad)  
je
push
into   
pop
add
out
test
(bad)  
mov
out
xlat
cmpsl
or
mov
(bad)  
cld    
mov
loope
mov
cmp
mov
leave  
out
xlat
iret   
xor
lret   
outsb
ret    
jae
pop
repnz pop
repnz fxch
fdiv
inc
cmp
(bad)  
jne
movsl
xlat
lods
jo
lret   
lock scas
out
repnz mov
repz mov
mov
mov
testl
fucomi
pusha  
mov
jbe
pop
mov
mov
jne
movsl
shlb
mov
jmp
(bad)  
repnz fidivrl
xor
repz fs aas 
fldcw
jbe
int
test
jo
dec
hlt    
sub
push
mov
pop
add
ret
sub
sbb
repz in
fdivl
dec
out
ficoml
push
ret
adc
out
insl
jle
repz xchg
cmp
mov
inc
mov
shr
fcmove
loopne
popf   
in
cmp
repz neg
iret   
fdiv
(bad)  
sub
mov
leave  
out
xlat
iret   
push
fcomps
sbb
(bad)  
mov
mov
outsb
mov
lret   
in
aam
jmp
mov
decb
sub
aaa    
jae
xchg
or
aam
stc    
push
int3   
push
scas
or
push
out
jg
lea
(bad)  
jp,pt
repz fimul
fldl
not
ds sbb
fisubr
je
clc    
pop
loope
idivb
test
cmp
leave  
out
xlat
iret   
jo
shrl
lahf   
clc    
imul
cmpsb
push
xchg
mov
(bad)  
(bad)  
cs pop
or
out
out
ret
mov
cmpsb
sbb
xchg
mov
(bad)  
mov
gs fwait
stc    
fxch
fdiv
mov
mov
xchg
ficompl
fild
not
cmp
fst
decb
push
mov
out
xlat
dec
rolb
leave  
out
xlat
iret   
fs hlt 
pop
(bad)  
lock xlat
iret   
fsubl
aas    
pop
lock mov
out
xlat
iret   
out
cwtl   
mov
out
xlat
iret   
clc    
(bad)  
(bad)  
(bad)  
lock xlat
iret   
fmull
pushf  
fmull
xor
mov
fdiv
mov
xor
mov
sub
std    
mov
out
mov
inc
insl
rcr
sahf   
cmp
cld    
xor
sbb
scas
not
iret   
fsubrl
xchg
insl
cmp
sahf   
js
andl
loop
jge
adc
test
push
fsubl
popf   
lahf   
call
mov
pop
dec
xorb
movsl
outsb
and
lahf   
push
clc    
das    
jl
scas
repnz mov
sub
scas
mov
push
cs push
fsubl
adc
sahf   
mov
mov
dec
aaa    
add
outsl
pop
push
std    
cwtl   
dec
mov
jge
(bad)  
loop
jae
pop
test
ret
dec
adc
push
lcall
cwtl   
lock cmpsb
or
pushf  
pop
mov
negb
mov
mov
out
adc
rcll
(bad)  
(bad)  {%k4}{z}
mov
(bad)  
jle
mov
pop
test
push
sub
fldt
aad
cltd   
mov
jl
mov
push
das    
test
lea
pop
push
leave  
faddl
lds
loopne
cmpsb
mov
sbb
dec
jno
(bad)  
pop
xor
aaa    
push
pop
aam
xchg
mov
ds mov
pop
and
dec
icebp  
sahf   
dec
pop
mov
pop
push
rcr
xchg
xor
pop
pusha  
lock add
mov
pop
pop
test
push
inc
mov
xchg
adc
cmp
xchg
mov
and
mov
lahf   
adc
add
pushf  
in
stos
popa   
mov
test
dec
xor
xchg
pop
hlt    
add
push
sbb
inc
fwait
popa   
cmp
(bad)  
mov
popf   
add
pop
push
pop
jbe
adc
pop
add
test
in
xchg
imul
sbb
push
add
subl
popf   
les
test
clc    
in
imul
dec
stos
add
push
jl
or
add
mov
jo
out
xchg
mov
int3   
scas
mov
push
fisubrl
std    
dec
fildl
(bad)  
jg
mov
jg
(bad)  
mov
cs lcall
mov
or
(bad)  
mov
push
mov
mov
iret   
dec
xchg
pusha  
out
fisubl
mov
inc
test
mov
cmpsl
fdivrs
xchg
push
arpl
xchg
jg
pop
jle
mov
mov
push
pop
movsb
cwtl   
pop
push
int
inc
andb
gs loop
mov
jne
test
pop
(bad)  
xor
sbbb
xor
sbb
dec
mov
bound
fwait
dec
xor
stos
cmc    
dec
push
rcl
stos
sub
sbb
adc
mov
gs xchg
mov
pop
lds
push
inc
(bad)  
xor
jl
cmp
stos
cmp
std    
cltd   
xor
(bad)  
mov
movsl
int3   
stos
lcall
cwtl   
mov
lds
mov
inc
cwtl   
popa   
loop
cltd   
pop
or
in
sbb
cmpsl
(bad)  
mov
mov
enter
add
jl
add
dec
jno
pop
adc
les
subl
add
lcall
inc
stc    
fcomps
std    
push
pop
hlt    
add
mov
idiv
bound
dec
gs fwait
pop
or
push
ret    
lods
ja
andl
push
pop
stc    
(bad)  
push
test
pop
fildll
adc
out
jnp
mov
jae
aam
ss pushf 
rcrl
ret    
test
cmp
cltd   
and
fdivr
inc
push
aad
mov
push
js
mov
adc
mov
dec
mov
push
sub
sub
int3   
out
xlat
iret   
test
inc
mov
jno
mov
inc
ss pop
rcrb
std    
cmpsl
int3   
stc    
scas
subb
rclb
int
cmp
dec
and
pop
inc
ret    
std    
aas    
int3   
jno
adc
btr
dec
sarb
mov
mov
add
scas
(bad)  
dec
outsl
mov
nop
cmpl
adc
(bad)  
(bad)  
jecxz
xor
mov
jp
rorl
mov
push
ret
mov
(bad)  
xchg
dec
inc
scas
push
sbb
push
adc
mov
fpatan 
ljmp
dec
lret   
test
cmp
lea
or
pop
cltd   
sbb
mov
js
jmp
mov
lea
add
decb
mov
in
mov
dec
xor
fidiv
inc
xchg
in
jns
inc
(bad)  
insl
shrb
aad
clc    
jge
mov
mov
ret    
xlat
repz mov
iret   
fsubr
fcmovnbe
icebp  
ljmp
(bad)  
out
xlat
sub
jg
les
(bad)  
not
iret   
fsubl
fs jmp
jg
mov
mov
jnp
(bad)  
lds
(bad)  
fmul
(bad)  
loop
sbb
mul
loope
aas    
mov
fdivrl
lds
std    
mov
mov
fs ljmp
mov
mov
outsb
mov
mov
stos
cli    
fstp
(bad)  
jmp
xchg
out
(bad)  
lods
and
mov
insl
xor
aaa    
or
sub
setg
ds xchg
imul
mov
mov
(bad)  
movsl
adc
lea
fucom
mov
in
icebp  
frndint 
test
mov
(bad)  
adc
xlat
mov
das    
inc
xor
pop
leave  
pop
cld    
sub
or
(bad)  
jo
(bad)  
xchg
push
push
mov
mov
(bad)  
repnz
in
(bad)  
not
nop
cmc    
sti    
mov
add
(bad)  
lret   
push
adc
add
in
cli    
xor
in
mov
add
mov
movb
iret   
mov
in
fmulp
fsub
mov
addb
push
adc
ret    
adc
rclb
sub
loopne
mov
cs mov
xchg
adc
ret    
xchg
das    
test
ljmp
not
out
addl
adc
(bad)  
rorb
sub
adc
aaa    
jmp
enter
mov
adc
mov
push
mov
in
int
(bad)  
ljmp
and
repz or
icebp  
cs data16 adc
sbb
ret
aas    
in
inc
int
ljmp
sbb
push
(bad)  
leave  
ret    
mov
loopne
fdivrs
and
jmp
pop
loop
jbe
dec
ret    
je
push
in
aaa    
cmpsb
jo
dec
cmp
mov
mov
jle
ljmp
out
mov
out
in
xor
or
mov
cs push
iret   
fcoml
data16 aas 
out
dec
repz push
in
mov
xlat
sbb
imul
xchg
and
xchg
jbe
out
ffree
lret
mov
xchg
push
imul
lds
ja
out
in
inc
in
mov
aam
stos
sub
subl
pushf  
insl
push
lds
shl
sarb
int3   
xor
cmp
xor
push
leave  
lock xlat
iret   
fmull
mov
sbb
inc
lds
mov
or
aad
data16 xchg
cmpsb
and
cld    
lea
(bad)  
lods
les
lahf   
(bad)  
repz
cld    
xlat
clc    
into   
sub
into   
add
cmp
sarl
(bad)  
dec
jmp
into   
add
dec
xlat
je
dec
icebp  
xor
cmp
leave  
out
xlat
iret   
stos
pop
jo
lock xlat
iret   
fcompl
pop
(bad)  
mov
out
xlat
loope
pushf  
(bad)  
mov
in
clc    
lret   
sub
call
fxch
fdiv
sbb
jle
jae
adc
sub
imul
push
or
repnz test
mov
(bad)  
mov
in
ror
mov
(bad)  
out
pop
inc
mov
cld    
addl
shlb
inc
enter
jmp
test
mov
dec
(bad)  
or
xlat
iret   
ljmp
ljmp
int3   
repnz adc
lock mov
xor
jg
jbe
sub
mov
mov
mov
add
xchg
mov
cmc    
scas
test
jg
ret
fucomip
jno,pn
cmc    
pop
(bad)  
push
repz sub
test
out
xlat
iret   
(bad)  
jnp
ret
dec
jmp
jns
cmc    
(bad)  
cld    
mov
mov
add
(bad)  
hlt    
mov
cmp
leave  
in
adc
neg
iret   
fdiv
ds stos
and
add
sbb
add
xchg
inc
push
in
xchg
jle
neg
(bad)  
call
mov
leave  
out
xlat
iret   
push
jge
int3   
lock xlat
iret   
fmul
aas    
or
jmp
stos
adc
pop
xchg
xchg
fisttpll
int3   
mov
movsb
mov
(bad)  
into   
sub
mov
fistpl
fldl
or
push
cltd   
sbb
pop
hlt    
pop
clc    
fxch
fdiv
pop
xor
inc
mov
(bad)  
fisttpll
mov
fcomip
movsl
xlat
stc    
mov
mov
(bad)  
xor
cmpsb
xor
mov
out
xlat
iret   
int3   
add
(bad)  
insb
les
pop
cmc    
push
stc    
and
pushf  
divl
dec
cmpsb
mov
pop
mov
(bad)  
hlt    
mov
out
int
decb
sub
into   
sub
mov
leave  
out
xlat
iret   
enter
lock xlat
iret   
fsubl
inc
cli    
fxch
fdiv
push
mov
mov
jae
xchg
fistpll
xlat
iret   
fdiv
mov
fdiv
cmpsb
scas
movsb
mov
fcompl
push
jns
mov
(bad)  
out
add
insb
cmp
sub
loope
jno
or
loopne
iret   
and
pop
data16 and
out
or
sbb
shr
aad
(bad)  
cltd   
pop
into   
mov
popa   
sbb
sub
jne
xor
and
pop
in
imul
dec
(bad)  
xor
mov
lret   
in
je
push
sbb
pop
jle
popf   
mov
xlat
cmp
clc    
push
and
(bad)  
addr16 es or
fisttpll
cs adc
in
xor
mov
pop
ds sbb
and
xlat
xor
push
jae
pop
pop
fucom
or
mov
adc
pop
jle
dec
jae
sti    
sub
jecxz
(bad)  
or
sub
jne
adc
(bad)  
push
push
inc
jb
mov
out
adc
in
call
pop
pusha  
dec
and
jecxz
hlt    
mov
cmp
lea
ds inc
cld    
add
pop
iret   
sub
pop
lret   
sahf   
in
dec
fisttpl
iret   
sub
pop
sub
cmovo
(bad)  
sub
hlt    
lds
and
cmp
push
or
mov
(bad)  
lock and
or
add
das    
xchg
lret
pop
pop
in
into   
hlt    
lds
std    
xchg
jg
inc
pop
dec
ret    
ret
cmp
scas
js
hlt    
mov
movsb
in
bound
aas    
dec
jbe
push
sub
push
dec
jae
lock sub
xlat
add
push
jo
jb
fisttpl
or
lds
fdiv
hlt    
push
out
or
jae
add
jbe
jne
in
mov
ret    
mov
and
and
xor
and
ficompl
mov
jno
pop
cmc    
cli    
in
int3   
call
sub
xlat
sub
push
dec
inc
sbb
mov
clc    
imul
jecxz
sbb
cmp
mov
sbb
mov
xlat
xor
pop
inc
push
sub
sub
mov
mov
cmp
or
xor
push
cmc    
mov
adc
sbb
xor
lret
cmp
out
(bad)  
xor
push
adc
add
inc
or
mov
cmp
jecxz
aas    
push
(bad)
rorl
mov
mov
xor
push
das    
adc
inc
cmp
adc
fdivrl
insl
or
ret
int3   
into   
push
jno
mov
mov
(bad)
dec
sub
adc
sbb
cmp
add
clc    
or
sbb
fnsave
daa    
(bad)  
call
mov
sub
leave  
jne
int3   
pop
arpl
xor
movl
pop
dec
jle
mov
lret
cmp
cmovs
rcr
hlt    
leave  
push
lock cmp
mull
fmuls
outsl
add
inc
and
push
loopne
adc
fmul
(bad)  
xor
aas    
mov
or
add
dec
push
push
loopne
jns
pusha  
ja
aaa    
in
and
scas
xor
xlat
ds inc
in
(bad)  
call
or
into   
hlt    
mov
mov
jmp
ljmp
(bad)  
out
add
jb
or
fmuls
cmp
push
cmp
or
fadd
imul
sub
addr16 jbe
imul
(bad)  
out
adc
xor
and
stos
shrl
or
xchg
out
and
mov
sbb
and
ficompl
out
iret   
adc
mov
or
push
adc
adc
lea
or
(bad)  
jge
pop
inc
les
dec
(bad)  
xor
mov
aaa    
rclb
jmp
iret   
sub
pop
aaa    
rclb
jmp
iret   
add
mov
pop
xor
xchg
pop
sbb
je
clc    
mov
sub
and
cmp
inc
clc    
rorb
wrmsr  
fsubr
inc
dec
jae
cmp
xchg
(bad)  
lret   
aaa    
push
dec
pop
jae
dec
pop
lds
fcompl
fnstsw
jae
dec
pop
lds
fmul
cltd   
xor
push
jl
mov
inc
xor
lock sub
add
jnp,pt
(bad)  
loopne
add
rcrl
out
add
dec
sub
dec
and
out
sbb
insl
or
bound
aaa    
stos
fst
iret   
sub
or
fprem  
or
into   
jg
out
xlat
cmp
add
dec
insl
adc
mov
add
mov
bswap
sub
inc
push
add
ret    
loopne
add
rcrl
out
xlat
and
add
imul
pop
aam
call
fdiv
(bad)  
leave  
jge
dec
aaa    
xchg
jbe
mov
out
xlat
and
daa    
(bad)  
sbb
repnz and
push
pop
addr16 and
and
cmp
jns
push
sub
rcl
jg
jnp
out
add
add
mov
(bad)  
out
add
negl
pop
outsl
sbb
adc
add
and
adc
or
mov
add
adc
sub
xor
rcrl
lea
pop
inc
or
inc
pop
dec
fcmovne
pop
and
mov
dec
jae
sub
mov
pop
in
and
adc
and
and
add
mov
cmovb
ror
push
adc
mov
dec
jae
das    
lret   
in
push
xor
xor
sub
adc
mov
fdiv
stc    
pop
in
sub
inc
sub
xor
out
xlat
ds inc
in
enter
outsl
sub
sbb
push
iret   
fadd
insl
es add
rolb
sub
test
lock mov
cmp
inc
in
inc
dec
jge
dec
xor
sub
ljmp
stc    
pop
in
das    
(bad)  
bound
mov
decl
fcomps
iret   
fadd
insl
es push
out
add
iret   
sbbl
jns
popa   
sbb
(bad)  
inc
dec
jae
sti    
sub
add
add
cmpsb
iret   
hlt    
mov
mov
inc
cmp
aam
xor
iret   
cmp
sbb
sub
scas
out
lock mov
xor
push
dec
jge
iret   
movhps
pop
in
std    
cltd   
jne,pn
loop
xor
(bad)  
aas    
dec
sub
(bad)  
pop
sub
add
dec
sub
lea
xor
push
cs enter
pop
fidivrl
fadd
insl
sub
lock mov
push
push
inc
jb
pop
and
mov
mov
in
cmp
pop
lret   
(bad)  
out
add
push
bound
aaa    
stos
fst
iret   
and
pop
push
and
adc
js
call
sub
push
inc
in
fnsave
sbb
lretw  
(bad)  
cmp
bound
call
jmp
das    
jl
xor
sbb
clc    
data16 in
push
inc
outsb
add
ret    
loope
add
sub
pop
xlat
xor
jnp
jge
inc
or
ret
dec
jp
fnsave
jbe
push
leave  
lahf   
add
inc
(bad)  
dec
int3   
repz sbb
inc
roll
mov
cmp
push
leave  
lahf   
jne,pn
jmp
(bad)  
addr16 sub
bound
ret    
hlt    
mov
(bad)  
idivb
icebp  
sbb
fadd
insl
sbb
dec
jbe
lldt
loopne
add
rcrl
out
pop
stos
in
jne
(bad)  
loopne
add
adc
in
fldenv
jb
push
cmp
mov
fdiv
cli    
pop
aad
daa    
cmpsb
(bad)  
cmp
jp
fnsave
jnp
jb
ficom
or
jge
pop
test
aad
inc
or
movsl
sub
xlat
or
mov
add
xlat
add
push
push
knotw
movsl
lret
dec
push
adc
or
fcoms
xor
xchg
push
sub
aad
pop
sub
or
push
adc
cmp
enter
cmp
(bad)  
cmp
and
dec
pop
cli    
adc
and
jne
aaa    
pop
sbb
jp
jne
ss out
loop
int
add
addr16 sub
imul
or
hlt    
into   
push
repz aas 
jnp
pop
pop
fsubrp
pop
jno
or
scas
aam
or
or
sbb
scas
das    
xlat
or
or
inc
sub
ret
ja
bound
add
leave  
sbb
(bad)  
or
mov
(bad)  
jbe
out
jecxz
(bad)  
or
mov
ss je
out
call
ret
dec
xchg
out
(bad)  
mov
xor
fisttpl
iret   
fdivrl
dec
jae
sub
dec
jae
sbb
out
pop
xor
inc
or
pop
push
sbb
xor
repz dec
fcompl
jne
aaa    
loope
pop
jne
jae
mov
fimull
rsqrtps
mov
and
cmp
pop
cli    
jecxz
and
or
mov
dec
lahf   
mov
dec
je
(bad)
iret   
jg
iret   
fdivrl
dec
push
sbb
add
adc
lock ret
jbe
adc
fnsave
cmp
push
jbe
cmp
fwait
sub
hlt    
repz dec
cwtl   
mov
sbb
out
dec
out
das    
push
aaa    
jle
popa   
js
les
or
pop
aas    
js
push
adc
cmp
cli    
ss push
(bad)  
inc
and
cmp
jns
(bad)  
sbb
mov
adc
daa    
jmp
aas    
test
fdivrl
imul
and
cmp
js
bound
aaa    
pop
sbb
sbb
push
cmp
mov
insl
or
bound
aaa    
pop
sbb
pusha  
js
ljmp
mov
xor
pop
jg
inc
or
ds ljmp
cmp
js
bound
aaa    
pop
and
push
call
pop
inc
or
inc
pop
dec
fidivrl
gs cmp
push
js
call
fcompl
xor
enter
jns
iret   
fdivrl
insl
or
bound
aaa    
data16 adc
(bad)  
out
adc
xor
xor
push
jl
scas
dec
push
out
adc
xor
das    
or
bound
aaa    
stos
fst
iret   
sbb
(bad)  
or
adc
out
adc
jbe
ss out
xlat
xor
push
pop
addr16 cmp
and
cmp
cmp
add
pop
(bad)  
xchg
adc
sbb
(bad)  
xlat
iret   
sbb
paddsw
iret   
sbb
dec
cmp
xlat
iret   
sbb
or
pop
adc
(bad)  
inc
pop
out
mov
xor
push
sub
sub
push
shll
xlat
xor
sbb
outsl
and
push
adc
insl
or
push
push
cmp
add
xlat
xor
push
dec
add
fcompl
xor
ret    
hlt    
lds
das    
faddp
push
push
inc
jb
(bad)  
in
xor
push
daa    
in
cmp
pop
lret   
(bad)  
xor
push
daa    
jmp
add
push
push
loopne
adc
fdivrl
insl
or
out
add
or
xor
mov
cmp
icebp  
xor
xchg
or
cltd   
in
xor
push
loope
(bad)  
bound
mov
movsl
into   
(bad)  
xor
push
daa    
jmp
aaa    
test
addr16 ss enter
mov
mov
inc
iret   
icebp  
xor
jecxz
xor
sbb
cmpsb
loope
xor
rcl
jg
adc
out
adc
xor
add
cmp
mov
aaa    
out
xlat
xor
push
jae
pop
pop
(bad)  
pop
jno
shr
(bad)  
out
adc
xor
sbb
adc
cmp
pop
out
sbb
(bad)  
scas
sbb
cmp
mov
push
dec
(bad)  
icebp  
or
lret   
in
scas
loop
xor
push
jae
pop
pop
in
cmp
popa   
ljmp
out
adc
xor
sbb
add
xor
sbb
aas    
hlt    
sbb
mov
loope
or
adc
hlt    
lds
divb
data16 sub
add
std    
xor
push
jl
jmp
add
cmp
movsl
sti    
or
xchg
iret   
fdivrl
insl
or
cmpsb
fsubrs
and
sub
adc
stos
fst
iret   
sbb
mov
add
cmp
cmc    
mov
(bad)  
xor
ret
cmp
outsb
aaa    
int
ss out
xlat
xor
sub
adc
fadd
repnz push
xor
push
dec
jno
loopne
out
std    
cmp
cmp
test
add
pop
ja
lret   
jae
sub
adc
xor
sbb
sbb
leave  
notl
iret   
sbb
or
xor
and
hlt    
lds
std    
cltd   
jne,pn
loope
push
jo
gs lret 
(bad)  
xor
ret
sub
add
inc
fadd
lea
xor
push
cs enter
pop
fidivrl
fdivrl
subb
dec
sub
sarl
mov
inc
dec
jae
cmp
xchg
(bad)  
xchg
adc
lret
adc
or
cmp
lret   
jae
sub
xlat
or
xor
jno
dec
jae
jbe
xchg
push
or
xor
mov
xlat
or
ret
jb
dec
jae
jbe
(bad)  
or
ret
sbb
add
jl
ss out
ljmp
or
pop
jnp
lret   
fcoms
inc
je
stos
das    
xlat
or
ret
sti    
and
pop
or
fbld
pusha  
(bad)  
cmp
hlt    
(bad)  
push
cmp
test
push
bound
aaa    
aas    
addl
and
ss push
gs lock sub
xlat
or
out
xor
shrb
adc
iret   
fdivrl
sahf   
das    
jbe
lds
and
ljmp
shrl
add
cmc    
sbb
pushf  
aam
hlt    
(bad)  
dec
jmp
or
lcall
xor
push
dec
jno
mov
out
xlat
xor
or
xlat
push
(bad)  
xor
addr16 jo
and
popf   
(bad)  
icebp  
hlt    
(bad)  
xor
addr16 or
sbb
in
mov
xor
addr16 or
sbb
hlt    
(bad)  
dec
in
cs sub
lcall
aas    
adc
or
fnsave
iret   
fdivrl
cwtl   
es add
pushf  
cs imul
out
xlat
xor
sub
fwait
in
cmp
addr16 fld
out
jmp
cmp
aas    
(bad)  
mov
cmp
jp
fnsave
inc
fdivs
dec
cmp
daa    
bound
aaa    
stos
fst
xor
sub
(bad)  
icebp  
xor
jecxz
xor
sub
and
or
aad
cmp
jecxz
xor
outsl
(bad)  
cmp
cmp
(bad)  
nop
jmp
cld    
sbb
fdivrl
xchg
and
bound
aaa    
pop
outsl
xor
lret
(bad)  
out
jmp
sub
js
out
dec
cmp
mov
xor
sub
adc
and
lock lcall
sub
repz pop
push
inc
out
xor
jmp
inc
popa   
add
ret    
jmp
mov
pushf  
or
add
mov
hlt    
mov
xchg
pusha  
jbe
cmc    
adc
pop
dec
jge
pop
test
sahf   
push
inc
add
push
sbb
cmp
cmc    
ret
das    
dec
das    
inc
push
leave  
jmp
xor
das    
pop
imul
cmp
mov
lea
jl
cltd   
ljmp
iret   
js
xlat
iret   
push
xchg
in
xor
(bad)  
mov
or
iret   
adc
daa    
jge
js
out
adc
(bad)  
jno
fistp
or
hlt    
leave  
pop
enter
int
inc
orl
enter
pop
push
cmp
test
pop
pop
push
out
xlat
push
mov
cld    
mov
out
xlat
or
dec
jb
adc
ss push
cmp
js
xlat
iret   
pop
cltd   
sbb
adc
js
lret
pop
dec
jno
call
sbb
(bad)  
in
push
and
fcmovnu
leave  
sahf   
and
dec
push
fs pop
out
adc
jae
sub
add
jno
xor
lock mov
mov
(bad)  
out
add
rsqrtps
cmp
test
fdiv
stc    
pop
in
and
repz sbb
(bad)
faddl
mov
mov
and
sbb
call
hlt    
stc    
pop
in
and
enter
loope
arpl
dec
sub
sub
pop
push
and
xor
cmp
loopne
mov
mov
xchg
cwtl   
xlat
ds inc
in
ret
jne
rorb
cwtl   
out
lea
jne
loop
cmp
fbstp
cmc    
(bad)  
out
add
hlt    
mov
enter
mov
mov
aas    
dec
sub
sahf   
sbb
pop
(bad)  
aas    
push
sbb
js
xlat
ds inc
in
rolb
(bad)  
aas    
dec
sub
idiv
mov
out
(bad)  
aas    
dec
sarb
dec
and
gs fs push
dec
mov
xlat
ds inc
std    
add
or
(bad)
outsl
cmp
sbb
fadd
popa   
sbb
rcrl
jbe
jne
inc
push
adc
lea
hlt    
clc    
data16 aad
push
aas    
out
cmp
std    
xor
clc    
data16 jecxz
imul
inc
inc
jge
mov
inc
(bad)
mov
or
ljmp
lods
or
test
imulb
out
xlat
add
xor
mov
mov
sub
popw
stc    
or
xchg
ljmp
mov
movsb
in
bound
push
or
cltd   
add
(bad)  
aad
xchg
(bad)  
hlt    
lds
and
adc
jno
std    
mov
cmpsl
(bad)
dec
add
mov
add
mov
sub
pushf  
aam
mov
xlat
iret   
sbb
or
daa    
in
xor
lret   
(bad)  
xor
pop
adc
(bad)  
jae
cmp
or
xor
iret   
sbb
(bad)  
or
jmp
jge
jmp
pop
jp
ss out
adc
xor
daa    
sbb
ret    
mov
mov
fdiv
lds
and
sarb
adc
xchg
push
sbb
adc
out
adc
xor
and
das    
js
pop
jecxz
outsb
jle
push
push
(bad)  
xor
push
and
cmp
roll
mov
xor
int3   
cwtl   
out
lea
jne
loop
cmp
stos
xor
sbb
fcomps
iret   
fdivrl
insl
or
fldcw
fwait
in
inc
and
es ja
imul
fmul
cwtl   
out
lea
jne
loop
cmp
fbstp
cmc    
(bad)  
out
adc
xor
jae
loopne
xor
push
iret   
sbb
aad
cmp
ss out
adc
xor
and
and
mov
mov
xor
int
mov
popa   
in
mov
xor
ret
ds daa 
push
js
pop
pop
dec
adc
lret
xlat
iret   
sbb
and
xchg
push
mov
xchg
loop
clc    
push
jno
cli    
das    
and
dec
xor
lds
repnz xchg
cmp
cmp
mov
(bad)  
xor
lea
fdiv
movl
push
cmp
mov
in
daa    
pop
je
sbb
call
cmp
mov
lock mov
outsl
cmp
sbb
fdivrl
xchg
pop
push
das    
dec
aas    
mov
fmuls
push
cmp
or
sbb
cmp
mov
(bad)  
out
adc
or
bound
test
fmull
popa   
wrmsr  
jecxz
xor
xor
call
inc
popa   
add
mov
adc
pop
fimul
xor
imul
dec
adc
lea
jb
xor
subl
xchg
sbb
pop
inc
ds mov
xor
shrl
leave  
mov
lock cmp
push
rol
lret
arpl
aaa    
out
xlat
push
dec
clc    
sbb
or
in
ret
aaa    
or
dec
imul
(bad)  
out
adc
or
xchg
xor
inc
popa   
add
mov
push
push
inc
or
fwait
xchg
aaa    
mov
das    
xlat
popa   
wrmsr  
hlt    
orb
outsl
dec
and
aas    
fdiv
leave  
push
lock cmp
sub
or
sarl
xor
call
inc
popa   
add
mov
cmc    
cli    
(bad)  
out
adc
push
and
flds
cli    
mov
sub
mov
mov
sub
(bad)  
lock xor
push
stc    
ds sbb
and
add
das    
adc
push
dec
es mov
fdiv
lds
negb
sbb
pusha  
or
mov
xor
push
adc
sbb
and
(bad)  
call
(bad)  
lcall
sbb
push
or
stos
adc
aas    
loop
iret   
faddl
leave  
xor
jae
aaa    
jge
out
xlat
and
jo
cmp
sbb
push
sub
push
jb
out
iret   
sub
rorl
add
insl
ss lret
mov
xor
lret
sbb
and
push
dec
fstps
xchg
(bad)  
hlt    
cmc    
push
fadds
lret
dec
push
adc
or
fcoms
xor
xchg
push
push
out
or
jae
add
jbe
jne
in
mov
cmp
sub
daa    
or
cmp
stos
dec
xor
mov
test
sbb
jbe
cmp
sub
pop
lret   
sahf   
in
dec
or
dec
xor
hlt    
push
out
or
jae
add
xor
hlt    
push
out
or
jae
adc
jecxz
jo
stc    
mov
pop
out
cmp
xor
mov
cmp
ss iret 
fmul
xchg
das    
sub
dec
jb
xchg
and
movsb
das    
xlat
iret   
sub
xor
enter
jo
out
mov
or
and
ret    
push
pop
dec
jle
mov
cmpsb
cmp
(bad)  
aas    
inc
lret
or
fwait
add
jg
inc
(bad)
iret   
fadd
insl
es jg
shll
add
ja
xor
(bad)  
or
and
je
jg
mov
ljmp
sbb
add
xlat
movsl
jecxz
dec
adc
(bad)  
hlt    
mov
mov
cmp
xchg
decb
xchg
(bad)  
out
add
adc
(bad)  
(bad)  
adc
sbb
add
adc
pop
add
dec
adc
cmp
hlt    
stc    
pop
in
negb
pop
adc
push
and
repz mov
mov
or
cld    
sbb
fadd
insl
es cs ffree
adc
mov
hlt    
mov
mov
jmp
ljmp
(bad)  
out
add
test
or
pushf  
rcl
iret   
cs mov
inc
or
cmp
mov
cmp
add
cmp
push
jb
out
cmp
in
and
(bad)
push
cmp
les
xlat
or
xor
push
je
mov
xlat
add
push
dec
inc
sbb
fbstp
loop
insb
and
out
cmp
add
add
and
ret
repnz cmpsl
out
xor
push
cmp
cltd   
sbb
repnz and
adc
mov
mov
mov
adc
insb
sub
imul
inc
(bad)
xor
cmc    
and
mov
inc
daa    
or
xchg
rorb
fist
mov
mov
hlt    
or
pop
clc    
aas    
hlt    
mov
mov
adc
insb
sub
imul
inc
(bad)  
or
mov
push
mov
xchg
cmc    
sub
(bad)  
movsb
fiaddl
dec
jle
(bad)  
mov
sub
cmp
mov
mov
lret   
sub
daa    
jle
hlt    
(bad)  
out
out
dec
rolb
xor
jae
arpl
sbb
or
or
daa    
or
mov
hlt    
mov
xchg
ss jle
repnz cmovo
(bad)  
sub
cmp
pop
jo
inc
adc
in
daa    
hlt    
mov
or
jl
into   
ljmp
push
adc
test
and
or
(bad)  
cmp
fisttp
data16 add
rolb
mov
xor
data16 add
(bad)  
cmc    
and
push
inc
and
adc
inc
leave  
lea
push
push
sub
xlat
iret   
sbb
sub
dec
fnstenv
iret   
sbb
sub
scas
cmp
and
xor
pop
jg
inc
or
xlat
lock push
dec
jne
jge
js
mov
xchg
push
jnp
arpl
and
mov
jge,pn
jns
aaa    
adc
daa    
mov
cmp
(bad)  
ss inc
adc
(bad)
adc
xor
das    
pusha  
je
imul
(bad)  
out
adc
xor
aaa    
sbb
xchg
jle,pn
xor
ja
jo,pn
loop
jmp
fdivrl
insl
or
and
out
jae
mov
mov
pop
cmp
cmovs
xchg
or
xor
or
sbb
xor
mov
add
push
xlat
xor
sub
iret   
cli    
xor
push
adc
fdivrl
insl
or
pop
sbb
fcoml
or
push
adc
test
inc
fcoml
pop
inc
adc
sub
pop
or
xor
out
adc
xor
and
stos
shrl
or
xchg
push
insb
xor
push
je
out
cld    
ss jle
in
(bad)  
xor
push
jp
push
sbb
and
sbb
cmp
cmp
push
lock fisubl
push
jecxz
xor
movsb
das    
xlat
iret   
sbb
cmp
je
loop
call
notl
iret   
fdivrl
insl
or
clc    
shrb
and
mov
jo
gs lret 
(bad)  
out
adc
xor
je
out
mov
xlat
iret   
sbb
and
ljmp
fdiv
lds
(bad)  
mov
sub
(bad)
adc
fdivrl
insl
or
cmpsb
lret   
jo
lock es push
test
cmp
sub
sbb
subl
cmpsb
lret   
jo
cmc    
add
push
insb
inc
inc
cmp
push
loope
(bad)  
call
cmp
test
mov
fdivrl
insl
or
stos
lds
iret   
and
and
sbb
fs
cmp
hlt    
lds
divl
sbb
jae
push
fsubrp
sub
jge
ljmp
in
push
dec
fs and
sbb
fisubr
loope
pushf  
cmp
cmp
leave  
add
xor
or
cmp
das    
mov
or
push
push
(bad)  
out
adc
xor
sbb
js
add
push
and
out
mov
out
xlat
xor
cs push
je
sub
in
pop
inc
push
fucomp
(bad)  
out
adc
xor
sbb
js
add
or
sbb
jg
ss lret 
test
xlat
xor
cs push
je
and
push
pop
push
pushl
out
adc
xor
sbb
sbb
(bad)  
dec
and
inc
fadd
mov
lods
icebp  
cs
cmp
les
cmp
mov
and
jns
jecxz
mov
and
xor
aas    
gs push
or
and
adc
mov
xlat
iret   
pop
lods
pop
dec
adc
dec
jns
and
fcmovnbe
push
pusha  
xor
sub
cmp
dec
sbb
hlt    
mov
push
js
call
fisubrl
shrb
jecxz
sub
fnsave
cmp
push
jo
loope
adc
fdivrl
xchg
adc
divl
and
fnstenv
and
ljmp
imul
loop
fimul
cmp
les
push
cmp
(bad)  
and
or
sbb
fidiv
inc
fs
or
adc
xor
mov
mov
inc
daa    
or
mov
mov
es push
test
cmp
(bad)  
adc
cmp
rcr
out
mov
cs stos
fidiv
(bad)  
xor
jo
push
and
fmuls
jo
or
sbb
jg
test
(bad)  
xor
adc
int3   
adc
ss push
jno
iret   
rorl
shrb
out
ljmp
inc
dec
jno
fistl
lret   
(bad)  
xor
or
mov
fs xor
lea
push
or
scas
aam
iret   
sbb
inc
int3   
mov
inc
daa    
or
xchg
rorb
fist
mov
mov
dec
fs push
ljmp
mov
mov
dec
fs push
jmp
in
jno
fs xor
lea
push
or
scas
aam
push
dec
clc    
sbb
or
mov
sbb
iret   
fdivl
xchg
sbb
pop
inc
ret
cmp
ljmp
hlt    
leave  
push
lock cmp
and
and
cmp
into   
jg
out
xlat
push
dec
clc    
sbb
or
test
add
clc    
sbb
or
aas    
jns
xor
data16 adc
fdivl
xchg
sbb
pop
inc
ds out
cmp
mov
cmp
mov
push
lock cmp
adc
adc
fisubrl
lock cmp
pop
jmp
adc
incb
mov
das    
xlat
popa   
wrmsr  
div
and
inc
pusha  
add
fwait
push
jg
cli    
push
cmp
fwait
sbb
and
sbb
lret   
(bad)  
out
adc
repnz xor
sbb
adc
lret   
jp
adc
clc    
lods
sub
sbb
and
xlat
cmp
in
les
inc
inc
repz subl
lods
push
ret    
xor
das    
push
jecxz
js
ljmp
clc    
data16 fsincos 
sub
push
sahf   
in
out
adc
fadd
sub
cmp
sbb
xor
int
loopne
fsts
mov
lods
push
shrb
(bad)  
sub
push
xlat
lods
ret
push
adc
out
add
sbb
data16 adc
cs mov
in
das    
dec
fs push
sbb
fdivs
push
xor
lret   
(bad)  
cmp
and
push
sarb
cmp
lock cmp
cmp
lea
rcll
cld    
pop
and
add
add
jns
mov
in
inc
(bad)  
adc
int
pop
inc
push
adc
sub
push
hlt    
cmp
int
clc    
push
and
push
pop
dec
jle
adc
inc
xlat
cmp
and
or
jbe
inc
adc
push
insb
or
xor
lret   
(bad)  
sub
outsb
inc
pop
push
or
in
xchg
and
movsb
das    
xlat
iret   
add
insb
pop
or
cmp
sub
lock or
jb
push
or
scas
sbb
push
popa   
sbb
xlat
sbb
xor
adc
or
cmp
imul
fdivrl
insl
or
jg
or
sbb
(bad)  
scas
sbb
cmp
or
cs stos
sarb
pop
dec
(bad)  
dec
imul
(bad)  
xor
push
pop
jmp
aad
cmp
pop
jns
jl
hlt    
adc
hlt    
lds
sub
cmp
(bad)  
(bad)  
jns
cmp
pop
mov
mov
dec
aaa    
fstl
rorb
jne
xor
or
mov
sbb
xor
in
mov
cmp
mov
add
mov
xor
sub
out
xlat
or
inc
jbe
push
or
out
dec
pusha  
add
inc
jbe
xchg
cmp
jb
jbe
stos
adc
aas    
loop
iret   
adc
mov
int
mov
fdiv
cmc    
insb
movsb
mov
das    
insb
fdivrs
fdiv
cmc    
insb
movsb
scas
push
outsb
adc
cmp
fdivrs
fdiv
cmc    
insb
movsb
mov
xor
mov
fcom
shl
jns
inc
pop
push
or
imul
out
ds inc
sbb
pop
popa   
outsb
sub
push
test
sbb
pop
sub
aas    
or
imul
dec
jns
inc
dec
add
scas
xor
loopne
add
ds sti 
sbb
fsubl
lods
inc
bound
jg
sub
pop
or
scas
(bad)  
fdiv
sbb
pop
push
std    
xor
mov
mov
movsl
sub
xlat
fstpl
xlat
iret   
and
dec
push
push
mov
xor
jge
cmc    
ret
add
pop
cmp
aas    
gs loopew
movl
clc    
cmp
sub
jns
cmp
cwtl   
and
fcompl
lods
sub
push
jnp
cmp
test
pop
fstpt
pop
push
push
(bad)  
inc
bswap
jge
cmp
sbb
gs loopew
(bad)  
or
gs jne
out
(bad)  
out
imul
pop
bound
sub
sbb
negl
cmp
in
stos
adc
aas    
loop
iret   
fadd
push
adc
sub
sbb
and
adc
and
xor
das    
rcrl
iret   
and
cmp
fcomi
fbld
inc
sub
das    
jecxz
hlt    
stc    
pop
faddl
movl
mov
aam
cmp
mov
push
and
dec
xlat
sarl
cs lahf 
rorb
loop
push
jo
gs lret 
(bad)  
out
add
xor
aaa    
adc
daa    
mov
jns
push
adc
das    
adc
or
push
adc
hlt    
sbb
adc
aas    
loop
iret   
fdivrl
insl
or
ffree
adc
iret   
icebp  
cs
cmp
mov
cmp
lods
out
push
cmp
repnz mov
outsl
cmp
sbb
and
pop
ljmp
dec
push
sub
sbb
pop
ds sbb
and
adc
and
xor
das    
rcrl
iret   
adc
cltd   
xlat
adc
xor
sub
mov
mov
xchg
movsb
mov
(bad)  
nop
sbb
add
fsub
out
std    
jae
out
adc
fwait
ljmp
inc
dec
js
push
jecxz
mov
das    
pusha  
cmp
or
inc
dec
jbe
dec
call
fwait
mov
jnp
aaa    
pop
jg
xor
mov
mov
sbb
test
lock dec
add
adc
fmul
jp
xchg
mov
adc
cmp
lock es lret
cmp
push
dec
add
pop
jns
add
fcmovnu
hlt    
stc    
pop
out
aam
lret   
pop
cmp
adc
out
cmp
in
mov
lods
sbb
test
push
add
sub
jbe
movsl
ret    
push
sbb
dec
es pop
sbb
inc
and
add
jmp
xor
ljmp
jle
mov
fs inc
lret
dec
pop
and
xor
hlt    
pop
out
sub
pop
aaa    
iret   
enter
sbb
sbb
lahf   
sub
lret
add
dec
jge
iret   
push
pop
(bad)  
and
lret
add
dec
jge
fcompl
hlt    
mov
mov
inc
push
gs push
in
cwtl   
or
or
cmp
nop
dec
xchg
enter
hlt    
mov
mov
jl
data16 or
icebp  
adc
pop
lds
fdiv
repz push
ficoml
lret   
lcall
sub
sbb
cs mov
enter
xchg
add
add
int3   
or
mov
sbb
subl
sub
mov
sbb
push
mov
enter
xchg
add
add
(bad)  
sub
rcr
hlt    
repz push
ficoml
lret   
lcall
invd   
ret
adc
xor
jbe
rcr
hlt    
repz push
ficoml
lret   
lcall
nopl
hlt    
mov
movsl
adc
adc
adc
cmp
fmuls
out
(bad)  
and
pop
mov
test
dec
adc
fmuls
sbb
xor
out
dec
enter
xchg
add
add
std    
and
int
push
ret    
jmp
inc
push
sbb
adc
mov
shrd
out
out
dec
enter
xchg
add
add
(bad)  
and
push
sbb
(bad)
inc
push
sbb
xor
(bad)  
movsl
adc
adc
adc
cmp
lods
fst
iret   
pop
xchg
loop
jb
(bad)  
lds
hlt    
call
out
or
mov
movsl
adc
adc
adc
sub
(bad)  
icebp  
iret   
and
stc    
xor
xlat
add
stos
sub
es cmc 
mov
cmp
les
mov
inc
jb
movsl
ljmp
mov
cmp
sub
mov
jge
cmp
out
dec
enter
xchg
add
add
icebp  
sbb
pop
inc
lock fsts
je
loope
enter
hlt    
repz pop
aas    
js
add
push
push
and
jb
in
cmp
or
fdivrl
jle
sbb
iret   
clc    
push
pop
pop
jno
mov
lods
pop
dec
adc
push
data16 or
and
push
sbb
js
add
push
in
(bad)  
or
jge
cmp
fdivrl
jle
sbb
ret    
fimul
adc
ljmp
hlt    
repnz dec
ret
pop
or
das    
adc
sarb
jnp
out
xlat
xor
cmp
pushf  
ss sbb
movsb
pop
lret   
pop
push
mov
(bad)  
aas    
imul
fstps
inc
jl
jae
imul
and
sub
popa   
or
mov
cli    
sub
sbb
cli    
jmp
fwait
or
mov
or
lock ds sbb
and
in
gs push
out
ficom
or
push
cmp
push
cmp
cmp
sub
dec
push
les
pop
fldenv
fsubrl
rorl
test
sub
inc
or
rorl
test
in
aaa    
cmp
push
dec
ss out
adc
push
in
into   
hlt    
adc
stos
cmp
or
aad
hlt    
adc
stos
xchg
ficom
arpl
xor
adc
stos
repnz into 
adc
and
fcom
aas    
inc
(bad)
add
push
mov
mov
pop
inc
dec
adc
push
sbb
sub
xchg
dec
xchg
enter
hlt    
mov
movsl
or
ja
mov
iret   
dec
push
or
cmp
out
fcoms
(bad)  
xor
push
cmp
or
(bad)  
aas    
inc
push
dec
push
or
mov
xlat
iret   
sbb
mov
enter
jb
mov
add
push
xor
rcl
iret   
sbb
test
and
mov
cmp
fdivrl
nop
and
sub
adc
pop
jl
push
add
push
sub
adc
fdivrl
nop
and
push
or
and
xlat
jle
xor
mov
fdiv
lds
pop
xlat
mov
int
cmp
cmp
lods
(bad)  
jno
movsl
ret
ljmp
das    
push
cmp
sbb
pop
inc
xor
add
add
pop
push
sbb
dec
adc
(bad)  
xor
push
cmp
or
(bad)  
aas    
inc
push
jne
fwait
sbb
inc
nop
(bad)  
hlt    
lds
pop
fistl
push
jae
stc    
adc
pop
push
push
cmp
sbb
js
jge
inc
xor
push
or
sbb
les
loopne
dec
jno
sbb
xlat
xor
sbb
mov
or
ret    
aas    
inc
push
xor
sbb
in
push
pop
add
xchg
mov
xor
insl
jno
jae
arpl
(bad)  
iret   
sbb
lods
fisubrl
out
(bad)  
out
adc
sub
ret    
jecxz
jo
jo
and
dec
xchg
enter
hlt    
mov
(bad)  
pop
jae
sbb
sub
fs inc
inc
add
out
push
ret
and
cmp
jge
xlat
jmp
jno
gs loope
out
xlat
or
cmp
jge
ds in
push
adc
fsubl
test
or
and
rcrb
cmp
outsb
aam
lret   
(bad)  
out
ljmp
adc
pop
push
jno
gs ds stos
das    
xlat
xor
hlt    
pop
push
inc
dec
jb
sub
aaa    
xchg
sbb
pop
inc
int
in
and
jae,pt
pop
lret   
(bad)  
out
adc
push
inc
inc
adc
mov
push
inc
dec
jb
sub
hlt    
leave  
pop
fimul
adc
test
and
jae,pt
ljmp
add
dec
push
pop
aas    
pop
jns
add
fcmovnu
adc
adc
or
dec
imul
(bad)  
mov
jg
cmp
adc
adc
or
enter
jo
add
divb
jb
or
xor
xlat
sub
or
inc
push
jp
pop
adc
sbb
jl
add
in
pusha  
add
sbb
cmp
(bad)  
adc
mov
fdiv
jmp
add
jb
sub
xor
je
out
(bad)  
or
sub
and
xchg
(bad)  
and
or
fcoml
adc
or
leave  
xchg
xor
push
or
fcmovbe
or
jnp
das    
adc
jno
adc
mov
sbb
dec
popa   
or
pusha  
sbb
lods
sub
sbb
and
xlat
or
call
fdivrl
aas    
and
out
(bad)  
out
in
inc
(bad)  
or
xor
push
cmp
(bad)  
cmp
int3   
pop
loopne
aad
or
in
and
insb
fcmovne
dec
jns
mov
hlt    
cmc    
insb
movsb
mov
mov
add
jne
ds mov
xor
pop
sbbb
add
sbb
fist
fs sbb
and
in
sti    
pop
js
push
or
fdivs
jle
enter
push
add
cmp
cmp
jmp
sbb
and
xlat
or
ret
cli    
cmp
jae
sub
data16 insb
inc
cmp
push
iret   
sbb
push
jg
insb
inc
jmp
cmp
ret    
rorb
xor
sbbl
stc    
jnp
mov
(bad)  
pop
ja
or
mov
xor
cld    
out
xchg
dec
xor
sbbl
mov
lea
xchg
fstps
int
push
dec
fs cmp
adc
sub
push
inc
cmp
fsts
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
mov
pusha  
push
sbb
or
sti    
sbb
xor
hlt    
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
(bad)  
cld    
test
ds ret
mov
or
cld    
cmpsb
(bad)  
loop
fistp
aaa    
outsb
inc
subps
pushf  
loopne
mov
sahf   
lock
ljmp
xchg
pushf  
mov
js
inc
outsb
sub
popl
mov
inc
outsb
sub
cmp
or
jl
cmp
fdivr
mov
hlt    
hlt    
repnz movl
dec
fs add
inc
push
daa    
cmp
jp
out
scas
iret   
aam
mov
out
xchg
dec
inc
data16 cmp
push
push
popa   
sbb
je
push
das    
or
shr
les
xchg
inc
push
popa   
jl
xor
outsb
das    
or
scas
mov
dec
or
stos
mov
jb
jno
pushf  
mov
insb
or
ljmp
mov
je
leave  
mov
push
test
inc
cmp
aaa    
inc
mov
imul
push
(bad)  
icebp  
repz lock repz ret 
xor
add
mov
xchg
or
pop
lock sarb
or
ret    
jecxz
mov
or
xor
add
mov
push
xor
mov
ret    
leave  
push
jbe
push
mov
imulb
cmpsl
out
imull
adc
inc
fiaddl
dec
inc
outsb
push
cmp
cli    
mov
xor
mov
aas    
cmp
mov
push
sub
or
call
xchg
mov
or
push
xor
or
mov
mov
ljmp
(bad)  
sub
test
xchg
ss mov
stos
cmp
ficom
adc
jb
ds inc
je
inc
pushf  
loope
outsl
adc
mov
test
mov
jns
aas    
imul
push
sbb
or
aas    
scas
cld    
in
fsqrt  
daa    
jne
or
scas
add
test
(bad)  
sahf   
out
int3   
hlt    
lea
cmp
or
outsb
pusha  
inc
adc
add
out
stos
icebp  
or
das    
mov
ljmp
mov
push
adc
jno
jl
mov
sahf   
xor
adc
test
push
shl
call
iret   
das    
adc
inc
push
test
out
cmp
or
loope
cs repz aaa 
enter
jbe
imul
aad
and
jno
push
mov
mov
or
pop
scas
cmp
test
or
dec
push
nop
idivb
js
mov
(bad)  
cwtl   
nop
hlt    
inc
add
fwait
int3   
ror
mov
jo
push
inc
pop
shl
mov
mov
testl
push
es ja
cli    
mov
dec
inc
je
mov
es scas
jbe
mov
adc
cmp
sub
mov
pushf  
ret    
adc
mov
or
(bad)  
fdivs
add
insb
pop
jp
idivb
mov
mov
ljmp
ror
pop
or
ja
lock mov
(bad)  
or
jb
ja
jo
aas    
jne
(bad)  
les
sub
jle
inc
push
(bad)  
loopne
jnp
or
pop
xchg
and
mov
cwtl   
mov
outsl
sub
stos
in
mov
(bad)  
insl
or
lret
xlat
lods
inc
cltd   
mov
jmp
mov
mov
mov
xchg
or
push
mov
push
(bad)  
cltd   
out
cmp
xor
sub
test
xlat
mov
push
es inc
push
xlat
jmp
adc
dec
push
popf   
pusha  
pop
jp
push
push
xor
sarl
push
das    
dec
je
xchg
(bad)  
loopne
cmp
adc
aaa    
adc
xchg
(bad)  
mov
mov
les
not
ds dec
lret   
jno
ljmp
loop
xchg
or
pusha  
and
push
adc
cmp
sub
dec
lock mov
(bad)  
rol
loopne
lret
lret   
(bad)  
mov
push
popa   
jo
xor
push
or
adc
rol
rorb
cwtl   
loop
inc
add
adc
cmp
sub
dec
repnz mov
(bad)  
rol
loopne
les
mov
aas    
outsb
das    
outsl
jl
cmp
jbe
aaa    
adc
jb
outsb
scas
iret   
int3   
hlt    
mov
in
loop
mov
aaa    
push
daa    
ja
jl
aas    
push
das    
cvttps2pi
test
in
mov
mov
daa    
jno
push
or
outsb
das    
or
inc
aaa    
push
xchg
(bad)  
out
mov
pushf  
out
mov
cmpsl
mov
jle
aas    
push
das    
dec
insb
push
inc
aaa    
jbe
xor
jl
out
scas
jmp
mulb
mov
jo
xor
add
sbb
cmp
sub
xchg
mov
mov
rorb
xor
ja
or
cmp
das    
xor
jp
repnz mov
mov
lock lret
add
push
cmp
sub
bound
and
dec
cli    
mov
rol
mov
ret    
mov
mov
cmp
imul
xor
sbb
stos
leave  
(bad)  
repnz test
ljmp
or
aas    
push
(bad)  
(bad)  
bound
push
cmpsl
fdivr
mov
hlt    
hlt    
repnz movl
dec
fs add
inc
push
daa    
cmp
jp
out
scas
iret   
aam
mov
out
xchg
dec
inc
data16 cmp
push
push
popa   
sbb
je
push
das    
or
shr
les
xchg
inc
push
popa   
jl
xor
outsb
das    
or
dec
inc
data16 xlat
ror
test
out
movl
into   
push
shll
push
js
cmp
sub
jo
inc
add
and
mov
andb
cwtl   
cli    
cmp
dec
push
push
pop
add
dec
cmp
mov
fsub
mov
nop
clc    
cli    
mov
jb
inc
add
pusha  
push
cmp
or
add
shl
lock lcall
xchg
int3   
ret    
loop
inc
inc
or
or
or
bound
push
mov
mov
ret    
(bad)  
stos
(bad)  
lods
aam
aaa    
jbe
ja
or
aas    
outsb
das    
das    
cmp
jp
mulb
mov
hlt    
lret
pop
ja
insb
and
push
das    
outsl
sbb
jp
push
daa    
aaa    
mov
mov
mov
mov
(bad)  
mov
mov
aas    
outsb
das    
imul
adc
dec
aas    
outsb
scas
leave  
int3   
testb
cld    
mov
data16 xor
push
daa    
jno
jle
aas    
push
das    
or
test
mov
cmp
jb
ja
sbb
cmp
(bad)  
jo
xor
xor
call
out
nop
loopne
mov
mov
cmp
sub
push
dec
xor
aaa    
cmp
bound
cmpb
cltd   
int3   
mov
jb
xor
add
sbb
cmp
sub
ljmp
call
and
xchg
cmpsl
icebp  
hlt    
(bad)  
out
into   
push
mov
mov
movl
dec
fs push
cmp
push
and
je
out
scas
leave  
aam
mov
out
orl
inc
push
push
addr16 sbb
jp
push
das    
(bad)  
hlt    
mov
xchg
(bad)  
in
in
lret
iret   
(bad)  
movsb
test
inc
push
addr16 jl
cmp
outsb
das    
unpcklps
inc
data16 xlat
(bad)  
int3   
mov
test
loop
xchg
and
aas    
push
das    
dec
je
dec
inc
push
push
add
test
xchg
sahf   
hlt    
aas    
outsb
das    
dec
push
push
or
push
add
inc
aas    
push
(bad)  
mov
pushf  
(bad)  
hlt    
mov
jo
inc
add
pusha  
push
pshufb
loop
out
cwtl   
mov
test
bnd ret 
loop
inc
inc
or
cmp
or
sbb
inc
add
sar
mov
mov
bnd ret 
(bad)  
roll
push
dec
add
inc
(bad)  {z}
les
xchg
sarb
add
jb
dec
pop
push
sub
shl
lock xchg
test
repnz sarb
les
fs jbe
or
cmp
jp
push
or
cld    
mov
(bad)  
scas
xchg
lods
aam
xor
ja
adc
aas    
or
insb
push
dec
cmp
cmovl
mov
cli    
mov
stos
mov
test
mov
jbe
aas    
push
sub
dec
testb
repnz test
out
inc
push
push
dec
jl
xor
push
add
sbb
inc
jb
and
out
iret   
mov
scas
sub
or
push
ja
adc
inc
dec
rol
shl
mov
xorb
cld    
cli    
mov
xor
jo
cmp
xor
or
inc
adc
cvttps2pi
retw   
cli    
shr
mov
cli    
(bad)  
xchg
cmovns
inc
outsb
sub
push
add
or
xor
ror
loopne
(bad)  
(bad)  
repnz scas
mov
and
inc
xor
or
jo
push
sub
ljmp
out
inc
iret   
insb
inc
or
test
mov
pusha  
cmp
jbe
dec
js
ss inc
pop
push
scas
int3   
mov
call
scas
mov
dec
jl
jb
jb
sub
dec
xor
sub
dec
hlt    
xchg
in
aas    
outsb
sub
data16 xor
or
jl
xor
push
add
sub
fs mov
cli    
les
xchg
sarb
add
push
das    
or
push
pusha  
(bad)  
repnz scas
(bad)  
mov
mov
mov
sbb
inc
adc
nopl
inc
outsb
sub
xor
mov
cwtl   
test
stos
sub
or
push
ja
adc
cmp
push
shl
mov
cld    
xorb
cld    
cli    
(bad)  
repnz aas 
dec
jo
dec
inc
outsb
sub
or
dec
repnz cmpb
hlt    
cmp
jno
bound
cmp
push
dec
jo
xor
adc
or
fs mov
test
ljmp
xchg
scas
sub
daa    
push
(bad)  
iret   
fdivr
mov
repnz scas
jmp
cwtl   
mov
hlt    
idivb
push
dec
cmp
invd   
insb
inc
adc
or
jp
mov
mov
bound
jbe
dec
js
xor
push
test
xchg
mov
(bad)  
repnz scas
test
dec
push
sbb
cmp
and
push
mov
js
inc
outsb
sub
adc
aas    
or
or
inc
cmp
or
push
ja
adc
cmp
and
add
cmpsl
mov
ret    
out
stos
stos
mov
lret   
mov
jb
ret    
ljmp
or
dec
xchg
cli    
inc
addr16 push
jp
or
jb
xor
(bad)  
mov
hlt    
sub
push
jecxz
jp
es inc
push
sub
gs inc
or
sub
and
mov
or
cmp
cli    
mov
and
mov
loopne
xchg
scas
test
ja
pusha  
cmp
push
jae
sbb
inc
adc
nopl
inc
outsb
sub
mov
mov
fsubl
ds push
pop
faddl
mov
iret   
leave  
in
mov
ret    
fsqrt  
and
sub
jbe
aas    
push
jp
aas    
dec
or
push
or
inc
or
push
xor
and
mov
pop
out
jecxz
mov
stos
les
xchg
cmp
cs daa 
push
xor
inc
mov
adc
mov
or
mov
xchg
test
repnz sarb
(bad)  
(bad)  
xchg
scas
mov
inc
inc
data16 xor
lea
dec
pop
xchg
adc
das    
push
fsub
lret
lcall
scas
cmp
mov
leave  
out
nop
mov
cmp
les
push
insb
icebp  
in
(bad)  
mov
jl
cmp
push
movsl
jbe
sub
stos
adc
jo
inc
jl
jo
xor
mov
sub
(bad)  
cmp
push
sub
adc
mov
jb
xchg
ljmp
(bad)  
mov
lods
fs lret
rcrl
cmp
pop
cld    
out
lret
cmp
inc
lods
scas
fstps
xor
adc
push
cli    
int
fsubrs
add
add
scas
mov
pusha  
je
mov
jo
sbb
cmp
mov
int3   
xor
jecxz
out
push
adc
inc
cmpsb
repnz mov
lds
mov
(bad)  
mov
mov
ja
outsb
cmc    
ret
das    
jo
dec
cmp
ds enter
xor
hlt    
sbb
jp
cmp
imul
inc
and
das    
dec
jo
mov
jg
mov
bound
ret
das    
insb
push
jp
movsl
xlat
scas
sbb
(bad)  
inc
data16 xlat
sub
call
leave  
in
lcall
add
xor
xor
jecxz
test
cmp
or
add
xor
(bad)  
iret   
(bad)  
mov
mov
test
inc
push
imul
xor
(bad)  
push
jno
imul
add
add
mov
xchg
mov
dec
push
data16 mov
dec
cwtl   
(bad)  
mov
mov
inc
loope
andps
cmc    
push
cmpsl
mov
or
jo
jp
mov
mov
mov
movsl
ret    
fcom
orb
jle
outsl
mov
div
xor
inc
jno
adc
jmp
hlt    
and
cmp
and
movl
ret
ret    
in
cs pusha 
sbb
dec
aaa    
push
mov
in
lods
mov
jno
inc
pop
dec
or
lahf   
fmull
mul
mov
mov
je
push
test
fchs   
aam
ficom
xor
ja
fs ja
jl
mov
adc
jmp
adc
dec
cmp
(bad)  
leave  
fsub
mov
push
jae
test
addr16 mov
pusha  
inc
mov
loopne
mov
pushf  
mov
pushf  
clc    
test
stos
stos
mov
lret
xlat
mov
jb
cmp
dec
inc
push
add
adc
dec
insb
or
inc
outsb
sub
or
cmp
jo
ror
sar
mov
repnz iret 
leave  
cld    
lcall
test
ljmp
xchg
lea
das    
dec
dec
push
inc
push
sub
push
xor
push
xor
push
inc
add
and
mov
lcall
out
mov
scas
mov
ss inc
push
push
jae
add
xor
invd   
insb
bound
or
fdivr
mov
test
mov
enter
jb
outsl
jl
cmp
outsb
sub
add
inc
push
push
xor
mov
pushf  
mov
ljmp
xchg
mov
aas    
outsb
das    
gs jl
xor
push
pop
xor
data16 jl
adc
or
test
sahf   
mov
out
lea
mov
push
js
push
dec
xor
or
mov
sahf   
cli    
cmp
push
and
das    
das    
xor
mov
(bad)  
iret   
mov
js
cmp
add
inc
or
mov
xchg
mov
mov
imul
xor
jl
out
scas
jmp
sar
mov
sbb
jp
(bad)  
out
loope
(bad)  
mov
mulb
mov
cmc    
test
adc
leave  
(bad)  
repnz mov
jo
xor
add
sbb
cmp
sub
out
mov
mov
push
mov
jg
inc
gs scas
cmp
xor
repnz adc
or
int3   
push
popf   
fdivrl
add
xchg
mov
add
inc
bound
xor
mov
fs xor
add
dec
xor
aaa    
cmp
ja
pop
shl
cld    
cltd   
test
loop
mov
popa   
cmp
jo
inc
jno
cmp
or
ljmp
jmp
mov
or
js
inc
or
dec
insb
push
inc
xor
(bad)  
push
retw   
loope
out
cwtl   
mov
xchg
test
(bad)  
stos
sub
cmp
sub
inc
add
xor
(bad)  
imul
lcall
dec
mov
clc    
hlt    
mov
add
xor
aaa    
sbb
or
cmp
jp
push
or
cld    
mov
repnz scas
jmp
cwtl   
mov
hlt    
(bad)  
mov
lock lret
mov
inc
jb
push
(bad)  
les
xchg
sarb
add
jbe
dec
pusha  
jle
mov
lcall
test
ljmp
push
(bad)  
sbb
push
sub
ljmp
shrb
outsl
jo
cmp
(bad)  
nopl
inc
outsb
sub
xor
cmpsl
mov
mov
jle
inc
jb
dec
jl
xor
sub
(bad)  
mov
ljmp
xchg
lea
aaa    
dec
add
jl
out
stos
(bad)  
mov
mov
icebp  
cld    
(bad)  
mov
out
sub
dec
aaa    
jbe
pabsb
adc
stos
fdivr
mov
in
sbb
push
das    
dec
insb
or
xor
aaa    
sbb
or
cmp
mov
(bad)  
loopne
jb
inc
dec
push
xor
sub
push
push
inc
outsb
xlat
loope
cli    
les
xchg
sarb
add
push
rdtsc  
mov
mov
repnz scas
in
lcall
test
lds
insb
push
jp
adc
aas    
jnp
loope
sarb
xor
cmp
outsb
lock push
cmp
pop
fadd
cli    
mov
(bad)  
out
test
fdivr
lret
add
leave  
(bad)  
mov
pop
jne
xor
mov
(bad)  
mov
and
test
in
lcall
ja
lods
mov
leave  
notl
loopne
hlt    
sub
dec
cmpsl
inc
or
repz adc
add
(bad)  
stos
mov
ret    
hlt    
push
push
xor
inc
mov
cmp
push
les
mov
mov
xor
out
jae
jl
inc
jb
dec
jl
ss inc
push
sub
je
aas    
push
aaa    
sub
inc
cmp
push
xor
insb
mov
repnz
iret   
jne
add
scas
cmpsl
stos
cmc    
movsb
nop
cmc    
repz enter
mov
xchg
sti    
and
sub
je
aas    
push
xor
dec
cmp
and
sub
(bad)  
repnz scas
lret   
int3   
call
idiv
test
pushf  
loopne
mov
ja
ds data16
repz sar
mov
cld    
cwtl   
mov
mov
mov
nop
(bad)  
mov
in
or
das    
dec
dec
push
scas
(bad)  
in
add
adc
sbb
je
int
sahf   
mov
xchg
(bad)  
pushf  
cli    
lock ret 
stc    
(bad)  
leave  
sub
je
or
(bad)  
xchg
scas
(bad)  
mov
repnz xor
insb
and
add
inc
inc
adc
or
pusha  
ret    
stc    
xlat
sbb
hlt    
adc
jo
imul
inc
nop
ror
pop
(bad)  
xchg
push
leave  
xchg
nop
(bad)  
mov
out
add
jb
dec
dec
push
inc
push
sub
push
xor
push
xor
jo
push
push
or
adc
(bad)  
outsb
xlat
ret
xor
outsb
sub
sbb
aas    
or
cmp
je
push
or
(bad)  
mov
repnz scas
in
lcall
test
ljmp
movsb
xlat
lahf   
mov
aam
sbb
dec
fimul
push
inc
push
xlat
jp
(bad)  
mov
repnz iret 
leave  
cld    
lcall
test
ljmp
xchg
scas
sub
xor
ja
adc
aas    
or
insb
pop
je
out
lds
push
sub
push
add
or
or
inc
cmp
or
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
icebp  
cld    
(bad)  
mov
out
daa    
dec
inc
dec
and
mov
mov
push
dec
mov
popa   
scas
out
mov
mov
mov
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
jb
or
pusha  
ret    
or
dec
clc    
mov
xchg
xchg
ror
mov
in
out
xchg
scas
mov
sub
data16 xor
or
jl
mov
mov
out
xchg
scas
mov
ja
fs ss aas 
or
jl
cmp
push
add
sbb
jb
sub
dec
xor
xchg
subl
pusha  
mov
jno
je
inc
mov
and
repnz scas
iret   
int3   
call
lret   
loopne
mov
pushf  
loopne
mov
pushf  
cli    
(bad)  
xchg
cmovg
inc
outsb
sub
adc
cs push
or
mov
aas    
push
ja
pusha  
cmp
push
jae
sbb
inc
adc
nopl
inc
outsb
sub
xor
aas    
or
dec
lock xchg
in
pop
xchg
dec
iret   
ss jo
mov
lcall
jb
cmp
or
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
icebp  
cld    
(bad)  
mov
out
lea
xor
sub
lods
cmp
mov
mov
or
aas    
push
or
push
and
sub
pusha  
(bad)  
repnz scas
(bad)  
mov
mov
mov
loop
mov
lea
inc
test
jp
out
mov
add
sbb
inc
stos
out
mov
or
cmp
mov
dec
cli    
sub
dec
mov
xlat
fwait
mov
add
jl
inc
jb
imul
push
sub
je
aas    
push
xor
dec
cmp
and
sub
(bad)  
repnz scas
lret   
int3   
idivb
int3   
jb
cmp
dec
inc
push
add
adc
dec
insb
or
inc
outsb
sub
or
cmp
jo
ror
sar
mov
repnz iret 
leave  
dec
jl
aas    
pop
push
push
(bad)  
adc
and
or
mov
(bad)  
mov
dec
lcall
les
inc
jb
dec
jl
ss inc
push
sub
je
aas    
push
aaa    
sub
inc
cmp
push
xor
insb
mov
repnz scas
iret   
int3   
call
lret   
loopne
mov
inc
bound
aas    
or
jl
cmp
push
add
sbb
jb
sub
dec
xor
sub
dec
hlt    
xchg
lock mov
mov
pushf  
fbstp
popa   
bnd jne
adc
imul
inc
pushf  
xchg
xchg
mov
jl
ret    
rcll
pusha  
bound
jb
leave  
xlat
test
inc
pop
inc
xor
mov
nop
scas
scas
mov
inc
(bad)  
leave  
test
dec
jl
leave  
push
or
movaps
popa   
mov
jg
mov
(bad)  
iret   
jecxz
scas
(bad)  
call
cmp
mov
jg
inc
push
sub
xchg
xorb
push
imul
xor
xor
sbb
stos
leave  
(bad)  
repnz test
ljmp
or
aas    
push
(bad)  
(bad)  
bound
push
cmpsl
fdivr
mov
hlt    
hlt    
repnz movl
dec
fs add
inc
push
fucomip
(bad)  
inc
jmp
add
(bad)  
scas
pusha  
movsl
sti    
aas    
push
jno
bound
cmp
push
(bad)  
cld    
fdivl
adc
or
jo
outsb
sub
or
cmp
jo
sarw
jl
lret   
aaa    
insl
sub
push
sbb
inc
js
mov
push
xchg
sbb
sub
and
mov
push
cmp
iret   
loopne
lret
scas
(bad)  
mov
out
mov
das    
or
or
add
ror
sar
mov
repnz iret 
leave  
cld    
lcall
sbb
adc
or
jo
outsb
sub
or
mov
adc
repz fsub
(bad)  
mov
rorb
cmp
dec
pop
add
inc
data16 xlat
repz fsub
mov
clc    
pushf  
mov
xchg
scas
jmp
test
daa    
push
das    
dec
push
das    
or
jp
push
sub
cmp
(bad)  
into   
xlat
cmpsl
mov
stos
mov
jbe
aas    
push
dec
dec
jb
aaa    
outsb
mov
(bad)  
out
mov
(bad)  
mov
xchg
orl
scas
shrl
xor
xor
push
inc
aas    
or
sub
test
xchg
inc
outsb
sub
cmp
or
jl
cmp
aas    
xor
mov
lock
mov
mov
(bad)  
xchg
scas
(bad)  
xor
inc
add
xor
inc
adc
ret    
out
stos
jmp
call
dec
jl
xor
sub
jbe
aas    
push
xor
jo
shrb
(bad)  
xchg
scas
mov
inc
inc
data16 xor
push
leave  
fsub
mov
xchg
int
sahf   
mov
xchg
(bad)  
pushf  
cli    
lock ret 
shrb
pop
sbb
jp
push
sub
cmp
aas    
push
repz fsub
mov
clc    
pushf  
mov
xchg
scas
jecxz
les
aas    
push
sub
add
aas    
push
xor
jp
jbe
cmovl
stos
(bad)  
out
mov
lock lret
mov
inc
jb
inc
dec
jb
das    
jbe
or
push
dec
aas    
push
int
loop
mov
sahf   
mov
xchg
scas
in
cli    
les
lcall
inc
mov
cltd   
sti    
cmp
addr16 jo
or
jb
aaa    
sub
inc
cmp
push
xor
insb
mov
repnz scas
iret   
int3   
call
lret   
loopne
mov
gs jle
inc
jns
mov
xchg
cmovns
or
push
sub
jbe
aas    
push
xor
inc
cmp
push
or
repnz scas
leave  
int3   
ljmp
xchg
loop
mov
sahf   
hlt    
(bad)  
xchg
cmovns
inc
outsb
sub
push
add
or
or
inc
cmp
or
adc
or
sarl
gs or
insb
push
scas
out
cld    
cmpb
cld    
test
scas
stos
mov
stos
mov
je
aas    
push
jae
jo
cmp
and
or
inc
jb
or
jp
push
sub
cmp
aas    
push
repz fsub
mov
clc    
pushf  
mov
xchg
scas
jmp
clc    
lret
stos
mov
xchg
(bad)  
mov
rolb
jbe
dec
dec
outsb
and
popa   
sub
xor
lahf   
mulb
mov
rolb
jbe
dec
dec
outsb
and
das    
inc
insb
or
outsb
sub
sbb
aas    
jbe
leave  
in
rol
mov
out
loopne
xchg
scas
test
push
ja
pusha  
cmp
push
jae
sbb
aaa    
jb
bsf
mov
loopne
lret
scas
(bad)  
mov
out
mov
aas    
push
ja
pusha  
cmp
push
jns
or
xchg
mov
mov
mov
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
sub
push
shl
mov
ljmp
xchg
lea
cmovns
inc
outsb
sub
push
add
or
xor
pusha  
mov
xchg
loop
mov
sahf   
icebp  
xor
ja
fs ss aas 
or
jl
dec
sub
mov
hlt    
hlt    
(bad)  
mov
lock lret
mov
inc
jb
dec
dec
push
ja
add
aas    
sbb
lea
scas
mov
inc
inc
data16 xor
or
jl
xor
jp
mov
mulb
mov
in
or
das    
dec
dec
push
dec
pusha  
add
aas    
push
aaa    
sbb
jbe
push
push
xor
sbb
mov
mov
mov
aas    
push
ja
adc
cmp
scas
rorb
in
mov
and
mov
xor
out
inc
inc
jbe
aaa    
jb
xor
jo
ror
sar
mov
repnz iret 
leave  
cld    
lcall
test
ljmp
xchg
lea
add
mov
mov
out
stos
in
xchg
test
repnz sarb
and
outsb
sub
push
cmc    
mov
jl
cmp
push
add
sbb
jb
sub
dec
xor
xor
test
pushf  
cli    
les
xchg
(bad)  
mov
ja
cmp
xchg
fsub
mov
pushf  
cli    
les
xchg
sarb
add
jbe
dec
dec
outsb
and
das    
inc
insb
or
outsb
sub
sbb
aas    
or
and
mov
stos
sub
or
push
ja
adc
cmp
push
jae
insb
dec
inc
jb
aaa    
inc
clc    
mov
cli    
shr
lods
out
and
mov
fdivr
mov
out
stos
jmp
xchg
mov
lock
mov
mov
(bad)  
xchg
scas
mov
jns
push
inc
aas    
or
ret    
out
stos
in
xchg
test
repnz sarb
(bad)  
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
or
mov
rorb
scas
iret   
enter
xchg
scas
lret   
in
mov
cwtl   
in
(bad)  
out
push
popa   
sbb
inc
xor
xor
push
inc
aas    
or
sub
test
mov
pusha  
lcall
cltd   
push
mov
inc
mov
icebp  
or
add
jle
jns
lea
ja
xchg
sub
jle
loope
std    
ret    
rcll
add
mov
ror
out
mov
repnz out
inc
enter
lahf   
out
faddl
pop
or
inc
pop
sub
ljmp
pop
push
and
mov
mov
mov
jae
lods
out
stos
mul
out
in
ret    
jmp
bound
dec
xor
leave  
cld    
(bad)  
int3   
(bad)  
repnz scas
movsl
mov
xlat
mov
jo
cmp
push
nop
cld    
cli    
sbb
ja
xchg
inc
je
ds push
cmovno
mov
rcl
orb
lods
ljmp
bound
out
cmp
cli    
mov
cli    
cmp
pop
jno
out
aam
test
lods
jg
xor
push
icebp  
out
lcall
idivl
xchg
dec
leave  
or
(bad)  
push
lcall
idivl
js
aas    
add
jnp
test
ret
xor
(bad)  
dec
(bad)  
imul
or
fyl2xp1 
pushf  
jbe
or
popa   
push
inc
imul
inc
pusha  
and
cwtl   
roll
repz daa 
dec
movsl
repnz
mov
cmp
or
adc
inc
mov
mov
cmc    
fnstenv
lock xlat
and
jae
mov
mov
mov
inc
lcall
cmp
sbb
adc
xchg
leave  
mov
sbb
roll
or
nop
cmp
xchg
xor
outsb
aaa    
iret   
and
mov
push
inc
ja
sbb
cltd   
or
rcll
out
in
dec
jnp
in
xchg
stos
prefetchw
jbe
mov
jl
mov
jno
mov
push
je
into   
xlat
jecxz
sahf   
inc
cmp
std    
jo
or
adc
cmpsl
ror
cltd   
jno
or
or
repnz out
xchg
dec
pushf  
inc
cli    
arpl
(bad)  
pop
pop
jp
cmp
inc
inc
cli    
cmc    
movsb
mov
ljmp
or
xor
aaa    
sbb
or
cmp
jp
push
test
call
push
addr16 jl
or
push
sub
je
aas    
push
xor
dec
cmp
pop
inc
mov
stos
or
ret
ljmp
pop
push
cmp
mov
jmp
popf   
ret    
lea
adc
dec
aaa    
inc
(bad)  
in
gs push
inc
cld    
sahf   
mov
out
ljmp
shrl
pop
jge
imul
call
data16
cmc    
test
test
aad
aam
lock xchg
inc
mov
dec
pop
pop
push
ja
int
sahf   
mov
ja
add
ds pop
stos
xchg
nop
pop
lret
cmc    
dec
out
or
pop
mov
xor
jmp
mov
or
adc
sbb
mov
xchg
mov
bound
out
lods
icebp  
fimul
cmpsb
lock sar
insl
ljmp
dec
scas
mov
push
dec
dec
xchg
mov
mov
pop
mov
(bad)  
sub
mov
sub
dec
pop
jp
bnd es ja
jge
cmp
dec
cwtl   
xchg
mov
(bad)  
repnz scas
test
mov
xor
out
jae
jl
inc
jb
dec
jl
ss inc
out
push
mov
mov
jo
adc
das    
(bad)  
mov
xor
mov
pop
push
inc
mov
sub
test
or
dec
ret    
adc
add
jp
out
movsb
dec
scas
(bad)  
xlat
mov
js
xor
ja
adc
aas    
or
insb
push
dec
cmp
invd   
insb
inc
adc
or
jp
out
stos
neg
in
mov
cmpb
push
aas    
push
pushf  
hlt    
mov
xchg
inc
push
xlat
(bad)  
cld    
mov
shrl
faddl
mov
or
divps
out
aas    
inc
push
gs mov
sub
sbb
aas    
or
cmp
je
push
or
(bad)  
mov
repnz scas
in
lcall
test
ljmp
xchg
out
xor
or
mov
inc
nop
loope
xor
sbb
push
sbb
movl
ja
je
aas    
jb
loopne
fimull
cs push
add
and
mov
test
div
repnz int
out
jo
mov
(bad)  
fldt
aas    
pop
shll
out
mov
(bad)  
in
mov
add
dec
(bad)  
les
or
sub
cmp
pop
movzbl
mov
mov
stc    
sub
ja
push
sub
cld    
out
cli    
(bad)  
repnz xor
cmp
shr
mov
mov
ret
js
cmp
dec
leave  
mov
fbstp
add
dec
pop
addr16 xor
xchg
test
icebp  
xlat
add
push
leave  
and
mov
repnz or
es mov
mov
repnz out
(bad)  
int
cmp
sti    
out
(bad)  
(bad)  
(bad)  
jb
inc
shrl
pusha  
push
dec
xor
jb
lret
inc
push
test
xchg
les
push
dec
cmp
push
cmp
push
and
mulb
inc
jg
inc
pusha  
push
je
adc
mov
loopne
mov
mov
cmp
sub
push
inc
xor
xor
or
stos
jmp
repnz mov
mov
jb
xor
add
sbb
cmp
sub
xchg
mov
mov
jl
aas    
push
das    
dec
je
jb
push
push
pop
sub
mov
test
mov
das    
dec
push
adc
inc
push
pop
or
dec
aas    
push
(bad)  
iret   
(bad)  
in
movl
inc
jo
jne
pop
sub
mov
dec
pop
jle
inc
jb
gs jl
add
push
sub
jbe
inc
push
cmc    
in
out
les
out
loopne
xchg
scas
mov
inc
dec
sbb
jae
ds sub
sbb
jp
adc
mov
lods
or
loope
pop
call
es pop
mov
push
js
adc
adc
imulb
scas
inc
mov
adc
or
hlt    
addr16 xchg
adc
cwtl   
clc    
inc
dec
stos
xor
jp
mov
(bad)  
je
cs pusha 
inc
mov
gs mov
dec
lcall
jmp
xchg
repnz mov
mov
xchg
pushf  
cmp
push
push
xor
mov
in
mov
jbe
or
outsb
pusha  
inc
adc
add
out
stos
icebp  
call
push
jae
jl
inc
jb
dec
jl
ss inc
push
sub
push
mov
sbb
inc
push
(bad)  
xor
add
or
or
mov
scas
neg
(bad)  
mov
push
dec
pop
bound
jbe
dec
js
xor
das    
gs sbb
inc
xor
or
movsl
ret    
mov
sbb
inc
xor
push
js
ljmp
mov
mov
repnz les
(bad)  
in
add
adc
xor
xchg
fdivr
mov
aam
(bad)  
mov
or
outsb
sub
jle
inc
jb
pop
fsub
mov
mov
out
rclb
inc
push
add
push
aaa    
sub
arpl
cli    
sar
orb
lods
mov
inc
outsb
sub
data16 xor
or
jl
xor
pop
push
daa    
cmp
je
ljmp
(bad)  
roll
arpl
(bad)  
(bad)  
idivb
add
aas    
push
aaa    
mov
scas
mov
mov
test
mov
pusha  
cmp
jbe
dec
pusha  
or
inc
jb
and
test
test
rcll
jl
inc
aas    
outsb
sub
sub
inc
aas    
or
sub
test
out
mov
in
mov
xor
loope
imul
iret   
cltd   
xchg
bnd ret 
xor
repz lock pushf 
mov
test
(bad)  
cmp
imul
inc
jb
aaa    
sub
inc
cmp
push
xor
insb
mov
repnz scas
iret   
int3   
call
lret   
loopne
mov
pushf  
loopne
mov
sahf   
hlt    
(bad)  
xchg
cmovns
inc
outsb
sub
push
add
or
or
inc
cmp
or
adc
xor
xlat
rorl
xor
sub
cmp
insb
movl
enter
jb
imul
push
sub
je
aas    
push
xor
dec
cmp
and
mov
mov
mov
decl
ja
insb
bound
or
sub
mov
in
cmpsb
(bad)  
xchg
scas
lret   
in
fdivr
pop
jne
jno
push
xor
push
or
jbe
or
push
jo
bound
mov
mov
inc
jb
inc
dec
push
xor
sub
push
xor
push
or
jbe
or
push
jo
adc
movsl
fdivr
test
xchg
cmpb
les
out
loopne
xchg
scas
mov
pop
jno
jbe
inc
push
(bad)  
loopne
mov
pushf  
loopne
mov
pushf  
cli    
(bad)  
xchg
aas    
dec
add
inc
add
and
repnz scas
iret   
int3   
call
lret   
loopne
mov
pushf  
loopne
mov
sahf   
hlt    
(bad)  
xchg
cmovns
inc
outsb
sub
push
add
or
or
inc
cmp
or
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
mov
jle
inc
jb
or
jo
push
sub
ljmp
out
das    
dec
dec
push
ja
add
aas    
push
xor
jp
jbe
pabsb
adc
stos
fdivr
mov
xchg
xchg
ror
mov
in
out
xchg
scas
mov
ja
fs ss aas 
add
adc
and
cltd   
mul
in
mov
mov
xor
jno
data16 xor
or
jl
xor
push
mov
clc    
sahf   
mov
loop
mov
sahf   
lock
xchg
scas
sub
sbb
pushf  
mov
cmp
push
mov
das    
dec
pusha  
jl
cwtl   
xchg
xchg
xor
jbe
push
or
inc
adc
inc
or
mov
outsb
xchg
icebp  
(bad)  
cld    
loop
loope
mov
push
xchg
fiadd
mov
sar
mov
push
mov
jl
inc
jnp
jo
ret
or
add
xchg
rorl
lcall
inc
jne
xchg
jo
dec
xor
je
cmp
test
icebp  
adc
jbe
mov
mov
idiv
ret    
call
cli    
inc
cmp
pusha  
hlt    
test
outsl
dec
(bad)  
insl
pop
xor
mov
fst
mov
push
jge
xor
dec
jecxz
cmp
addl
out
xor
xor
repnz adc
push
mov
mov
or
push
(bad)  
sar
xor
inc
lea
dec
insl
or
mov
dec
je
out
mov
mov
pop
je
push
mov
(bad)  
hlt    
stos
js
ret
mov
enter
inc
lods
stos
repnz or
mov
lret
out
xor
sbb
mov
(bad)  
(bad)  
loope
add
insb
mov
or
add
push
jno
mov
adc
ret    
push
cs mov
push
icebp  
xchg
jp
(bad)  
pop
stos
out
gs mov
outsb
(bad)
jl
inc
pop
push
push
rolb
iret   
push
popa   
and
insl
push
out
pusha  
pop
jp
out
movsl
out
and
xor
and
out
or
outsb
xor
mov
scas
jmp
cwtl   
mov
hlt    
(bad)  
mov
outsl
inc
xor
sahf   
add
(bad)  
mov
sbb
cmp
cmp
pusha  
mov
sbb
sarl
mov
fnstenv
push
stos
(bad)  
fist
jp
jno
mov
xchg
sarb
hlt    
sbb
aaa    
and
lret
push
int
adc
out
cmp
mov
fsqrt  
imul
mov
jge
cmp
mov
das    
dec
push
das    
add
push
sub
cmp
jo
push
int
loop
mov
(bad)  
out
xchg
scas
fnstcw
test
and
in
(bad)  
xor
outsb
xor
sub
test
xchg
in
dec
or
lock inc
pop
int
push
push
or
xchg
mov
mov
cmp
(bad)  
xor
inc
add
icebp  
push
push
jae
leave  
outsb
mov
cmp
jno
jbe
aaa    
and
mov
(bad)  
hlt    
adc
mov
mov
les
pushf  
repnz lret 
pop
sub
movsb
mov
xlat
cli    
adc
and
xchg
mov
call
mov
pop
(bad)  
icebp  
outsl
pushf  
mov
(bad)  
scas
adc
stc    
lret
test
test
scas
divl
aaa    
cli    
sbb
dec
jnp
ljmp
mov
xor
stos
out
(bad)  
push
mov
fsubl
cld    
scas
fstp
ja
pusha  
mov
(bad)  
ficom
pshufw
xchg
mov
push
jge
xlat
scas
sti    
adc
inc
popf   
mov
aas    
addr16 das 
lods
fdivl
or
jb
ja
jb
inc
push
loope
(bad)  
hlt    
and
jno
xchg
mov
jl
sub
cmp
(bad)  
nopl
inc
outsb
sub
xor
aas    
or
mov
mov
inc
pop
push
or
push
mov
insl
ds movsbl
mov
clc    
hlt    
mov
or
inc
pusha  
push
add
out
test
(bad)  
out
mov
adc
ja
js
cmp
sub
cmpb
loopne
mov
pushf  
cli    
(bad)  
xchg
sbb
push
xor
insb
mov
repnz scas
iret   
int3   
call
sti    
orb
sbb
inc
push
sub
jbe
aas    
push
xor
jbe
out
mov
outsb
jb
fldcw
mov
and
xlat
js
inc
mov
mov
xchg
push
ja
add
inc
addr16 push
inc
cld    
jecxz
(bad)  
scas
push
(bad)  
mov
lods
int3   
fadd
add
divps
add
mov
adc
inc
popa   
xlat
mov
mov
loop
movl
icebp  
cmc    
in
sub
pop
sar
in
jecxz
mov
adc
andl
das    
aas    
or
sarl
xor
outsb
inc
or
(bad)  
mov
add
push
or
cld    
mov
repnz scas
jmp
cwtl   
mov
hlt    
(bad)  
mov
lock lret
cmp
test
and
xor
push
sub
arpl
xlat
loop
out
mov
mov
cmp
inc
insb
push
or
scas
sub
cmp
dec
js
xor
das    
gs sbb
inc
xor
xor
push
jo
(bad)  
scas
mov
mov
das    
inc
dec
push
xor
sub
push
jp
jb
(bad)  
lods
aam
aaa    
jbe
ja
or
aas    
outsb
das    
das    
cmp
jp
mulb
mov
hlt    
lret
pop
jo
outsb
es inc
pop
sub
xor
add
imull
mov
xor
inc
adc
dec
insb
or
xor
aaa    
sbb
or
push
jbe
aas    
push
jno
adc
cmp
push
dec
pusha  
outsb
inc
inc
jb
or
pusha  
inc
push
sub
ljmp
fisubrl
daa    
or
mov
xchg
lret
xlat
mov
jo
cmp
jae
or
xor
bndldx
outsb
ret    
(bad)  
stos
out
nop
cld    
cli    
(bad)  
repnz iret 
(bad)  
mov
stos
sub
or
push
adc
sub
jb
push
iret   
sar
mov
add
cmp
das    
and
sti    
sub
aas    
aaa    
push
(bad)  
cli    
mov
scas
cmp
jbe
(bad)  
jmp
push
cmp
lret
(bad)  
div
call
fisubr
jbe
inc
into   
push
mov
ret
(bad)  
rcr
sbb
dec
mov
push
ret    
pusha  
outsl
inc
(bad)  
xchg
mov
int3   
jge
mov
lds
and
ja
or
fisubr
and
repz rolb
mov
dec
loope
int3   
cmc    
(bad)  
btc
jb
add
ljmp
add
jp
push
fwait
iret   
fnop   
mov
dec
jb
xchg
enter
add
mov
jb
cmp
dec
mov
hlt    
cmp
jno
push
cltd   
cmp
imul
jb
neg
mov
aas    
outsb
das    
sub
push
je
repnz pop
dec
pop
push
cmp
cmp
push
daa    
ja
test
(bad)  
repnz test
xchg
sbb
add
in
das    
inc
aaa    
jbe
(bad)  
or
in
test
(bad)  
icebp  
clc    
xchg
mov
hlt    
mov
mov
inc
insb
sub
or
push
sub
cmp
cli    
cld    
in
daa    
insl
das    
dec
dec
outsb
and
das    
inc
insb
or
outsb
sub
sbb
aas    
or
(bad)  
les
sahf   
lock
xchg
scas
and
outsb
sub
push
add
or
or
mov
xchg
mov
(bad)  
repnz scas
test
mov
xchg
mov
dec
jp
adc
cvttps2pi
retw   
out
stos
lret   
shl
mov
xorb
jno
fsts
sbb
adc
xlat
repz int3 
sub
sub
lea
sub
cmp
jbe
or
loope
fistl
inc
gs xor
or
nopl
mov
cwtl   
cli    
(bad)  
movsl
xlat
pop
ds pusha 
push
(bad)  
push
aam
mov
jno
add
mov
out
lret
fisttpl
comiss
imul
sbb
outsl
scas
enter
mov
in
mov
xlat
add
jbe
dec
jns
cmp
add
xor
test
fucom
mov
pushf  
sti    
les
mov
inc
arpl
jl
cmp
aaa    
sbb
aas    
or
sar
mov
mov
mov
je
xor
xor
scas
in
jecxz
mov
jle
inc
or
je
adc
or
ror
loopne
cli    
mov
mov
inc
or
jp
push
and
mov
lea
aad
mov
jo
cmp
das    
jl
jnp
or
btr
mov
test
mov
jbe
cmp
inc
sub
push
xor
mov
test
mov
mov
aas    
or
pusha  
insl
inc
ss push
sub
inc
lock xchg
ror
mov
mov
inc
add
insb
push
dec
jb,pt
aaa    
inc
testb
rol
mov
into   
mov
mov
inc
add
push
in
mov
rclb
aas    
outsb
das    
and
sbb
divb
mov
jnp
aas    
outsb
sub
and
rorl
pop
jle
cmp
js
inc
push
push
xor
pop
mov
repnz
insl
inc
cmp
mov
fbstp
outsb
das    
imul
adc
jge
out
ljmp
leave  
xchg
or
movl
xor
mov
cld    
scas
loope
(bad)  
hlt    
sub
jno
push
xor
das    
gs sbb
inc
xor
xor
push
inc
aas    
or
sub
test
out
mov
in
mov
out
call
inc
jno
cmp
xor
int
loop
popf   
ljmp
not
push
(bad)  
hlt    
mov
pop
dec
pop
add
aas    
push
daa    
cmp
dec
xor
sub
dec
hlt    
xchg
lock mov
mov
mov
cli    
mov
stos
mov
test
mov
bound
jbe
dec
js
xor
push
or
push
xchg
leave  
(bad)
jl
dec
popf   
mov
dec
(bad)
cmp
and
bound
dec
mov
out
lea
xchg
enter
inc
jg
insl
sub
mov
mov
pusha  
scas
les
xchg
bnd ret 
mov
cmp
push
ja
or
inc
bound
add
aas    
or
mov
test
test
(bad)  
mov
js
inc
jb
jno
popaw  
inc
add
scas
rolb
mov
jb
inc
add
pusha  
outsb
inc
inc
jb
or
pusha  
inc
push
sub
ljmp
xchg
int
ljmp
or
adcl
jnp
mov
ljmp
(bad)  
xor
repnz push
enter
inc
arpl
fsubr
lret   
or
cmpsl
notl
push
aas    
insl
sar
andb
mov
cmp
or
push
dec
xchg
mov
out
xlat
and
push
sbb
mov
add
dec
jp
or
ret    
cli    
sarl
push
jp
inc
jb
dec
jl
xor
sub
jbe
aas    
push
xor
inc
cmp
push
or
repnz scas
leave  
int3   
ljmp
xchg
loop
mov
sahf   
icebp  
xor
dec
pcmpeqd
add
mov
xor
or
fisub
data16 jo
cmp
push
movaps
dec
inc
addr16 rol
int3   
repnz mov
out
mov
arpl
xor
push
or
js
inc
js
cmpsb
(bad)  
cmc    
test
repnz int
icebp  
scas
mov
push
jno
push
and
gs push
and
jp
repnz cmpsb
idiv
(bad)  
out
inc
add
test
lcall
test
ljmp
mov
iret   
cld    
mull
addr16 mov
in
mov
jb
aaa    
das    
adc
dec
push
inc
inc
add
repnz cmovs
lret
(bad)  
movl
dec
mov
cli    
push
ljmp
xchg
scas
sub
xor
ja
adc
aas    
or
insb
push
dec
cmp
invd   
insb
inc
adc
or
jp
out
stos
neg
in
mov
cmpb
cld    
test
scas
stos
mov
stos
mov
je
mov
(bad)  
mov
mulb
inc
jp
imul
scas
leave  
int3   
ljmp
xchg
insb
inc
inc
inc
add
pusha  
cmp
jbe
mov
loop
ret    
adc
mov
ret    
(bad)  
jb
mov
loopne
les
outsb
wbinvd 
mov
xlat
subl
cmp
push
jae
sbb
inc
adc
nopl
inc
outsb
sub
xor
aas    
or
dec
lock xchg
mov
in
mov
and
mov
xor
out
jae
jl
inc
jb
dec
jl
es inc
push
sub
and
ljmp
mov
mov
nop
(bad)  
mov
out
add
jb
dec
dec
push
inc
push
sub
push
xor
push
xor
jo
push
push
or
out
iret   
leave  
hlt    
out
mov
(bad)  
hlt    
mov
push
cmp
cmp
dec
xor
mov
mov
cmpl
roll
push
sbb
inc
adc
stos
fmull
mov
add
je
popa   
adc
and
xchg
cld    
dec
mov
sbb
sub
ljmp
or
aaa    
push
add
pop
push
jl
cli    
scas
jmp
insl
das    
dec
dec
outsb
push
inc
sub
ret    
cli    
push
adc
call
jmp
clc    
cli    
(bad)  
repnz iret 
mov
and
push
jno
adc
cmp
push
dec
pusha  
outsb
inc
inc
jb
or
pusha  
inc
push
sub
ljmp
out
lea
add
dec
push
mov
repnz scas
mov
mov
rorb
cmp
dec
dec
insb
es inc
adc
dec
insb
or
xor
aaa    
sbb
or
cmp
jp
push
or
cld    
mov
nop
mov
mov
stos
mov
add
cmp
lods
shl
mov
ljmp
or
outsb
cmp
jp
xchg
cmpsl
(bad)  
(bad)  
mov
inc
je
inc
pushf  
icebp  
sti    
adc
iret   
push
pusha  
daa    
cmp
daa    
xor
mov
iret   
iret   
cld    
cwtl   
mov
mov
mov
nop
(bad)  
mov
out
add
jb
dec
dec
push
inc
push
sub
push
xor
push
xor
jo
push
push
mov
xchg
cltd   
mov
data16 xor
or
add
inc
inc
adc
inc
jb
sbb
jbe
aas    
push
leave  
aam
mov
pusha  
jl
xor
mov
push
jg
inc
push
scas
xchg
mov
les
jbe
aas    
push
dec
dec
jb
cmp
and
push
and
das    
add
mov
(bad)  
repnz scas
movsl
mov
xlat
mov
jo
cmp
jae
(bad)  
cmp
test
popf   
nop
icebp  
ds dec
push
and
mov
leave  
mov
pop
inc
cmp
xchg
mov
mov
add
sub
ja
(bad)  
push
pop
iret   
push
cmp
pop
(bad)  
xor
mov
notb
ds mov
mov
sbb
mov
mov
jecxz
dec
inc
jne
cmp
xchg
mov
insb
and
pop
push
push
or
add
mov
push
inc
(bad)  
movb
andl
or
scas
mov
adc
lock inc
adc
sub
aam
div
iret   
mov
or
mov
leave  
or
xor
mov
das    
inc
jp
clc    
inc
xchg
ret
hlt    
ljmp
(bad)  
(bad)  
stos
(bad)  
in
fsqrt  
mov
push
or
adc
inc
stos
mov
mov
push
push
jbe
xchg
fnsave
hlt    
sub
xor
test
mov
adc
(bad)  
fnstenv
inc
dec
xlat
rcrl
xor
imul
(bad)  
or
out
mov
dec
mov
or
cmp
leave  
mov
push
sub
mov
push
in
stos
jnp
lea
pop
insl
cs inc
jae
xchg
or
lret
xor
add
mov
(bad)  
stos
xchg
inc
icebp  
pop
jmp
mov
movsl
jnp
or
jno
out
sarb
jo
fwait
xchg
test
jo
lods
cld    
jle
jb,pt
ja
jecxz
ds xchg
push
jp
jge
mov
lea
out
push
into   
push
sbb
out
fildl
pop
dec
mov
in
mov
hlt    
xor
stos
mov
das    
aaa    
pop
cwtl   
mov
jl
mov
sbb
xlat
ljmp
mov
insb
push
aas    
push
rcrl
inc
xchg
hlt    
outsb
inc
dec
push
adc
scas
ret    
add
sub
xchg
aas    
gs das 
ja
xchg
adc
nop
cmpsl
leave  
rcr
inc
dec
xlat
xchg
pop
ja
push
jb
pop
xlat
lcall
jo
test
push
jae
push
dec
cmp
invd   
insb
inc
adc
or
jp
out
stos
neg
in
mov
cmpb
cld    
test
scas
stos
mov
stos
mov
jbe
aas    
push
dec
dec
jb
cmp
and
push
and
das    
cmp
add
ljmp
loopne
movsb
mov
cmp
push
xor
push
xchg
scas
(bad)  
ficoml
pusha  
push
(bad)  
push
or
add
mov
loopne
mov
rolb
sbb
aas    
jle
jecxz
mov
or
movsbl
mov
xlat
roll
push
aaa    
add
xchg
ret    
loop
xchg
nop
cli    
hlt    
das    
xor
sub
gs
xlat
rcr
insb
push
jp
push
and
mov
xchg
lock mov
mov
mov
cli    
mov
stos
mov
test
mov
bound
jbe
dec
js
xor
das    
gs sbb
inc
xor
xor
push
inc
aas    
or
sub
test
out
mov
in
mov
out
mov
(bad)  
hlt    
mov
jle
inc
jb
gs jl
add
push
sub
jbe
aas    
push
or
push
and
sub
pusha  
(bad)  
repnz scas
out
sahf   
mov
xchg
(bad)  
pushf  
cli    
lock ret 
aam
insl
sbb
dec
xor
pusha  
and
push
pop
and
mov
cwtl   
stos
mov
data16 test
or
inc
dec
mov
mov
cmp
in
pushf  
sarl
repnz scas
leave  
jmp
push
jb
mov
mov
je
aas    
push
xor
dec
mov
mov
push
popa   
jo
add
or
or
inc
cmp
or
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
icebp  
cld    
(bad)  
mov
out
lea
iret   
mov
iret   
jl
and
not
lret
(bad)  
mov
rorb
cmp
dec
dec
insb
es inc
adc
dec
insb
or
xor
aaa    
sbb
or
cmp
jp
push
or
cld    
mov
repnz scas
jmp
cwtl   
mov
hlt    
(bad)  
mov
lock lret
mov
inc
jb
dec
dec
push
ja
add
aas    
push
xor
jp
adc
aaa    
dec
clc    
mov
add
mov
xchg
sarb
add
jb
dec
dec
push
inc
push
sub
push
xor
push
xor
jo
push
push
or
adc
ret    
out
stos
in
xchg
test
repnz sarb
(bad)  
mov
stos
mov
je
aas    
push
jae
jo
cmp
and
or
inc
jb
or
jp
push
sub
cmp
aas    
push
repz fsub
mov
clc    
pushf  
mov
xchg
scas
jmp
clc    
lret
rorl
das    
gs sbb
inc
and
or
cld    
movsb
ret    
fcmovbe
mov
jb
dec
dec
push
inc
push
sub
push
xor
push
xor
jo
push
push
or
adc
ret    
out
stos
in
xchg
test
repnz sarb
(bad)  
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
jb
or
jo
push
sub
ljmp
xchg
int
out
(bad)  
(bad)  
repnz scas
mov
mov
rorb
cmp
dec
dec
insb
es inc
adc
dec
insb
or
xor
aaa    
sbb
movntps
mov
mov
or
ljmp
add
jo
jp
push
and
inc
xchg
cmpsl
mov
add
push
xor
addl
cmp
or
cmp
jp
mov
icebp  
cld    
(bad)  
mov
in
xlat
and
and
wbinvd 
mov
scas
(bad)  
scas
in
cmp
xor
jl
int
mov
push
or
push
xchg
cmpsl
mov
outsb
inc
and
xor
loopne
mov
fiadd
outsb
sub
jo
mov
(bad)  
hlt    
mov
mov
inc
jno
pop
and
mov
orl
das    
or
test
cwtl   
ljmp
je
ljmp
outsb
das    
gs jl
jp
push
xchg
icebp  
call
xlat
loop
in
add
push
add
sub
scas
mov
dec
or
cmp
push
mov
mov
(bad)  
cmc    
push
dec
pusha  
popa   
inc
mov
add
add
aas    
(bad)  {z}
xlat
jecxz
out
test
jbe
mov
jae
aas    
jb
iret   
shr
mov
push
inc
lcall
cmp
push
fadd
cli    
stos
mov
jbe
push
inc
jb
(bad)  
cli    
xor
dec
je
fs mov
cmc    
jno
sbb
jne
idivb
cmp
mov
mov
mov
clc    
add
push
xor
pop
xchg
sbb
test
dec
mov
pushf  
cli    
(bad)  
xchg
cmovg
inc
outsb
sub
adc
aas    
or
or
inc
cmp
xor
or
inc
adc
cvttps2pi
retw   
out
stos
lret   
shl
mov
xorb
cld    
cli    
(bad)  
repnz iret 
(bad)  
mov
stos
sub
or
push
ja
adc
cmp
push
jae
insb
dec
inc
jb
(bad)  
push
or
add
mov
loopne
mov
pushf  
mov
pushf  
clc    
test
stos
stos
mov
les
jb
cmp
dec
inc
push
add
push
xor
inc
cmp
push
or
repnz scas
leave  
fmull
sub
cmp
or
mov
ror
loopne
(bad)  
(bad)  
repnz scas
mov
aas    
dec
jo
xor
pop
unpcklps
aas    
or
sub
mov
in
cmpsb
(bad)  
xchg
scas
lret   
in
mov
cwtl   
in
mov
cmp
xchg
add
push
and
xchg
lcall
das    
popa   
or
inc
xor
sub
dec
testb
repnz test
mov
mov
hlt    
mov
stos
mov
xchg
mov
add
cmp
or
sbb
inc
add
rorb
mov
(bad)  
cmp
sub
jl
inc
jb
(bad)  
sbb
push
sub
ljmp
loop
mov
outsb
dec
dec
jbe
jl
push
shl
lock out
cli    
mov
push
and
push
scas
cld    
jmp
mov
cli    
out
jl,pt
lock jl
cmp
push
aaa    
or
pop
pop
je
or
cmovns
mov
mov
mov
cmp
push
test
jb
leave  
out
mov
mov
dec
dec
pcmpeqd
sub
sub
mov
jmp
in
inc
jb
mov
mov
dec
mov
(bad)  
pop
scas
lcall
(bad)  
cmp
aas    
lret
mov
mov
(bad)  
out
mov
cmpl
pop
fcoml
xchg
or
mov
out
out
mov
aas    
push
ja
pusha  
cmp
sub
jnp
out
mov
pop
xlat
sahf   
mov
inc
mov
inc
(bad)  
in
mov
jno
ja
andb
mull
arpl
push
mov
les
jno
jno
in
xor
push
mov
push
sbb
mov
mov
and
dec
or
pusha  
movl
icebp  
mov
jmp
mov
dec
in
sbb
adc
mov
adc
mov
fnstsw
adc
pop
jge
cmp
mov
icebp  
enter
repz sar
mov
cld    
cwtl   
mov
je
and
or
or
unpckhps
jg
call
shr
hlt    
mov
cmovg
cmp
and
imul
out
bound
das    
jbe
mov
push
xlat
fsubl
dec
lock push
mov
sarl
push
pop
add
jb
leave  
ret    
in
stos
mov
out
cmp
jno
jmp
stos
mov
ljmp
push
das    
adc
imul
das    
pop
(bad)  
lock mov
outsb
and
push
nop
scas
mov
mov
pop
in
push
mov
pop
je
push
add
add
arpl
in
jcxz
(bad)  
(bad)  
repnz scas
mov
insl
loopne
jns
or
leave  
push
jbe
cmp
cmp
divb
mov
mov
jb
or
jno
inc
push
xlat
std    
in
out
cli    
sub
jne
hlt    
mov
xchg
test
adc
aaa    
mov
xlat
fistl
inc
movsb
repnz lea
push
scas
hlt    
in
fild
cwtl   
(bad)  
repnz out
xlat
repz faddl
outsl
out
aad
ficomp
cmp
lock
hlt    
mov
or
sbb
fldt
and
sbb
and
mov
fidivrl
das    
push
mov
aas    
jne
cmpsb
faddl
ljmp
in
in
les
ret
jle
inc
pusha  
push
lret
lret
stc    
mov
push
lcall
inc
mov
sub
fwait
sub
and
mov
push
call
push
sub
test
repnz mov
push
mov
out
add
loopne
les
ljmp
enter
rcrl
sub
xor
ljmp
loope
ds gs push
imul
(bad)  
hlt    
clc    
pop
cmp
sbb
push
add
mov
lods
int3   
popl
loope
mov
roll
dec
in
aam
fistp
fsubl
ss jno
movups
imul
stos
sbb
push
dec
jl
aas    
jno
push
popa   
mov
in
xor
pop
mov
stos
cs dec
or
aaa    
push
or
fs cs aas 
dec
sar
cld    
stc    
lret
push
jno
outsb
push
adc
adc
xor
push
js
jnp
lods
repnz lret
insb
nop
mov
bound
xchg
test
scas
(bad)  
ss pop
or
aaa    
dec
in
in
ret    
cmp
xor
sbb
push
das    
inc
or
mov
bnd jo,pt
jp
cmp
movsb
faddl
(bad)  
aas    
arpl
pushf  
sti    
lret
dec
(bad)  
lahf   
xchg
mov
rorb
arpl
mov
mov
icebp  
xchg
jne
inc
aam
pop
cmp
(bad)  
(bad)  
jmp
lea
jns
sub
cmovno
mov
dec
jo
xor
inc
aaa    
dec
clc    
rol
(bad)  
xlat
aas    
dec
(bad)
idivb
inc
or
arpl
dec
xchg
xchg
pusha  
jbe
or
sti    
xlat
jmp
ljmp
xlat
clc    
sub
xor
push
xor
(bad)  
sub
jecxz
imul
in
movb
mov
scas
mov
scas
mov
push
ja
add
aas    
push
push
(bad)  
mov
or
rcrl
inc
or
mov
xchg
mov
dec
scas
cmpsl
mov
or
push
add
sbb
jg
in
xchg
pushf  
cli    
lret
sbb
outsb
cmp
pop
push
add
dec
mov
scas
iret   
aad
mov
add
mov
xchg
dec
inc
push
inc
adc
jge
cmovp
cltd   
icebp  
cli    
divb
ror
and
dec
insb
sbb
cmp
das    
arpl
je
out
mov
lss
fdiv
les
push
aaa    
dec
call
mov
sbb
adc
sub
mov
ljmp
mov
test
push
sahf   
icebp  
cli    
repnz in
lods
scas
adc
mov
out
in
in
js
pop
je
push
lcall
push
jg
push
dec
mov
out
dec
(bad)  
cmpsl
(bad)  
push
push
and
push
mov
out
or
bound
adc
push
loopne
and
push
mov
out
mov
(bad)  
hlt    
mov
jle
inc
jb
gs jl
add
push
sub
jbe
aas    
push
dec
sti    
mov
xchg
adc
jg
mov
ljmp
imulb
jmp
push
sub
adc
mov
mov
outsb
xchg
std    
or
push
je
(bad)  
stos
arpl
(bad)  
jo
sbb
mov
scas
mov
push
test
or
mov
xchg
xlat
ret
les
jo
cmp
ret    
jmp
jl
add
jbe
aaa    
dec
repnz fcmovnb
les
cmpsb
sarb
aas    
outsb
inc
(bad)  
xchg
(bad)  
adc
int3   
xor
pop
out
les
jns
xchg
mov
jbe
sbb
xchg
mov
mov
inc
dec
push
stos
int3   
hlt    
mov
icebp  
fs int
jno
aas    
in
in
mov
inc
(bad)  
push
aam
mov
cli    
mov
insb
hlt    
andl
(bad)  
stos
(bad)  {z}
fmull
mov
push
inc
or
jb
hlt    
or
hlt    
inc
or
cli    
push
outsb
cs
push
loope
pushf  
mov
repnz les
jl
arpl
push
je
ljmp
mov
mov
loop
ret    
ficoml
pusha  
pop
je
or
dec
cli    
mov
out
stos
in
xchg
test
repnz sarb
(bad)  
mov
stos
mov
je
aas    
push
jae
jo
cmp
and
or
inc
jb
or
jp
push
xchg
idiv
lock
mov
inc
je
adc
mov
fs inc
mov
pop
cmp
cld    
lock loop
stc    
imul
pop
jl
xchg
jno
(bad)  
jae
aas    
data16 das 
dec
lock call
leave  
jecxz
es inc
rcl
or
cwtl   
sbb
rcrb
xchg
mov
cmp
jbe
mov
xchg
cmp
(bad)
jg
out
lret   
dec
mov
(bad)  
mov
cli    
stos
fmull
mov
sbb
rcl
das    
push
jns
xchg
or
mov
mov
les
inc
dec
or
stos
lret
icebp  
cmp
pop
dec
leave  
(bad)  
enter
test
push
ja
adc
cmp
push
jae
insb
dec
inc
jb
(bad)  
push
or
add
mov
loopne
mov
pushf  
mov
pushf  
clc    
test
stos
stos
mov
or
or
jl
cmp
mov
out
scas
mov
sub
jbe
xor
or
jo
push
sub
ljmp
xchg
int
out
(bad)  
(bad)  
repnz scas
mov
test
push
jno
bound
inc
adc
gs sbb
inc
sub
cwtl   
mov
pop
or
cmp
and
or
inc
jb
or
jp
push
sub
cmp
aas    
push
repz fsub
mov
clc    
pushf  
mov
xchg
scas
jmp
clc    
lret
stos
mov
xchg
(bad)  
mov
rorb
cmp
dec
dec
insb
es inc
adc
dec
insb
or
xor
aaa    
sbb
or
cmp
jp
push
or
cld    
mov
(bad)  
scas
out
mov
sub
dec
js
cmp
das    
or
inc
cmp
and
sub
pusha  
(bad)  
repnz scas
(bad)  
mov
mov
mov
loop
mov
sahf   
lock
xchg
scas
and
outsb
sub
push
add
or
insb
push
inc
cmp
or
mov
std    
pushf  
icebp  
cli    
mov
push
xor
insb
mov
repnz scas
iret   
int3   
call
lret   
loopne
mov
pushf  
loopne
mov
pushf  
cli    
(bad)  
xchg
cmovg
inc
outsb
sub
adc
aas    
or
or
inc
cmp
xor
or
inc
adc
cvttps2pi
retw   
out
stos
lret   
shl
and
push
out
push
(bad)  
pop
(bad)  
(bad)  
(bad)  
in
mov
or
dec
les
push
iret   
mov
sub
mov
out
(bad)
jp
outsl
and
jbe
mov
add
adc
je,pt
or
adc
(bad)  
jne
div
ss insl
inc
dec
add
jne
das    
das    
adc
inc
xor
sub
dec
testb
repnz test
mov
mov
hlt    
mov
stos
mov
xchg
inc
jns
dec
pusha  
jge
mov
mov
and
mov
xor
out
jae
jl
inc
jb
dec
jl
ss inc
push
sub
je
cmpsl
ljmp
repnz sub
outsb
inc
inc
jb
or
pusha  
inc
push
sub
ljmp
xchg
int
sahf   
mov
xchg
(bad)  
pushf  
cli    
lock ret 
rclb
adc
inc
jb
or
jo
push
sub
ljmp
xchg
int
out
(bad)  
(bad)  
repnz scas
mov
mov
cwtl   
cmp
mov
call
das    
sub
dec
xor
sub
dec
hlt    
xchg
lock mov
mov
mov
cli    
mov
stos
mov
test
mov
pusha  
cmp
jbe
movntps
jo
arpl
mov
stos
mov
jbe
aas    
push
dec
dec
jb
cmp
and
push
and
das    
add
push
sub
cmp
jo
push
int
loop
mov
sahf   
mov
dec
jbe
xor
sub
jbe
aas    
push
or
push
and
sub
pusha  
(bad)  
repnz scas
(bad)  
mov
out
(bad)
add
add
aas    
or
dec
lock xchg
mov
in
mov
and
mov
xor
out
jae
jl
inc
jb
dec
jl
ss inc
push
sub
je
aas    
push
div
hlt    
(bad)  
mov
add
push
xor
jo
push
push
or
adc
ret    
out
stos
in
xchg
test
repnz sarb
(bad)  
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
jb
or
jo
push
sub
ljmp
xlat
sub
dec
mov
push
aaa    
aaa    
pop
test
mov
mov
out
cmp
push
jnp
icebp  
scas
xchg
pushf  
mov
sub
ja
adc
cmp
push
jae
insb
dec
inc
jb
(bad)  
push
or
add
mov
xchg
(bad)  
mov
dec
je
push
nop
not
pushf  
scas
movl
leave  
clc    
(bad)  
mov
out
lea
iret   
mov
and
push
jno
adc
cmp
and
je
ljmp
fsubl
addr16 jl
jp
push
xchg
neg
mov
lods
mov
xor
ja
fs ss aas 
or
jl
cmp
push
add
sbb
jb
sub
mov
repnz int3 
ret    
rcll
inc
pop
inc
aas    
outsb
mov
mov
out
mov
mov
cmp
push
or
ljmp
out
stos
test
test
loope
jbe
ror
rcl
cli    
mov
nop
(bad)  
mov
out
add
jb
ja
xchg
pushf  
in
jmp
sub
dec
hlt    
xchg
insb
dec
inc
jb
movaps
ret    
inc
jb
sub
dec
xor
sub
dec
idiv
ds push
xor
jl
inc
jb
(bad)  
mov
xlat
mov
call
mov
in
mov
adc
mov
mov
mov
outsl
addr16 clc 
jo
rcr
(bad)  
push
loopne
mov
out
or
mov
mov
popl
out
loopne
xchg
lea
dec
dec
outsb
and
das    
inc
insb
or
outsb
sub
sbb
aas    
or
cmp
je
push
or
(bad)  
mov
repnz scas
in
lcall
test
ljmp
xchg
scas
(bad)  
lods
mov
inc
outsb
sub
cmp
or
jl
cmp
xor
jl
xor
(bad)  
iret   
js
test
scas
stos
mov
stos
mov
jbe
aas    
push
dec
dec
jb
cmp
and
push
and
das    
add
push
sub
cmp
jo
push
int
loop
mov
sahf   
mov
xchg
scas
in
cli    
les
xchg
sarb
add
jbe
dec
dec
outsb
and
das    
inc
insb
or
outsb
sub
sbb
aas    
or
cmp
je
push
or
(bad)  
mov
repnz scas
in
lcall
test
ljmp
xchg
scas
(bad)  
lods
mov
inc
outsb
sub
cmp
or
push
jl
inc
push
sub
repnz lods
(bad)  
mov
push
arpl
jb
mov
xchg
repnz
icebp  
push
dec
pusha  
arpl
cmpsl
(bad)  
mov
loopne
loop
jae
pop
dec
aas    
outsb
mov
cld    
dec
mov
pushf  
cli    
(bad)  
xchg
cmovg
inc
outsb
sub
adc
aas    
or
or
inc
cmp
xor
or
inc
adc
cvttps2pi
retw   
out
stos
lret   
shl
mov
xorb
cld    
cli    
(bad)  
repnz iret 
(bad)  
mov
stos
sub
or
push
ja
adc
cmp
push
jae
insb
dec
das    
adc
mov
xor
pop
jp
cmp
push
or
repnz scas
leave  
fild
mov
sub
fs ss aas 
or
jl
cmp
push
add
sbb
jb
sub
dec
xor
sub
dec
hlt    
xchg
lock mov
mov
mov
cli    
mov
stos
mov
test
mov
bound
jbe
dec
js
xor
das    
gs sbb
inc
xor
xor
push
inc
aas    
or
sub
test
out
mov
in
mov
out
mov
(bad)  
hlt    
cmp
xor
ljmp
jbe
dec
js
ss inc
adc
imul
xor
aaa    
sub
aas    
or
sub
mov
in
cmpsb
(bad)  
xchg
scas
lret   
in
mov
cwtl   
in
mov
cmp
xchg
add
jle
inc
jb
gs jl
add
push
sub
jbe
aas    
push
or
push
and
sub
pusha  
(bad)  
repnz scas
(bad)  
mov
mov
mov
loop
mov
sahf   
lock
xchg
scas
and
outsb
sub
push
add
or
insb
push
inc
cmp
or
outsb
pusha  
inc
adc
add
out
stos
icebp  
fsub
mov
mov
int
(bad)  
mov
xchg
orl
scas
movsl
mov
stos
mov
jo
cmp
jae
or
inc
adc
dec
insb
or
inc
outsb
sub
add
or
(bad)  
jecxz
cmpsl
lods
fdivrs
cmp
ja
add
aas    
push
xor
jp
jbe
pabsb
adc
stos
fdivr
mov
xchg
xchg
ror
mov
in
out
xchg
scas
mov
jno
data16 xor
or
jl
xor
push
add
sbb
inc
jb
and
push
sub
dec
testb
repnz test
mov
mov
hlt    
mov
stos
mov
xchg
mov
bound
jbe
dec
fs push
and
pop
xlat
int
repnz mov
out
ret    
mov
xchg
inc
outsb
sub
cmp
or
jl
cmp
xor
jl
inc
jb
(bad)  
sbb
push
sub
ljmp
xchg
repz loopne
lret
scas
(bad)  
mov
out
mov
aas    
push
ja
pusha  
cmp
push
jae
sbb
inc
adc
nopl
inc
outsb
sub
xor
aas    
or
dec
lock xchg
mov
in
mov
and
mov
xor
out
dec
push
jle
inc
jb
dec
jl
ss aas 
push
or
ljmp
lret
jo
add
or
or
inc
cmp
or
movsl
xlat
mov
push
cmp
scas
iret   
in
mov
and
mov
xor
out
ja
push
jp
jbe
iret   
aam
xchg
ror
mov
in
out
xchg
scas
test
jno
data16 xor
or
jl
xor
push
add
sbb
inc
jb
and
push
sub
mov
scas
test
jno
data16 xor
or
jl
jp
mul
jo
cwtl   
mov
out
test
adc
inc
popa   
push
push
in
ror
mov
fs enter
lcall
icebp  
rolb
cmp
dec
mov
call
lret   
loopne
mov
pushf  
loopne
mov
sahf   
hlt    
hlt    
icebp  
cli    
or
push
sbb
je
mov
ja
sbb
punpcklbw
push
jbe
xorl
add
mov
movsl
inc
sbb
jp
(bad)  
and
movsb
mov
ja
push
in
jmp
add
add
and
jae
pop
sar
loopne
cmp
fisttpll
das    
push
cmp
mov
outsb
bound
xchg
push
addr16 jo
xor
jb
aaa    
cmp
jle
clc    
stos
decb
dec
inc
outsb
sub
pop
push
sub
push
jp
repnz
iret   
mov
leave  
mov
pusha  
dec
xor
xchg
(bad)  
lock iret 
mov
jp
das    
push
xchg
shr
ret    
(bad)
and
fwait
iret   
(bad)  
in
ret    
(bad)  
push
inc
inc
or
or
mov
fidivrl
cmp
sub
jbe
cmp
test
(bad)  
int
mov
inc
jb
ja
jl
inc
or
mov
test
cwtl   
sti    
cmp
movsb
int3   
repnz mov
or
inc
inc
jp
adc
mov
cmp
push
cltd   
mul
xchg
test
(bad)  
mov
adc
inc
or
insb
and
mov
fyl2x  
cltd   
xchg
(bad)  
aas    
pop
das    
push
and
ss insl
and
sbb
inc
sub
xor
jp
out
mov
inc
imul
insb
push
aaa    
dec
out
mov
(bad)  
lret
push
jno
push
inc
imul
xor
mov
test
subb
jb
jno
fs cmp
jle
sub
push
mov
scas
(bad)  
jo
dec
mov
mov
lahf   
xlat
sbb
mov
mov
inc
stos
ror
ror
lcall
ret    
lret
lock out
hlt    
decl
(bad)  
imull
ja
aas    
dec
scas
xchg
mov
xor
or
xor
int3   
mov
xor
scas
mov
mov
push
iret   
stos
cmp
stos
or
sub
std    
out
xlat
int3   
fdivl
cmp
out
in
and
insl
and
xchg
mov
dec
sahf   
hlt    
mov
mov
xor
pusha  
(bad)  
popf   
cli    
aas    
inc
nop
push
mov
call
mov
loope
ds push
push
sub
mov
xor
(bad)  
(bad)  
ds stos
xlat
rcrl
and
es aaa 
dec
mov
mov
mov
adc
mov
sbb
je
or
dec
imul
inc
es pmaxub
adc
test
mov
rolb
mov
push
ja
pusha  
cmp
push
jae
sbb
cmp
iret   
(bad)  
cmpsb
(bad)  
fcom
mov
(bad)  
or
jbe
inc
inc
scas
mov
or
jecxz
lret
(bad)  
jno
int3   
outsb
dec
pop
jnp
inc
lcall
push
dec
or
dec
inc
dec
xlat
stc    
in
out
les
outsb
inc
dec
fs push
push
inc
pop
xlat
loope
test
(bad)  
cmp
lret
sub
jo
repnz fyl2x 
mov
sarl
mov
sbb
shl
xor
ret
cltd   
mov
jbe
iret   
fsub
int3   
mov
cmpsl
mov
out
rorl
scas
(bad)  
jae
jp
adc
pushf  
mov
push
push
push
lock jns
or
cld    
lock mov
adc
aas    
or
dec
lock xchg
pushf  
cli    
(bad)  
xchg
cmovns
inc
outsb
sub
push
inc
aas    
or
dec
repnz cmpb
bound
or
pop
jno
xor
int3   
mov
mov
cld    
cmp
das    
inc
lock cmp
notb
cs or
int
(bad)  
jo
popf   
addr16 pop
cmp
fmuls
xchg
repnz adc
ret    
xor
adc
sub
or
jmp
dec
in
add
xor
(bad)  
in
sbb
loopne
out
iret   
in
pop
mov
sbb
lods
cld    
sarb
pusha  
je
xchg
cmpsl
(bad)  
mov
push
ds pusha 
das    
and
sbb
and
cmp
sub
cmp
je
out
enter
nop
(bad)  
iret   
stos
(bad)  
mov
or
mov
(bad)  
dec
cmp
shr
aas    
xor
les
shll
adc
(bad)  
lret   
cmp
cmp
movl
adc
fimull
data16 sarb
sub
in
(bad)  
out
hlt    
es push
xchg
mov
not
mov
or
dec
or
inc
jne
pop
inc
mov
mov
hlt    
lods
mov
sbb
xchg
div
iret   
jp
mov
or
xor
outsb
rorb
movsb
inc
imull
jne
mov
jno
or
jg
cmp
jbe
mov
hlt    
mov
pop
shlb
lods
mov
(bad)  {z}
xor
shlb
mov
stos
jae
aad
mov
add
(bad)  
lea
movsl
out
xor
jecxz
mov
xchg
sbb
push
cmc    
mov
add
jb
xor
dec
mov
outsb
icebp  
out
call
sub
jnp
jb
negl
add
mov
jae
pop
fcmovnbe
out
and
out
or
mov
dec
mov
clc    
cli    
mov
aaa    
or
(bad)  
sbb
stos
scas
lock sbb
leave  
ja
mov
fsubl
fildll
lea
cmovb
je
test
cmp
push
cmp
cmp
or
xlat
mov
cmp
insb
insl
je
xchg
sub
test
dec
pushf  
and
pmaxsw
pop
outsb
sbb
cmp
pop
lock sar
das    
outsb
fidivl
test
ret
popf   
lahf   
sub
imul
jmp
mov
insb
mov
or
mov
(bad)  
jbe
cld    
lods
ret
mov
cmc    
stos
enter
inc
imul
sar
pop
in
pop
or
jecxz
cmp
sar
mov
xchg
test
leave  
xlat
mov
das    
dec
jo
jno
or
mov
mov
mov
in
inc
jb
ja
sbb
or
inc
cmp
test
fnop   
mov
xchg
mov
sahf   
incl
sub
or
or
nopl
inc
pop
sar
in
loopne
or
cmovns
movsl
mov
in
or
adc
aaa    
adc
jle
loopne
loopne
sahf   
mov
out
ret    
mov
mov
inc
insl
sub
push
inc
sub
and
dec
cli    
mov
jne
cmp
or
jmp
ja
jb
aas    
add
shl
mov
test
jecxz
fcoml
dec
imul
adc
fldt
jne
stos
icebp  
call
xlat
int
rol
mov
mov
lahf   
lret   
(bad)  
xchg
fstl
test
push
xor
das    
cmp
data16 mov
ljmp
ret    
mov
repnz iret 
leave  
cld    
lcall
mov
sbb
or
mov
xchg
mov
lock
mov
das    
je
push
sub
mov
lods
ret    
mov
mov
or
jp
inc
outsb
sub
push
add
or
or
inc
cmp
or
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
icebp  
cld    
(bad)  
mov
out
lea
inc
dec
insb
or
adc
add
mov
icebp  
mov
inc
pushf  
in
sub
jnp
mov
mov
ja
jbe
inc
pop
xlat
in
(bad)  
sti    
adc
inc
or
ljmp
or
or
or
inc
cmp
xor
inc
mov
cmp
inc
add
rol
or
mov
sub
aas    
push
stos
in
lret   
xor
push
mov
popf   
cwtl   
adc
das    
inc
pushf  
xlat
add
jb
leave  
jmp
push
scas
cld    
loope
and
xor
insl
idiv
(bad)  
adc
mov
add
sbb
test
cltd   
mov
jne
cmpsb
mov
aas    
jno
nop
mov
cmp
push
mov
addb
pushf  
fild
push
icebp  
mov
loopne
hlt    
adc
leave  
std    
clc    
adc
rcrb
divb
ret    
cld    
scas
xor
push
add
push
wbinvd 
add
jl
push
push
mov
mov
icebp  
nop
and
jb
dec
dec
push
ja
add
aas    
push
and
add
repnz mov
mov
lock lret
add
push
outsl
adc
lahf   
xchg
pop
jno
data16 xor
or
jl
xor
push
add
sbb
aas    
jbe
leave  
in
rol
mov
out
loopne
xchg
scas
test
xor
jo
adc
movsl
fdivr
test
xchg
cmpb
mov
mov
sub
outsb
inc
xor
aaa    
cmp
jl
cld    
xlat
cld    
pushf  
in
or
insl
rolb
sub
cld    
mov
out
lods
mov
imul
stos
sub
or
mov
xchg
repnz in
stos
lods
pop
push
mov
in
sbb
push
das    
dec
insb
or
xor
aaa    
sbb
or
cmp
mov
cwtl   
in
(bad)  
xchg
scas
test
jno
data16 xor
or
jl
xor
push
add
sbb
inc
jb
and
push
sub
dec
testb
repnz test
(bad)  
lock
(bad)  
xlat
ds inc
cmp
pop
xor
mov
mov
(bad)  
lods
mov
inc
outsb
sub
cmp
or
jl
cmp
xor
jl
inc
jb
(bad)  
sbb
push
sub
ljmp
loopne
(bad)  
mov
lret
sbb
push
and
push
mov
mov
(bad)  
mov
(bad)  
mov
mov
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
jb
or
jo
push
sub
mov
mov
int3   
or
xchg
cltd   
mov
imul
repnz
mov
jne
aas    
pop
xlat
mul
jecxz
mov
pop
ja
insb
and
push
das    
outsl
sbb
jp
push
daa    
aaa    
mov
cmpsl
mov
cmp
jbe
dec
jnp
aas    
inc
popa   
push
and
add
repnz cmpsb
not
xchg
mov
jno,pn
sbb
inc
insl
sub
pop
jp
mulb
mov
cmc    
icebp  
xor
into   
in
in
sbb
push
das    
push
int3   
sti    
mov
out
ds dec
outsl
adc
aas    
pop
push
or
cmovp
push
(bad)  
neg
loop
(bad)  
xchg
scas
loop
in
scas
xchg
add
push
or
or
adc
mov
jmp
es inc
outsb
and
sbb
inc
cmp
xchg
(bad)  
in
mov
out
stos
mov
inc
or
push
fwait
lcall
imul
or
mov
imul
jo
mov
sub
pop
mov
in
stos
xchg
lock or
or
mov
ljmp
inc
or
jnp
or
cmp
and
sub
(bad)  
repnz scas
lret   
int3   
call
idiv
test
(bad)  
jns
ljmp
mov
add
repnz or
jb
mov
imul
mov
lret   
or
mov
fidivr
jle
mov
orl
scas
movsl
mov
stos
mov
sbb
outsb
push
fisttp
(bad)  
nop
sub
or
sbb
jp
out
mov
cmp
cmp
loopne
lret
sbb
scas
ljmp
inc
mov
pop
or
mov
fistpll
adc
nop
iret   
jmp
ljmp
les
sbb
push
je
aas    
push
ja
adc
cmp
push
jae
insb
dec
iret   
adc
or
jo
outsb
sub
repnz
leave  
in
mov
ret    
loop
dec
push
jle
inc
jb
dec
jl
xor
sub
or
(bad)  
mov
mov
aas    
push
jae
jo
cmp
and
or
inc
jb
and
sbb
ljmp
loop
xchg
or
pusha  
and
push
mov
sarb
push
mov
push
loop
mov
jb
pushf  
mov
dec
mov
pop
ds dec
stos
xor
sub
aaa    
inc
hlt    
test
loope
das    
dec
jp
and
lahf   
mov
js
inc
pop
xlat
aaa    
pop
js
and
iret   
jecxz
push
inc
popa   
push
jns
push
mov
fsub
(bad)  
jmp
scas
jnp
out
movsl
notb
cmp
sub
push
xor
repnz in
daa    
adc
sbb
repnz fcomi
cmp
push
mov
adc
inc
pusha  
rol
int3   
out
lret
rorl
mov
mov
je
mov
dec
arpl
push
call
push
jg
cmp
insl
push
fsubr
jmp
fdiv
mov
out
stos
mov
out
mov
(bad)  
hlt    
mov
adc
inc
lahf   
sarl
lods
push
or
(bad)  
fdivl
sti    
push
test
ljmp
add
lahf   
add
clc    
inc
ds inc
push
dec
mov
hlt    
and
add
scas
jmp
push
jns
negb
cmp
mov
push
mov
pop
inc
aaa    
jbe
or
push
jo
adc
movsl
fdivr
test
(bad)  
cli    
outsl
das    
pop
and
mov
xchg
push
das    
daa    
cmp
mov
adc
imul
jp
ljmp
or
fcmovnu
repz les
push
mov
leave  
je
cmp
in
xorb
sti    
push
dec
push
jo
cmp
xor
inc
mov
sbb
and
ss jbe
mov
pushf  
xor
or
movsl
mulb
inc
cwtl   
rorl
in
sbb
ret    
lea
xchg
mov
icebp  
insb
loop
(bad)  
in
stos
test
push
xlat
jb
sub
fwait
jnp
stos
roll
decb
(bad)  
mov
xchg
orl
scas
movsl
mov
stos
mov
je
aas    
push
das    
dec
insb
push
inc
aaa    
jbe
xor
add
(bad)  
hlt    
(bad)  
repnz iret 
mov
push
jae
fmull
icebp  
mov
mov
aas    
push
jno
bound
cmp
or
jb
mov
dec
dec
ja
xor
xor
and
jle
adc
orb
lock
adc
in
cs pop
loopne
aaa    
outsb
test
add
ret    
add
adc
ja
je
aas    
js
mov
out
(bad)  {z}
xchg
xchg
push
inc
push
stos
cltd   
lods
jmp
mov
jne
aas    
or
movsb
rorb
es js
inc
adc
adc
test
ja
push
scas
iret   
(bad)  
(bad)  
mov
mov
inc
pop
push
pop
rcr
lret
(bad)  
mov
mov
aas    
outsb
das    
imul
loop
xchg
mov
and
jp
mov
js
cmp
sub
jo
inc
add
and
dec
xchg
mov
cmp
push
dec
mov
fidivrl
mov
mov
pop
push
cmp
cmp
or
(bad)  
not
(bad)  
jo
int
jne
dec
lds
test
das    
add
lret   
inc
mov
fwait
loopne
xchg
sub
arpl
xchg
lcall
push
inc
inc
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
icebp  
cld    
(bad)  
mov
out
lea
iret   
mov
out
mov
das    
into   
ja
les
xlat
xchg
fadd
push
hlt    
adc
or
imul
inc
mov
das    
mov
or
mov
cmp
ss mov
xlat
and
dec
stc    
fdivl
fadd
pop
sahf   
call
cmp
mov
je
adc
cmp
cmp
or
xor
rcrl
loopne
sbb
outsb
mov
inc
push
rol
rorb
test
adc
pushf  
xlat
mov
sub
inc
add
fsub
mov
(bad)  
in
loopne
fcoml
inc
jb
xor
add
aas    
pusha  
stos
xchg
mov
cmp
arpl
insl
sub
and
dec
hlt    
mov
pusha  
jge
mov
(bad)  
icebp  
cmp
loop
sbb
aas    
outsb
das    
(bad)  
xchg
loopne
push
das    
outsl
sbb
jp
push
lds
jb
cmp
mov
jno
jno
push
jne
push
cmpl
aas    
scas
sub
dec
mov
cs inc
mov
mov
adc
mov
les
test
mov
fnstsw
inc
add
sub
je
xchg
push
mov
push
xor
push
or
jbe
or
inc
fwait
mov
fcoml
jo
cmp
cmp
xor
jl
inc
jb
inc
mov
xlat
mov
rorb
cmp
dec
dec
insb
in
jmp
daa    
pusha  
insb
dec
xor
xor
mov
push
jnp,pn
test
outsb
ljmp
xchg
sub
pop
jns
aaa    
adc
xor
xlat
cmp
add
adc
aaa    
add
bound
push
das    
test
loopne
scas
xchg
lcall
das    
adc
xchg
dec
(bad)  
mov
dec
test
rol
out
addr16 sub
mov
mov
xor
push
push
or
adc
aas    
jl
jmp
lea
outsl
fs jl
(bad)  
push
lods
shl
mov
xchg
or
repnz mov
fisubr
mov
icebp  
lods
movl
leave  
rcrl
mov
adc
stos
nop
das    
push
fmull
jno
sbb
inc
mov
rolb
jp
push
mov
jnp
inc
bound
pop
fmull
mov
jbe
inc
adc
push
jne
lcall
inc
inc
xlat
sub
pop
mov
mov
inc
push
push
inc
insb
push
je
repnz scas
leave  
xlat
xchg
xchg
push
mov
lods
(bad)  
sbb
mov
(bad)  
mov
xchg
bnd jle,pt
inc
insb
push
je
xchg
lcall
push
mov
cmp
push
sub
cmp
ja
imul
leave  
or
inc
insl
sub
cmovp
push
push
mov
sarl
(bad)  
ljmp
inc
scas
mov
(bad)
pusha  
gs inc
pop
xlat
xor
jp
mulb
aas    
mov
mov
mov
ret    
xchg
repnz rclb
jae
lods
xchg
fs or
fsubrl
mov
aas    
aas    
mov
add
push
or
or
cld    
sar
mov
or
or
mov
lock inc
push
sub
getsec 
lods
in
loope
imul
xor
lods
xchg
test
jg
inc
pusha  
popa   
je
ljmp
xchg
jae,pn
cmp
jg
aas    
pop
pop
(bad)  
sti    
scas
insl
nop
idiv
add
jp
daa    
insb
push
cmp
sub
push
(bad)  
leave  
sbbl
jbe
or
xchg
lea
pusha  
mov
mov
jo
repnz jecxz
das    
xlat
xchg
mov
or
push
sub
inc
pop
shl
cld    
out
cs mov
roll
data16 jo
inc
or
push
push
cmp
and
mov
mov
xlat
sti    
loopne
icebp  
sub
inc
mov
push
add
or
insb
push
inc
cmp
or
outsb
pusha  
inc
pop
push
stos
rorb
mov
jl
inc
xor
mov
add
sbb
push
scas
loopne
or
xchg
adc
xlat
cmp
test
or
mov
sub
ret
jne
push
jp
adc
(bad)  
in
jle
insl
test
(bad)  
in
jl
jns
jb
push
mov
dec
push
add
inc
add
mov
repnz
mov
outsl
and
pop
push
cmp
mov
xchg
dec
repnz out
mov
lock dec
or
sahf   
mov
inc
jo
cmp
repnz mov
movsl
sub
xchg
add
inc
clc    
push
add
pusha  
test
je
aas    
rclb
add
mov
nop
hlt    
inc
sub
pop
je
jb
mov
fs push
inc
js
or
push
mov
lahf   
test
inc
pop
push
or
js
scas
repnz pop
div
out
cmp
sbb
jp
push
adc
roll
jnp
sbb
sub
or
rcll
je
add
xor
in
nop
xchg
mov
or
nop
sbb
jbe
insb
xchg
jmp
xor
ljmp
jns
xchg
pushf  
fistpll
sub
leave  
clc    
repnz clc 
ret
push
lods
sub
rcr
mov
insb
daa    
inc
push
sub
outsl
mov
mov
adc
pusha  
add
dec
movsl
repnz sub
shrl
(bad)  
jo
je
mov
inc
fs das 
imul
mov
clc    
stc    
movl
les
inc
jno
dec
mov
add
adc
cmpl
inc
fistl
outsl
leave  
lock loop
cmp
cmp
push
js
aad
jle
cli    
scas
jecxz
fisttp
insb
xchg
cltd   
mov
imul
push
xor
jne
ret    
sub
mov
add
test
(bad)  
lock pop
xor
cmp
xchg
out
pop
jb
push
cli    
jae
sub
mov
ret    
in
(bad)  
hlt    
stos
xchg
add
imul
cmp
das    
cmp
test
repnz mov
ret    
loop
movsb
mov
hlt    
aaa    
jbe
dec
data16 add
inc
push
jp
fbstp
push
add
adc
gs
call
ljmp
ja
push
sub
add
(bad)  
divl
popf   
scas
(bad)  
jmp
xchg
lds
sbb
addr16 mov
push
insl
mov
gs je
ljmp
imul
out
(bad)  
(bad)  
aaa    
push
add
(bad)  
repnz mov
xchg
rcl
cmp
sub
hlt    
lret
xlat
mov
nop
(bad)  
mov
out
add
jb
dec
fnstenv
cmp
jo
cmc    
push
add
std    
test
int3   
cmp
xchg
cwtl   
mov
mov
aas    
add
add
mov
int3   
icebp  
and
aaa    
inc
js
bound
inc
ds push
or
xchg
mov
mov
cs dec
jno
jge
pop
rol
int3   
divl
xchg
inc
pop
sub
mov
jnp
mov
dec
or
sub
ljmp
pop
push
push
rolb
or
js
inc
adc
push
cld    
cltd   
test
jne
cmp
jb
arpl
pushf  
leave  
lret   
call
mov
mov
sub
sub
data16 jne
pop
xlat
repnz
repz mov
xchg
mov
cmp
popa   
(bad)  
mov
mov
jle
inc
jb
gs jl
add
push
sub
jbe
cmp
sub
and
mov
ret    
icebp  
cmp
cmp
roll
jp
xchg
stc    
jo
jb
(bad)  
aam
ret    
insb
fs je
repnz fnstenv
pop
push
cmp
mov
loop
(bad)  
mov
les
or
mov
push
je
out
int3   
mov
std    
sarl
ljmp
xchg
enter
mov
out
sahf   
mov
outsl
nop
hlt    
std    
push
xchg
xchg
mov
mov
or
fdivr
mov
test
adc
push
popa   
add
cwtl   
xchg
mov
inc
or
je
mov
mov
add
outsb
sub
pop
clc    
add
jbe
add
je
repnz mov
rclb
loopne
cli    
pop
jb
leave  
icebp  
loopne
ds pop
sub
jbe
xorps
std    
mov
insb
mov
sti    
clc    
loop
lret
and
lods
xchg
mov
les
inc
push
push
cmp
test
jle
aas    
dec
scas
add
jp
xchg
mov
cmp
cmp
mov
out
sub
stos
loopne
cmp
sbb
leave  
adc
push
cmp
sarl
jns
jmp
xchg
cmp
inc
test
or
scas
ret    
mov
iret   
int3   
sbb
outsb
push
jnp
pop
push
movsb
inc
lods
stos
loopne
std    
(bad)  
xor
pop
dec
jne
jge
arpl
out
xchg
nop
bnd ret 
loop
mov
rol
mov
mov
aas    
outsl
das    
and
test
cmp
push
adc
arpl
jle
mov
xchg
pop
push
and
es aas 
(bad)  {z}
xlat
sbb
sbb
mov
(bad)  
pop
xchg
ret    
jmp
les
or
add
stos
std    
loopne
or
jb
xor
flds
scas
xor
push
test
ss js
(bad)  
loop
idivb
mov
jbe
or
call
lock into 
xor
push
jnp
aaa    
pop
cmp
rcrl
inc
mov
sub
sbb
mov
fldcw
adc
mov
je
aas    
push
xlat
sbb
loope
les
(bad)  
or
rclb
jns
dec
mov
or
dec
test
(bad)  
cmc    
sub
xor
std    
push
div
repnz in
push
push
test
outsb
scas
leave  
repz call
push
int3   
leave  
hlt    
stc    
or
inc
jne
push
lock dec
sbb
mov
imul
sbb
mov
(bad)  {z}
call
mov
dec
mov
imul
rcl
push
push
getsec 
push
xchg
jmp
loopne
dec
xchg
repnz mov
and
inc
mov
lret
ss or
jge
cmp
rclb
js
lcall
ret    
lret
push
gs dec
mov
(bad)  
negl
cmp
out
mov
or
xchg
movl
icebp  
add
(bad)  
shrb
sahf   
shlb
and
add
sbb
shl
nop
cli    
hlt    
mov
jb
ret    
in
shlb
jp
xchg
ret
jns
mov
in
and
or
aaa    
mov
mov
mov
cmp
(bad)  
aad
fldt
inc
pushf  
mov
xor
dec
bound
cs inc
push
sub
xchg
out
addr16 push
sub
cld    
jno
mul
(bad)  
loope
stc    
sub
jbe
adc
aaa    
mov
sub
cmp
test
(bad)  
ds pop
das    
cmp
jle
mov
xchg
hlt    
cmp
sbb
outsb
mov
lret
inc
push
ror
(bad)  
icebp  
mov
out
sbb
pop
das    
gs mov
inc
xor
icebp  
aad
mov
pop
or
inc
adc
(bad)  
lret   
cs inc
cld    
lret   
add
push
add
pop
repnz add
jle
push
loopne
add
or
mov
cli    
pop
jbe
or
jmp
repz dec
pop
cmp
mov
mov
cmp
push
cld    
cld    
lret   
sbb
xchg
icebp  
mov
loopne
notb
adc
je
repnz mov
aas    
pop
push
and
push
mov
cmp
aas    
jp
mov
adc
mov
mov
cmp
adc
mov
dec
cli    
adc
dec
cmp
pop
push
pop
je
xchg
stc    
inc
ja
jge
shrb
push
adc
or
mov
leave  
dec
lahf   
repnz mov
ret    
jecxz
cmpsl
nop
ss inc
sub
xchg
icebp  
aam
mov
and
adc
xchg
mov
pop
dec
popf   
out
mov
lds
ret    
sti    
shll
sbb
inc
into   
jne
mov
insb
mov
rcr
adc
inc
pmaddwd
inc
push
stos
pop
dec
pop
inc
sub
fwait
icebp  
in
out
inc
pop
sub
push
or
pop
call
mov
cmpsl
cmp
or
jo
out
aam
sbb
mov
icebp  
adc
sub
xchg
idivb
inc
push
shr
scas
jecxz
pusha  
mulb
ja
adc
xlat
jp
int3   
cmp
push
popa   
mov
jae
mov
inc
mov
insl
pop
jno
push
xchg
mov
dec
mov
add
add
mov
mov
xor
sub
loope
pop
push
add
outsl
jp
xchg
mov
dec
shr
add
daa    
outsb
mov
mov
sub
je
mov
aas    
jbe
xchg
mov
lret   
or
push
xor
ret
scas
push
push
push
inc
mov
gs inc
aas    
scas
sub
je
movsl
xlat
(bad)  
pop
mov
ljmp
je
xchg
out
mov
movsb
ret    
leave  
push
popa   
or
dec
cmp
mov
out
pushf  
mov
pop
popa   
xor
push
pop
or
sbb
scas
xor
mov
ret    
out
dec
dec
jns
cmp
(bad)  
mov
pcmpeqb
adc
cmp
out
sbb
and
mov
xchg
xchg
in
imul
jno
or
push
adc
inc
mov
mov
icebp  
cmc    
loopne
inc
jo
gs sbb
jp
ljmp
jecxz
push
cmp
je
repnz fcomi
and
xlat
jmp
jb
or
(bad)  
mov
decb
xor
add
adc
jp
(bad)  
xlat
in
xor
(bad)  
xchg
rcll
cwtl   
push
mov
into   
or
jbe
leave  
in
out
cmp
lods
rcr
hlt    
mov
data16 sub
jl
mov
repnz and
je
js
pop
xlat
out
rorl
sbb
mov
imul
daa    
inc
mov
sti    
aaa    
jbe
dec
or
(bad)  {z}
xlat
out
out
mov
ljmp
push
inc
mov
lods
icebp  
(bad)  
lcall
call
notl
sub
iret   
cli    
pop
jbe
or
jb
repz mov
and
xlat
out
sbb
(bad)  
or
inc
fwait
add
aas    
imul
pop
xlat
loope
(bad)  
mov
ljmp
add
adc
push
and
mov
mov
nop
mov
xor
jl
ret    
cld    
scas
leave  
in
loope
mov
outsb
cs inc
mov
cli    
les
sub
push
movsl
fdiv
mov
out
stos
mov
out
mov
(bad)  
hlt    
mov
js
inc
js
addr16 sbb
mov
scas
mov
je
movsb
mov
inc
dec
shr
nop
icebp  
mov
bound
mov
push
lods
cld    
call
dec
arpl
dec
mov
jl
xchg
and
imul
mov
mov
pusha  
push
inc
xor
(bad)  
mov
mov
lret
les
mov
inc
jns
jb
pop
cmp
outsb
dec
(bad)  
add
ljmp
push
jle
cmp
xlat
rcrl
scas
repnz les
shrb
test
or
push
push
inc
push
push
scas
sar
mov
cld    
cwtl   
mov
mov
mov
nop
add
inc
xlat
mov
mov
or
mov
fwait
and
leave  
clc    
sahf   
mov
xchg
scas
in
cli    
les
xchg
sarb
add
push
aas    
setp
inc
(bad)  
fisubrl
mov
hlt    
xchg
les
aas    
push
sub
add
aas    
push
xor
jp
jbe
pabsb
mov
add
jb
bsf
pop
(bad)
jns
mov
dec
or
cmp
nop
mov
cmp
pushf  
xchg
inc
fsubrl
jle
test
add
jnp
aas    
or
jl
cmp
push
add
sbb
jb
sub
dec
mov
es dec
xchg
out
mov
mov
iret   
xchg
in
push
cltd   
lret
scas
cmpsb
lods
add
cmp
je
not
iret   
xchg
sub
add
out
pop
dec
add
stos
sbbl
add
mov
aam
inc
test
adc
xor
xlat
rolb
inc
aaa    
adc
inc
push
mov
movsl
and
insl
mov
push
(bad)  
inc
stos
xchg
add
and
jp
fild
dec
dec
jae
cmp
push
jno
jle
inc
jge
push
loopne
hlt    
pop
or
dec
aas    
gs rol
int3   
jmp
mov
js
aas    
popa   
push
xor
or
imul
lret
jo,pn
or
out
ljmp
mov
lea
gs push
cmp
divb
aas    
outsb
das    
jmp
pop
jp
jb
(bad)  
sbb
push
sub
ljmp
xchg
repz loopne
lret
scas
(bad)  
mov
out
mov
aas    
push
jno
bound
cmp
push
dec
jo
xor
adc
or
jo
outsb
sub
or
dec
repnz mov
xchg
repz loopne
lret
scas
(bad)  
mov
out
mov
aas    
push
ja
pusha  
cmp
push
jae
sbb
inc
adc
nopl
inc
outsb
sub
xor
aas    
or
dec
lock xchg
mov
mov
lock mov
push
je
push
cltd   
icebp  
cli    
idiv
ret    
fsubrl
addr16 jo
je
or
(bad)  
fsubrs
gs jo
jp
or
sbb
mov
fisttp
aaa    
push
sbb
cmpsb
in
fdivrs
(bad)  
divb
shl
mull
inc
(bad)  
leave  
mov
enter
cmp
push
sbb
mov
push
mov
xchg
icebp  
icebp  
int3   
imul
imul
nop
jecxz
push
sub
fcompl
jns
mov
ja
push
stc    
mov
push
or
mov
shrl
or
aaa    
push
lcall
div
adc
aaa    
push
or
mov
in
hlt    
(bad)  {z}
cmc    
fcmove
mov
push
aas    
mov
cmp
jbe
aas    
pusha  
stos
xchg
idiv
mov
(bad)  
xchg
scas
xor
jno
xor
or
inc
cwtl   
mov
cld    
jmp
mov
je
inc
or
xchg
fdivrp
push
push
getsec 
inc
xchg
(bad)  
cmc    
sub
push
test
xor
inc
push
lahf   
fadd
add
jbe
xor
adc
xchg
adc
mov
ret    
in
out
lret   
cmp
push
or
xlat
cld    
mov
add
xchg
mov
ret    
(bad)  
and
xor
or
addps
leave  
(bad)  
lock mov
sub
lret   
push
cmp
mov
and
aas    
imul
mov
xlat
mov
push
mov
sub
data16 xor
or
jl
xor
push
add
sbb
inc
jb
and
push
sub
dec
testb
repnz test
out
mov
ja
fldcw
leave  
fmuls
mov
jae
xchg
mov
push
xlat
loope
clc    
lret   
xor
push
mov
mov
push
jb
popl
xchg
aam
jnp
jle
jne
lods
mov
inc
dec
scas
popf   
mov
sbb
mov
push
dec
cmpsl
out
(bad)  
icebp  
hlt    
dec
mov
pop
mov
mov
sub
or
mov
repnz fisttp
jb
imul
push
sub
je
aas    
push
xor
jp
adc
and
inc
imulb
scas
cld    
insb
sti    
das    
outsb
or
dec
lcall
push
inc
cmpsb
out
mov
xchg
(bad)  
sbb
pusha  
fs je
repnz or
(bad)  
outsl
push
adc
outsb
cmp
and
out
out
repnz mov
add
cmp
cli    
cld    
cmpl
sti    
cld    
ret    
fist
mov
mov
push
cmp
loop
iret   
or
loop
ds pop
das    
arpl
or
xchg
ljmp
call
cld    
nop
ret
adc
cld    
cli    
sbb
push
inc
nop
ret    
cmp
push
xchg
push
jge
inc
and
arpl
aaa    
jbe
pabsb
adc
stos
fdivr
mov
xchg
xchg
sub
test
inc
mov
mov
xlat
cmp
mov
call
push
inc
inc
inc
inc
lahf   
idivb
lock shr
mov
mov
int
jle
fsubrs
data16 or
lret
repz mov
jle
inc
push
or
or
or
inc
cmp
xor
or
inc
adc
(bad)  
clc    
stos
mov
xchg
lret
xlat
mov
jo
cmp
jae
or
inc
adc
aaa    
mov
movsb
mov
cwtl   
hlt    
aas    
gs dec
dec
mov
scas
and
jbe
iret   
mov
test
jl
outsl
outsb
mov
in
lret
gs das 
or
jae
cwtl   
mov
dec
js
and
inc
stos
and
xor
push
roll
das    
lahf   
pop
jns
xor
clc    
sti    
mov
insb
je
jb
xor
(bad)  
cmp
or
push
inc
inc
adc
or
pusha  
ret    
out
stos
(bad)  
mov
mov
icebp  
cwtl   
mov
aas    
jl
fimull
je
push
(bad)  
mul
mov
mov
cli    
mov
stos
mov
xchg
mov
pop
inc
aas    
outsb
dec
xor
mov
mov
aaa    
push
jno
sbb
inc
pusha  
push
and
outsl
mov
adc
push
(bad)  
scas
loop
add
test
cmp
stos
in
dec
and
add
xchg
outsl
ret    
test
mov
sbb
movl
mulb
mov
xchg
aas    
test
mov
lea
aas    
leave  
(bad)  
xchg
xor
xlat
das    
insb
popa   
inc
lahf   
xchg
mov
mov
hlt    
xor
or
push
gs ret 
hlt    
scas
sub
ljmp
jge
insb
cmp
test
adc
ret    
cmp
sbb
dec
cmp
mov
xchg
nop
sti    
cmp
test
xchg
ss dec
add
xchg
(bad)  
int
sbb
sbb
ja
jbe
cmp
push
push
cld    
cli    
les
jno
aaa    
mov
push
jp
push
dec
jae
push
mov
mov
add
and
mov
adc
or
stos
loopne
(bad)  
hlt    
stc    
jbe
or
scas
loope
sarb
or
jl
xor
push
or
jb
or
jo
dec
stos
idivb
test
sahf   
in
inc
mov
inc
mov
lock mov
out
stos
jmp
xchg
mov
lock
mov
mov
xor
mov
adc
cmp
jno
cld    
cmp
jnp
loopne
je
test
jg
in
xor
arpl
push
test
data16 mov
dec
mov
fisubrl
mov
mov
stos
mov
in
mov
(bad)  
hlt    
mov
sbb
inc
push
xlat
ret
mov
or
cmp
mov
ljmp
(bad)  
shl
pushf  
cld    
cli    
mov
cmpsl
mov
pusha  
and
sub
outsl
mov
adc
mov
xor
aaa    
outsb
inc
dec
jmp
xlat
cltd   
nop
std    
hlt    
sbb
scas
dec
imul
inc
or
inc
test
leave  
iret   
test
add
jns
popa   
add
mov
xchg
inc
jle
adc
mov
cs gs pushf 
icebp  
push
push
sub
push
scas
xchg
mov
push
mov
hlt    
mov
ljmp
outsb
inc
dec
or
ljmp
xor
outsb
inc
or
push
nop
movl
mov
stos
mov
inc
dec
fs add
mov
adc
add
mov
inc
add
out
xchg
ljmp
pop
push
add
je
push
sub
cmp
jo
push
int
loop
mov
mov
inc
xchg
cs in
in
jae
adc
cmp
movsl
int3   
(bad)  
mov
adc
lods
sbb
adc
dec
inc
scas
push
jns
inc
mov
push
(bad)  
scas
xchg
jmp
mov
rolb
jo
cmpsb
mov
sub
addr16
icebp  
scas
xchg
pushf  
cmp
sub
lcall
or
jp
scas
neg
iret   
sti    
out
add
movsb
xlat
mov
hlt    
sub
hlt    
mov
ljmp
cmc    
(bad)  
hlt    
cli    
(bad)  
int3   
sub
xor
mov
imul
push
dec
mov
lahf   
mov
xor
cmp
cmp
mov
jno
unpckhps
jnp
xchg
aaa    
jbe
jno
push
cmp
outsb
das    
jb
xor
not
(bad)  
mov
sbb
test
lock stos
ret    
stc    
xlat
and
mov
dec
gs fs add
pop
mov
push
dec
push
inc
ret    
push
scas
adc
addb
movsl
mov
mov
out
fs bnd ja
push
(bad)  
fcompl
mov
add
aas    
(bad)  
jnp,pn
push
je
repnz
leave  
pushf  
lcall
push
mov
int3   
je
inc
pop
scas
(bad)  
xor
ljmp
leave  
and
(bad)  {z}
and
mov
jno
outsb
loop
fimul
and
popa   
mov
xchg
inc
xchg
adc
push
push
dec
add
inc
or
pop
xor
xor
ja
push
push
mov
mov
inc
scas
mov
push
add
pop
mov
inc
jl
sbb
sbb
mov
icebp  
mov
jecxz
repnz sub
jns
mov
xor
mov
das    
pop
mov
hlt    
mov
jl
cmp
add
mov
mov
xchg
cmp
(bad)  
call
sbb
je
adc
movb
jl
pushf  
or
add
pop
or
iret   
and
and
dec
rcrl
ljmp
test
push
mov
mov
cmp
iret   
push
mov
mov
or
push
test
ret
(bad)  
pop
push
mov
ror
lods
idivl
jle
aas    
scas
and
jle
jbe
xor
movsb
mov
(bad)  
loop
jne
pop
je
out
sub
mov
jge
insl
dec
cmp
xor
or
cld    
scas
out
pop
xor
xchg
test
out
xchg
inc
cli    
outsl
out
mov
sbb
mov
orl
outsb
inc
mov
cmpsl
inc
jae
adc
dec
hlt    
mov
(bad)  
incl
das    
stos
mov
inc
xadd
in
(bad)  
mov
ss dec
jb
xchg
ret    
clc    
xlat
jmp
ret
repnz mov
stos
(bad)  
add
sti    
push
dec
pushf  
xlat
cmp
call
pop
cmp
les
or
inc
movsb
cs popa 
or
mov
imul
xchg
mov
add
sbb
jbe
push
push
xor
sbb
inc
adc
mov
mov
div
mov
repnz out
ja
lods
mov
mov
pop
lahf   
and
cmp
add
push
lock or
pop
bnd jmp
push
das    
mov
mov
aaa    
and
stos
std    
nop
test
lea
inc
jb
stos
fdivr
mov
test
pushf  
loopne
mov
mov
inc
push
imul
outsb
mov
fsub
mov
mov
lret   
in
ror
mov
popf   
lock
xchg
scas
and
outsb
and
cmp
jo
push
cmc    
in
rol
mov
sahf   
lock
ljmp
push
sub
push
pusha  
mov
jl
scas
repnz scas
iret   
or
es inc
push
sub
cld    
jnp
or
cmp
jo
shr
nop
(bad)  
hlt    
pop
adc
dec
mov
lock ret 
out
jae
pusha  
dec
cmp
mov
mov
sbb
rcll
pop
leave  
fsubp
lock aas 
imul
jo
xor
push
jno
js
inc
push
scas
enter
mov
lods
mov
cwtl   
clc    
inc
pusha  
push
gs jl
inc
aas    
jb
xor
(bad)  
mov
aad
imul
movl
mov
xlat
mov
(bad)  
or
dec
dec
gs add
cmp
or
or
push
push
xor
mov
scas
fstpt
aas    
adc
adc
jb
imul
out
mov
inc
push
push
js
js
sub
fwait
iret   
rcrb
pop
jg
cmp
pusha  
jge
add
shl
mov
mov
(bad)  
mov
popf   
hlt    
outsb
and
add
jae
or
dec
cmp
push
xor
scas
lret   
loopne
les
and
push
adc
shrb
cmp
jns
in
in
xchg
xor
inc
addr16 push
add
inc
xor
test
iret   
ljmp
jp
xor
xor
push
(bad)  {%k3}{z}
lock popf 
mov
nop
xchg
aas    
imul
add
xor
mov
call
in
cmc    
les
je
inc
insl
sub
sub
jp
mov
xor
data16 jl
cmp
and
adc
scas
loopne
xlat
lret
rorl
push
jae
gs dec
inc
jb
xor
mov
(bad)  
hlt    
mov
jo
inc
add
sbb
je
or
mov
or
add
inc
pop
rol
int3   
hlt    
mov
pushf  
pop
inc
sub
xchg
push
dec
jo
jne
addr16 shl
pushf  
add
mov
jbe
jb
inc
add
int3   
repnz mov
cwtl   
loopne
insb
sub
add
or
shl
nop
out
stos
mov
dec
arpl
add
mov
out
scas
(bad)  
adc
popa   
push
daa    
cmp
je
mulb
aas    
add
mov
xchg
mov
ret    
xchg
test
or
stos
(bad)  
jg
jp
ljmp
add
mov
add
(bad)  
in
fdivrp
cs push
ja
je
inc
pop
sar
cld    
in
lret
sbb
push
sub
jb
sbb
adc
repnz out
xlat
ror
lret
lods
xchg
push
sub
push
mov
stos
pushf  
incb
push
jg
jl
mov
lea
(bad)  
das    
push
arpl
je
mov
cmp
xor
repnz
add
mov
out
(bad)  
mov
das    
addr16 or
mov
int3   
jl
aas    
push
das    
mov
mov
dec
imul
stc    
cld    
out
hlt    
adc
pop
nopl
push
leave  
sarl
adc
xor
mov
inc
dec
inc
jb
aaa    
inc
clc    
mov
add
cmp
sbb
aam
mov
mov
mov
cmp
cmpsl
mov
inc
outsb
xlat
out
scas
out
daa    
push
dec
imul
inc
outsb
sub
gs scas
iret   
enter
xchg
scas
sub
xor
aaa    
sbb
or
cmp
jp
push
or
cld    
mov
repnz scas
jmp
cwtl   
mov
hlt    
(bad)  
mov
lock lret
mov
inc
jb
inc
dec
push
xor
sub
push
xor
push
or
jbe
mov
inc
dec
push
add
push
wbinvd 
add
jl
push
push
mov
mov
movl
dec
inc
mov
inc
outsb
sub
cmp
or
jl
cmp
xor
jl
inc
jb
(bad)  
sbb
push
sub
ljmp
out
stos
pop
ret    
lret
mov
mov
(bad)  
lock mov
cli    
mov
mov
ret    
(bad)  
roll
jbe
ja
or
aas    
outsb
das    
das    
cmp
jp
mulb
mov
hlt    
lret
pop
ja
insb
and
push
das    
outsl
sbb
jp
push
daa    
aaa    
mov
mov
mov
mov
(bad)  
mov
(bad)  
cld    
aas    
outsb
das    
imul
adc
dec
aas    
outsb
scas
leave  
int3   
testb
cld    
mov
data16 xor
push
daa    
jno
jle
aas    
push
das    
or
test
mov
insb
mov
repnz mov
cwtl   
loopne
ret    
(bad)  
shll
push
jp
cmp
sub
jb
inc
add
and
mov
(bad)  
mov
mov
hlt    
cmp
dec
push
push
add
or
mov
fsub
mov
nop
cli    
hlt    
mov
repz repz out
(bad)  
imul
pop
ja
insb
and
push
das    
outsl
sbb
jp
push
daa    
aaa    
mov
mov
mov
mov
(bad)  
mov
mov
aas    
outsb
das    
outsl
jl
cmp
jbe
aaa    
adc
jb
outsb
scas
iret   
int3   
hlt    
mov
in
loop
mov
aaa    
push
daa    
jno
jle
aas    
push
das    
or
test
mov
xchg
aaa    
jbe
jno
push
or
outsb
das    
or
inc
aaa    
push
xchg
(bad)  
out
mov
pushf  
out
mov
mov
cmp
sub
push
dec
xor
aaa    
cmp
bound
cmpb
cwtl   
repnz mov
jo
xor
add
sbb
cmp
sub
xchg
mov
mov
rolb
jb
jno
or
inc
outsb
sub
adc
ret    
out
stos
in
xchg
test
repnz sarb
(bad)  
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
jb
or
jo
push
sub
ljmp
xchg
int
out
(bad)  
(bad)  
repnz scas
mov
mov
rorb
lret   
xchg
scas
mov
sbb
cli    
shl
nop
clc    
cli    
mov
jo
inc
add
pusha  
push
pshufb
loop
out
cwtl   
mov
test
bnd ret
or
fmul
mov
iret   
(bad)  
mov
stos
and
push
jno
adc
sub
mov
mov
xchg
mov
rcrl
mov
pop
aaa    
push
pop
inc
ds pusha 
test
fcomip
clc    
xchg
mov
hlt    
mov
xlat
mov
xor
out
(bad)  
jg
xor
adc
or
jo
outsb
sub
or
dec
repnz cmpb
test
xchg
scas
leave  
in
mov
and
mov
mov
inc
jb
dec
dec
push
ja
add
aas    
push
xor
jp
jbe
pabsb
adc
stos
fdivr
mov
xchg
xchg
ror
mov
in
out
xchg
scas
mov
ja
fs ss aas 
or
jl
cmp
push
add
sbb
jb
sub
dec
xor
sub
dec
hlt    
xchg
lock mov
mov
mov
cli    
mov
stos
mov
test
mov
bound
jbe
dec
js
xor
das    
gs sbb
inc
xor
xor
push
inc
aas    
or
sub
test
out
mov
in
mov
out
mov
(bad)  
hlt    
mov
jle
inc
jb
gs jl
add
push
sub
jbe
aas    
push
or
push
and
sub
pusha  
(bad)  
repnz scas
(bad)  
mov
mov
mov
loop
mov
sahf   
lock
mov
aas    
push
ja
adc
cmp
push
jae
insb
dec
inc
jb
(bad)  
push
or
add
mov
loopne
mov
pushf  
mov
pushf  
clc    
test
stos
stos
mov
lret
xlat
mov
jo
cmp
jae
or
inc
adc
dec
insb
or
inc
outsb
sub
add
or
cmp
jbe
data16
repz sar
mov
cld    
cwtl   
mov
mov
mov
nop
(bad)  
mov
out
add
jb
dec
dec
push
inc
push
sub
push
xor
push
xor
jo
push
push
or
adc
ret    
out
stos
in
xchg
test
repnz sarb
(bad)  
(bad)  
xchg
scas
mov
inc
inc
data16 xor
or
jl
xor
push
or
jb
or
jo
push
sub
ljmp
xchg
int
out
(bad)  
(bad)  
repnz scas
mov
test
and
insb
es inc
adc
dec
insb
or
xor
aaa    
sbb
or
cmp
jp
push
or
cld    
mov
repnz scas
jmp
cwtl   
mov
hlt    
(bad)  
mov
lock lret
mov
inc
jb
dec
dec
push
ja
add
aas    
push
xor
jp
jbe
pabsb
adc
stos
fdivr
mov
xchg
xchg
ror
mov
in
out
xchg
scas
mov
jno
data16 xor
or
jl
xor
push
add
sbb
inc
jb
and
stos
xlat
lahf   
cmpsb
nop
mov
mov
mov
movsb
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
repz fdivr
mov
out
stos
icebp  
(bad)  
(bad)  
mov
(bad)  
xlat
out
cli    
or
out
push
iret   
pop
je
inc
lock xlat
iret   
fcomip
or
in
inc
(bad)  
push
(bad)  
and
aaa    
outsl
xlat
dec
fdiv
mov
out
xlat
repz fdivr
mov
out
aam
(bad)  
(bad)  
mov
data16
jno
(bad)  
or
out
aaa    
mov
inc
jmp
or
adc
int3   
fcompl
(bad)  
hlt    
mov
ljmp
mov
(bad)  
out
xlat
iret   
fdivr
mov
call
lahf   
mov
scas
testb
inc
mov
dec
and
and
jecxz
inc
loop
inc
shl
aaa    
mov
dec
mov
mov
inc
rcll
pop
lods
jmp
cmc    
xchg
dec
nop
jbe
xor
(bad)  
mov
dec
add
fcmovnbe
(bad)  
dec
push
jp
lcall
imul
mov
xor
mov
(bad)  
lret   
dec
mov
mov
pop
hlt    
cmp
dec
push
cmp
inc
out
xlat
iret   
fdiv
mov
repnz test
data16 aad
push
je
inc
imul
add
sbb
pop
cmovae
je
(bad)  
out
xlat
iret   
fdivr
mov
cli    
(bad)  
les
add
andnps
mov
push
or
lods
jns
imul
xchg
push
sub
divl
(bad)  
sub
push
xchg
jnp
in
jae
js
inc
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
enter
das    
jb
dec
fdiv
mov
out
xlat
repz fdivr
mov
out
(bad)  
leave  
(bad)  
ljmp
hlt    
mov
out
xlat
iret   
fdiv
xchg
cmc    
test
mov
mov
hlt    
mov
out
stos
not
hlt    
mov
in
xlat
ror
mov
bnd ja
fdiv
mov
out
xlat
iret   
fdivr
mov
(bad)  
mov
adc
(bad)  
out
xlat
iret   
fdiv
mov
repnz scas
repz fdiv
mov
out
scas
int
clc    
jb
mov
mov
out
xlat
iret   
fdivr
mov
out
xlat
enter
(bad)  
repnz lahf 
jae
clc    
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
clc    
rcrb
fdiv
mov
out
xlat
repz fdivr
mov
out
(bad)  
leave  
(bad)  
mov
xchg
sub
out
xlat
iret   
fdiv
xchg
cmc    
test
out
xlat
iret   
(bad)  
jmp
iret   
fdiv
mov
out
stos
not
hlt    
mov
in
xlat
enter
scas
xchg
cmpsl
int3   
fdiv
mov
out
xlat
iret   
fdivr
mov
(bad)  
mov
out
xlat
out
xchg
fdiv
mov
repnz scas
repz fdiv
mov
out
aam
fdiv
ret
test
fdiv
mov
out
xlat
iret   
fdivr
mov
out
xlat
enter
(bad)  
out
out
dec
add
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
fmul
aaa    
pop
repz xlat
iret   
fdiv
mov
out
xlat
repz fdivr
mov
out
(bad)  
leave  
(bad)  
mov
push
sub
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
xchg
cmc    
test
out
xlat
iret   
xor
cld    
mov
hlt    
mov
out
stos
not
hlt    
mov
in
xlat
enter
aas    
icebp  
push
int3   
fdiv
mov
out
xlat
iret   
fdivr
mov
(bad)  
mov
out
xlat
ja
jbe
(bad)  
out
xlat
iret   
fdiv
mov
repnz scas
repz fdiv
mov
out
aam
fdiv
push
mov
hlt    
mov
out
xlat
iret   
fdivr
mov
out
xlat
enter
(bad)  
out
aas    
mov
(bad)  
out
xlat
iret   
fdiv
mov
hlt    
mov
out
xlat
iret   
fdivrl
fdiv
mov
out
xlat
repz fdivr
mov
out
(bad)  
leave  
(bad)  
mov
(bad)  
hlt    
mov
out
xlat
iret   
fdiv
xchg
cmc    
test
out
xlat
iret   
movsb
imul
mov
out
stos
not
hlt    
mov
in
xlat
enter
dec
adc
(bad)  
out
xlat
iret   
fdivr
mov
(bad)  
mov
loopne
(bad)  
out
xlat
iret   
fdiv
mov
repnz scas
repz fdiv
mov
out
scas
int
clc    
mov
fdiv
mov
out
xlat
iret   
fdivr
mov
out
xlat
enter
(bad)  
repnz
mov
cli    
mov
out
xlat
iret   
fdiv
mov
hlt    
mov
out
clc    
shr
hlt    
repz in
xlat
iret   
fdiv
mov
out
xlat
repz fdivr
mov
out
(bad)  
leave  
(bad)  
ljmp
hlt    
mov
out
xlat
iret   
fdiv
xchg
cmc    
test
or
(bad)  
iret   
fdiv
mov
out
stos
not
hlt    
mov
in
xlat
ror
mov
insb
xor
fdiv
mov
out
xlat
iret   
fdivr
mov
(bad)  
(bad)  
mov
stos
xlat
sub
mov
mov
movsl
repnz popf 
mov
(bad)  
hlt    
mov
out
bound
fdivrs
inc
mov
out
xlat
iret   
clc    
mov
cwtl   
in
std    
fstpl
iret   
fdiv
loop
mov
mov
mov
fdiv
mov
push
mov
ror
jmp
dec
or
xlat
(bad)  
adc
xchg
popf   
xchg
fcmovne
mov
xlat
iret   
fsubrl
mov
cmc    
xor
iret   
fdiv
mov
out
mov
xchg
and
hlt    
mov
out
mov
cmp
push
sbb
(bad)  
out
xlat
iret   
mov
pop
fcompl
iret   
fdiv
(bad)  {%k3}{z}
fcmovb
mov
pop
mov
mov
fdiv
mov
divb
push
jbe
repnz dec
or
xlat
jg
pushf  
gs cltd 
pop
lret
outsb
mov
mov
cmc    
pop
cmc    
ss cmp
xor
iret   
fdiv
mov
pop
je
xchg
and
hlt    
mov
out
sar
out
(bad)  
jo
mov
mov
out
xlat
iret   
movsb
sbb
pusha  
xlat
jg
cwtl   
jbe
repnz xlat
iret   
fdiv
and
je
insl
mov
pop
push
repz fdiv
mov
xor
jmp
jmp
mov
out
xlat
pop
and
pop
out
mov
xlat
iret   
fadd
or
rep outsb
or
pop
stos
iret   
fdiv
mov
jb
int
gs int3 
les
mov
out
das    
int3   
imul
(bad)  
out
xlat
iret   
push
mov
enter
rcrl
iret   
fdiv
push
stos
push
out
mov
fdiv
mov
dec
mov
lret   
out
dec
or
xlat
add
dec
mov
pusha  
outsb
mov
mov
mul
hlt    
xor
iret   
fdiv
mov
movsb
(bad)  
pushf  
sahf   
(bad)  
xchg
and
hlt    
mov
out
addr16 add
idivl
sbb
(bad)  
out
xlat
iret   
fmuls
ret    
fcompl
iret   
fdiv
mov
popa   
lret
push
repz fdiv
mov
in
stos
xor
cmp
dec
imul
pop
push
or
and
jbe
aas    
xor
and
inc
push
dec
inc
jbe
cmp
inc
dec
imul
jb
jno
cli    
mov
(bad)  
xlat
xchg
(bad)  
lret
pop
dec
sbb
mov
out
xlat
enter
(bad)  
call
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
dec
adc
(bad)  
out
jl
(bad)  
icebp  
lahf   
mov
rcl
dec
jnp
ret
lock or
dec
mov
outsl
loope
xchg
add
lods
and
mov
and
inc
out
push
enter
(bad)  
outsb
aam
fbstp
inc
out
xlat
iret   
fdiv
mov
out
jl
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
out
jge
das    
or
adc
xor
(bad)  
cmp
xor
add
push
mov
sub
add
insl
mov
imul
xchg
mov
mov
mov
insb
mov
or
mov
push
push
dec
lods
dec
jg
(bad)  
imul
psubd
adc
aaa    
and
mov
lret
pop
dec
sbb
mov
out
xlat
enter
inc
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
lds
mov
out
xlat
iret   
ret    
push
inc
pop
in
aad
sti    
adc
fnop   
sub
aam
xchg
iret   
fdiv
mov
outsb
xlat
dec
fdiv
mov
out
xlat
iret   
fdiv
sub
push
stos
and
lea
cmc    
jg
fcoms
iret   
(bad)  
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jl
and
jp
add
daa    
sub
push
xor
outsb
cmp
fs pop
jecxz
aaa    
andps
aaa    
and
jp
rorl
test
aas    
dec
jg
or
sahf   
dec
or
dec
or
mov
push
sub
dec
jne
xchg
imul
lcall
jnp
xor
test
sub
mov
lods
cmp
mov
cmp
sub
and
jp
adc
aaa    
and
mov
lret
pop
dec
sbb
mov
out
xlat
enter
inc
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
mov
fbld
je
push
movsb
or
scas
push
mov
icebp  
xor
mov
(bad)  
jne
std    
test
cltd   
jo
imul
negl
ds ljmp
int3   
xlat
(bad)  
xor
mov
adc
xchg
stos
es pop
adc
std    
aaa    
lret
aas    
ljmp
push
pop
iret   
cmp
ljmp
mov
out
jl
and
jp
adc
aaa    
jecxz
dec
inc
roll
mov
packsswb
andl
stc    
xchg
xor
test
imul
jae
mov
andl
stc    
xchg
xor
shrb
sti    
lret
pop
mov
fwait
dec
adc
xor
or
sub
xchg
dec
xor
mov
and
jnp
xlat
pop
and
adc
mov
test
jnp
imul
out
mov
rcl
xchg
(bad)  
lret
pop
dec
sbb
mov
out
xlat
enter
inc
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
call
mov
aam
pop
into   
aaa    
das    
cld    
rcl
jo
stos
icebp  
(bad)  
(bad)  
mov
iret   
(bad)  
lock mov
fwait
cs stos
(bad)  
lock mov
jmp
ss dec
stc    
test
push
stos
daa    
push
idiv
cmp
lret
fisttp
decb
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jl
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
xor
adc
mov
mov
repz imul
dec
lcall
jae
or
les
(bad)
push
dec
cmc    
pushf  
inc
adc
aaa    
jecxz
jnp
rorl
mov
sub
cmp
or
xor
jp
adc
aaa    
and
jp
adc
aaa    
mov
pushf  
mov
aam
out
pop
dec
sbb
mov
out
xlat
enter
inc
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
shrb
call
sub
dec
shrl
dec
in
arpl
lods
cmp
ret    
or
sub
and
(bad)  
mov
stc    
adc
push
in
lock outsl
sub
sub
push
shrl
adc
and
ja
mov
push
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jl
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
daa    
bound
inc
add
test
outsl
dec
fs push
insb
ds std 
xor
push
sbb
mov
mov
imul
inc
push
push
daa    
bound
inc
add
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
mov
lret
pop
dec
sbb
mov
out
xlat
enter
inc
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
jb
(bad)  
cltd   
mov
xlat
push
dec
sti    
mov
aam
mov
test
adc
inc
lds
pop
jae
imul
negl
ds ljmp
int3   
xlat
(bad)  
xor
mov
adc
xchg
stos
es pop
adc
std    
aaa    
lret
aas    
ljmp
push
pop
iret   
cmp
ljmp
mov
out
jl
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
mov
cmp
dec
xchg
dec
cmp
gs pushf 
dec
add
pop
adc
dec
add
mov
bound
dec
cmp
in
mov
dec
adc
xor
or
sub
xchg
dec
xor
mov
and
jnp
xlat
pop
and
adc
mov
test
jnp
imul
(bad)  
mov
rcl
(bad)  
lret
pop
dec
sbb
mov
out
xlat
enter
inc
out
push
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
pop
and
jnp
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
iret   
rcll
fcomi
mov
mov
scas
mov
cmp
pop
test
popf   
xor
xchg
negl
movsl
stos
test
cwtl   
mov
ljmp
out
jae
mov
jl
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
aaa    
and
jp
adc
in
test
xor
adc
sahf   
jg
jmp
int3   
mov
mov
or
jb
test
push
scas
xchg
rolb
jae
xor
inc
loope
imul
dec
sub
dec
jg
sub
inc
push
push
pop
xchg
sarb
jae
inc
inc
push
aaa    
add
aas    
ret
or
jp
or
aaa    
and
aas    
jbe
cmp
jno
push
add
out
sbb
sub
(bad)  
sub
push
or
jp
jbe
(bad)  
fbstp
(bad)  
loop
jl
ja
cmp
hlt    
or
pushf  
xlat
add
jb
aaa    
push
sbb
aas    
imul
sbb
xor
es push
xor
gs jp
push
out
fidivrl
cmp
das    
push
add
sti    
out
adc
inc
cmp
mov
ja
push
(bad)  
das    
push
add
push
xor
add
aas    
cmp
inc
ss jb
or
data16 jg
jns
sub
cmove
out
out
lsl
aas    
or
pushf  
cmp
or
sbb
inc
imul
or
inc
cmp
xor
sbb
cmp
inc
xor
inc
paddsb
add
imul
inc
jbe
(bad)  
fidivrl
cmp
push
fstps
aaa    
push
sbb
aas    
jnp
cmp
lret
or
fcomi
ss aas 
jg
es cmp
je
push
mov
jo
inc
js
pop
sbb
dec
sti    
out
out
lsl
aas    
or
pushf  
movl
pop
aas    
outsb
das    
hlt    
pushf  
cmp
or
sbb
inc
imul
or
inc
cmp
inc
ja
push
and
jnp
push
adc
inc
jbe
(bad)  
sbb
cmp
inc
sub
push
movaps
aas    
add
add
lret
adc
in
adc
cmp
add
dec
jbe
pmaxsw
ss aas 
jg
negb
(bad)  
push
inc
cmp
push
or
jp
jb
pop
push
inc
bound
sbb
inc
sub
sti    
(bad)  
out
adc
jo
pop
or
inc
cmp
xor
adc
ja
repz pushf 
lret   
inc
dec
outsb
inc
aaa    
sub
lret   
sub
gs add
out
adc
inc
cmp
mov
mov
adc
(bad)  
out
xlat
iret   
fdiv
mov
out
xlat
iret   
fdiv
mov
out
xlat
icebp  
rol
add
outsb
push
or
js
aas    
cmp
xchg
fdivl
or
push
movlps
xchg
scas
or
inc
jp
push
cld    
mov
test
inc
dec
sub
xor
inc
xor
or
jl
(bad)  
das    
push
push
or
je
push
and
pop
push
inc
jns
sbb
jb
xor
push
cmp
enter
add
add
inc
js
add
jl
or
aas    
outsl
sub
sbb
inc
push
out
in
aaa    
add
aas    
ret
xor
cmp
push
unpckhps
inc
or
ret    
pushf  
fnsave
push
xor
push
add
inc
xor
aaa    
add
aas    
ret
add
dec
jbe
aaa    
(bad)  
or
das    
or
or
xor
jbe
inc
jl
into   
or
daa    
jbe
aaa    
sub
pop
(bad)  
rep stos
mov
les
stos
pop
bound
xlat
enter
cmp
jbe
aas    
jns
rcrb
or
cmp
inc
push
jbe
aaa    
(bad)  
hlt    
or
push
rcrb
pop
sbb
inc
jns
and
(bad)  
lret
and
sub
stos
or
dec
push
or
jle
aas    
xor
into   
adc
cmp
aaa    
xor
pop
cmp
sti    
pushf  
and
push
or
sbb
(bad)  
es push
xor
dec
dec
jbe
(bad)  
fbstp
(bad)  
and
ss sbb
je
jbe
mov
jle
inc
or
add
cvtps2pi
aas    
jo
sub
jae
cmp
xor
hlt    
or
sub
add
inc
or
xor
insb
ss
sub
and
or
(bad)  
fdivrs
jbe
add
aas    
lret
push
cvtps2pi
aas    
loope
std    
pushf  
loope
shr
ja
push
inc
bound
pushf  
into   
jp
jb
aaa    
sbb
(bad)  
and
xor
ja
or
adc
aas    
jns
cmp
mov
out
mov
aas    
dec
sub
out
sbb
pop
push
cmp
int3   
pushf  
cmp
dec
outsb
inc
or
hlt    
or
jno
negb
aaa    
push
sbb
inc
jne
xor
cmp
cmp
xor
pop
cmp
push
fstps
or
jl
inc
insl
sub
adc
lret
and
sbb
dec
inc
xor
cmc    
and
cmp
xor
hlt    
add
jle
adc
push
aaa    
sub
xor
(bad)  
xor
dec
inc
or
adc
aas    
xor
add
pop
movntps
inc
jge
adc
imul
ljmp
push
or
or
sub
(bad)  
(bad)  
mov
loopne
add
xor
sub
add
inc
jb
aaa    
(bad)  
hlt    
(bad)  
mov
mov
inc
jle
(bad)  
xor
and
adc
jb
pmaxsw
(bad)  
mov
les
repnz or
jle
aas    
jp
xor
addr16 dec
sti    
out
aam
sahf   
(bad)  
ds inc
ds stos
mov
aaa    
loopne
cmp
das    
or
adc
dec
jb
(bad)  
pop
aas    
ja
repz pushf 
ss dec
sub
in
(bad)  
fbstp
aas    
pop
das    
push
add
inc
outsb
pop
aaa    
sub
cmp
cmc    
pushf  
and
sub
add
das    
fiadd
inc
movaps
inc
sub
cmp
lret
and
push
jle
inc
cmp
leave  
add
ss push
sti    
(bad)  
out
adc
jno
xor
dec
push
jbe
aaa    
pop
jb
aas    
xor
enter
or
push
dec
aas    
jg
xor
inc
sub
xor
or
cmp
lret
dec
cmp
xor
jb
aas    
xlat
stos
and
cmp
push
comiss
aas    
add
or
lret
push
xor
sub
sbb
inc
push
out
jmp
sbb
(bad)  
and
xor
ja
or
add
cmp
dec
inc
push
push
sbb
or
pop
outsb
jp
pop
push
push
sbb
lret
xor
pop
jbe
cmp
mov
out
pop
comiss
inc
jg
add
push
xor
adc
rcl
cmp
xor
sbb
cmp
add
jbe
aaa    
and
int3   
inc
inc
push
add
dec
xor
sbb
jbe
inc
leave  
rorl
pop
fs inc
push
push
icebp  
sbb
push
cmp
das    
add
dec
xor
add
inc
push
mov
push
add
push
push
das    
inc
loop
and
pop
jbe
aaa    
aas    
bnd ret
sub
sbb
mov
outsb
xor
push
outsb
dec
aas    
xlat
scas
cmovl
jb,pt
aaa    
ret
aas    
jae
cmp
lret   
or
outsb
pop
xor
fs jle
out
aaa    
pop
inc
je
adc
aaa    
aas    
repnz into 
inc
dec
sub
loop
cli    
jbe
xor
rcl
pop
adc
xor
push
adc
outsl
jp
out
adc
push
jbe
cmp
xor
ja
or
out
sysret 
jbe
cmp
das    
int3   
pushf  
cmp
or
jle
aas    
js
int
xor
pop
data16 jg
adc
pushf  
les
outsb
inc
cvtps2pi
cmp
das    
(bad)  
lock roll
and
add
cmp
das    
ret    
pushf  
cmp
or
or
jp
(bad)  
sub
dec
xor
unpckhps
mov
pop
dec
dec
jb
or
push
xor
inc
or
xor
push
adc
pusha  
dec
xor
unpckhps
inc
add
adc
fs je
jb
icebp  
adc
sub
jae
aas    
adc
or
and
push
gs sbb
inc
xor
mov
cmp
cmp
roll
data16 xor
repnz push
dec
jle
dec
cmp
nopl
es
mov
outsl
das    
sub
mov
jo
cmp
push
or
repnz daa 
dec
or
push
add
test
jp
cmp
and
or
mov
jbe
rol
and
jecxz
loop
fcomi
ss aas 
jg
negb
aaa    
cmp
mov
xor
adc
jo
push
outsb
and
add
aas    
xor
and
inc
outsb
push
xor
jle
aas    
push
push
daa    
xor
dec
or
push
dec
imul
jne
xor
xor
or
ja
jge
xor
lret
xor
fcomi
cmp
das    
or
out
push
dec
push
sub
sbb
cmp
outsb
dec
or
sbb
(bad)  
xor
or
or
outsb
adc
fidivrl
inc
jne
xor
lret
sub
xor
push
aas    
jb
add
jb
or
ja
jge
xor
lret
xor
fcomi
xor
or
dec
dec
jbe
(bad)  
daa    
push
aas    
jp
xor
js
push
jbe
or
adc
ret
sbb
inc
sub
cmp
(bad)  
ss aas 
jg
negb
cvtps2pi
inc
push
clc    
pushf  
fldl
or
pop
push
inc
cmp
into   
adc
dec
push
jbe
or
sbb
inc
insl
sub
adc
lret
cmp
aas    
outsl
sub
xor
lret
xor
sbb
jo
nopl
lret
das    
xor
push
xor
add
mov
jno
adc
jne
and
(bad)  
lret
inc
cvtps2pi
inc
add
adc
imul
ljmp
sub
sbb
je
adc
(bad)  
(bad)  
jb
aas    
jns
aas    
xor
inc
or
cmp
jbe
cmp
xor
ja
or
adc
inc
jl
xor
(bad)  
lret
adc
fdivrs
add
sbb
dec
cmp
jl
(bad)  
sub
and
(bad)  
lret
sub
sub
inc
inc
add
or
dec
cmp
hlt    
xor
add
xor
xor
imul
inc
inc
sub
add
inc
or
xor
insb
ss
rep stos
mov
les
stos
pop
fs jae
js
ficompl
(bad)  
in
adc
inc
jns
push
sbb
jp
push
sti    
(bad)  
in
sbb
insl
sub
sbb
je
adc
icebp  
sub
inc
sub
add
ss push
sti    
pop
fs jnp
jnp
xor
lret
and
(bad)  
out
aas    
jg
inc
dec
sbb
(bad)  
pcmpgtd
jle
repz pushf 
fimull
adc
unpckhps
(bad)  
rclb
sbb
jp
jb
xor
sbb
(bad)  
das    
push
add
xor
jle
(bad)  
fsubrl
jbe
or
pop
lar
xor
rorb
or
push
xor
jb
or
in
xor
sub
add
cmp
outsb
push
aaa    
pop
jle
ret    
leave  
push
imul
cmp
xor
sbb
(bad)  
sub
xor
jbe
(bad)  
fbstp
(bad)  
cmp
push
or
inc
dec
outsb
pop
lar
xor
loop
or
cmp
aaa    
sbb
cmp
je
jbe
or
insb
add
addr16 jp
push
clc    
pop
data16 jne
js
xor
jp
out
in
xor
push
dec
aas    
ret
add
add
jbe
cmp
xor
test
push
rorb
or
aas    
add
lret
sub
sub
inc
insb
das    
(bad)  
lock
add
push
cmp
(bad)  
aas    
jle
push
add
or
out
or
adc
add
or
out
or
push
cmp
jp
push
or
cmp
das    
ret    
pushf  
cmp
sub
push
push
pop
cmp
negl
xor
jge
or
pushf  
xor
or
ja
jns
push
adc
inc
jbe
dec
pop
jp
inc
jne
sub
dec
outsb
outsb
or
push
jl
aas    
jnp
(bad)  
pushf  
aaa    
inc
inc
outsb
and
add
cmp
das    
ret    
pushf  
ss dec
inc
jbe
pop
insb
jae
jl
or
(bad)  
lret
xor
pop
jbe
cmp
enter
(bad)  
push
push
cvtps2pi
cmp
xor
jo
inc
or
pop
outsb
dec
aas    
imul
(bad)  
outsb
inc
aaa    
das    
jle
aas    
cmp
and
and
pop
push
aas    
adc
dec
dec
jp
jbe
xor
add
mov
arpl
jb
xor
sbb
(bad)  
das    
push
cmp
or
pop
aaa    
das    
jle
(bad)  
sub
or
or
mov
hlt    
in
cmp
negb
dec
and
sub
jae
cmp
jbe
inc
add
int3   
pushf  
aaa    
inc
xor
adc
imul
sub
in
(bad)  
fbstp
inc
jge
adc
jae
dec
jbe
mov
(bad)  
ds inc
cmp
leave  
add
ss push
sti    
pop
data16 jne
xor
enter
add
aaa    
sbb
inc
or
pushf  
(bad)  
dec
push
jbe
xor
bound
das    
xor
pop
inc
sub
xor
or
cmp
repnz adc
xor
adc
ret    
rclb
xor
xor
adc
or
pushf  
stc    
(bad)  
cmc    
or
(bad)  
fdivrs
js
and
(bad)  
lret
sub
pop
sbb
(bad)  
xor
xor
jne
cmp
sub
rclb
xor
or
and
fxtract 
xor
or
dec
dec
jbe
(bad)  
fstpt
inc
or
add
ja
fs pusha 
inc
add
or
out
adc
and
push
aas    
jb
cmp
jno
inc
jb
aaa    
(bad)  
pop
aas    
jge
wrmsr  
or
(bad)  
xchg
hlt    
(bad)  
mov
fisttpll
and
cvtps2pi
inc
jae
repz pushf 
flds
or
pop
push
inc
ret
pushf  
stc    
(bad)  
cmc    
or
popl
les
or
sbb
aas    
jp
cmp
lret
sub
sbb
cmp
int3   
pushf  
cmp
pop
push
ret    
pushf  
lret
outsb
and
add
aas    
out
pop
dec
pop
inc
aas    
jb
aaa    
(bad)  
xor
das    
xor
jbe
pop
bound
xlat
leave  
add
ss push
sti    
(bad)  
sbb
imul
or
dec
push
xchg
divl
jle
aas    
add
adc
cmp
xor
hlt    
xor
push
ficompl
aaa    
loopne
xor
add
or
je
jbe
imull
push
cmp
sub
sbb
jp
outsb
push
aaa    
(bad)  
hlt    
cmp
push
cmp
inc
xor
adc
pop
push
push
or
inc
sub
pop
idivl
push
or
and
repz jbe
or
push
rorb
inc
jbe
xor
add
(bad)  
sub
sub
xor
js
(bad)  
cmp
sbb
jp
jb
xor
imul
inc
dec
push
or
push
aaa    
loopne
or
push
xor
jp
jb
xor
hlt    
ss aas 
jp
xor
cmp
lock or
or
add
xor
lret
dec
add
push
aaa    
adc
cmp
mull
push
and
add
dec
inc
push
cmp
sub
das    
xor
lret
and
add
inc
js
add
jl
or
cmp
and
jae
inc
outsb
pop
aaa    
rcrl
xor
lret
push
aaa    
(bad)  
hlt    
cmp
push
aaa    
xor
dec
dec
jbe
xor
hlt    
cmp
das    
and
push
je
push
sub
and
aas    
jl
daa    
in
int3   
add
outsb
and
sub
pop
inc
js
ficompl
xor
adc
add
or
push
or
insb
jp
ja
sub
lret   
lret
inc
mov
jbe
je
xor
popa   
inc
adc
clc    
dec
imul
add
or
je
jbe
pop
data16 jo
jp
xor
js
clc    
out
add
push
imul
cld    
into   
xor
jb
aaa    
and
push
xor
cmp
push
outsb
or
sbb
cmp
push
or
aaa    
(bad)  
hlt    
mov
cmp
add
push
outsb
and
add
aas    
xor
(bad)  
cmp
dec
dec
jb
movntps
inc
or
add
int
(bad)  
push
or
sbb
inc
in
push
dec
dec
jp
adc
add
jnp
repz pushf 
les
or
xor
adc
aas    
jge
or
out
add
aas    
or
mov
sub
pop
inc
imul
or
dec
sti    
out
jmp
adc
aas    
add
pushf  
enter
pop
movntps
(bad)  
sub
or
or
mov
(bad)  
ds inc
ds stos
mov
or
sbb
(bad)  
das    
push
or
or
data16 jg
or
pushf  
and
sub
loopne
or
pushf  
ss dec
jb,pt
xor
push
ficompl
aaa    
(bad)  
sarb
inc
cmp
sti    
(bad)  
(bad)  
jb
cmp
das    
push
add
or
in
xor
push
dec
aas    
ret
add
add
push
aas    
jns
cmp
inc
push
out
scas
popl
xlat
popf   
in
cmp
or
sbb
(bad)  
and
dec
jbe,pt
paddq
or
cmp
lret
push
aaa    
(bad)  
hlt    
or
sub
cmp
jp
jbe
or
hlt    
repnz
stc    
scas
lock sbb
hlt    
shr
jno
push
dec
aas    
ret
add
add
jle
aas    
jo
and
pop
je
out
add
sub
jae
cmp
lret
push
(bad)  
adc
inc
sub
sbb
je
jb
xor
hlt    
(bad)  
jle
or
je
or
or
hlt    
cmp
das    
xor
or
and
xor
xor
(bad)  
out
adc
jb
or
popa   
je
jb
xor
hlt    
(bad)  
mov
les
add
(bad)  
icebp  
scas
jecxz
lock test
or
aaa    
xor
push
aas    
jb
add
or
adc
aas    
xor
int3   
sbb
dec
inc
or
xor
push
insl
xor
xor
adc
or
pushf  
cmp
(bad)  
out
adc
jb
or
and
aaa    
push
insb
outsl
inc
hlt    
stos
add
inc
aas    
outsb
sub
pop
jle
aas    
xor
jecxz
ja
add
adc
and
push
aas    
jb
cmp
or
or
jle
inc
(bad)  
xlat
mov
ja
jbe
inc
jae
cmp
aaa    
sub
(bad)  
xor
xor
aaa    
adc
aas    
add
pushf  
cmp
jb
pmaxsw
lds
mov
mov
ja
jbe
inc
jae
cmp
aaa    
sub
(bad)  
aas    
push
pop
sbb
dec
or
jmp
adc
aas    
add
pushf  
cmp
jb
pmaxsw
lds
mov
xchg
ljmp
sub
cmp
dec
push
push
xor
hlt    
(bad)  
mov
and
jb
aaa    
loopne
add
imul
inc
jbe
icebp  
mov
ds inc
aaa    
stos
les
inc
aas    
jbe
or
hlt    
or
jno
sub
lret
sub
sub
aas    
jge
or
inc
ss jb
aaa    
das    
jle
aas    
ss scas
cs inc
push
dec
dec
jbe
mov
ja
jns
xor
imul
push
aas    
ret
sbb
jp
jbe
xor
sbb
ja
repz pushf 
and
sbb
cmp
push
or
jbe
pop
insb
jg
add
cmp
mov
jbe
aas    
adc
dec
cmp
or
or
pop
sub
sbb
dec
cmp
hlt    
ss aas 
jg
negb
xor
jbe
aas    
add
dec
xor
cvtps2pi
inc
jge
push
add
leave  
push
jbe
cmp
nopl
cmp
xor
sub
sub
add
mov
(bad)  
ds inc
ds stos
mov
aaa    
loopne
add
imul
inc
jbe
iret   
sub
inc
sub
add
ss push
sti    
(bad)  
fbstp
inc
or
or
inc
xor
(bad)  
fbstp
(bad)  
icebp  
scas
jecxz
(bad)  
lret
xor
fcomi
or
xlat
mov
dec
jns
jg
adc
pushf  
cmp
aaa    
pop
jle
inc
(bad)  
xlat
lret
inc
cmp
sti    
pop
push
cmp
std    
xor
inc
xor
xor
jle
ret    
rcll
sbb
jp
repnz push
aaa    
loopne
xor
or
dec
dec
jbe
(bad)  
sbb
cmp
lret
and
adc
aas    
sub
jp
jbe
or
hlt    
cmp
das    
and
push
je
push
sub
and
aas    
xor
(bad)  
xor
dec
inc
or
adc
aas    
push
das    
jae
pop
jp
jbe
or
bound
push
add
jge
outsb
dec
movhps
cmp
and
clc    
out
adc
push
jbe
aas    
jbe
cmp
aaa    
and
pop
cmp
hlt    
pushf  
enter
dec
cvtps2pi
inc
jae
repz pushf 
clc    
lret
adc
fsubr
test
sub
or
je
push
pinsrw
inc
add
pushf  
ret
jb
ja
hlt    
ss aas 
jp
xor
cmp
bnd jbe
or
jne
xor
jecxz
jo
cmp
and
adc
aas    
(bad)  
sbb
jp
outsb
inc
or
adc
xor
lret
sub
pop
sbb
(bad)  
sub
or
jo
inc
jb
aaa    
leave  
mov
inc
pmovmskb
adc
inc
outsb
inc
or
adc
sbb
je
jbe
aaa    
(bad)  
hlt    
(bad)  
mov
xor
cvtps2pi
inc
jae
xor
int
cli    
jbe
nopl
inc
or
les
or
push
adc
ret
sbb
je
jbe
or
hlt    
or
jno
sub
lret
and
or
jns
or
ficomp
movups
jo
or
dec
dec
jbe
or
hlt    
repnz
cli    
scas
mov
push
out
xchg
out
pmovmskb
adc
cmp
unpckhps
cmp
push
add
or
in
aaa    
sbb
das    
xor
lret
add
inc
imul
xor
inc
cmp
aaa    
sub
add
xor
xor
jne
cmp
sub
xor
push
outsb
cmp
dec
dec
outsb
sub
sbb
(bad)  
sub
or
or
sti    
(bad)  
fdivrs
js
and
(bad)  
lret
sub
pop
sbb
(bad)  
sub
jp
jb
xor
hlt    
push
aas    
add
jp
outsb
pop
or
jbe
aas    
add
mov
push
or
push
sub
lret
inc
cvtps2pi
inc
add
add
lret
sub
or
xor
lea
loopne
test
lock
icebp  
scas
jecxz
clc    
mov
push
or
push
sub
lret
inc
movntps
cmp
icebp  
adc
cmp
xor
hlt    
enter
jecxz
ror
repnz fisttpll
in
scas
adc
adc
add
jnp
repz pushf 
movl
dec
inc
push
hlt    
pushf  
cmp
jb
unpckhps
inc
add
(bad)  
pushf  
inc
mov
adc
mov
cmp
pop
push
ret    
pushf  
xor
aaa    
and
push
xor
cmp
add
xor
outsb
addr16 inc
jnp
xor
addr16 inc
ss jb
aaa    
loopne
or
jnp
add
repnz jecxz
jl
jno
jg
xor
jnp
sub
sbb
or
cmp
sub
sbb
je
push
xor
adc
(bad)  
cmp
adc
inc
inc
jbe
xor
jo
aas    
jge
cmp
ret
push
ss aaa 
aas    
repnz lret
sub
add
test
push
push
xor
out
ret    
sub
jge
and
sbb
fs jg
(bad)  
or
fs dec
dec
outsb
cmp
and
ss inc
add
and
push
ss aaa 
push
jl
inc
jbe
sub
daa    
xor
jb
aaa    
push
jl
inc
jbe
sub
iret   
or
push
aas    
xor
adc
jno
xor
mov
adc
xor
das    
and
or
outsb
pop
or
push
and
sbb
or
aaa    
adc
inc
in
aaa    
push
fs dec
dec
outsb
push
aaa    
adc
inc
loopne
add
inc
inc
jb
leave  
sbb
aas    
jg
fcmovbe
xor
push
cmp
xor
hlt    
inc
pop
das    
cmp
out
pushl
or
sbb
ret    
daa    
sub
add
ss ljmp
into   
stos
add
pop
inc
xor
xor
jbe
inc
pop
push
cmp
and
sbb
mov
inc
aas    
add
xor
je
mul
jno
jbe
inc
jns
add
test
outsb
and
adc
jae
fcmovbe
cmp
and
or
cld    
hlt    
inc
imul
add
sbb
in
dec
jne
inc
aas    
add
sarb
add
push
cmp
cs push
dec
inc
or
add
jbe
pabsb
outsb
das    
cmp
jnp
sub
or
and
and
jg
xor
sbb
dec
jbe
or
sbb
aas    
ja
repz pushf 
lret
outsb
inc
movaps
inc
sub
cmp
lret
pop
wrmsr  
adc
pop
push
cs cld 
into   
add
push
push
aaa    
das    
jle
inc
jbe
ss sbb
jp
out
ljmp
das    
cmp
sbb
outsb
push
xor
push
hlt    
sub
mov
outsb
and
xor
push
aas    
jge
or
jb
aaa    
(bad)  
add
jae
add
jp
jbe
aaa    
rcrl
cmp
inc
sub
daa    
aaa    
adc
das    
int3   
pushf  
and
jb
aaa    
loopne
cmp
das    
or
adc
dec
jb
(bad)  
pop
aas    
ja
fucomip
xor
or
jle
inc
adc
adc
fs je
jb
pop
data16 jne
xor
(bad)  
xor
inc
cmp
xor
jb
inc
imul
or
lret
push
xor
sub
sbb
mov
hlt    
repnz
stc    
scas
jecxz
xor
ret    
out
jecxz
add
cmp
int3   
pushf  
stc    
(bad)  
cld    
jbe
mov
call
cmp
sbb
or
or
jb
aas    
ret
pop
imul
xor
push
outsl
adc
inc
jbe
or
adc
or
je
jbe
or
sbb
inc
insb
sub
add
lret
pop
aaa    
loopne
or
das    
aaa    
sbb
dec
push
jbe
or
adc
cmp
lret
sub
(bad)  
(bad)  
jo
cmp
xor
hlt    
lds
mov
repnz fisttpll
cmp
lret
dec
add
jl
aas    
jl
push
sbb
inc
inc
or
(bad)  
fwait
(bad)  
aas    
inc
ljmp
or
aaa    
das    
jle
aas    
cmp
sub
imul
xor
xlat
(bad)  
pushf  
xlat
add
jb
aaa    
pop
jle
ret    
adc
pushf  
cmp
icebp  
ret    
loopne
mov
int3   
add
out
adc
push
jbe
aas    
jbe
sti    
pushf  
enter
adc
xor
sub
add
out
adc
cmp
ds cmp
je
jb
aaa    
(bad)  
add
jae
add
jp
jbe
aaa    
fldl2e 
adc
push
(bad)  
jo
cmp
or
jbe
aas    
jns
xor
imul
adc
add
or
jecxz
add
inc
insb
das    
push
add
aaa    
(bad)  
hlt    
ss aas 
jg
negb
xor
hlt    
ss aas 
jp
or
inc
push
out
adc
inc
add
xor
dec
push
jbe
leave  
sbb
inc
gs sub
(bad)  
xor
rdpmc  
repnz lret
push
ds xor
test
outsb
and
ds adc
ret    
and
adc
mov
ja
push
(bad)  
sub
inc
sub
aaa    
xor
jno
or
ret    
pushf  
cmp
jb
pmaxsw
add
imul
inc
outsb
pop
aaa    
loopne
lds
mov
ljmp
ja
xor
jp
push
sti    
pop
outsb
dec
aas    
pop
das    
sbb
je
jbe
(bad)  
(bad)  
jb
inc
imul
or
inc
push
out
in
aaa    
add
aas    
ret
xor
cmp
push
unpckhps
inc
or
add
dec
or
das    
rcr
enter
cmp
adc
aas    
aaa    
scas
rcrb
inc
or
xor
push
cmp
or
pop
aaa    
sub
cmp
into   
pushf  
lret
outsb
inc
movaps
inc
sub
cmp
lret
dec
pmaxsw
cmp
push
xor
jg
clc    
out
push
or
adc
jg
xor
hlt    
adc
add
das    
adc
jbe
or
jbe
or
in
xor
push
sbb
dec
cmp
(bad)  
fbstp
inc
or
sbb
je
out
out
or
push
xor
int3   
lret
inc
xor
sub
adc
lret
xor
push
inc
cmp
and
(bad)  
mov
adc
das    
adc
jbe
or
jbe
or
in
xor
push
sbb
dec
cmp
(bad)  
fbstp
inc
or
sbb
je
out
out
or
adc
add
cmp
xor
push
adc
jo
push
outsb
and
add
aas    
xor
loope
or
cmp
add
dec
cmp
das    
ret    
pushf  
enter
pop
movntps
(bad)  
das    
push
add
adc
xor
adc
jo
xor
imul
push
add
imul
pop
inc
jns
adc
inc
xor
aaa    
loopne
or
sbb
dec
push
outsb
pop
aaa    
sub
cmp
cli    
pushf  
ret
jb
aaa    
and
push
xor
cmp
cmc    
adc
das    
adc
jbe
or
jbe
or
in
xor
adc
aas    
jge
sbb
dec
inc
outsb
push
xor
push
mov
les
cmpsb
mov
test
inc
cmp
(bad)  
cmc    
or
cmp
das    
sbb
dec
sti    
out
in
aaa    
add
aas    
ret
adc
cmp
aaa    
and
inc
or
ret    
pushf  
lret
outsb
inc
movaps
inc
sub
cmp
lret
push
aaa    
(bad)  
hlt    
ss aas 
or
cmp
inc
clc    
out
scas
popl
xlat
mov
cmp
aaa    
sub
mov
dec
dec
jbe
popl
rorl
aaa    
and
inc
jle
or
je
adc
(bad)  
in
sbb
insl
push
or
gs inc
clc    
out
adc
add
jnp
or
add
dec
inc
push
xor
or
cmp
inc
or
or
dec
cmp
das    
ret    
pushf  
and
adc
inc
pop
push
sbb
cmp
mov
adc
(bad)  
not
rorb
xor
xor
fcomi
ss aas 
or
cmp
inc
clc    
out
scas
popl
xlat
cmp
or
inc
movaps
inc
sub
cmp
lret
inc
aaa    
and
inc
jle
or
je
adc
iret   
pop
push
cmp
sub
sbb
jp
outsb
push
aaa    
(bad)  
hlt    
or
push
sbb
or
push
xor
push
adc
dec
jp
adc
add
jnp
repz pushf 
lret
outsb
inc
movaps
inc
sub
cmp
lret
and
and
stos
sbb
dec
dec
jbe
mov
ja
jns
xor
imul
push
aas    
ret
xor
cmp
push
unpckhps
inc
or
add
dec
add
cmp
xor
lret
lsl
inc
bound
pushf  
cmp
push
movhps
inc
call
jp
push
xor
jp
aas    
jge
fstps
xor
adc
push
inc
or
push
dec
imul
add
or
je
jbe
(bad)  
fidivrl
aas    
ja
aaa    
sbb
dec
inc
outsb
sub
sbb
(bad)  
ds push
sbb
fs je
jb
aaa    
loopne
or
sbb
dec
push
outsb
pop
aaa    
sub
cmp
shl
or
jbe
xor
jbe
aas    
jns
xor
popa   
inc
cli    
out
pop
unpckhps
inc
insl
sub
cmp
lret
and
adc
inc
inc
add
or
je
jb
(bad)  
fidiv
inc
(bad)  
xlat
cmc    
and
sub
ds xor
lcall
jl
sub
xor
or
cmp
je
outsb
sub
push
sbb
(bad)  
sub
sub
cmove
or
aaa    
push
insb
jns
or
es in
xor
adc
xor
jbe
aas    
jns
xor
popa   
inc
cli    
out
pop
unpckhps
inc
insl
sub
cmp
lret
ss aaa 
push
jl
aas    
jge
add
data16 jp
jb
xor
xchg
inc
dec
sub
xor
inc
xor
or
jl
(bad)  
ds push
sbb
fs je
jb
aaa    
das    
jle
inc
cmp
lret
dec
dec
jbe
mov
ja
jns
xor
imul
push
add
imul
dec
aas    
jns
aas    
xor
inc
push
out
sbb
cmp
jae
add
xor
jo
xor
sub
lock xchg
sti    
inc
dec
push
or
je
xor
hlt    
xor
jnp
xor
outsl
jp
outsb
pop
aaa    
sub
cmp
cmc    
pushf  
xor
(bad)  
fbstp
aas    
jbe
and
or
push
or
hlt    
(bad)  
mov
loop
mov
hlt    
or
pushf  
xor
aaa    
and
push
aas    
jl
or
(bad)  
lret
sbb
fcoml
adc
or
out
hlt    
xor
jnp
xor
outsl
jp
outsb
pop
aaa    
sub
cmp
xlat
ror
sbb
cmp
push
jb
inc
xor
lret
dec
dec
jbe
cvttps2pi
aas    
ja
sub
(bad)  
mov
push
xor
push
adc
outsl
jp
idivb
inc
insl
push
and
decb
sub
cmp
or
gs inc
cmp
xor
push
xor
or
(bad)  
push
pop
inc
jge
adc
fs je
jb
(bad)  
and
inc
pop
push
nopl
dec
cmp
xor
or
cmp
mov
or
push
aaa    
add
cs push
xor
pop
jle
(bad)  
icebp  
scas
jecxz
(bad)  
lret
pop
aaa    
loopne
(bad)  
mov
(bad)  
mov
ljmp
cmp
aaa    
int3   
jmp
mov
adc
inc
jp
or
js
inc
outsb
pop
aaa    
sub
cmp
cmc    
pushf  
flds
or
pop
push
inc
iret   
xlat
and
je
or
sbb
aas    
ret
nop
clc    
(bad)  
cmc    
or
mov
hlt    
xor
sub
xor
inc
xor
or
jl
(bad)  
sub
and
(bad)  
lret
sub
pop
jb
cmp
and
add
or
jo
aas    
jge
int3   
pushf  
lret   
inc
dec
outsb
inc
aaa    
sub
sub
inc
sub
aaa    
xor
jno
or
and
aad
(bad)  
mov
adc
mov
or
in
aaa    
add
aas    
ret
sbb
lret
and
add
jnp
repz pushf 
cmp
aaa    
das    
jle
cmp
and
(bad)  
lret
and
add
push
das    
les
or
cli    
leave  
(bad)  
and
lret
sub
pop
sbb
(bad)  
sub
dec
push
outsb
and
add
aas    
xor
icebp  
adc
cmp
or
sbb
inc
insl
sub
adc
lret
cmp
add
cmp
das    
ret    
pushf  
lret
outsb
and
pop
push
push
aas    
xor
mov
clc    
(bad)  
cmc    
or
mov
hlt    
xor
push
ficompl
aaa    
loopne
or
xlat
loope
or
sub
add
xor
or
or
jbe
(bad)  
fbstp
cmp
repz pushf 
enter
sub
add
add
les
stos
pop
bound
xlat
leave  
add
ss push
sti    
(bad)  
fbstp
(bad)  
cmp
push
sbb
jp
outsb
push
aaa    
(bad)  
hlt    
in
add
push
dec
popa   
or
out
add
aas    
or
mov
outsb
or
sub
pop
inc
imul
or
dec
sti    
out
push
or
adc
add
sbb
inc
ss jb
aaa    
loopne
ss aas 
jg
negb
xor
vmptrld
das    
push
add
aas    
jb
aaa    
pop
jle
mov
jo
push
outsb
and
add
aas    
xor
enter
push
jb
xor
dec
aas    
imul
jmp
xor
fcomi
push
aas    
jno
cmp
or
xor
push
cmp
jno
push
dec
aas    
ret
add
add
jle
aas    
jo
and
pop
je
imul
dec
sub
adc
adc
dec
inc
or
xor
scas
lock sbb
mov
or
xor
leave  
add
ss push
sti    
(bad)  
fidivrl
cmp
das    
push
add
or
bound
add
or
je
jbe
(bad)  
fidivrl
inc
jae
cmp
jp
outsb
and
add
push
ret    
int
jle
push
add
loop
sbb
cmp
push
rcrb
pop
push
push
or
jp
jbe
or
nop
(bad)  
cmp
or
gs inc
clc    
out
push
or
jb
inc
insb
das    
and
adc
jmp
pop
jle
cmp
xor
xchg
adc
or
das    
repz pushf 
ss dec
inc
jbe
or
push
cmp
repz pushf 
cmp
push
aaa    
(bad)  
hlt    
or
pushf  
cmp
outsb
sub
pop
jle
(bad)  
cmp
fs or
inc
dec
push
(bad)  
fidivrl
aas    
jg
aaa    
or
test
outsb
or
sub
pop
inc
imul
or
dec
sti    
out
in
aaa    
sub
pop
aas    
jle
and
pcmpeqb
push
pop
data16 jne
add
or
sbb
ja
data16 jge
jnp
daa    
xor
je
jb
aaa    
(bad)  
or
push
rcrb
pop
push
(bad)  
xor
sbb
outsl
test
xor
pop
dec
mov
jg
or
sub
sub
popa   
mov
es or
jbe
es inc
std    
mov
or
dec
pop
imul
sbb
adc
and
push
add
jp
inc
or
jae
sub
xor
add
push
or
jl
cmp
inc
cmpsb
ficoml
add
ja
mov
inc
jbe
or
and
mov
nop
dec
push
push
sbb
jne
cmp
cmp
(bad)  
testl
(bad)  
iret   
std    
test
std    
mov
add
orb
cmp
outsl
cltd   
cmp
jbe
scas
imulb
inc
push
xchg
cmp
add
movhps
xor
push
push
pop
jp
mov
sub
or
pop
push
and
add
mov
add
inc
addr16 inc
mov
jp
xor
jbe
inc
jbe
aas    
cmp
cmp
daa    
push
fs dec
ucomiss
sub
jp
add
dec
add
cmp
jno
push
and
dec
jp,pt
or
fs dec
aaa    
pop
lods
pop
adc
pop
adc
inc
pop
inc
mov
lahf   
push
and
cmpsb
shr
mov
(bad)
inc
or
adc
push
gs push
dec
dec
out
xor
adc
out
xchg
or
cmp
mov
ret    
add
push
rcll
sahf   
cmp
pop
cmp
ds dec
sbb
sbb
jg
adc
sarb
adc
mov
out
xchg
adc
aaa    
lahf   
sub
aaa    
jg
out
push
xor
and
inc
push
fstpl
ljmp
ss insl
sbb
cmp
sbb
mov
popf   
dec
inc
pop
jg
jbe
roll
xor
fsave
push
addr16 dec
and
add
das    
mov
xchg
in
stos
lods
rcll
inc
inc
divl
je
adc
mov
int3   
jns
in
jmp
iret   
daa    
or
and
or
inc
popf   
(bad)  
push
push
inc
jb
xchg
fbld
mov
call
cmp
push
and
ficoml
das    
cmc    
adc
(bad)  
or
insl
cmp
movsb
mull
pop
jp
xor
ss loope
mov
out
pop
adc
pop
push
push
cmc    
in
mov
or
jmp
xor
add
std    
jg
add
cmp
add
imul
das    
xor
mov
test
fist
push
sub
xor
push
es call
leave  
xchg
ret    
mov
in
mov
xor
xchg
cmp
cmp
xchg
rorb
cld    
lods
sbb
mov
push
insl
adc
sbb
sub
mov
fldl
cld    
pop
lods
loope
dec
jno
adc
mov
sub
mov
mov
loope
mov
icebp  
xchg
mov
loope
shrb
sbb
aaa    
or
cmpps
xor
sbb
pop
push
push
add
cmp
add
adc
enter
imul
or
cmp
call
push
push
loopne
jecxz
inc
jae
dec
pushf  
out
push
xor
ret    
cmc    
or
(bad)  
mov
mov
push
aaa    
sbb
push
sbb
in
frstpm(287 only) 
cwtl   
lcall
in
lds
cltd   
in
fcomi
cld    
sahf   
inc
cld    
bound
cmp
push
add
std    
xchg
iret   
xchg
aas    
push
and
and
dec
dec
ss stos
sub
dec
cmp
movsb
sbb
push
inc
add
sub
cmp
bound
in
add
rclb
adc
rol
jl
call
push
mov
or
or
out
xchg
sbb
repnz sbb
push
(bad)  
fsubl
lods
in
or
les
add
jl
sbb
bound
cmp
(bad)  
aaa    
(bad)  
dec
sbb
lock ret
or
and
call
jmp
sbb
sub
mov
iret   
pop
mov
loope
testl
(bad)  
repnz cmp
shll
xchg
loopne
jns
jmp
fbld
bound
mov
int
jmp
add
aad
lret
int3   
jl
ret
and
sub
lcall
(bad)  
out
dec
loop
ret    
fs jae
jmp
and
test
push
jnp
push
insl
jo
shll
or
xor
add
push
insl
adc
mov
sahf   
inc
or
xchg
daa    
jno
add
mov
add
nop
rorb
out
lcall
jecxz
leave  
(bad)
and
test
(bad)  
fdivrp
mov
(bad)  
mov
push
mov
xlat
or
push
(bad)  
and
or
mov
adc
movsb
xor
adc
dec
or
push
add
push
adc
sub
ror
cmpsl
in
pop
inc
push
fstpl
cmp
mov
and
es lret
push
daa    
in
push
and
jnp
mov
or
mov
push
clc    
daa    
fwait
mov
push
inc
push
jp
or
add
shll
add
adc
cmp
orl
add
xor
in
pop
adc
icebp  
(bad)  
int
pop
(bad)
pop
pop
jl
dec
imul
jns
in
or
inc
int
ficomp
sub
cmp
pop
inc
dec
or
mov
mov
pop
inc
dec
pop
xor
ss adc
jmp
sub
xchg
inc
pop
pusha  
xor
push
(bad)  
stos
or
sbb
xorb
adc
inc
push
shrl
pop
test
sbb
sarb
and
push
push
fucom
xor
js
jl
loope
insb
pop
dec
loop,pt
aas    
and
fiaddl
or
jb
fcomps
xor
or
in
and
mov
add
nop
xor
aaa    
cmc    
dec
sbb
loopne
hlt    
jmp
(bad)  
fmull
mov
pop
inc
bound
push
cli    
ss dec
push
inc
sbb
lret   
jo
mull
call
bound
mov
call
insb
inc
inc
xor
mov
jecxz
aad
insb
shr
enter
adc
aad
or
push
(bad)  
loop
jno
out
rorb
adc
lea
and
imul
into   
jb
push
and
push
pop
push
call
sbbb
lret   
mov
cld    
or
ret
add
sub
or
aas    
jle
ficompl
das    
dec
and
rol
test
fidivrl
xor
stc    
cmp
jbe
add
loopne
jmp
in
repnz icebp 
xor
rcrl
xor
push
dec
jno
mov
mov
fnsave
add
inc
adc
or
mov
ja
and
mov
add
loope
fisubr
cwtl   
fldpi  
xor
sub
jmp
xor
ljmp
add
scas
clc    
adc
sbb
jns
(bad)  
in
pop
or
aad
adc
orl
xor
or
jecxz
mov
dec
jns
jae
push
adc
xchg
scas
in
fs dec
jae
mov
mul
js
or
pop
jp
xor
outsl
call
pop
dec
fwait
idiv
mov
and
pop
dec
ud1    
sub
in
jno
xor
push
and
out
sub
movl
scas
jmp
push
cmp
sbb
aad
fistl
jbe
mov
inc
adc
sub
add
bound
adc
jl
insl
add
das    
adc
cmp
inc
xchg
push
sarb
adc
xor
adc
fldt
rcl
cmp
lahf   
inc
loopne
dec
shll
jb
xor
inc
sub
stc    
int
mov
ljmp
rol
test
and
pop
in
fsubp
sbb
lds
scas
loop
xor
push
and
gs ja
mov
jg
lcall
or
sub
cmc    
in
int
push
icebp  
or
clc    
and
adc
push
iret   
fmuls
rcrb
in
fisubr
sub
loopne
cmpsl
loope
je
call
cld    
xchg
in
clc    
ds push
jno
adc
call
cmp
adc
sti    
sbb
push
dec
popa   
or
mov
pop
int3   
jb
cmp
push
pop
mov
add
imul
push
jae
out
cltd   
push
cwtl   
shl
jecxz
jbe
lds
dec
add
and
movsb
call
adc
push
xor
aaa    
jl
xchg
(bad)  
out
xlat
int
testl
scas
std    
(bad)  
test
out
ror
(bad)  
imulb
fdiv
test
lock test
call
lret
push
leave  
fdiv
xlat
mov
(bad)  
mov
ljmp
sub
lret   
jmp
stos
not
hlt    
mov
out
xlat
call
out
xlat
leave  
mov
int3   
fdiv
mov
out
mov
cmp
lret   
(bad)  
out
xlat
pushf  
mov
aad
fdivp
test
iret   
xlat
das    
pop
xor
mov
cmc    
test
test
cmc    
adc
or
cmp
das    
bound
add
outsb
push
jno
push
jb
pusha  
or
jb
iret   
fdiv
pop
xor
es dec
cmc    
test
out
stos
not
hlt    
mov
out
xlat
repz fdivr
mov
out
mov
(bad)  
out
xlat
repz fdivr
mov
out
aam
fdiv
mov
out
xlat
iret   
fdiv
mov
out
and
(bad)  
aas    
push
outsb
cmp
dec
dec
outsb
sub
sbb
cmp
or
gs inc
push
outsb
or
sbb
cmp
xlat
jge
or
pushf  
into   
movl
(bad)  
mov
int3   
cmp
add
jb
xor
dec
aas    
imul
ss out
add
jle
aas    
jo
sub
dec
or
inc
push
sub
or
inc
inc
jbe
(bad)  
aas    
jbe
inc
push
push
sbb
je
push
or
sbb
inc
insb
sub
add
mov
out
pop
dec
sub
fwait
(bad)  
sub
add
xor
or
push
push
sbb
je
jbe
iret   
fdiv
iret   
aas    
push
push
aaa    
adc
dec
dec
jb
or
jae
add
ret    
pushf  
xlat
add
jb
(bad)  
adc
mov
lds
data16 ja
jge
adc
xor
adc
pop
push
xor
je
jb
aaa    
cmp
mov
cmp
sbb
je
jb
aaa    
das    
jle
(bad)  
fist
sbb
dec
inc
adc
push
jb
aas    
xor
sub
inc
push
xor
add
inc
push
je
jb
aaa    
cmp
mov
fsubrl
cli    
jb
or
insb
jae
and
bound
dec
inc
or
or
push
cmp
xlat
iret   
fsub
(bad)  
(bad)  
not
(bad)  
lods
xchg
fidivr
lock cli 
ret    
out
(bad)  
mov
(bad)  
repnz int3 
incb
sbb
aas    
jge
sbb
arpl
dec
ja
jbe
aas    
jle
sub
and
adc
inc
outsb
push
js
adc
pop
out
xlat
iret   
push
pusha  
jecxz
clc    
xlat
add
inc
inc
cmp
or
insb
push
inc
inc
sub
cmp
je
or
or
jp
inc
or
and
aaa    
add
jb
(bad)  
push
jno
ja
cmp
arpl
push
sti    
popl
mov
test
mov
xchg
pop
and
or
sub
or
jp
outsb
and
data16 js
inc
jae
cmp
jp
outsb
and
add
out
(bad)  
sub
imul
inc
or
dec
pop
jbe
inc
adc
ficompl
push
jbe
iret   
sub
test
jbe
dec
jb
aaa    
das    
push
pop
inc
jge
jge
inc
inc
xor
xor
hlt    
mov
cmp
sbb
je
jb
aaa    
das    
jle
(bad)  
fist
sbb
dec
inc
adc
push
jb
aas    
xor
sub
inc
push
xor
add
inc
push
je
jb
aaa    
cmp
mov
rcl
clc    
sar
hlt    
push
xor
pop
push
aas    
add
dec
pop
adc
xor
adc
jo
xor
imul
in
test
xlat
fwait
mov
lret
mov
cwtl   
hlt    
cli    
(bad)  
sahf   
xlat
iret   
fdivrl
or
out
xlat
iret   
sub
cmp
push
arpl
je
jbe
xor
push
cmp
or
ret    
mov
out
mov
ret
xor
inc
xor
or
insb
ja
add
adc
fs je
jb
iret   
fdiv
mov
outsl
scas
push
mov
mov
mov
lret   
jmp
out
(bad)  
cwtl   
mov
jmp
out
incb
(bad)  
lret   
lock xchg
lock xchg
loope
mov
test
mov
mov
mov
(bad)  
repz
xchg
nop
mov
(bad)  
repz out
ret
mov
lds
mov
imul
fstp
jmp
fstp
jmp
xchg
(bad)  
mov
repnz mov
fwait
mov
lret   
jmp
out
(bad)  
cwtl   
mov
jmp
out
incb
(bad)  
lret   
lock xchg
and
pusha  
add
daa    
or
dec
outsl
jp
push
dec
dec
insb
test
jp
push
dec
or
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
in
jp
push
push
mulb
mull
push
dec
pop
and
cmp
ds or
daa    
and
push
arpl
imul
cmp
arpl
cmp
sub
dec
pusha  
ja
dec
insb
jp
push
sbb
insb
jp
imul
dec
sbb
push
dec
dec
insb
jp
push
dec
dec
insl
jno
popa   
push
dec
push
insb
jp
outsb
push
dec
dec
insb
jp
push
sub
insb
pop
inc
push
leave  
dec
insb
jp
sub
insb
insb
jp
push
jp
push
dec
dec
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
cmp
push
pop
dec
insb
push
push
dec
pop
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
mov
inc
push
dec
dec
insb
jp
push
pop
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
jmp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
imul
dec
insb
jp
push
dec
inc
dec
jp
and
dec
insb
jp
push
dec
dec
insb
push
aaa    
movntps
xor
dec
dec
jp
push
dec
dec
insb
js
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
sub
or
or
dec
jl
inc
push
leave  
dec
insb
jp
push
dec
adc
push
dec
dec
insb
jp
push
dec
dec
sub
inc
sub
sub
adc
dec
insb
jp
lret
dec
outsb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
or
inc
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
xor
inc
push
add
inc
push
dec
les
jp
ss addr16 dec
dec
outsl
jp
push
dec
dec
push
inc
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
cmp
inc
push
dec
int3   
push
inc
outsb
and
insb
jo
popa   
push
dec
dec
inc
jp
pop
push
popa   
dec
insb
jp
imul
push
or
imul
jp
imul
dec
inc
jp
push
jns
insb
adc
push
dec
dec
insb
imul
dec
dec
or
push
inc
inc
fs js
insl
push
dec
inc
sbb
push
popa   
bound
inc
arpl
push
inc
push
cmp
push
dec
push
inc
inc
imul
pop
dec
dec
push
cmp
jp
jl
inc
dec
insb
jo
pop
push
dec
push
jnp
xor
dec
cmp
push
dec
push
inc
pop
pop
jp
jne
sarl
imul
inc
popa   
inc
insb
jp
jl
push
fs data16 jp
pusha  
inc
push
pop
jg
push
jno
push
outsb
inc
dec
and
inc
pusha  
and
insb
or
pop
dec
dec
data16 insb
jo
mov
inc
lahf   
pop
jno
pop
jnp
(bad)  
sti    
pop
stos
imul
dec
inc
jg
fstps
dec
imul
and
insb
or
pop
dec
dec
data16 insb
add
push
dec
dec
adc
push
es dec
insb
jp
sbb
sbb
imul
inc
adc
push
es dec
insb
jp
add
or
push
cmp
bound
pusha  
fistp
jnp
gs push
dec
inc
adc
push
es dec
insb
jp
add
or
push
cmp
bound
pusha  
fistp
jnp
gs push
dec
inc
inc
push
push
gs dec
mov
dec
push
bound
adc
push
es dec
insb
jp
sbb
dec
sbb
imul
inc
adc
push
es dec
insb
jp
add
or
push
cmp
bound
pusha  
fistp
jnp
gs push
dec
inc
inc
push
push
gs dec
mov
dec
push
dec
push
js
xor
dec
cmp
push
dec
push
inc
pop
pop
jbe
outsl
push
dec
dec
inc
jg
mov
imul
inc
dec
push
std    
inc
push
popa   
pop
insb
jp
inc
pop
dec
dec
push
inc
jne
rcrl
push
dec
push
inc
pop
inc
push
push
insl
dec
inc
(bad)  
jle
xor
dec
inc
jg
push
insb
jle
fs js
inc
pusha  
lea
inc
outsl
inc
push
pop
dec
inc
insb
inc
push
xchg
dec
imul
jnp
dec
insb
jo
push
dec
dec
insb
jp
push
push
dec
jae
flds
dec
dec
pop
inc
push
dec
dec
sub
add
jnp
dec
insb
jo
inc
inc
dec
dec
push
pop
lock and
insb
or
pop
dec
dec
data16 insb
add
dec
dec
imul
push
dec
dec
sbb
imul
inc
jp
bound
(bad)  
add
push
cmp
adc
dec
dec
push
dec
fs inc
jp
insb
roll
insb
jle
ja
dec
push
notb
cmp
inc
jno
inc
dec
insb
jle
pop
push
dec
dec
in
jb
push
dec
push
gs loopne
ret    
push
dec
cmp
push
dec
push
inc
pop
pop
jae
jae
dec
inc
jg
push
insb
jo
stos
push
dec
cmp
push
inc
imul
dec
dec
sbb
imul
inc
jp
and
dec
dec
imul
mov
add
insb
mov
test
sbb
dec
insb
jo
xchg
push
push
pop
or
push
cmp
bound
pusha  
inc
mov
xor
jnp
dec
push
data16 loopne
js
dec
inc
adc
push
popa   
push
insb
jp
jnp
dec
push
data16 loopne
js
dec
inc
inc
inc
push
outsl
addr16 dec
imul
inc
(bad)  
inc
push
inc
insb
jp
inc
dec
dec
dec
imul
inc
(bad)  
inc
push
push
insb
jp
dec
push
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
fs jge
lock cmp
dec
insb
jo
push
jae
push
popa   
jge
jp
inc
jge
dec
push
inc
push
dec
addr16 jno
inc
jae
es dec
insb
jp
push
push
dec
dec
ja
dec
push
dec
fs pop
jp
insb
rorl
insb
jle
jne
sarl
inc
jnp
sbb
inc
insb
jp
jl
pop
fs jno
inc
pusha  
and
insb
or
push
dec
inc
in
jo
push
bound
imul
and
dec
insb
or
pop
dec
dec
data16 insb
jo
jnp
dec
insb
jo
rsqrtps
inc
fs inc
push
leave  
inc
insb
jp
inc
pop
dec
push
pusha  
loopne
adc
cmp
push
dec
push
inc
pop
pop
insb
imul
inc
push
repz inc
push
popa   
push
insb
jp
ljmp
insl
dec
inc
(bad)  
push
in
push
pop
fs gs jp
pusha  
inc
jp
inc
imul
leave  
inc
insb
jp
insl
dec
push
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
jl
dec
dec
pop
pop
inc
push
cmp
jp
jns
pop
inc
jp
popa   
push
inc
pop
adc
push
inc
addr16 jnp
dec
push
dec
lds
sbb
push
jl
jle
insb
jl
insl
dec
imul
jge
push
pop
fs gs jp
pusha  
inc
jp
imul
and
insb
or
pop
dec
dec
data16 insb
jo
jnp
dec
insb
jl
jne
sarl
imul
inc
popa   
inc
insb
jp
jl
dec
dec
jae
fstps
push
dec
dec
sbb
imul
inc
jp
inc
inc
jp
dec
push
pop
inc
leave  
cmp
jp
jl
inc
dec
insb
jo
sub
push
push
inc
pop
imul
dec
dec
sbb
dec
push
inc
pop
xchg
jnp
popa   
and
fs push
dec
inc
jp
inc
xor
jnp
sbb
dec
insb
jo
xchg
push
push
jne
jp
push
push
pusha  
(bad)  
or
imul
inc
jae
push
pop
jg
jge
inc
leave  
push
or
gs imul
jo
inc
cmp
inc
loopne
lds
cmp
push
dec
push
inc
pop
pop
push
push
dec
jge
inc
leave  
popa   
push
js
dec
jae
fstps
loopne
dec
sbb
imul
inc
jp
push
insl
dec
(bad)  {%k3}{z}
(bad)  
jae
inc
jne
shll
inc
pusha  
jne
outsb
imul
and
dec
insb
or
pop
dec
dec
data16 insb
jo
push
push
mulb
insl
dec
arpl
inc
pop
inc
push
outsl
dec
jae
fstps
push
dec
dec
sbb
imul
inc
jp
adc
dec
dec
data16 or
imul
addr16 jp
outsb
inc
imul
push
gs push
inc
ds test
outsb
dec
insb
jo
data16 and
insb
jo
addr16 inc
inc
dec
jae
fnstcw
es gs insb
jp
dec
mov
imul
pop
push
inc
push
gs dec
lock and
insb
or
pop
dec
dec
data16 insb
add
push
dec
dec
imul
and
inc
pop
dec
dec
data16 insb
jo
dec
popa   
insb
jp
sbb
push
push
inc
int3   
popa   
jp
outsb
inc
leave  
inc
insb
jp
inc
adc
(bad)  {%k3}{z}
loopne
mov
dec
cmp
push
dec
push
inc
pop
xchg
jnp
jne
sarl
cmpl
inc
popa   
inc
insb
jp
jl
dec
sub
pusha  
pop
jo
bound
xor
gs dec
lock jnp
dec
insb
jo
addr16 push
dec
dec
imul
roll
insb
jle
jne
ror
arpl
outsb
push
push
pop
idiv
push
push
dec
xor
inc
outsb
rcrl
insb
jle
jnp
dec
dec
push
mov
inc
insb
jp
inc
jg
dec
data16 cli 
push
push
dec
xor
inc
outsb
push
dec
insb
jp
jo
bound
xor
gs dec
lock jnp
dec
insb
jo
fs inc
inc
fs inc
jp
pusha  
jle
pop
bound
push
inc
push
notl
push
dec
pop
jae
pop
jl
push
fs inc
jp
pusha  
icebp  
pop
push
jnp
(bad)  
push
cmp
jge
pop
insl
dec
inc
(bad)  
into   
imul
dec
insb
or
jnp
push
xor
inc
outsb
icebp  
pop
push
inc
push
inc
push
popa   
jl
jp
push
mov
insb
add
push
dec
insb
arpl
push
js
insb
jo
dec
push
dec
inc
push
xchg
and
insb
jp
jns
pop
inc
push
mov
inc
inc
push
inc
push
popa   
pop
insb
jp
inc
popa   
dec
dec
push
pop
push
inc
insb
in
inc
push
arpl
pop
out
dec
dec
insl
imul
push
jge
push
sbb
push
jne
dec
push
arpl
loope
dec
push
lods
jp
sbb
pop
push
jbe
dec
push
dec
out
jge
imul
inc
inc
dec
inc
push
fs sbb
je
stos
push
dec
cmp
jne
inc
push
dec
inc
ja
push
push
dec
pop
dec
imul
push
fs inc
jp
pusha  
icebp  
pop
insb
jnp
(bad)  
push
cmp
jge
pop
insl
dec
inc
(bad)  
into   
imul
mov
loope
jae
xor
inc
outsb
icebp  
pop
insb
inc
push
inc
push
popa   
jg
jp
ja
bound
xor
push
push
cmp
jp
inc
je
dec
push
jae
push
inc
jbe
jnp
push
pop
dec
insb
or
ret    
push
dec
cmp
dec
inc
push
popa   
jns
jp
jns
pop
pop
js
outsb
push
jnp
push
pop
insl
jge
push
ja
bound
xor
push
push
cmp
jp
inc
je
dec
data16 fcoms
inc
pop
pop
inc
dec
inc
push
popa   
jns
jp
jns
pop
pop
js
or
cmp
jnp
push
pop
insl
jge
push
jno
pop
dec
insb
jnp
dec
inc
imul
dec
inc
into   
imul
mov
loope
jae
dec
jae
fxch
inc
imul
jmp
dec
pusha  
cmp
into   
imul
dec
dec
data16 fcoms
inc
pop
fs pop
jp
pusha  
inc
pop
pop
push
sbb
and
insl
jp
imul
dec
insb
pop
jo
bound
xor
gs dec
lock jnp
dec
insb
jo
jnp
pop
pop
inc
dec
inc
push
pop
pop
js
shrb
pop
loope
inc
push
pop
insl
jge
push
jl
pusha  
dec
insb
jnp
jnp
pop
pop
inc
dec
inc
push
pop
pop
js
fsubrs
cmp
jnp
push
pop
pop
js
imul
inc
dec
jge
jns
cmp
jp
jl
inc
dec
insb
jo
pop
pop
pop
inc
jo
jp
push
inc
je
jnp
push
pop
dec
insb
jle
inc
push
dec
inc
inc
jno
jnp
dec
dec
inc
push
inc
push
outsl
xor
inc
outsb
jnp
dec
insb
jo
cvtps2pi
insb
jle
gs je
dec
add
push
popa   
push
jp
sbb
push
push
inc
pop
jle
push
push
dec
lods
jp
sbb
fs inc
jp
pusha  
jnp
dec
insb
jo
pop
push
dec
inc
inc
popa   
inc
push
imul
jns
dec
data16 add
push
dec
lods
jp
sbb
fs inc
jp
pusha  
sub
imul
inc
imul
and
inc
pop
dec
dec
data16 insb
jo
pop
dec
push
inc
loopne
insl
push
dec
inc
sbb
push
aaa    
inc
insb
jp
inc
bound
push
push
dec
orl
push
imul
inc
pusha  
and
push
dec
inc
push
fild
and
pop
insb
jp
inc
inc
dec
dec
imul
popa   
jnp
jp
dec
js
fs js
inc
insb
push
push
pop
(bad)  
or
cmp
jae
push
pop
jg
add
push
dec
push
inc
inc
inc
push
dec
push
dec
loopne
insl
push
dec
cmp
push
dec
push
inc
pop
pop
inc
cmp
inc
outsl
push
xchg
push
pop
dec
insb
jl
dec
push
dec
inc
pop
pop
inc
push
pop
pop
inc
imul
jl
dec
push
dec
inc
pop
pop
inc
push
pop
pop
jge
push
add
imul
dec
dec
or
push
dec
inc
imul
and
insb
or
pop
dec
dec
data16 insb
jo
pop
es jg
jp
insl
dec
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
inc
push
dec
dec
pop
pop
inc
push
cmp
jp
jns
pop
pop
add
push
jno
insb
jp
insl
dec
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
jb
dec
dec
pop
inc
inc
push
cmp
jp
jns
pop
pop
push
roll
and
jo
jp
insl
dec
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
jae
dec
dec
pop
inc
inc
push
cmp
jp
jns
pop
pop
push
ret    
inc
push
es jo
jp
insl
dec
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
jo
dec
dec
pop
inc
inc
push
cmp
jp
jns
pop
push
push
mov
push
es jo
jp
insl
dec
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
jno
dec
dec
pop
inc
inc
push
cmp
jp
jns
pop
push
push
mov
jo
jp
insl
dec
push
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
js
inc
jbe
dec
dec
pop
inc
inc
push
cmp
jp
jns
pop
push
push
cltd   
inc
push
es jo
jp
insl
dec
pop
(bad)  
push
jge
push
pop
fs gs jp
pusha  
inc
jp
inc
imul
pop
push
jge
xor
je
push
pop
mov
imul
dec
dec
sbb
dec
push
inc
pop
xchg
jnp
inc
push
popa   
pop
insb
jp
mov
insb
fs jns
inc
pusha  
inc
push
fs jp
inc
pusha  
lea
sub
dec
dec
insb
ret    
inc
push
push
dec
insb
jp
imul
insb
jp
fs push
dec
dec
insb
jp
push
dec
dec
insb
and
push
adc
jp
push
dec
inc
insb
jp
jno
dec
dec
add
dec
dec
jge
jle
push
inc
inc
inc
jg
push
inc
dec
add
pop
popa   
jae
jp
push
pop
and
inc
pusha  
push
pop
and
cmp
adc
data16 jge
cltd   
push
dec
cmp
cmp
pop
inc
ds dec
jns
sbb
dec
insb
jo
cs push
dec
inc
imul
push
inc
push
outsb
inc
push
xchg
inc
dec
push
push
push
inc
inc
inc
insb
inc
push
xchg
dec
inc
jp
push
pop
dec
insb
jp
push
adc
insb
je
push
dec
push
pop
js
inc
push
dec
dec
outsl
jp
jnp
pop
fs jg
inc
insb
jle
fs js
inc
insb
jae
imul
push
dec
inc
jnp
movsb
mov
insb
fs jns
inc
pusha  
pop
popa   
pop
insb
jp
mov
arpl
jp
push
dec
dec
jno
inc
fs pop
dec
dec
insl
popa   
jae
push
aaa    
dec
insb
jp
push
pop
pop
addr16 add
push
inc
ds inc
jns
sbb
insb
jp
pop
es add
jp
addr16 pop
es add
inc
dec
pop
jg
push
push
push
outsb
push
pop
dec
push
std    
inc
push
popa   
pusha  
insb
jp
popa   
inc
dec
pop
mov
pop
dec
loop
jno
push
aaa    
pop
insb
jp
add
push
inc
jge
xchg
insb
inc
jle
pusha  
lea
je
imul
inc
jg
push
pusha  
jnp
dec
insb
jo
insl
jnp
dec
insb
jo
push
arpl
push
push
dec
dec
insb
jp
push
push
push
inc
insb
jp
jns
dec
dec
pop
jp
push
dec
dec
jge
or
inc
ds out
inc
sbb
insb
jp
pusha  
push
aaa    
pop
insb
jp
sbb
sbb
push
push
dec
ds dec
jns
sbb
dec
insb
jo
and
inc
push
or
inc
data16 insb
popa   
jae
push
sbb
insb
jp
push
pop
je
jnp
push
popa   
insb
jp
sbb
push
push
dec
imul
jnp
dec
insb
jo
pop
push
dec
inc
push
jno
push
cmp
jp
sbb
dec
dec
sbb
ja
push
inc
fs pop
jp
pusha  
pop
dec
pop
push
push
inc
push
pop
shrl
imul
jno
push
lods
jp
sbb
xor
dec
cmp
pop
inc
push
jmp
js
push
inc
gs dec
dec
push
jbe
push
inc
inc
push
xor
push
dec
cmp
testl
insb
pop
out
dec
dec
insl
imul
push
push
jge
push
sbb
push
outsb
dec
aaa    
inc
insb
jp
enter
push
mov
pop
push
dec
dec
into   
imul
dec
dec
data16 fmuls
inc
popa   
jnp
jp
insb
inc
cmp
fimul
insb
jnp
arpl
push
inc
push
inc
push
cmp
pop
dec
dec
push
inc
out
outsb
push
inc
fs dec
dec
data16 jl
sbb
dec
dec
sbb
into   
imul
popa   
jae
jl
pusha  
dec
insb
jnp
arpl
fs pop
jp
pusha  
push
pop
idivl
sbb
dec
insb
jp
jle
pop
pop
inc
inc
inc
push
outsl
insb
jl
inc
push
arpl
push
push
xchg
mov
xchg
movsb
dec
dec
jnp
dec
insb
jo
inc
inc
dec
dec
data16 movsb
inc
inc
push
dec
dec
sub
dec
dec
insb
jp
push
cmovge
imul
insb
jp
fs push
dec
dec
ja
inc
push
dec
dec
insb
jge
push
bound
jo
push
cmp
insl
jp
adc
dec
dec
push
dec
dec
push
inc
inc
pop
dec
dec
data16 jo
add
pop
stos
imul
pusha  
inc
xorl
dec
data16 jbe
jl
dec
inc
mov
imul
inc
push
jl
bound
push
pop
jl
jp
push
dec
inc
insb
jp
sbb
inc
add
insb
dec
inc
inc
dec
pop
mov
dec
dec
data16 divb
push
dec
fs cmp
es push
insb
jp
push
push
adc
inc
dec
add
inc
push
arpl
imul
inc
inc
popa   
jae
push
add
dec
push
pop
fs jb
inc
insb
pop
dec
fs dec
jp
insb
pop
dec
and
pop
pop
dec
test
popa   
push
insb
jp
jge
cmp
insb
jp
jl
cmp
insb
jp
add
jge
inc
jo
dec
push
dec
dec
jnp
dec
insb
jo
inc
inc
dec
dec
data16 movsb
inc
inc
push
dec
pop
insb
jp
push
dec
jo
jp
fs push
dec
dec
jg
inc
push
dec
dec
insb
jno
push
pop
rcll
imul
outsb
pusha  
inc
jl
dec
fs dec
jp
insb
jne
and
jno
pop
daa    
insb
xchg
add
dec
pop
and
push
xor
push
es mov
push
mov
jnp
imul
fs push
dec
push
inc
sbb
inc
jl
push
dec
insb
jo
inc
push
dec
data16 insb
jp
jns
dec
dec
inc
jp
push
dec
dec
jge
sub
push
dec
inc
jnp
push
mov
jnp
imul
pusha  
push
push
dec
inc
gs inc
push
fs dec
pop
and
push
xor
jp
jns
dec
dec
popa   
jp
push
dec
dec
jge
inc
jmp
dec
dec
ja
dec
inc
push
dec
data16 insb
jp
jns
dec
dec
lods
jp
push
dec
dec
jge
push
out
dec
dec
insl
jo
jl
scas
dec
insb
or
insb
inc
cmp
jp
enter
jnp
inc
sbb
dec
push
push
pop
inc
push
jmp
jbe
js
push
cmp
push
xor
jl
sbb
dec
dec
sbb
inc
ja
sub
or
insb
dec
cmp
push
push
inc
push
stc    
inc
push
jmp
jae
xor
push
dec
cmp
jl
popa   
and
dec
insb
or
insb
dec
inc
xlat
jle
sbb
dec
push
popa   
or
push
dec
sbb
jne
cmp
push
push
pop
push
insl
inc
push
jmp
jae
xor
dec
cmp
jl
js
add
insb
or
insb
dec
pop
ds sbb
dec
int3   
jg
inc
outsb
inc
leave  
pop
insb
jp
inc
dec
dec
fs push
pop
jl
jp
push
dec
pop
insb
jp
inc
ss dec
dec
data16 js
pop
push
dec
inc
add
push
inc
pop
data16 add
push
dec
pop
imul
imul
dec
ds jmp
loopne
insb
or
adc
pop
inc
and
inc
pusha  
jg
pop
push
dec
jnp
pop
lcall
ret
mov
dec
fs push
inc
push
jns
insb
jns
push
pop
dec
insb
imul
dec
dec
inc
adc
pop
es inc
insb
jp
pusha  
jnp
dec
insb
jo
jl
jno
insb
jp
arpl
inc
imul
jp
dec
push
inc
pop
push
lret   
inc
push
dec
and
jp
pusha  
inc
es daa 
insb
jp
add
push
fs push
dec
jne
jp
push
and
jne
pop
pop
push
pusha  
dec
insb
jnp
add
dec
inc
inc
push
inc
push
outsl
dec
add
sub
push
cmp
imul
insb
jo
add
adc
fs jle
inc
pusha  
jnp
dec
insb
jo
add
insb
sub
push
dec
inc
add
inc
push
imul
push
dec
data16 gs daa 
inc
jns
dec
data16 jge
add
inc
jp
sub
inc
and
jp
pusha  
inc
dec
pop
imul
mov
imul
inc
inc
insb
inc
push
xchg
dec
fs insl
xchg
pop
inc
ret
push
int3   
cld    
inc
push
arpl
push
push
push
mov
xchg
push
inc
imul
insb
jp
push
nop
dec
pusha  
je
push
lahf   
xor
inc
outsb
jg
addr16 inc
outsb
mov
push
arpl
inc
aas    
dec
jp
pusha  
rcrl
jle
jg
dec
dec
jnp
xor
inc
xor
inc
outsb
cmp
dec
insb
jo
push
push
dec
inc
jle
push
arpl
jns
add
dec
jle
inc
jnp
popa   
dec
insb
jp
push
or
sbb
inc
adc
push
dec
aaa    
insl
jp
outsb
cmp
dec
insb
jo
push
push
dec
inc
push
outsl
push
jp
push
push
dec
dec
insl
pop
inc
push
dec
dec
outsb
add
push
dec
cmpl
insb
jo
addr16 push
dec
inc
adc
push
dec
and
jp
pusha  
jle
xchg
data16 jl
insb
push
es xor
jp
mov
dec
dec
insl
push
push
dec
pop
insb
xor
pop
dec
dec
insb
jp
pop
push
dec
inc
insb
jp
jns
dec
pop
outsb
add
push
dec
inc
push
inc
push
push
dec
inc
jle
push
arpl
jnp
pop
push
dec
dec
js
inc
jnp
dec
dec
insb
jl
insl
jnp
dec
insb
jl
push
jp
insb
jg
imul
push
dec
pusha  
outsb
push
dec
inc
pop
dec
dec
push
inc
jl
dec
pop
push
inc
insb
jns
dec
ja
inc
push
dec
dec
insb
outsl
inc
push
popa   
and
cmp
adc
push
inc
inc
inc
inc
dec
add
push
add
imul
add
inc
pusha  
cmp
dec
insb
jo
bound
dec
dec
insb
or
pop
dec
dec
data16 insb
insl
addr16 pop
cmp
jp
add
push
inc
jge
xchg
jl
adc
popa   
xlat
movsb
push
arpl
add
outsl
popa   
pop
cmp
insb
jp
add
cmpsb
popf   
data16 jnp
dec
insb
jo
jl
dec
inc
mov
push
pusha  
js
dec
inc
jp
push
push
dec
insb
js
push
adc
push
dec
dec
insb
jp
add
jp
imul
insb
addr16 inc
push
pop
dec
insb
imul
dec
inc
add
inc
push
cmp
jp
jl
inc
dec
insb
jo
xchg
push
inc
insb
jl
push
dec
pop
pop
jns
inc
push
dec
dec
jnp
inc
jnp
pop
dec
insb
jo
add
inc
addr16 jge
adc
push
ret    
push
inc
fs jle
inc
pusha  
and
insb
or
pop
dec
dec
data16 insb
mov
push
inc
jns
dec
dec
push
jp
push
dec
dec
jge
push
push
inc
fs in
jp
pusha  
cmp
dec
insb
jo
sub
cmp
push
dec
push
inc
pop
inc
popa   
imul
inc
add
inc
push
cmp
jnp
dec
insb
jo
inc
push
pop
insl
insl
dec
inc
push
dec
data16 insb
jp
pop
push
dec
and
jae
dec
pop
inc
imul
es and
jp
popa   
push
cmp
push
xor
dec
insb
jo
inc
pop
dec
ds
inc
sbb
inc
insb
jp
jl
dec
arpl
add
cmp
push
dec
push
inc
pop
pop
js
inc
push
cmp
push
xor
dec
insb
jo
pop
dec
popa   
xor
add
or
insb
push
cmp
jae
push
pop
bound
push
insb
jl
jns
dec
dec
js
inc
push
dec
dec
jge
into   
insb
push
cmp
inc
pusha  
(bad)  
pop
xchg
js
inc
push
dec
data16 ja
inc
push
dec
dec
insb
popa   
inc
push
bound
jo
push
inc
pop
pusha  
push
push
pop
roll
adc
and
inc
pusha  
push
pop
fs gs jp
pusha  
inc
jp
push
sub
push
inc
dec
add
inc
push
inc
pop
mov
(bad)  
jle
gs daa 
inc
jns
dec
insw
outsb
xlat
lea
inc
outsl
inc
push
inc
dec
add
inc
push
popa   
cmp
jp
inc
inc
dec
dec
data16 movsb
inc
inc
push
dec
dec
insl
push
push
dec
dec
insb
cmp
dec
insb
jnp
pop
push
dec
xchg
insb
jp
jbe
dec
pop
push
into   
inc
push
popa   
inc
insb
jp
addr16 inc
inc
je
jp
push
inc
(bad)  
data16 jl
popa   
push
dec
inc
add
inc
push
cmp
jnp
dec
insb
jo
xchg
push
dec
and
inc
pusha  
cmp
dec
insb
jo
mov
dec
cmp
push
dec
push
inc
pop
xchg
jnp
insb
cmp
dec
insb
jo
add
inc
push
mov
push
pop
fs gs jp
pusha  
inc
mov
or
sub
push
dec
inc
add
inc
push
cmp
outsb
jp
jl
inc
dec
insb
jo
xchg
push
sub
jno
push
es and
jp
sbb
dec
dec
sbb
imul
inc
jp
inc
or
dec
add
and
jp
pusha  
pop
pop
lcall
sub
test
jp
jge
btr
popa   
pop
insb
jp
popa   
push
es into 
insb
jp
inc
and
push
push
push
inc
xchg
insb
push
inc
imul
insb
jp
push
mov
inc
push
push
jl
jp
push
dec
push
insb
jp
push
jo
insl
inc
cmp
insb
jp
inc
inc
dec
sbb
inc
push
inc
insb
insb
jle
push
pop
xchg
jnp
into   
push
push
dec
dec
inc
cld    
inc
push
cmp
jp
inc
dec
gs pop
inc
outsb
push
dec
and
jp
pusha  
inc
dec
inc
jge
xchg
addr16 inc
dec
insb
insb
jle
push
push
dec
sbb
inc
push
inc
pop
mov
xchg
out
dec
dec
insl
push
lds
inc
cmp
inc
jno
dec
outsb
push
loop
cmp
dec
insb
jo
pusha  
pop
gs dec
fs adc
nop
imul
data16 jge
insb
push
es xor
jp
mov
inc
insb
jl
push
dec
push
insb
jp
push
dec
and
push
dec
dec
outsb
jp
push
ret    
dec
data16 jp
push
pop
jl
jp
push
dec
push
insb
jp
inc
fimull
data16 js
loopne
dec
inc
push
inc
insb
jns
jl
jp
push
dec
insb
insb
jp
inc
fimull
data16 js
or
dec
inc
push
inc
insb
jns
jl
jp
push
dec
insl
insb
jp
inc
fimull
data16 jns
loopne
dec
inc
addr16 js
fisttpll
dec
loop
xchg
data16 js
dec
fs js
fisttpll
dec
inc
outsb
hlt    
hlt    
aaa    
ret
imul
aaa    
ret
fs insl
xchg
push
mov
dec
mov
dec
adc
out
jg
inc
inc
jp
mov
bound
inc
call
jp
push
jp
push
jp
push
or
inc
push
dec
dec
inc
jp
push
dec
aaa    
inc
jp
outsb
jle
dec
outsb
pop
mov
push
arpl
inc
pop
pop
icebp  
inc
push
xor
insb
jp
push
jle
dec
push
dec
inc
inc
jp
jno
inc
dec
mov
dec
dec
jge
push
pop
jns
dec
push
dec
fs loopne
inc
pusha  
inc
dec
pop
jg
jnp
push
dec
dec
jge
push
outsl
leave  
inc
dec
add
inc
push
jo
push
(bad)  
dec
insb
jo
add
inc
push
push
mov
and
dec
popaw  
mov
push
(bad)
inc
adc
dec
push
inc
fs pop
jp
pusha  
jg
dec
add
inc
push
dec
aaa    
inc
jp
outsb
jnp
dec
insb
jo
ljmp
push
popa   
pop
insb
jp
insb
cmp
dec
insb
jo
adc
dec
push
inc
pop
inc
jmp
push
dec
and
jp
pusha  
push
xor
jp
inc
inc
dec
dec
bound
push
dec
inc
push
shrl
inc
fs
jp
pusha  
inc
inc
pop
jg
jnp
push
dec
dec
jge
push
insl
leave  
inc
dec
inc
jmp
and
jp
sbb
sbb
imul
inc
jp
inc
jl
dec
dec
add
inc
push
dec
and
jp
pusha  
cmp
dec
insb
jo
adc
dec
push
inc
fs jle
inc
pusha  
inc
popa   
inc
insb
jp
jl
dec
pop
xchg
jnp
push
icebp  
dec
dec
insb
jge
inc
push
dec
data16 jl
cli    
push
dec
inc
imul
push
inc
and
jp
pusha  
and
insb
or
push
dec
inc
inc
in
inc
push
cmp
jp
sbb
dec
dec
sbb
ja
push
inc
pop
push
push
inc
push
pop
shrl
imul
gs insb
inc
add
jge
(bad)  
push
dec
inc
add
inc
push
cmp
jp
inc
jg
dec
data16 fcoms
inc
pop
pop
inc
dec
inc
push
pop
inc
jge
push
sbb
dec
dec
sbb
into   
imul
jg
push
popa   
inc
cmp
push
xor
inc
inc
pop
js
push
inc
les
imul
sub
or
dec
dec
insl
imul
jnp
sbb
pop
inc
js
push
jge
fimul
push
pusha  
inc
cmp
outsb
jp
jge
dec
dec
insb
jnp
popa   
inc
inc
pop
jno
push
push
dec
out
jge
push
jle
pop
fs sti 
jp
pusha  
inc
inc
pop
push
mov
shrl
imul
insb
pop
out
dec
dec
insl
imul
jl
sbb
pop
inc
jnp
cmp
dec
dec
push
incl
and
mov
xor
dec
data16 fcoms
dec
cmp
inc
inc
push
imul
push
inc
and
jp
pusha  
and
dec
insb
or
xchg
cmp
sbb
pop
pusha  
pusha  
xor
dec
cmp
imul
dec
dec
data16 fcoms
inc
pop
pop
jnp
aam
push
inc
pop
data16 outsb
xor
dec
cmp
testl
imul
dec
fs
jp
pusha  
cmp
dec
insb
jl
jnp
pop
pop
jp
imul
dec
inc
jge
push
sbb
dec
dec
sbb
into   
imul
js
push
jge
jno
insb
jo
jle
inc
pop
imul
push
pop
dec
jge
int
insb
mov
xchg
test
ret    
dec
dec
push
fldt
inc
pop
bound
imul
insb
jp
fs inc
inc
(bad)  
pusha  
jb
inc
push
dec
data16 jl
cli    
push
dec
inc
fs or
push
inc
and
jp
pusha  
and
insb
or
push
dec
inc
inc
in
inc
push
cmp
jp
sbb
dec
dec
sbb
ja
push
inc
pop
push
push
inc
push
pop
shrl
imul
insb
inc
add
jb
ljmp
push
popa   
pusha  
insb
jp
enter
js
imul
jg
push
gs inc
cmp
outsb
jp
jge
dec
dec
insb
jnp
arpl
pop
push
iret   
inc
push
jmp
outsb
push
jl
popa   
fldt
jnp
pop
ds or
les
jp
jns
pop
inc
jp
ljmp
push
jle
pop
fs sti 
jp
pusha  
inc
inc
pop
push
stc    
inc
push
pop
shrl
imul
insb
pop
out
dec
dec
insl
fcoms
inc
pop
pop
jnp
aam
push
inc
pop
arpl
scas
push
dec
cmp
testl
imul
les
jp
jns
pop
inc
jp
lcall
push
push
jle
out
push
dec
cmp
xchg
inc
push
sub
enter
push
inc
inc
push
jmp
pusha  
arpl
lret
adc
push
inc
out
jge
pop
sbb
dec
sbb
push
data16 jnp
dec
insb
jo
jnp
pop
pop
jp
imul
dec
inc
jge
push
sbb
dec
sbb
into   
imul
jg
push
popa   
inc
cmp
inc
inc
pop
js
push
inc
les
imul
dec
insb
or
push
dec
dec
insl
outsb
push
jle
popa   
je
jp
dec
inc
pop
inc
jge
push
mov
imul
jbe
xchg
test
jp
pusha  
pop
popa   
pop
insb
jp
mov
xchg
inc
dec
push
push
push
inc
pop
push
inc
xchg
insb
imul
pop
dec
jge
push
insb
(bad)  
jae
cmpl
dec
inc
outsb
add
push
dec
jne
cmpl
or
jp
push
dec
add
push
push
dec
dec
jmp
inc
push
dec
dec
insb
je
push
dec
dec
insb
jp
push
dec
cmp
inc
std    
push
dec
dec
arpl
push
dec
dec
insl
popa   
jae
push
rorb
push
pop
xor
jp
pusha  
and
add
jbe
bound
and
jp
pusha  
and
dec
insb
or
push
dec
inc
push
lahf   
inc
push
popa   
shrb
inc
push
dec
dec
adc
push
inc
lds
sbb
loopne
insb
or
push
dec
inc
inc
das    
inc
push
inc
dec
push
jnp
push
es inc
insb
jp
inc
pop
dec
imul
insb
jo
insl
pop
xchg
push
mov
inc
inc
dec
dec
data16 ja
ret    
push
dec
cmp
push
push
push
inc
xchg
imul
push
inc
xchg
insb
jl
push
dec
dec
jl
inc
push
dec
dec
add
inc
jno
dec
dec
insl
fs inc
inc
push
dec
dec
push
push
pop
push
dec
push
push
dec
pop
jnp
inc
imul
push
dec
inc
outsl
insl
outsb
pop
inc
addr16 pusha 
jl
mov
sahf   
push
popa   
js
dec
inc
popa   
jae
push
push
push
pop
addr16 jb,pt
sbb
shrl
pusha  
inc
dec
mov
jne
push
inc
dec
inc
push
imul
push
pop
xor
inc
outsb
inc
dec
mov
je
push
pop
dec
mov
popa   
in
insb
jp
inc
repnz dec
dec
popw
jb
push
dec
dec
inc
fadds
pop
imul
leave  
push
dec
inc
adc
inc
push
pop
push
adc
inc
push
pop
pop
outsl
push
dec
push
inc
sbb
dec
dec
data16 add
push
cmp
imul
insb
jo
push
jp
adc
dec
dec
data16 insb
pop
adc
dec
dec
data16 outsb
push
imul
insb
jle
aas    
enter
sub
push
push
out
push
inc
pop
jge
push
jnp
jge
inc
fild
pop
pop
dec
dec
leave  
inc
push
les
jp
jns
pop
inc
jp
inc
push
dec
sarb
cmp
dec
jge
imul
dec
dec
inc
jl
into   
push
dec
inc
push
imul
fstpl
push
dec
push
pop
inc
jbe
dec
inc
imul
(bad)  
dec
dec
data16 add
inc
inc
jg
push
dec
push
dec
dec
push
insl
insb
and
dec
insb
jo
outsb
inc
pop
push
cmp
imul
dec
inc
jg
inc
jnp
push
sbb
inc
pop
push
inc
adc
dec
push
imul
jno
jp
jns
dec
popa   
dec
imul
push
pop
jg
push
push
jle
jnp
imul
jno
jp
jns
pop
dec
jp
inc
sbb
dec
dec
data16 add
sub
jle
outsl
push
pop
dec
jle
imul
inc
jl
into   
push
dec
inc
push
imul
dec
dec
insb
lods
push
jns
pop
pop
jo
imul
dec
inc
jg
push
js
xchg
pop
popa   
insb
push
pusha  
js
dec
jge
pop
test
insb
jp
jns
dec
pop
jg
push
mov
jo
jle
pop
pop
jae
xchg
inc
(bad)  
dec
dec
imul
bound
pop
lcall
dec
insb
jnp
jge
pop
pop
jge
push
jnp
(bad)  
sti    
inc
fldl
pop
pop
dec
pop
push
inc
push
pop
dec
jge
xchg
jnp
pop
pop
loop
push
data16 jnp
dec
insb
jl
insb
and
dec
insb
jo
jnp
push
fs mov
pop
lcall
jge
imul
dec
dec
imul
insb
jp
jnp
push
lcall
jb
jp
inc
push
cmp
insb
jp
adc
pop
jae
xchg
inc
(bad)  
dec
dec
imul
dec
jge
push
outsl
inc
inc
push
inc
imul
lahf   
sarb
cmp
dec
jge
imul
dec
inc
jl
into   
push
dec
inc
push
push
dec
push
dec
pop
pop
jl
into   
push
dec
inc
push
movsb
sbb
pop
dec
insb
jo
jb
push
fs jns
inc
pusha  
inc
dec
aaa    
inc
jp
outsb
xlat
popa   
add
jns
pop
push
inc
jge
jae
es dec
insb
jo
jno
popa   
pop
insb
jp
jns
pop
push
inc
outsl
inc
push
popa   
pop
insb
jp
inc
inc
dec
dec
data16 movsb
inc
inc
inc
dec
dec
outsw
dec
inc
inc
dec
dec
data16 movsb
push
inc
inc
dec
dec
data16 movsb
inc
js
xor
jp
out
pop
bound
inc
push
or
jp
push
dec
test
inc
jbe
dec
dec
mov
push
dec
dec
insb
je
push
dec
dec
insb
jp
push
dec
aas    
outsb
jp
rcll
dec
aaa    
jp
push
dec
dec
insl
inc
inc
inc
push
dec
dec
push
outsl
push
dec
insb
push
inc
push
push
popa   
sbb
inc
jg
dec
push
inc
inc
push
jae
inc
das    
inc
push
popa   
pusha  
insb
jp
inc
push
arpl
imul
dec
inc
inc
push
inc
push
bound
jns
jnp
dec
insb
jo
inc
push
dec
dec
inc
jp
push
sbb
jnp,pn
imul
insb
jp
push
dec
cmp
jae
data16 jns
pop
dec
inc
push
dec
dec
insb
push
inc
push
jge
insb
jp
adc
dec
in
jge
inc
lcall
sbb
daa    
sub
jp
push
fldcw
jp
bound
outsl
cmp
inc
ret
dec
jl
inc
push
push
sbb
icebp  
bound
outsl
push
dec
outsl
cs push
sub
push
dec
dec
insb
jp
push
dec
dec
insl
sub
inc
insb
jp
nop
jbe
dec
jp
inc
imul
xor
push
dec
dec
insb
cmp
push
or
or
push
dec
out
jp
jg
dec
dec
jge
inc
push
dec
dec
insb
js
push
insb
dec
insb
jp
push
dec
inc
insb
jp
bound
dec
imul
insb
je
push
dec
dec
insb
jp
push
dec
dec
insb
jp
imul
insl
jp
push
dec
lods
js
inc
push
dec
dec
push
lea
dec
inc
insb
xchg
inc
mov
inc
dec
pusha  
jnp
push
dec
leave  
outsb
mov
dec
mov
dec
fisubrl
inc
pop
push
mov
xchg
bound
xchg
pop
dec
dec
and
pusha  
push
dec
xor
sbb
inc
nop
jae
push
inc
fisubrl
inc
cld    
pop
mov
call
insb
mov
dec
xchg
push
dec
mov
push
addr16 inc
imul
sub
mov
in
mov
jecxz
push
inc
pop
insb
mov
fcompl
dec
popf   
jno
popa   
push
dec
arpl
inc
insb
push
or
push
inc
jbe
jl
adc
dec
push
cld    
repz inc
dec
insb
pushf  
dec
cld    
push
dec
dec
sahf   
jbe
outsb
pop
dec
pop
popa   
imul
jp
push
inc
pop
insb
or
pop
dec
dec
push
xor
inc
dec
insb
decb
pop
dec
dec
lods
ja
pusha  
pop
dec
xchg
popa   
jge
insb
push
cmpsl
inc
stos
jp
push
inc
mov
js
jae
push
insb
lds
insb
xor
pop
dec
dec
lret
push
dec
andb
insb
push
xchg
inc
(bad)  
je
push
inc
mov
jl
sub
jp
gs xchg
dec
dec
insb
icebp  
dec
lret
dec
bnd jne
push
dec
std    
arpl
dec
insb
push
testb
inc
push
inc
fwait
outsl
jl
jp
mov
jp
inc
dec
insb
dec
push
mov
push
imul
insb
push
sbb
push
pop
mov
out
inc
daa    
pop
push
sarb
dec
dec
insb
pushf  
push
lret
dec
sahf   
push
push
dec
mov
mov
pop
bound
push
pop
mov
push
inc
push
lret   
jnp
inc
inc
insb
leave  
push
mov
push
mov
dec
mov
mov
pop
stos
jp
push
pop
jne
jl
xor
pop
data16 jp
js
inc
dec
insb
xchg
push
push
pop
pop
dec
imul
dec
js
push
pop
cltd   
push
mov
pop
inc
dec
inc
push
pop
jns
inc
dec
insb
std    
push
push
pop
dec
dec
scas
imul
mov
pop
stos
jp
push
pop
mov
or
mov
ret
inc
dec
insb
in
push
lret
dec
into   
outsb
outsl
pusha  
push
dec
mov
dec
push
dec
dec
insl
jp
push
dec
dec
insb
jnp
imul
inc
jp
push
dec
dec
insb
jnp
imul
push
jp
push
dec
dec
insb
js
imul
das    
jp
push
dec
dec
insb
jle
imul
inc
jp
push
dec
dec
insb
jbe
push
dec
dec
and
insb
push
dec
pop
insb
addr16 inc
imul
xor
dec
pop
insb
pop
inc
push
jp
push
dec
pop
insb
push
inc
push
dec
dec
sbb
push
dec
data16 insb
push
inc
push
dec
dec
adc
push
dec
data16 insb
push
inc
imul
out
insb
push
dec
data16 insb
dec
inc
push
dec
dec
jecxz
insb
push
dec
popa   
insb
dec
inc
imul
cmc    
jp
push
dec
popa   
insb
dec
inc
popa   
push
dec
dec
repz jp
push
dec
popa   
insb
cmp
push
dec
dec
fistpll
push
dec
jge
cmp
push
dec
dec
jnp
inc
push
dec
push
insb
jnp
dec
push
push
dec
jge
push
imul
insb
inc
inc
inc
push
pop
dec
aas    
js
push
dec
das    
outsb
aaa    
inc
jnp
and
jp
push
dec
push
insb
imul
push
dec
jge
iret   
push
jmp
inc
push
pop
dec
stc    
js
push
dec
out
outsb
gs inc
jnp
clc    
dec
jae
push
push
dec
push
insb
imul
push
dec
jge
popf   
push
sbb
push
pop
dec
loop
imul
inc
insb
push
jne
(bad)  
jp
ljmp
xor
dec
cmp
xor
dec
sbb
incb
push
pop
int3   
bnd jg
push
leave  
mov
inc
cmp
xchg
dec
sarl
mov
ret    
imul
cmp
push
insb
decb
in
push
inc
(bad)  
push
pop
int3   
push
jl
push
leave  
add
rcrl
dec
sarl
push
dec
loope
sub
add
dec
cmp
xor
sbb
pop
inc
(bad)  
push
pop
int3   
cli    
jl
push
dec
inc
imul
push
inc
dec
stc    
jp
push
dec
push
insb
jl
mov
dec
push
lods
bound
dec
dec
insb
orl
jae
imul
rolb
push
pop
inc
jae
inc
push
inc
push
insb
jl
dec
pop
push
dec
push
insl
arpl
dec
dec
insb
dec
dec
rclb
pop
jae
push
dec
jb
rolb
push
cmovne
jp
push
inc
out
jl
or
dec
push
xor
dec
dec
insb
add
push
dec
dec
ljmp
rolb
push
xlat
inc
(bad)  
jp
push
inc
out
jl
fstps
dec
mov
dec
dec
je
inc
jns
dec
dec
mov
inc
push
dec
dec
je
inc
jns
dec
dec
or
inc
push
dec
dec
fs dec
inc
dec
push
dec
dec
adc
inc
push
dec
dec
je
inc
jns
dec
dec
in
dec
inc
push
dec
pop
sbb
push
dec
dec
lods
dec
inc
push
dec
pop
fs push
inc
inc
push
dec
dec
add
push
dec
pop
fs push
inc
inc
push
dec
dec
hlt    
dec
inc
push
dec
pop
fs ljmp
dec
inc
push
dec
pop
fild
push
dec
dec
dec
dec
inc
push
dec
pop
fs ret 
inc
inc
push
dec
dec
hlt    
dec
inc
push
dec
pop
fs mov
inc
push
dec
dec
cmp
inc
push
dec
pop
je
inc
pop
push
dec
dec
insb
jp
push
dec
pop
dec
cmp
push
dec
dec
add
inc
push
dec
dec
je
inc
sub
dec
adc
inc
push
dec
pop
insb
and
sub
pop
inc
push
dec
pop
insb
mov
push
dec
dec
pop
push
inc
push
dec
pop
insb
js
pop
push
dec
dec
rclb
push
dec
pop
insb
jge
pop
push
dec
dec
push
dec
pop
insb
imul
push
inc
push
dec
pop
insb
inc
pop
push
dec
dec
mov
push
dec
pop
insb
pop
inc
pop
push
dec
dec
or
push
dec
pop
insb
dec
inc
pop
push
dec
dec
test
inc
push
dec
pop
insb
inc
inc
xor
dec
push
ds inc
push
dec
pop
fs
dec
jmp
ds inc
push
dec
pop
fs mov
jmp
ds inc
push
dec
pop
mov
dec
add
inc
push
dec
pop
fs sahf 
dec
jmp
ds inc
push
dec
pop
mov
push
inc
dec
pusha  
dec
inc
push
dec
dec
je
inc
jns
inc
dec
insb
jp
push
dec
pop
dec
cmp
dec
insb
jp
push
dec
pop
dec
and
push
inc
dec
insb
jp
push
dec
pop
dec
fiaddl
push
inc
dec
js
inc
push
dec
pop
insb
stos
inc
pop
push
pop
dec
adc
push
dec
pop
insb
jno
sbb
pop
dec
test
push
dec
pop
insb
push
inc
push
push
pop
dec
dec
dec
inc
push
dec
pop
insb
ds inc
in
push
pop
dec
push
dec
inc
push
dec
pop
je
inc
pop
push
push
dec
fs dec
inc
push
dec
dec
je
inc
jns
push
dec
jl
inc
push
dec
pop
insb
adc
push
push
dec
adc
inc
push
dec
pop
insb
and
push
push
dec
hlt    
dec
inc
push
dec
pop
insb
add
dec
insb
jp
push
dec
pop
dec
ret
push
push
dec
insb
jp
push
dec
pop
dec
cmp
push
push
dec
aam
inc
push
dec
pop
insb
roll
push
push
dec
push
inc
inc
push
dec
pop
insb
movb
imul
pop
insb
mov
popa   
push
imul
pop
insb
movsb
inc
js
push
push
dec
pop
insb
popf   
inc
jb
imul
push
dec
pop
insb
lea
push
push
loopne
inc
push
dec
dec
je
inc
jns
insb
dec
faddl
push
dec
dec
insb
inc
jns
insb
dec
mov
push
dec
dec
insb
pop
inc
jns
insb
dec
cwtl   
inc
inc
push
dec
dec
insb
pop
inc
dec
push
insb
dec
lock cmp
push
dec
dec
je
inc
jns
outsl
dec
enter
push
dec
pop
insb
dec
inc
inc
push
outsl
dec
mov
dec
pop
insb
and
bound
inc
push
dec
pop
dec
sbb
jns
insb
jp
push
dec
pop
dec
testb
dec
insb
jp
push
dec
pop
dec
rolb
dec
insb
jp
push
dec
pop
dec
mov
daa    
push
jno
insb
jp
push
dec
pop
dec
popf   
inc
ds push
jae
insb
jp
push
dec
pop
dec
push
dec
insb
jp
push
dec
pop
dec
dec
dec
add
dec
insb
jp
push
dec
pop
dec
mov
dec
insb
pop
inc
push
dec
dec
insb
jnp
and
dec
dec
insl
jp
push
and
push
dec
dec
xchg
js
push
dec
jb
jp
imul
insb
jp
push
inc
dec
insb
jnp
mov
jp
arpl
dec
insb
mov
push
dec
dec
sbb
dec
xor
jnp
imul
push
dec
dec
insb
js
adc
dec
outsl
jp
imul
push
dec
dec
lods
jns
push
dec
push
push
push
dec
insb
jp
push
dec
dec
insb
jnp
xor
dec
outsb
jp
outsb
push
dec
dec
insb
or
push
dec
dec
mov
dec
xchg
push
mov
push
dec
dec
dec
jnp
ja
dec
dec
insl
jp
insb
push
dec
dec
insb
lods
inc
push
dec
dec
ss js
push
dec
mov
push
mov
insb
jp
push
dec
dec
insb
jnp
inc
push
dec
dec
insl
jp
outsl
push
dec
dec
insb
inc
inc
push
dec
dec
push
jge
jp
dec
packssdw
outsl
push
pop
dec
insb
jp
push
dec
dec
insb
js
push
push
dec
dec
outsl
jp
insl
push
dec
dec
insb
cmp
dec
dec
and
push
dec
xor
jp
push
jp
push
dec
dec
insb
js
ljmp
insl
push
dec
dec
insb
fild
dec
dec
fdivrl
push
dec
mov
inc
imul
insb
jp
push
dec
dec
insb
jnp
lods
push
dec
dec
outsb
jp
insl
push
dec
dec
insb
test
dec
dec
imul
fs jp
imul
insb
jp
push
dec
dec
insb
jns
hlt    
push
dec
dec
push
dec
dec
insb
pop
dec
push
dec
dec
sub
inc
push
dec
sbb
jp
imul
push
inc
dec
insb
jg
adc
jp
bound
dec
insb
out
push
inc
dec
les
push
dec
cmc    
fs jp
pusha  
push
mov
push
dec
dec
insb
js
mov
add
push
push
dec
cltd   
insb
imul
jp
push
dec
pop
insb
sti    
inc
mov
jp
push
dec
adc
push
rorb
imul
je
faddl
push
cmova
jnp
push
inc
ljmp
inc
or
dec
gs jp
popa   
loopne
in
insb
cld    
dec
aam
rorb
subb
loopne
mov
rcll
inc
mov
inc
sahf   
insl
adc
push
xchg
dec
lods
jp
popa   
dec
lea
mov
dec
js
jbe
loop
push
pushf  
inc
mov
jnp
push
inc
(bad)  
insl
ret    
inc
aas    
pop
xchg
jp
mov
inc
popf   
push
test
call
dec
aam
test
adcl
mov
dec
mov
dec
inc
mov
jp
addr16 pop
dec
jge
inc
jns
dec
dec
push
ja
push
pusha  
inc
fistl
inc
dec
js
push
inc
imul
dec
adc
dec
jge
sub
push
test
or
push
inc
inc
dec
push
xor
push
jp
imul
or
pop
add
jp
addr16 push
insl
insb
inc
dec
and
nop
dec
into   
ja
imul
imul
xor
inc
adc
inc
cltd   
pop
sub
addr16 and
jne
jae
loop
nop
dec
dec
je
push
xchg
push
pushf  
dec
enter
dec
dec
out
sbb
push
pop
dec
in
jp
fs loopne
popf   
insb
sbb
adcl
push
mov
push
rolb
jp
imul
les
dec
or
dec
xor
push
cmp
je
imul
inc
sbb
inc
jg
cmp
inc
inc
outsl
or
pop
dec
or
dec
sub
push
enter
push
push
dec
push
imul
push
sbb
jns
imul
iret   
insl
sti    
inc
add
adc
jnp
or
insl
cld    
dec
jns
clc    
dec
sbb
imul
inc
lret   
push
pushf  
dec
push
jns
imul
mov
cmp
jnp
sub
insl
scas
inc
adc
cwtl   
dec
mov
dec
adc
xchg
push
pushf  
dec
jg
push
xchg
outsl
jnp
movl
jp
dec
inc
outsb
scas
inc
jns
pop
dec
mov
dec
cltd   
insb
imul
jns
push
fildl
push
xchg
dec
int
outsb
jnp
dec
sub
push
sub
mov
jp
sub
inc
pop
push
cmp
jnp
push
pop
mov
inc
inc
cli    
inc
dec
dec
or
dec
(bad)
dec
aas    
push
js
lock imul
cmp
push
mov
push
xor
inc
push
dec
cmp
dec
add
push
adc
push
mov
push
pop
pop
dec
jp
push
fildl
inc
cli    
dec
or
dec
lods
insb
stc    
push
movsb
push
cwtl   
dec
cld    
push
in
jle
inc
or
pop
and
push
inc
ljmp
inc
mov
js
push
dec
int
scas
inc
xorps
dec
push
imul
add
push
dec
inc
jg
bound
pop
pushf  
outsl
pop
inc
mov
(bad)
jp
push
dec
in
and
ret    
push
loopne
add
data16 outsb
cli    
dec
cmp
inc
ret    
push
fcomps
jle
push
mov
dec
dec
jnp
jns
dec
popf   
insb
int3   
push
adcl
push
dec
sarl
inc
mov
test
jp
imul
mov
dec
inc
jnp
push
dec
gs insl
in
fsts
dec
popf   
imul
jg
inc
sbb
inc
cltd   
jle
imul
inc
pop
dec
sub
dec
jne
ljmp
outsb
jp
lcall
push
pushf  
dec
jg
xchg
push
stos
inc
xor
dec
mov
jle,pn
dec
popf   
outsb
movsb
inc
sub
dec
mov
dec
cltd   
insb
or
xchg
push
pushf  
dec
jg
dec
push
dec
std    
insb
jb
or
dec
fs jp
push
dec
inc
insb
adc
push
inc
dec
add
push
dec
cmp
mov
bound
dec
mov
dec
cwtl   
insb
jb
push
push
nop
dec
fs jp
push
dec
inc
insb
incb
push
inc
dec
in
stos
push
dec
shrb
push
(bad)
dec
push
dec
subl
push
mov
push
dec
inc
insb
fiaddl
push
inc
dec
enter
push
dec
jmp
push
loopne
pop
jnp
push
dec
aaa    
imul
jnp
imul
dec
ja
lcall
inc
mov
dec
mov
inc
imul
jns
nop
dec
dec
jns
push
dec
insb
outsl
imul
jp
push
dec
inc
insb
mov
dec
mov
and
dec
xchg
insb
cli    
inc
popa   
push
nop
dec
in
jns
push
dec
dec
insb
or
push
loope
insl
jp
push
dec
inc
insb
jnp
push
dec
dec
arpl
push
gs inc
pop
push
jb
and
imul
inc
rclb
stos
jns
imul
dec
push
jle
outsb
sbb
push
sbb
push
dec
lea
inc
lock push
lahf   
dec
outsb
jg
outsl
sbb
jnp
outsb
push
dec
dec
insb
jp
imul
insb
mov
dec
mov
push
dec
mov
push
mov
pop
jp
push
dec
jge
jp
ja
js
insb
jp
push
jns
imul
push
dec
dec
insb
jge
push
jp
push
dec
inc
insb
js
arpl
dec
outsb
jp
push
dec
dec
insb
jno
jnp
imul
lcall
inc
repz push
or
push
inc
inc
sub
jnp
push
dec
dec
insb
cmp
push
jmp
imul
hlt    
push
push
dec
inc
jg
push
dec
aas    
insb
sbb
dec
dec
sbb
insl
push
dec
dec
insl
or
dec
insb
jnp
push
dec
dec
insb
jp
adc
dec
outsb
jp
imul
pop
fs js
push
ss dec
pop
jb
push
dec
int
mov
int3   
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
inc
insb
jp
push
inc
dec
insb
jp
push
dec
dec
insb
jp
pusha  
push
pop
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
jp
push
dec
dec
insb
jnp
lods
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insl
jp
popa   
push
dec
dec
insb
jb
insb
push
inc
dec
popa   
jp
push
dec
dec
insb
jp
and
dec
and
ljmp
jg
cmp
cmp
pop
jge
cmp
add
das    
add
dec
add
sub
push
adc
add
and
cmp
dec
sub
dec
or
sub
insb
cmp
add
push
pop
and
or
sbb
inc
cmp
es das 
or
xor
aas    
sub
or
dec
pop
bndstx bnd1,0x4c3b3604
cmp
sub
cmp
sub
cmp
add
dec
or
sub
pop
jp
add
cmp
cmp
add
sub
cmp
xor
cmp
dec
cvtps2pi
push
dec
sbb
xor
adc
add
cmp
or
push
sbb
sub
push
add
push
or
and
xor
sbb
cs push
sub
or
aaa    
push
sub
add
inc
cmp
cmp
or
insl
daa    
xor
sub
cmp
sub
or
and
push
adc
xor
das    
add
xor
sub
das    
sub
xor
sub
cmp
or
dec
and
adc
or
and
sub
xor
push
sub
xor
and
das    
sub
cmp
sub
sbb
xor
and
add
aaa    
add
and
push
sub
xor
xor
or
aas    
aas    
sbb
add
cmp
add
sub
add
sub
adc
and
daa    
push
add
xor
sbb
and
sub
adc
and
daa    
push
add
xor
aas    
aas    
sbb
insb
sbb
aas    
das    
sub
add
inc
or
or
and
add
xor
push
push
add
push
add
aas    
sbb
add
pop
and
pop
and
sub
or
sub
push
add
aas    
cvtps2pi
ss and
push
xor
xor
xor
sub
adc
cmp
inc
and
or
aas    
sbb
insb
xor
cmp
adc
sbb
dec
bound
sbb
add
adc
and
or
es push
ss
add
inc
add
and
insb
adc
and
sbb
sub
xor
and
sbb
push
and
or
or
cmp
add
daa    
push
daa    
or
aaa    
xor
jp
or
xor
cmp
sub
cmp
sbb
sub
daa    
sub
sbb
xor
pop
xor
cmp
sbb
sub
daa    
sub
sbb
xor
sub
or
cmp
add
and
dec
aas    
push
and
daa    
cmp
xor
push
ss push
cmp
push
sub
cmp
add
or
dec
or
sub
and
sub
push
daa    
dec
sbb
or
add
cmp
push
and
movups
cvtpi2ps
or
adc
xor
sub
jnp
sbb
xor
cmp
and
cmp
sub
push
and
sbb
xor
and
sub
cmp
or
cmp
es das 
or
xor
sub
daa    
pop
xor
and
or
sbb
(bad)  
rdtsc  
add
xor
sub
pop
pop
and
and
cmp
cmp
or
dec
cmp
pop
and
and
cmp
cmp
push
push
sub
xor
sbb
sub
xor
sbb
cmp
(bad)  
cmp
das    
sbb
aaa    
add
daa    
push
cmp
push
xor
sbb
cs inc
add
sbb
sub
sub
nopl
sbb
or
add
xor
or
ds add
cmp
push
adc
push
cmp
dec
cmp
xor
sbb
add
pop
mov
ds add
dec
cmp
adc
add
adc
push
ss dec
or
adc
cmp
es das 
sub
xor
and
cmp
adc
and
push
cmp
sub
daa    
add
push
xor
and
insb
sbb
sbb
sub
jp
xor
adc
push
cmp
sub
sub
pop
jp
add
sub
or
cmp
add
push
sbb
cmp
adc
add
dec
pop
adc
sbb
or
or
and
or
add
sub
or
pop
cmp
and
push
pop
cmp
pop
aaa    
and
and
cmp
and
sub
cmp
insb
adc
sbb
sub
or
and
das    
or
xor
cmp
and
cmp
and
push
and
and
push
adc
add
sub
add
cmp
nopl
sbb
daa    
sub
or
or
and
add
es add
cmp
push
cmp
or
sub
insb
ds es push
ss cmp
movlps
add
cs push
sub
sbb
sbb
push
sbb
and
push
cmp
push
(bad)  
aas    
add
push
push
sbb
xor
dec
cmp
or
push
sbb
xor
adc
adc
cmp
or
insb
sub
and
and
add
xor
es push
dec
sbb
xor
adc
push
add
push
or
and
sbb
das    
aas    
adc
or
sbb
sub
xor
cs push
cs or
add
xor
add
add
movaps
adc
xor
sub
dec
sbb
xor
adc
aas    
pop
xor
cmp
add
movaps
adc
aas    
or
aas    
das    
push
das    
push
sbb
and
push
cmp
push
sbb
sub
and
adc
sbb
or
sub
push
push
add
adc
pop
add
and
cmp
or
sub
push
push
push
sub
pop
push
sbb
das    
aas    
adc
or
add
sub
dec
sub
comiss
or
ds aas 
add
or
add
adc
xor
and
push
add
sbb
adc
dec
and
push
add
sub
pop
or
sub
adc
or
add
or
or
or
sub
sbb
xor
(bad)  
or
comiss
adc
push
and
cmp
sub
or
and
das    
or
inc
add
and
sbb
es das 
or
xor
sub
add
xor
cmp
insb
sbb
push
pop
sub
or
or
adc
cmp
push
xor
cmp
aaa    
mov
or
cmp
adc
cmp
or
sub
das    
dec
sbb
xor
xor
and
and
insb
sub
or
cmp
push
sub
and
sub
sbb
mov
sub
ds sub
or
and
or
push
cmp
and
jp
add
sub
add
dec
add
adc
push
sbb
add
push
push
daa    
and
add
sub
or
and
add
sbb
sub
or
xor
sub
cmp
insb
sub
or
sbb
add
sbb
add
add
cmp
sbb
sbb
cmp
sbb
sbb
and
or
adc
sub
ds pop
and
push
sbb
pop
ucomiss
pop
and
or
daa    
push
sub
or
es push
sub
cmp
xor
xor
movntps
push
xor
insb
sub
sbb
cmp
add
das    
push
cmp
or
and
aaa    
cmp
pop
or
ss daa 
sub
adc
sub
sub
add
jp
sbb
cmp
or
cmp
and
cs add
add
mov
ds add
dec
nopl
and
sbb
add
sbb
dec
sub
xor
cmp
and
insb
sbb
sub
or
sub
dec
cmp
adc
or
xor
or
inc
push
cmp
sub
cmp
and
add
sbb
cmp
push
cmp
or
and
add
or
dec
or
add
sub
push
or
add
or
push
cmp
xor
and
or
dec
or
push
pop
add
sub
or
sub
daa    
sub
sbb
or
cmp
cmp
xor
push
sbb
add
sbb
add
push
sbb
push
sbb
and
push
es push
cmp
nopl
sbb
sub
rdmsr  
sub
or
cmp
pop
xor
and
sub
jp
sbb
sub
pop
push
sub
push
and
push
ss dec
sub
and
and
dec
or
sub
xor
and
or
sbb
adc
sub
sub
pop
jp
sbb
adc
sub
sub
pop
jp
sbb
cmp
push
and
sbb
es push
or
sbb
push
ds pop
add
xor
cmp
sub
or
sub
pop
xor
sub
cmp
cmp
push
or
push
popa   
dec
and
push
daa    
and
sub
daa    
sub
pop
daa    
dec
and
push
daa    
das    
and
and
jp
xor
or
addr16 xor
dec
inc
xor
push
and
push
jle
and
sub
dec
adc
sbb
or
sub
and
sub
ja
adc
adc
and
add
and
or
add
cmp
and
xor
sub
sub
mov
and
adc
cmp
or
or
cmp
sbb
sub
inc
sub
add
and
or
cmp
cmp
add
or
add
sub
cmp
or
sbb
cmp
push
and
sbb
es push
xor
sbb
cs inc
add
add
xor
cmp
xor
aaa    
and
sub
jp
sbb
sub
or
es cmp
adc
sub
sbb
sub
push
sbb
jge
sub
jp
rdtsc  
or
add
sbb
jge
sub
push
or
and
add
sbb
sub
push
push
cmp
sub
sub
sbb
or
pop
pop
or
xor
aaa    
and
push
inc
cmp
cmp
adc
and
xor
push
sub
add
daa    
push
cmp
add
sub
add
sub
daa    
sbb
or
or
or
adc
and
das    
mov
sub
or
or
cmp
sbb
cmp
sub
cmp
or
cmp
cmp
ss cmp
mov
sub
jp
(bad)  
push
sbb
adc
add
and
xor
sbb
or
aaa    
das    
and
add
push
cmp
push
and
sbb
add
dec
push
add
dec
and
or
cmp
sbb
add
or
add
adc
sub
cmp
or
insl
cmp
or
add
inc
sub
cmp
add
and
push
or
xor
sbb
push
xor
and
sub
push
cmp
add
or
dec
sbb
adc
or
daa    
sub
sub
cmp
sub
sub
sub
xor
pop
and
add
and
pop
and
push
cmp
add
inc
ds cmp
and
sbb
rcpps
cmp
and
jp
adc
cmp
and
adc
ss cmp
cmp
cmp
push
or
cmp
sbb
cmp
add
sub
add
add
daa    
sub
insb
aas    
sub
add
es add
dec
sub
push
sbb
sub
cmp
pop
pop
add
sub
sbb
and
sbb
add
dec
pop
adc
addr16 push
sbb
add
sub
and
es cmp
pop
xor
sub
pop
jp
pop
cmp
push
add
and
add
(bad)  
cmp
cmp
daa    
cmp
cmp
femms  
sub
sub
add
or
sbb
or
cmp
cmp
aaa    
rcpps
sub
cmp
or
cmp
cmp
sub
or
add
sub
or
daa    
dec
and
and
cmp
push
or
ss push
daa    
dec
add
sbb
cmp
cmp
cs adc
xor
jp
add
sbb
sub
and
(bad)  
cmp
or
sub
sub
dec
sub
aaa    
sub
and
or
and
xor
xor
das    
sub
aas    
sbb
inc
cmp
sub
push
sub
sub
and
adc
sub
and
sbb
sub
or
push
cmp
jp
sbb
sub
or
cmp
add
and
or
es push
and
pop
jp
(bad)  
push
cs push
pop
and
add
inc
and
add
daa    
sub
xor
jp
or
sub
or
inc
xor
push
daa    
cmp
inc
xor
push
push
(bad)  
add
add
daa    
cmp
and
or
add
daa    
cmp
and
or
cmp
getsec 
sbb
push
add
cmp
es das 
or
xor
daa    
sub
sbb
sub
or
sbb
cmp
sub
push
push
sub
cmp
push
aas    
sbb
ss cmp
or
sub
add
cmp
push
or
aas    
or
sub
aas    
and
pop
daa    
sub
pop
pop
aaa    
xor
xor
pop
ss dec
lsl
pop
pop
aaa    
xor
pop
es add
cmp
and
cmp
and
push
insl
cmp
jp
sysenter 
and
sbb
cmp
xor
and
and
pop
and
sub
push
push
sbb
cmp
es add
cmp
daa    
pop
cmp
sub
cmp
das    
pop
ss pop
sub
adc
es cmp
sub
cmp
and
jp
(bad)  
pop
sub
adc
cmp
sub
cmp
add
push
push
push
sub
and
add
es cmp
sbb
or
dec
sbb
sub
insb
sbb
and
dec
lsl
add
or
push
ss add
or
push
and
and
and
das    
push
cmp
sub
adc
pop
sbb
and
cmp
add
cmp
or
or
cmp
cmp
pop
daa    
sub
cmp
or
pop
adc
sub
aas    
add
cmp
sub
cmp
push
sbb
push
sub
and
or
sub
cmp
push
push
sbb
pop
popa   
dec
pop
adc
addr16 pop
or
sbb
cmp
add
das    
push
sub
sbb
sub
sub
sub
adc
add
adc
aas    
and
add
and
cmp
xor
push
or
add
sub
adc
sub
unpckhps
sub
sub
sbb
das    
add
add
cmp
add
ss dec
add
daa    
or
or
adc
sub
aas    
add
push
ss and
das    
adc
sub
push
push
add
sub
or
sbb
and
add
(bad)  
sub
add
cmp
add
cmp
push
adc
push
cmp
dec
or
aaa    
xor
or
es ss daa 
sub
adc
ss cmp
sbb
mov
pop
inc
add
cmp
or
jo
jge
and
jp
push
and
jno
aaa    
and
sub
cmp
push
ss dec
add
push
add
daa    
cmp
push
mov
sbb
ds add
dec
pop
adc
sbb
add
push
daa    
das    
add
sub
dec
sub
push
sbb
add
add
pop
cmp
or
and
das    
or
xor
cmp
cmp
pop
add
push
sub
push
sbb
cmp
cmp
pop
xor
cmp
nopl
sbb
sub
push
es push
sub
xor
aaa    
(bad)  
dec
sub
push
sbb
cmp
rcpps
sub
and
and
jp
or
cmp
xor
and
and
and
push
or
aas    
sbb
add
and
adc
push
cmp
daa    
xor
sub
cmp
or
or
add
or
and
add
or
es add
push
cs push
pop
and
push
daa    
cmp
pop
xor
daa    
es ds insb
cmp
sub
aas    
sub
or
add
add
and
ds sub
sbb
and
ss push
cs push
pop
and
push
sub
and
sub
push
inc
daa    
cmp
sub
pop
cmp
push
add
add
sub
add
inc
cmp
cmp
or
push
xor
sbb
cs inc
adc
and
pop
and
cmp
and
jp
das    
cmp
and
cmp
dec
ds pop
and
sbb
and
sub
sbb
sub
adc
aas    
or
(bad)  
push
add
push
ss push
ss pop
sub
and
and
push
or
aas    
or
or
sub
aaa    
cmp
sub
push
sub
sub
sub
ss cmp
and
and
cmp
aaa    
add
cmp
add
(bad)  
cmp
ss cmp
mov
sub
cmp
and
and
insb
sub
or
push
add
cmp
push
and
sbb
es push
sub
add
cmp
daa    
cmp
or
cmp
or
insl
and
lsl
xor
cmp
add
adc
sub
insb
sub
sbb
sub
insb
cmp
and
sub
or
add
pop
inc
sub
cmp
cmp
sbb
or
push
sbb
push
sub
or
(bad)  
push
or
sbb
pop
aas    
cmp
sbb
add
or
or
adc
or
sbb
and
sub
sub
xor
sub
xor
cmp
sub
or
sbb
aas    
sub
add
rcpps
sub
and
sub
add
rcpps
sub
and
dec
das    
adc
sub
cmp
push
cmp
aaa    
das    
sub
add
push
and
es push
ss cmp
push
sbb
sbb
sub
and
(bad)  
or
push
cmp
and
ss cmp
rcpps
and
sbb
push
ss daa 
sub
cmp
sbb
add
jp
pop
cmp
pop
adc
sub
or
dec
or
push
pop
adc
sub
push
adc
sub
pop
inc
and
pop
cmp
push
or
push
and
sbb
inc
and
inc
xor
cmp
insb
cmp
push
adc
and
pop
xor
cmp
or
js
insb
cmp
or
sub
insb
cmp
add
or
push
cmp
push
aas    
and
pop
xor
pop
daa    
or
sbb
sub
es cmp
adc
cmp
adc
add
sub
xor
(bad)  
sub
cmp
xor
or
pop
cmp
add
adc
add
and
adc
and
sbb
es push
sbb
add
or
sub
pop
inc
push
dec
dec
imul
adc
dec
dec
arpl
add
dec
or
push
dec
ds insb
jp
cmp
add
sbb
push
dec
sub
dec
push
add
and
dec
dec
popa   
sub
daa    
push
ds dec
or
dec
dec
arpl
add
dec
sbb
push
dec
and
add
dec
add
push
dec
sub
dec
push
push
dec
add
push
dec
dec
jns
inc
add
dec
sbb
push
dec
and
add
pop
jns
or
insb
adc
rcpps
and
dec
and
add
dec
add
dec
dec
jnp
inc
rcpps
sbb
arpl
dec
and
push
push
sub
push
jp
imul
inc
sub
dec
sbb
pop
push
dec
cmp
ss push
sbb
and
dec
and
push
adc
push
dec
ds insb
adc
dec
or
dec
sub
push
adc
push
dec
cmp
or
push
sub
and
dec
add
or
dec
add
push
dec
sub
sbb
dec
insb
jne
push
dec
das    
insb
adc
push
cmp
inc
jge
dec
cmp
add
dec
pop
jp
push
dec
sub
rcpps
(bad)  
push
dec
ds insb
pop
inc
sbb
pop
das    
jp
push
dec
ds insb
pop
inc
sbb
dec
or
push
dec
dec
popa   
or
push
cs dec
or
dec
dec
jns
inc
rcpps
dec
sub
dec
bound
adc
dec
insb
jae
push
dec
and
push
dec
dec
pop
jp
imul
push
jge
insb
jae
push
dec
and
push
addr16 dec
or
push
dec
dec
arpl
inc
push
push
sub
aaa    
push
dec
cmp
jp
sub
dec
sbb
pop
push
dec
cmp
push
add
daa    
push
dec
sub
push
addr16 dec
adc
cs push
dec
dec
gs push
inc
push
push
daa    
dec
pop
jp
jno
dec
pop
insb
sbb
push
and
aaa    
push
dec
pop
insb
adc
push
and
ja
dec
ds insb
pop
inc
or
dec
or
push
dec
and
push
push
sub
aaa    
push
pop
sbb
sbb
dec
or
push
dec
sub
push
dec
insl
cmp
push
dec
daa    
insb
adc
push
cs dec
sub
push
dec
sub
push
push
es dec
push
jp
push
pop
sbb
add
sub
push
dec
cmp
push
push
sub
insb
jae
push
dec
cmp
push
imul
aas    
insb
push
inc
sbb
dec
add
dec
sub
rcpps
push
pop
and
or
dec
add
push
dec
sub
or
dec
or
gs daa 
dec
sub
push
and
or
push
jp
insb
sbb
push
cmp
sub
insb
dec
inc
pop
push
jle
inc
jp
push
dec
jl
push
inc
pop
push
imul
sub
dec
push
imul
push
adc
insb
adc
dec
sbb
push
dec
sub
daa    
push
and
xor
dec
aas    
insb
adc
dec
xor
push
dec
and
add
jp
push
dec
cmp
sbb
dec
add
push
dec
sub
sbb
dec
add
push
dec
push
insb
cmovae
dec
dec
adc
xor
dec
add
ds push
push
dec
sub
dec
adc
add
dec
push
jp
push
dec
and
push
push
adc
push
dec
sub
sbb
jp
push
dec
ds insb
or
push
daa    
dec
sbb
push
dec
ds insb
or
push
es dec
add
push
dec
cmp
push
or
aaa    
push
dec
and
add
add
add
dec
ds insb
jp
or
dec
add
dec
and
add
sub
push
jp
gs push
dec
sub
sbb
dec
or
push
pop
das    
insb
adc
dec
add
push
dec
sub
push
and
add
dec
ds insb
jp
cmp
dec
add
push
dec
dec
arpl
inc
or
jp
push
dec
ds insb
jp
pop
push
and
es push
dec
sub
and
dec
push
jp
push
dec
cmp
das    
push
dec
pop
or
push
dec
das    
insb
sbb
push
addr16 dec
push
jp
push
dec
dec
or
push
daa    
dec
sbb
es push
pop
cs insb
or
push
push
dec
pop
jp
push
dec
cmp
sbb
pop
sbb
and
dec
sub
push
xor
and
dec
dec
jns
inc
adc
dec
or
dec
ds insb
or
rcpps
dec
insb
insl
sub
dec
sub
add
and
cmp
dec
and
push
cmp
xor
dec
and
inc
push
sub
push
dec
dec
ja
inc
add
das    
dec
or
push
dec
sub
push
push
cmp
xor
jne
inc
add
dec
sbb
push
dec
cmp
sbb
dec
add
push
push
insb
adc
add
dec
add
dec
sub
push
push
and
push
dec
sub
push
dec
pop
sbb
push
dec
cmp
adc
dec
or
push
dec
insb
insb
jp
sub
and
es push
dec
push
insb
pop
inc
pop
push
es dec
sbb
push
dec
jbe
pop
inc
push
sbb
punpckhdq
dec
(bad)  
cs inc
dec
push
arpl
add
insb
aaa    
inc
dec
push
push
dec
add
dec
jle
and
dec
add
push
dec
cmp
sbb
dec
adc
dec
sub
push
and
or
dec
sub
or
dec
sbb
push
dec
ds insb
jp
push
push
dec
inc
pop
jp
push
dec
sub
push
push
and
push
dec
ds insb
or
push
daa    
dec
sbb
push
dec
sub
push
sub
pop
push
dec
and
push
dec
inc
pop
jp
push
dec
cmp
push
inc
rcpps
or
dec
xor
push
jae
xor
insl
aaa    
dec
jbe
es inc
push
das    
dec
push
jp
push
dec
xor
inc
inc
ss push
dec
pop
pop
jp
push
dec
and
push
push
cmp
jns
dec
and
push
cmp
and
dec
daa    
insb
jp
sbb
dec
add
push
dec
bound
adc
dec
insb
jne
push
dec
sub
rcpps
dec
or
jns
dec
ds insb
sbb
dec
or
push
dec
aas    
insb
jp
inc
push
sub
xor
dec
sub
push
imul
outsb
insb
jp
dec
push
cmp
and
dec
cmp
push
imul
xor
adc
push
dec
push
and
dec
and
add
jp
push
dec
and
push
imul
daa    
insb
jp
dec
push
sub
adc
xor
dec
and
rcpps
dec
dec
jp
push
dec
and
push
push
gs dec
dec
jp
push
dec
or
push
imul
push
dec
sub
add
dec
insb
cmp
xor
push
sub
add
push
dec
and
dec
push
adc
push
dec
cmp
pop
push
jp
pop
jp
push
dec
add
aas    
inc
es push
add
push
dec
sub
push
push
gs dec
pop
jp
dec
add
insb
sbb
push
push
ds dec
or
dec
adc
push
push
sub
xor
dec
aas    
insb
es inc
push
adc
push
dec
sub
push
cmp
push
dec
and
push
gs dec
insb
jg
push
dec
dec
addr16 pop
inc
adc
dec
adc
push
dec
add
fiadd
test
std    
lret   
jp
(bad)
adc
jecxz
stc    
jae
add
dec
dec
jp
imul
addr16 push
dec
inc
outsl
pop
inc
jbe
popa   
dec
jo
inc
push
jns
push
dec
dec
insb
jnp
push
dec
inc
outsl
jl
push
imul
dec
push
bound
ja
dec
dec
jle
inc
push
dec
inc
push
dec
dec
insb
bound
dec
push
fs addr16 inc
pusha  
push
dec
dec
je
pop
outsl
pop
pop
inc
imul
insb
js
jb
pop
dec
jb
dec
jp
dec
push
insb
push
push
dec
dec
push
dec
imul
bound
pop
fs jb
push
dec
pop
bound
push
imul
dec
dec
insb
jle
push
dec
dec
sub
inc
push
dec
dec
insb
jp
push
dec
dec
push
dec
dec
insl
jp
outsb
push
inc
dec
insb
jle
push
dec
dec
fs jp
push
pop
dec
insb
jp
dec
push
dec
dec
push
dec
dec
insb
js
outsb
push
dec
dec
insb
jle
push
dec
dec
insb
jp
push
mov
arpl
push
push
dec
jno
inc
push
push
dec
bound
imul
imul
push
push
dec
bound
imul
insb
jg
fs pop
push
dec
outsb
js
push
dec
dec
bound
push
dec
dec
je
push
bound
inc
push
dec
dec
outsb
js
ja
inc
dec
imul
data16 jp
push
jb
bound
inc
outsb
je
jb
dec
inc
je
push
jnp
pop
pop
push
js
jb
dec
inc
outsb
jl
outsb
push
dec
dec
jo
inc
push
or
js
fs inc
or
jnp
fs push
push
dec
gs jp
ja
inc
inc
imul
push
dec
inc
bound
push
dec
push
jle
inc
dec
push
inc
dec
insb
jns
jbe
dec
dec
dec
jnp
fs push
dec
dec
jo
pop
outsb
push
dec
dec
jo
inc
push
dec
dec
outsb
je
fs push
imul
dec
dec
insl
jnp
push
push
dec
dec
popa   
je
push
inc
inc
push
inc
imul
imul
dec
js
jbe
dec
insb
insl
jnp
adc
dec
insl
imul
push
dec
pop
in
lcall
rol
push
imul
insb
jnp
bound
bound
pop
dec
insb
outsb
jnp
fs push
dec
dec
bound
out
dec
dec
bound
push
dec
dec
jle
(bad)  
fs push
dec
dec
bound
outsb
jae
inc
fs jg
push
jp
jbe
inc
dec
insb
jnp
jbe
dec
dec
jo
push
ljmp
ja
leave  
in
jno
push
push
dec
push
jle
loop
dec
push
push
bound
ljmp
js
call
fs dec
pop
int3   
int
inc
push
je
ljmp
ljmp
push
push
imul
push
inc
inc
gs pop
pop
push
inc
bound
fs pop
pop
jno
je
jbe
push
dec
jle
push
jae
push
pop
jne
pop
js
pop
push
bound
bound
jge
je
fs dec
push
dec
insb
jnp
fs push
imul
pop
jge
cli    
repnz pusha 
push
dec
pop
sub
pop
jne
jge
js
dec
dec
jle
cli    
insl
jae
pop
in
ret    
dec
push
je
insl
pop
dec
inc
jle
cli    
ja
inc
pop
push
jb
fs push
imul
dec
pop
in
ret    
dec
insl
push
push
push
jle
pop
jbe
inc
dec
insb
jnp
pop
pop
dec
dec
outsl
push
dec
dec
jp
ljmp
insl
push
inc
pop
in
mov
push
push
inc
imul
insl
js
dec
push
pop
int3   
mov
inc
imul
dec
js
jnp
lods
pop
in
fwait
push
dec
push
dec
pop
in
xchg
push
ljmp
ja
dec
insb
outsb
jnp
js
mov
jg
pop
jne
jo
ja
dec
insb
outsb
jnp
outsl
pop
dec
dec
outsl
addr16 inc
js
inc
dec
dec
jp
outsb
push
dec
push
imul
imul
push
dec
dec
jle
push
outsl
jae
inc
jno
inc
dec
push
inc
inc
bound
insb
push
inc
dec
bound
fs push
dec
dec
jle
inc
dec
push
pop
int
jl
imul
fs jns
push
dec
dec
insl
jb
popa   
push
dec
inc
jle
dec
ja
js
bound
push
enter
inc
js
insb
dec
dec
jp
jmp
dec
insb
insb
js
insl
push
pop
int
jns
imul
insl
js
dec
push
pop
int
jo
outsb
push
pop
int
je
jmp
dec
dec
outsb
js
insb
push
dec
push
jle
dec
pusha  
push
dec
pop
pop
push
jge
pop
inc
imul
dec
js
js
or
in
xor
push
pop
int
push
add
inc
bound
inc
fs jbe
outsl
dec
dec
pop
in
inc
push
jmp
inc
inc
imul
imul
push
dec
push
imul
insl
push
dec
jno
ret
imul
dec
bound
push
dec
push
bound
pop
dec
push
jle
loop
dec
push
push
bound
ljmp
js
sbb
bound
js
inc
push
jle
push
bound
push
jo
pop
jbe
inc
inc
jno
pop
insb
jae
pop
in
ret    
dec
outsl
jae
push
bound
insl
push
inc
inc
jle
cli    
js
dec
dec
outsl
jb
bound
dec
bound
push
dec
pop
in
fistl
xor
insl
jb
ljmp
outsl
pop
dec
dec
outsb
jl
outsl
pop
inc
dec
imul
in
aaa    
dec
bound
dec
jno
dec
dec
push
push
inc
imul
inc
inc
fs addr16 inc
ja
dec
inc
fs jb
bound
inc
push
dec
bound
dec
jle
push
pop
inc
jo
dec
jnp
jnp
cmp
dec
jnp
bound
dec
fs jp
push
dec
push
insl
jp
push
dec
pop
cmp
and
sbb
and
and
add
cmp
jnp
data16 sub
insb
jp
push
dec
dec
insb
push
cmp
dec
insb
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
pop
cmp
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
sub
or
push
or
daa    
dec
add
and
push
das    
push
push
dec
dec
insb
jp
dec
push
imul
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
inc
dec
insb
jp
push
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
push
dec
dec
insb
jp
add
add
lret
add
add
xchg
add
add
jae
gs insl
cs push
gs jae
jne
arpl
cs push
gs jae
jne
arpl
gs popa 
fs gs jb
and
arpl
insb
imul
jae
outsl
outsb
cmp
xor
xor
inc
jne
je
jb
cmp
jb
insb
sub
push
jne
insb
imul
imul
bound
aaa    
popa   
xor
cmp
xor
xor
cmp
push
jns
je
insl
cs push
gs jae
jne
arpl
cs push
jne
je
insl
gs push
gs jae
jne
arpl
add
add
inc
push
inc
inc
push
add
add
dec
lock or
add
inc
lock or
add
add
add
pop
inc
outsl
jb
js
dec
popa   
imul
jb
gs cs fs insb
insb
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
addb
add
clc    
add
addb
add
adc
add
add
add
add
add

