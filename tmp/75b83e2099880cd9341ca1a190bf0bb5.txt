add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
inc
add
add
add
adc
add
add
or
add
or
sub
pop
push
push
or
add
or
push
push
push
mov
push
add
or
pop
outsl
pop
add
or
push
pop
outsl
sbb
add
fmull
sub
add
add
add
add
adc
and
add
add
add
sbb
add
dec
add
add
add
adc
jae
add
or
push
push
jae
add
or
pop
sub
add
or
push
pop
outsl
sbb
add
faddl
sub
push
outsl
sbb
add
fmull
cmp
add
outsl
adc
add
sub
add
or
or
add
fiadd
adc
or
add
add
add
str
sbb
or
add
add
add
add
and
or
add
add
add
add
add
adc
add
sbb
add
pop
add
add
add
adc
jae
add
or
sub
add
or
push
pop
add
sbb
add
push
jae
add
or
sub
add
adc
or
or
add
or
push
sub
push
outsl
sbb
add
fmull
jo
outsl
adc
add
sub
add
or
or
add
fiadd
adc
adc
add
add
add
sbb
or
add
add
add
add
xor
or
add
add
add
add
cmp
sbb
add
add
xor
add
add
add
add
pop
or
add
or
add
add
pop
add
or
add
or
add
or
add
jb
add
jo
pop
sub
add
or
sub
add
or
add
or
add
add
sub
add
or
add
or
add
or
or
add
or
pop
or
sub
add
faddl
sub
add
add
add
sub
xor
pop
add
add
sbb
add
add
sub
add
add
or
add
adc
add
jo
or
add
add
add
push
xchg
or
mov
pop
lea
add
add
add
pop
push
pop
mov
sub
add
jb
add
jo
add
sub
add
sub
add
or
or
add
pop
sub
push
sbb
xor
jb
add
jo
or
add
pop
add
push
add
push
or
sub
push
pop
pop
pop
xor
jb
add
jo
or
add
pop
sub
pop
sub
pop
adc
ficom
or
jae
add
outsl
adc
add
sub
add
or
add
or
sub
sub
adc
add
add
add
add
add
sub
add
sub
add
sub
add
xor
add
add
push
add
adc
sub
push
outsl
push
add
or
pop
lea
or
add
pop
adc
outsl
sldt
or
add
adc
jb
add
jo
add
adc
add
sub
add
or
add
or
add
add
add
add
add
adc
add
push
add
adc
add
sub
xor
add
add
add
add
adc
adc
add
or
sub
adc
add
sub
add
push
or
sub
clts   
add
pop
add
push
or
add
add
sub
add
add
add
push
add
sub
add
push
add
sub
add
sub
add
sub
add
sub
xor
add
add
add
add
adc
add
add
sub
add
or
jb
add
jo
push
add
add
and
xor
add
jae
add
or
push
addb
add
add
add
sbb
add
add
push
add
sub
add
xor
add
add
or
add
sub
add
push
jb
add
jo
add
add
xor
add
or
je
add
sbb
adc
add
sbb
add
or
add
sub
add
push
jb
add
jo
add
add
xor
add
or
je
add
sbb
adc
add
sbb
add
or
add
sub
add
push
jb
add
jo
add
add
xor
add
or
je
add
sbb
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
push
push
add
and
jb
outsb
addr16 jae
add
add
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
and
outsl
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cltd   
add
add
cltd   
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
cltd   
add
add
pop
add
add
add
add
add
add
add
add
push
add
insl
add
add
add
add
add
add
add
add
adc
cwtl   
add
add
add
add
adc
lods
add
add
add
add
add
add
or
add
adc
scas
add
add
or
add
add
add
add
add
add
add
lods
add
scas
add
add
add
xchg
xor
add
add
add
add
add
add
add
add
xchg
add
add
and
add
add
add
js
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
addl
add
les
add
add
xchg
xor
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
or
add
outsb
and
add
add
add
add
add
add
xchg
or
add
mov
add
add
add
and
add
add
add
add
add
add
add
add
enter
add
enter
add
enter
add
int3   
add
rolb
enter
add
int3   
add
enter
add
int3   
add
rolb
enter
add
enter
add
int3   
add
enter
add
enter
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
cltd   
add
add
add
add
add
add
xor
add
add
xor
mov
push
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
adc
push
add
add
add
add
adc
xchg
add
addl
addl
and
faddl
test
and
out
add
add
add
add
add
add
add
fwait
add
add
add
add
xor
add
add
add
add
add
add
add
daa    
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
jae
add
jmp
add
jmp
inc
add
jmp
inc
add
loop
imul
mov
stos
add
add
add
add
icebp  
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
out
movsl
add
add
add
in
mov
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
icebp  
add
flds
popl
add
flds
cltd   
add
add
add
add
add
add
add
add
add
add
gs add
jae
gs insl
cs push
gs data16 insb
arpl
outsb
add
jae
insl
bound
outsl
insl
jo
outsb
jns
je
jb
bound
add
arpl
add
jae
insl
bound
jb
fs jne
je
je
jb
bound
add
jae
insl
bound
outsl
jo
jb
addr16 push
jb
bound
add
jae
gs insl
cs push
jne
je
insl
gs cs inc
outsl
insl
jo
insb
gs jb
gs jb
imul
outsb
je
insl
gs inc
outsl
insl
jo
je
bound
imul
bound
add
jae
insl
bound
imul
imul
jae
gs insl
bound
gs jae
jb
jo
imul
imul
jae
gs insl
bound
outsl
outsb
imul
je
outsl
outsb
inc
je
jb
bound
add
jae
gs insl
cs push
jne
je
insl
gs cs dec
outsb
je
jb
jo
gs jb
imul
imul
jne
add
insl
jo
insb
popa   
je
outsl
outsb
push
gs insb
popa   
js
je
outsl
outsb
jae
je
jb
bound
add
insl
push
imul
je
jb
bound
add
jae
insl
bound
jb
fs gs insl
popa   
jb
inc
je
jb
bound
add
jae
insl
bound
imul
outsl
outsb
inc
je
jb
bound
add
jae
gs insl
add
push
arpl
popa   
jb
push
push
gs dec
bound
arpl
je
jb
bound
add
jae
insl
bound
dec
gs je
outsl
fs dec
outsb
outsw
add
arpl
je
outsl
outsb
add
add
je
inc
outsb
je
jns
outsl
imul
push
jae
add
jbe
imul
outsb
je
xor
addr16 gs je
dec
gs jae
popa   
add
jb
outsb
add
outsb
arpl
add
jae
gs insl
cs dec
dec
add
jb
popa   
insl
add
insl
outsl
jb
push
je
gs popa 
insl
add
je
add
imul
add
jb
popa   
jns
dec
inc
imul
insb
add
jo
jae
add
jae
gs insl
cs dec
dec
cs inc
outsl
insl
jo
gs jae
imul
insb
popa   
je
push
je
gs popa 
insl
add
insl
jo
gs jae
imul
add
jae
gs insl
cs push
arpl
imul
je
addr16 jb
jo
jns
push
imul
add
jns
je
push
je
gs popa 
insl
add
gs popa 
je
add
jb
jo
outsl
push
jb
outsb
jae
outsl
jb
add
insl
insl
gs je
imul
imul
popa   
je
inc
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
je
gs popa 
insl
dec
outsl
fs add
jo
outsl
insl
popa   
imul
add
jo
outsl
insl
popa   
imul
inc
jne
jb
outsb
je
outsl
insl
popa   
imul
inc
popa   
jae
inc
imul
jns
jae
je
inc
jo
insb
imul
inc
popa   
jae
add
jae
gs insl
cs push
arpl
imul
arpl
inc
jbe
fs outsb
arpl
inc
jb
popa   
je
inc
outsl
insl
popa   
imul
js
arpl
imul
insl
bound
addr16 gs je
inc
outsl
fs gs inc
popa   
jae
add
add
outsb
je
insl
gs push
jns
gs dec
popa   
outsb
fs insb
add
je
jns
gs inc
jb
insl
dec
popa   
outsb
fs insb
add
je
inc
jne
insb
dec
popa   
insl
add
gs popa 
je
dec
outsb
jae
popa   
outsb
arpl
jb
insl
inc
outsb
fs push
outsb
ja
popa   
jo
push
outsb
insb
outsl
popa   
add
jb
jns
inc
outsl
jo
add
je
imul
jb
bound
gs push
jae
addr16 gs inc
je
jb
bound
add
je
imul
jb
gs je
add
jae
gs insl
cs inc
imul
imul
jne
addr16 gs jb
outsl
outsb
push
jae
jb
outsl
fs gs inc
je
jb
bound
add
jae
gs insl
cs inc
outsl
fs gs inc
outsl
insl
cs inc
outsl
insl
jo
insb
gs jb
inc
outsb
gs jb
je
fs inc
outsl
fs gs inc
je
jb
bound
add
insl
jo
insb
gs jb
outsb
gs jb
je
fs inc
je
jb
bound
add
jae
gs insl
cs push
gs jae
jne
arpl
add
jae
jne
arpl
popa   
outsb
popa   
addr16 gs jb
push
jns
je
insl
cs inc
insb
outsl
bound
imul
add
insb
je
jb
dec
outsb
outsw
add
data16 gs jb
outsb
arpl
jno
popa   
insb
jae
addr16 gs je
inc
jae
gs insl
bound
inc
gs je
bound
arpl
jns
je
insl
cs inc
outsl
insl
jo
outsb
outsb
je
outsl
fs gs insb
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
imul
js
add
arpl
insb
imul
jne
arpl
outsl
jb
je
jb
bound
add
bound
push
gs jae
jne
arpl
add
dec
push
jb
jo
gs jb
arpl
inc
pop
xor
inc
pop
xor
inc
pop
xor
add
add
inc
jne
je
jb
add
add
push
add
gs jns
push
push
push
imul
push
dec
push
jb
jo
gs jb
push
gs jae
jne
arpl
jb,pn
jae
jne
arpl
add
add
add
inc
add
jae
add
bound
insb
add
and
add
jb
outsl
add
and
outsl
add
arpl
jne
jb
jb
add
add
add
xor
jge
add
inc
add
insl
add
jb
add
jae
imul
and
add
jb
outsl
add
and
outsl
add
arpl
jne
jb
jb
add
add
add
sub
add
and
add
jb
outsl
add
and
outsl
add
arpl
jne
jb
jb
add
add
add
sbb
add
add
jb
inc
add
insl
add
imul
push
add
je
jne
jb
outsb
add
add
add
outsb
add
add
je
outsl
add
add
add
add
outsl
add
jb
arpl
add
add
cmp
jae
je
outsl
add
imul
and
jb
add
outsl
add
jb
arpl
add
and
popa   
add
je
imul
and
imul
add
inc
add
arpl
and
jb
add
outsl
add
jb
arpl
add
add
and
outsb
add
insb
add
je
add
add
add
outsl
add
jb
arpl
add
add
xor
arpl
add
je
imul
and
add
jb
imul
and
push
add
jae
je
outsl
add
add
add
add
sub
push
add
push
add
popa   
add
jo
add
add
add
outsl
add
jb
arpl
add
add
add
add
pop
jb
dec
add
add
jb
dec
add
jns
add
add
loopne
push
dec
dec
cmp
gs outsl
(bad)  
jo
mov
add
add
push
add
add
add
add
or
add
add
add
adc
add
inc
push
and
sbb
sbb
push
add
push
pop
and
add
and
or
and
sbb
add
add
pop
adc
add
adc
and
adc
add
add
adc
jns
addb
mov
add
orb
addb
or
add
adcb
add
push
push
add
add
orb
sbbb
or
and
add
andb
push
add
sbb
and
adc
and
add
adc
and
sbb
adc
push
and
add
cmpb
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
insl
cs push
gs jae
jne
arpl
cs push
outsl
outsl
insb
jae
push
je
outsl
outsb
insb
jns
jns
gs fs push
gs jae
jne
arpl
jne
insb
fs gs jb
xor
xor
xor
xor
add
push
push
add
or
or
and
or
add
sbb
add
sbb
add
sbb
add
add
sbb
add
add
pop
and
or
add
or
xorb
add
mov
add
adc
add
xorb
add
add
add
add
add
mov
add
add
add
add
add
mov
or
sbb
sbb
popa   
insb
insb
and
insb
popa   
outsb
and
gs insb
outsl
jo
outsb
je
add
add
or
push
imul
das    
add
sub
jo
jb
addr16 push
and
popa   
insb
insb
and
insb
popa   
outsb
and
gs insb
outsl
jo
outsb
je
xor
xor
add
add
add
push
add
push
jb
jo
outsl
outsb
inc
js
gs jo
imul
ja
add
push
push
imul
sub
add
aaa    
bound
xor
popa   
sub
sub
sub
sub
xor
cmp
arpl
add
add
or
add
add
or
add
xor
xor
xor
xor
add
add
cmp
pop
pusha  
pop
pop
fs pop
pop
push
popa   
arpl
imul
aas    
inc
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
or
add
add
add
pop
adc
dec
sbb
adc
jno
jne
dec
sbb
or
addb
adc
add
sbb
adc
inc
sbb
or
or
mov
pop
add
aas    
addl
mov
xchg
add
add
jae
gs insl
cs push
gs jae
jne
arpl
cs push
gs jae
jne
arpl
gs popa 
fs gs jb
and
arpl
insb
imul
jae
outsl
outsb
cmp
xor
xor
inc
jne
je
jb
cmp
jb
insb
sub
push
jne
insb
imul
imul
bound
aaa    
popa   
xor
cmp
xor
xor
cmp
push
jns
je
insl
cs push
gs jae
jne
arpl
cs push
jne
je
insl
gs push
gs jae
jne
arpl
gs je
add
add
add
add
add
add
inc
push
inc
inc
push
frstor
or
nop
xchg
inc
xchg
jns
add
add
or
add
push
add
add
add
add
add
add
add
add
jb
dec
add
push
addb
or
dec
add
jns
sub
addb
add
dec
add
dec
movb
jle
(bad)  
cld    
xchg
aaa    
push
loop
inc
in
or
dec
inc
cmp
xchg
cs adc
xchg
or
aaa    
sbb
daa    
mov
jb
push
xchg
or
xor
push
lahf   
test
sbb
movsl
jnp
inc
mov
inc
xchg
lret
clc    
mov
sti    
stos
bound
imul
adc
pop
outsl
sbb
dec
cmp
sbb
mov
lods
cmp
jns
jno
push
mov
xchg
outsb
lods
test
sub
adc
fldt
test
pop
enter
iret   
xlat
ret
popf   
movsb
test
pop
orl
arpl
mov
outsb
nop
cmp
dec
ret
pushf  
jns
rol
adc
xchg
lcall
cs popf 
xchg
outsb
and
jno
mov
es femms 
hlt    
loop
cli    
pop
cmp
cmc    
clc    
test
dec
mov
dec
test
dec
mov
sub
aad
ja
xchg
sub
gs ret
add
cld    
mov
inc
sbbl
mov
mov
mov
cmp
mov
out
xchg
mov
cmp
xchg
mov
and
(bad)  
je
popl
push
std    
outsb
bound
jl
fucomip
enter
add
jno
fwait
gs pop
out
clc    
popa   
ss jge
xchg
dec
push
cmp
cmp
jns
(bad)  
dec
pop
int
pushl
mov
sarl
(bad)
or
jp
jnp
fwait
shlb
jg
mov
push
xor
ret    
(bad)  
push
stc    
push
data16 data16 mov
adc
daa    
xor
in
add
cmp
pop
(bad)  
(bad)  
pop
icebp  
push
cmpsb
sub
mov
loope
lahf   
lock mov
jo
sti    
or
iret   
movsb
mov
and
movsb
int
push
xchg
movb
ss push
dec
mov
cmp
addr16 popf 
clc    
push
add
mov
call
imul
add
mov
lds
test
inc
ficom
jmp
mov
in
cltd   
mov
cmp
pop
(bad)  
dec
addb
stc    
add
cmc    
xor
pop
cmp
inc
call
pop
pop
sub
push
and
jge
sarb
cmp
xchg
pop
xchg
call
sti    
pushf  
sub
mov
mov
or
(bad)  
ljmp
sub
pop
sub
xchg
loopne
lods
dec
jge
sti    
(bad)  
lret   
aas    
mov
or
lods
rep insb
fisubl
and
(bad)  
jae
dec
xorb
ret    
imul
xchg
push
push
xchg
mov
ficomp
pop
scas
insb
or
add
mov
mov
or
ret
(bad)  
add
push
lds
aam
and
arpl
fst
dec
mov
pop
movsl
daa    
cwtl   
cmc    
and
cli    
mov
lds
enter
adc
pop
mov
mov
add
xor
mov
jmp
test
sbb
imul
mov
push
iret   
xchg
xchg
inc
cs das 
ret    
jb
dec
scas
ret    
iret   
ret
addr16 pop
mov
leave  
sub
xchg
fnop   
adc
inc
int
mov
add
mov
sub
push
rolb
push
push
mov
test
mov
fstps
out
sub
outsb
lret   
fs pop
call
xor
and
or
into   
add
add
(bad)  
and
insl
adc
call
adc
cs icebp 
mov
stc    
adcb
out
inc
clc    
outsb
out
inc
andl
sbb
enter
shrb
or
cmp
incb
jb
inc
aas    
mov
dec
je
(bad)  
test
ljmp
dec
mov
mov
stos
mov
mov
xor
add
and
dec
(bad)  
loope
inc
sub
lahf   
test
mov
sub
out
leave  
fs in
js
xchg
pop
add
mov
shr
pop
add
xor
iret   
mov
cmp
in
push
or
imul
inc
iret   
lahf   
(bad)
addl
and
mov
pop
xor
push
test
xchg
pop
dec
loope
in
es xor
js
or
pushf  
(bad)  
(bad)  
jne
sbb
call
and
inc
push
mov
pop
mov
repnz push
sub
add
jg
int
xor
mov
and
ja
lea
mov
xchg
adcl
adc
rorb
sarl
(bad)  
dec
cli    
dec
int3   
inc
mov
rcrb
fldcw
xor
lock insl
cli    
int
push
mov
lcall
aaa    
jne
in
mov
sbb
loopne
xor
leave  
int3   
fneni(8087 only) 
scas
mov
daa    
movsb
pop
test
insb
ja
outsb
arpl
shrd
pop
adc
popa   
push
lret
nop
(bad)  
adc
in
cmp
ja
lahf   
and
push
dec
push
xor
cmc    
es jecxz
call
iret   
push
xchg
jb
(bad)  
jbe
dec
ds push
xor
dec
addb
cmp
and
sub
sbb
mov
stc    
ljmp
fxch
mov
inc
mov
imul
push
pop
int3   
sub
loop
push
adc
js
stos
adc
mov
inc
(bad)  
ficoml
cmp
enter
imul
mov
pop
sbb
rcl
(bad)  
jo
inc
and
adc
mov
adc
repnz pop
inc
cmp
pminub
adc
daa    
daa    
sub
(bad)  
pop
popa   
sub
push
sub
jp
cwtl   
out
cmp
inc
(bad)  
mov
sahf   
rcrl
mov
test
jecxz
popa   
in
dec
and
push
push
adc
mov
mov
pop
aad
xchg
inc
cmp
push
inc
lret
adc
ret
jo
inc
mov
xor
cld    
pop
fild
scas
inc
test
add
bound
jbe
aam
cld    
lahf   
xchg
ss or
mov
cmp
xchg
pop
cmp
pop
outsb
negb
sbb
adc
(bad)
mov
js
and
push
xchg
(bad)  
mov
xchg
add
jmp
mov
or
xchg
mov
and
pop
xchg
cmp
and
pop
jecxz
or
in
sbbl
xchg
xor
les
sbb
andl
jge
add
pop
xchg
mov
jg
mov
push
pusha  
iret   
fnstenv
or
cmpsb
outsb
inc
inc
loop
mov
es push
jae
test
sbb
(bad)  
lock pop
movsb
push
mov
xchg
int3   
inc
fcoml
mull
andl
scas
pop
outsl
lock adc
hlt    
popf   
(bad)  
jle
or
fmull
(bad)  
in
xorl
popf   
and
cld    
add
stc    
xor
jmp
sahf   
jl
ds in
sbb
stos
sbb
loopne
mov
rclb
rorl
pop
outsl
neg
stc    
mov
jp
pop
xchg
mov
loopne
push
inc
mov
aam
xlat
(bad)  
mov
lds
jmp
rorb
jno
push
pop
xor
sarl
loopne
(bad)  
pop
lock test
(bad)  
mov
lds
mov
sub
sbb
adc
push
imul
clc    
sub
pushf  
jecxz
sub
push
shlb
fcompl
imul
push
bswap
jge
ret
out
pushf  
cmp
pushf  
hlt    
jne
push
pop
sbb
and
mov
fucomi
or
aaa    
inc
mov
movsl
cwtl   
in
jns
pop
fild
jp
dec
aaa    
les
add
loop
cmp
fcomp
jns
(bad)  
jae
mov
or
push
addr16 xchg
mov
outsl
sbb
test
mov
aaa    
jno
gs add
test
jmp
mov
pop
std    
dec
fs cltd 
sbb
cmpsl
add
jnp
insb
pop
pop
and
pop
(bad)  
xchg
pop
cmp
xor
or
push
call
jne
ljmp
aam
repz cwtl 
jecxz
lahf   
test
ds pop
icebp  
and
notb
push
pop
cli    
cmp
inc
mov
insl
mov
mov
fist
lcall
pushl
bound
shrl
mov
xor
inc
pop
mov
inc
dec
pop
mov
movsb
js
fs jge
lds
dec
enter
or
(bad)  
dec
(bad)  
lock je
dec
mov
sti    
mov
loope
aam
adcb
lret
test
(bad)  
dec
xor
cld    
addb
mov
inc
aas    
insb
xlat
dec
cs rcl
mov
mov
mov
daa    
int3   
into   
lahf   
(bad)
out
data16 xor
mov
scas
jne
xchg
pusha  
bound
jo
fstpl
mov
sub
cmp
fs mov
add
or
sub
(bad)  
idiv
cmc    
adc
test
mov
fs sbb
rclb
adc
pop
popf   
xchg
and
scas
jae
sub
rorb
pop
das    
xchg
js
adc
and
mov
cvtpi2ps
insl
and
jae
iret   
adc
pop
mov
js
add
repnz pop
jmp
sub
sar
dec
orl
stos
push
dec
adc
or
mov
push
(bad)
add
test
fprem  
(bad)  
mov
mov
inc
xor
dec
icebp  
mov
rcrb
mov
inc
int
mov
icebp  
dec
inc
sub
in
adc
(bad)  
in
pop
ljmp
imul
clc    
push
sbb
test
sti    
pushf  
fstl
and
(bad)  
outsb
not
ds aaa 
(bad)  
push
push
xchg
mov
repnz lcall
fldt
(bad)  
jmp
mov
mov
arpl
cmpsb
rorb
(bad)  
jmp
mov
or
dec
xchg
fs
adc
ja
stos
push
bound
sub
xor
imul
adc
xor
rorl
stos
sub
jge
pop
ss jnp
mov
lahf   
jnp
imul
mov
mov
inc
insl
cmpsl
fisubl
ret    
aam
(bad)  
lods
mov
inc
adc
sbb
xorl
jns
push
push
fdivs
adc
and
sub
or
mov
in
cmp
adc
mov
data16 add
mov
cwtl   
cmp
cwtl   
in
pop
outsl
jnp
in
inc
sbb
es pushf 
mov
mov
xlat
pop
jl
mov
add
inc
xchg
mov
xchg
xchg
ss pushf 
test
mov
xor
test
outsb
mov
out
(bad)  
add
add
mov
adc
cli    
adc
sub
jno
cltd   
mov
mov
xchg
jae
adc
stos
add
dec
sti    
insb
test
push
jns
loopne
sbb
sbb
scas
(bad)  
in
leave  
dec
lret   
mov
and
mov
push
cmp
and
push
mov
add
sbb
out
btsl
shlb
cs mov
cld    
pop
pop
sub
ret
and
cld    
into   
cmp
sub
lret
out
and
mov
sahf   
dec
(bad)  
ljmp
addr16 popf 
inc
aam
shr
imul
cmpsb
stos
jge
aaa    
push
jg
out
dec
pop
sub
loop
inc
or
(bad)  
fisttpll
nop
mov
push
lret
push
mov
int
test
loopne
add
int
sub
jnp
add
(bad)  
cmp
sub
in
pop
daa    
out
pop
inc
rcl
xor
mov
dec
adc
jne
loop
nop
movsb
sahf   
lods
repnz and
lea
inc
into   
mov
scas
sqrtps
pop
dec
and
push
in
clc    
imul
dec
call
shll
sbb
iret   
sbb
jle
cmpsb
out
mov
or
sahf   
popa   
inc
je
pop
gs insl
(bad)  
push
and
aas    
cmp
cmc    
and
xchg
aas    
rcrb
jno
mov
and
pop
leave  
sbbl
dec
(bad)  
dec
jb
jg
repz mov
imul
sti    
pop
sbb
sub
add
daa    
jae
lock rcr
mov
aam
scas
test
ret    
xchg
xor
(bad)  
lds
dec
mov
jecxz
and
movb
enter
rclb
std    
dec
mov
cltd   
push
fstpl
outsb
movsl
jno
pushf  
jbe
inc
lea
dec
mov
imul
cmp
and
lea
mov
mov
add
mov
dec
mov
imul
push
and
dec
mov
sahf   
popa   
outsb
mov
test
in
stc    
jbe
dec
iret   
dec
add
(bad)  
adc
imul
cmp
inc
and
mov
inc
nop
push
lret   
cmp
in
jl
(bad)  
push
pop
in
ret
adc
sub
fisubrl
xchg
pop
mov
jnp
mov
test
call
test
idivl
enter
pop
lahf   
jmp
ficoml
inc
xchg
jo
pop
aas    
int
stos
pop
mov
cmp
out
stos
and
scas
inc
jle
jg
and
mul
ljmp
add
(bad)  
push
negl
sbb
out
mov
jge
mov
push
inc
int3   
es scas
rorl
sub
(bad)  
(bad)  
mov
in
jbe
mov
xchg
push
stc    
movsl
mov
push
lret
test
dec
add
cs pop
mov
xchg
and
pushf  
push
sbb
jne
imul
sbb
iret   
or
rcrb
mov
lock cmp
cmp
mov
pop
jae
imul
add
arpl
repz je
mov
jp
dec
push
cld    
inc
out
cmp
or
mov
dec
xor
inc
mov
add
push
into   
mov
and
dec
in
fldcw
outsb
scas
and
(bad)  
jne
xor
mov
nop
xor
and
and
ja
pop
xor
mov
or
jne
sbb
cld    
push
inc
push
inc
inc
xor
pop
clc    
pop
aaa    
lret
cmc    
xchg
push
aas    
push
insb
enter
push
push
fdivrl
xchg
push
into   
adc
sarb
sbb
xlat
cmp
notb
jecxz
imul
ljmp
dec
xchg
hlt    
cmp
lds
shlb
lods
mov
movsb
notl
adc
lods
int
xor
xchg
add
in
test
imul
pop
cmp
add
std    
adc
or
ret    
push
add
outsl
and
lret
es and
adc
dec
aad
sarl
outsl
movsl
dec
subb
xchg
call
arpl
ljmp
pop
daa    
adc
dec
ss inc
jns
movsb
jge
xor
or
push
cltd   
scas
loopne
dec
lea
mov
pop
jae
imul
ja
or
adc
(bad)  
adc
sbb
inc
aad
and
fdivs
dec
ljmp
es jmp
addl
lcall
cmp
adcb
jae
cmp
sub
int3   
lds
mov
pop
test
stos
jmp
push
std    
mov
or
insl
cs
insb
test
add
mov
fstpt
rcr
je
xor
mov
sub
das    
push
clc    
add
out
mov
dec
test
mov
jae
xchg
xor
dec
rcrl
sarb
push
in
sarl
cs repz add
inc
(bad)  
pop
mov
aas    
in
cld    
loopne
cltd   
fstps
pop
xchg
outsl
dec
push
jb
sbb
push
push
jp
inc
repz jnp
les
jo
push
in
cmpsl
or
pop
subb
pop
loope
jb
sub
nop
ljmp
cmp
sahf   
orl
out
into   
addl
fdivl
push
je
mov
xor
test
sbb
push
push
test
mov
mov
lods
mov
xchg
pop
iret   
mov
js
scas
test
fisubl
movsl
jle
imul
fldt
sbb
stc    
xchg
jb
push
(bad)  
lock mov
std    
sti    
repz into 
imul
xchg
mov
sbb
push
sub
sti    
jb
outsb
push
imul
addr16 mov
pusha  
call
arpl
loope
das    
orl
pop
stos
out
fidivr
aad
dec
inc
jno
mov
push
scas
ss mov
repz cltd 
add
dec
xor
sbb
and
mov
cmpsb
call
mov
adc
shr
decl
mov
sahf   
cmp
mov
jmp
push
test
xor
lock jmp
jno
stos
pop
(bad)
idivl
mov
mov
jg
sub
mov
out
pop
dec
xchg
stos
stc    
add
sbb
mov
xlat
iret   
int3   
jmp
mov
pop
pusha  
inc
ja
fwait
push
aam
ja
shll
fldenv
xor
sub
out
push
mov
cmc    
das    
adc
fcompl
bound
inc
lret
xor
jl
scas
les
hlt    
das    
sbb
nop
xor
jg
jns
sbb
aad
or
lret   
cmc    
jnp
and
sbb
in
loopne
ljmp
push
sub
sbb
outsl
add
in
adc
lds
fdivl
pop
sub
xchg
push
dec
add
out
mov
(bad)  
pop
cmp
dec
dec
fcoms
loope
push
inc
add
call
cld    
rcl
leave  
xchg
movsl
pop
decl
xor
or
xor
(bad)  
mov
out
mov
loop
loop
lods
hlt    
fisttpl
test
ror
xlat
cmp
mov
push
inc
mov
into   
rep insb
inc
aad
enter
nop
xor
pop
cwtl   
outsb
imul
lods
(bad)  
sbb
mov
pop
rorl
mov
pop
bound
pop
lahf   
pop
imul
call
inc
jge
dec
aam
xchg
rcl
push
test
clc    
push
negb
sbb
fldl
jns
and
fimull
in
add
xor
pop
aam
jl
int3   
push
push
imul
lcall
adc
fs in
cmpsl
mov
mov
into   
add
adc
mov
add
jns
mov
sbb
(bad)  
xor
clc    
push
inc
or
jmp
pop
popf   
mov
jmp
dec
sahf   
push
and
std    
sbb
adc
xchg
add
icebp  
ret
fwait
mov
leave  
(bad)  
popf   
sub
popf   
dec
pusha  
inc
out
ss jbe
(bad)  
mov
ljmp
pop
mov
pop
hlt    
fs mov
push
fsts
pop
xchg
and
mov
pop
in
lea
sbb
inc
xor
rorb
pop
pop
mov
int3   
jo
stos
jno
in
sub
push
add
insb
pop
lahf   
loop
xor
es pop
jecxz
mov
(bad)  
(bad)  
mov
das    
mov
xor
aaa    
fild
jmp
add
add
and
adc
fildl
je
lea
not
sbb
(bad)  
xor
inc
in
and
lock dec
mov
mov
mov
(bad)  
mov
into   
aad
imul
pusha  
cmp
and
ja
or
pop
ljmp
mov
popf   
mov
(bad)  
sub
int
repnz xchg
jmp
and
mov
hlt    
xlat
jecxz
cwtl   
in
cli    
fcompl
fcoms
sub
loope
in
adc
loop
mov
or
leave  
outsl
ss push
fistl
adc
(bad)  
in
rcr
pop
sub
ret
fldl
testl
mov
adc
pop
pop
inc
mov
subl
cmpsl
cmc    
lahf   
cmp
jmp
cld    
out
call
mov
mov
and
popa   
fnop   
jge
lret
out
adc
and
adc
mov
rcl
cmp
jmp
stos
sub
mov
xor
and
rcrb
jo
aad
xor
sar
dec
test
fmuls
imul
cltd   
mov
or
andb
icebp  
adc
mov
inc
mov
mov
jmp
lahf   
push
rorb
xchg
add
inc
pop
outsl
gs push
mov
and
ficompl
jge
fildl
pop
pop
hlt    
cmpsb
je
arpl
push
loope
cmp
and
ds hlt 
clc    
pop
pushf  
std    
pop
pop
ja
mov
cmp
inc
mov
rorb
int3   
fldcw
popa   
clc    
mov
addr16 cmp
cmp
aad
xor
dec
les
dec
ss xabort
clc    
scas
addr16
cmp
pop
daa    
addr16 mov
ljmp
push
test
inc
in
push
cli    
(bad)  
int
push
mov
ret    
stos
xor
xchg
sub
cmp
jnp
jno
jp
jno
mov
lods
cmp
jle
or
jmp
push
xor
test
scas
sub
std    
imull
xor
sbb
sbbl
mov
pop
push
sbb
outsb
add
insb
jecxz
in
jmp
jae
sub
jns
adc
pushf  
sbb
xchg
dec
jmp
enter
daa    
daa    
jae
fcmovnbe
inc
ret
cmp
rorb
or
aas    
cmp
sbb
inc
nop
in
mov
jmp
dec
jg
xchg
push
mov
mov
mov
in
cmpsl
es push
pop
cmc    
xchg
mov
push
fimull
lea
inc
mov
int
(bad)  
loop
rorb
dec
nop
jecxz
ret    
aam
jo
and
xor
lahf   
and
(bad)  
xchg
add
outsl
lret
mov
(bad)  
jo
(bad)  
pusha  
pop
lea
inc
gs call
repnz sbb
fadd
mov
(bad)  
dec
test
pop
lods
insb
add
push
xchg
cs popf 
mov
pushf  
mov
pop
cmp
arpl
out
jae
pop
or
movsl
xor
dec
adc
lcall
aas    
xor
mov
pop
mov
pop
mov
(bad)  
lea
scas
jb
(bad)  
and
sti    
sub
adc
push
movsb
dec
ja
flds
in
push
xlat
call
push
pop
lcall
leave  
cmp
(bad)  
or
sarl
sti    
jle
ss pop
inc
(bad)  
fisttpll
addr16 cs
or
or
enter
in
aas    
dec
jge
leave  
and
hlt    
or
dec
inc
pop
xchg
loope
shrl
adc
scas
sar
int
aam
std    
or
cs inc
xor
mov
popa   
cmc    
(bad)  
xchg
inc
mov
or
or
shll
outsl
xor
push
and
adc
mov
adc
pusha  
xchg
dec
repnz dec
into   
fsubp
mov
inc
sarl
repz
push
arpl
mov
mov
fstpl
fnstsw
(bad)
fadds
sbb
int
lcall
test
and
pushl
leave  
cmp
lock push
cmp
inc
mov
mov
jnp
out
jmp
cld    
les
out
dec
xchg
ja
cmp
xchg
stos
pushf  
cmp
and
stos
or
in
sbbb
sar
lea
and
dec
adc
xchg
jl
cmpsl
dec
mov
nop
int
pop
cmp
dec
fcmove
icebp  
mov
repnz inc
cmpsl
pop
sti    
out
dec
and
ret    
ret
test
int
sbb
xchg
mov
int
mov
xchg
lahf   
clc    
pop
dec
fldl
enter
cmp
mov
and
rcrl
xlat
popf   
lahf   
ds xchg
sbb
fcompl
mov
jns
xor
inc
mov
sub
jl
dec
cmp
int
bound
mov
mov
enter
rorb
jae
and
inc
scas
sub
fildll
sbb
push
push
insl
sub
hlt    
adc
mov
decb
stos
lds
jns
scas
cmp
ljmp
sbb
lods
add
lea
push
loopne
pop
mov
cmpsb
stc    
outsb
sbb
sbb
aaa    
dec
and
popa   
rcrl
sbb
inc
int3   
test
js
lods
lahf   
adc
pop
mov
mov
lock outsl
push
xchg
fs
add
mov
out
inc
fistpll
or
cli    
and
mov
mov
push
jg
mov
dec
std    
jge
xchg
in
xor
inc
repnz add
adc
xor
jae
cmp
sbb
xchg
es or
sbb
inc
xchg
fs cmp
(bad)  
dec
inc
pop
push
frstor
adc
clc    
int
sbb
jge
js
fisub
inc
icebp  
gs aad
push
jbe
bound
addr16 test
push
mov
mov
scas
lcall
cltd   
xchg
xor
clc    
pop
in
sahf   
cli    
(bad)  
cs aam
jbe
dec
lods
pop
mov
adc
adc
xor
insl
mov
mov
mov
mov
lock sti 
xchg
add
xor
add
(bad)  
dec
test
imul
add
mov
aam
sahf   
mov
push
push
pop
jl
or
adc
push
fidiv
imul
jo
and
adc
pop
jmp
int3   
and
mov
pop
popa   
xor
sahf   
mov
inc
jno
dec
pushf  
adc
jecxz
inc
push
(bad)  
fldenv
push
push
cwtl   
sbb
pop
pop
mov
and
cmp
lret
int3   
push
insb
push
sub
inc
jns
daa    
sbb
xlat
add
psadbw
imul
adc
push
push
popa   
lahf   
xchg
hlt    
push
(bad)  
xchg
in
adcb
jmp
mov
aad
and
adc
xchg
mov
sub
and
int3   
aad
call
loop
das    
xchg
hlt    
cmp
mov
fs test
fcmovnbe
lock add
imul
dec
add
rol
fimull
push
xchg
mov
and
decb
mov
imul
jmp
add
mov
push
aam
into   
sbb
repnz pop
inc
or
fidivr
push
call
push
ja
data16 sub
xchg
enter
mov
adc
fs mov
adc
repnz loop
sub
into   
loop
jnp
int3   
repz pop
mov
push
(bad)  
mov
push
inc
pop
mov
jmp
add
outsl
int
jne
pop
cmp
scas
icebp  
out
cmpsb
xlat
out
cwtl   
lock add
std    
mov
jge
push
cltd   
inc
sbb
xchg
(bad)  
scas
or
or
out
inc
mov
mov
mov
icebp  
add
mov
(bad)  
push
xor
rolb
cmp
mov
movsb
xchg
cmc    
mov
test
je
pop
sub
push
loope
mov
popa   
inc
mov
test
jge
mov
sub
dec
sti    
mov
cmp
mov
push
jp
ja
mov
sbb
adc
push
lret   
int
sbb
or
sub
inc
insb
or
xorl
enter
xchg
pop
sahf   
repz imulb
dec
in
and
rorb
repz
sub
adc
test
lods
mov
jb
sbb
mov
popf   
ja
sbb
sub
stos
dec
aas    
adc
pop
dec
dec
push
insb
rcrl
push
out
daa    
jge
adc
xchg
cmp
sti    
mov
jg
(bad)  
adc
mov
cmp
pop
lret
xor
sahf   
sarb
gs adc
cmp
dec
int
inc
mov
lock inc
cmc    
inc
sbb
xchg
dec
cmc    
sub
(bad)  
popa   
(bad)  
test
sub
push
pop
lods
hlt    
push
cmpsb
pop
nop
pusha  
call
mov
sahf   
cmp
sub
out
and
out
gs jecxz
ret
(bad)  
pop
cmpsb
cmp
std    
lcall
jecxz
jo
mov
(bad)  
movsl
out
push
push
fcompl
mov
outsl
int3   
xchg
fidiv
pop
je
sarb
jbe
pop
xchg
scas
pop
(bad)  
cmc    
pop
in
xlat
xchg
inc
inc
mov
jecxz
pop
popa   
in
repz cmp
xlat
xchg
inc
and
loop
sbb
push
sarl
inc
sbb
aam
push
jg
inc
jg
call
mov
pop
repnz sti 
push
pop
test
shlb
jecxz
mov
inc
sbb
fcmovbe
jae
pusha  
add
outsl
lock repnz icebp 
stos
jl
rol
dec
sub
lcall
sbb
test
inc
jnp
test
pop
or
(bad)  
dec
mov
or
mull
(bad)  
mov
popf   
mov
sub
fcomps
add
and
aam
scas
arpl
ljmp
sub
ja
lods
shrl
out
inc
xor
shrb
cwtl   
pop
imul
push
nop
ds xchg
push
testb
pop
xchg
push
flds
pusha  
enter
fadds
cmp
jb
push
(bad)  
(bad)  
push
add
add
insb
loope
ret    
dec
sub
jge
pop
lret
(bad)  
push
out
test
dec
mov
in
xchg
adc
inc
mov
lahf   
push
and
inc
mov
sbb
add
out
mov
and
sub
inc
mov
cmp
roll
add
jmp
push
add
movsl
clc    
ret    
out
pop
mov
cs into 
int3   
imul
es jno
repnz shrl
scas
scas
pushf  
mov
js
xchg
cmp
add
in
xor
nop
repnz stos
out
jb
inc
inc
fnstcw
aas    
(bad)  
or
push
shrl
xor
and
and
fsubs
dec
pop
mov
(bad)  
(bad)  
sbb
pop
and
jae
mov
mov
add
popf   
mov
add
mov
push
fnop   
cld    
fsts
xor
add
mov
or
clc    
xchg
mov
push
in
mov
mov
push
mov
inc
pushw
fwait
sahf   
arpl
xor
out
or
daa    
push
cmc    
push
in
dec
mov
xchg
pop
sbbb
xchg
sbb
aam
mul
pop
sbb
cmpsl
inc
cmp
and
cmpsb
cmp
jmp
pusha  
dec
and
enter
std    
das    
mov
lods
push
shrl
incl
and
les
jbe
call
pushf  
mov
pop
cmpsl
xchg
mov
cs pop
add
cmp
pop
sbb
sarb
mov
jecxz
outsl
lret   
ljmp
mov
fwait
int3   
mov
push
jle
out
push
cmpl
fnstsw
adc
movsl
(bad)  
or
and
and
push
ljmp
in
idivl
xor
dec
sub
jno
mov
imul
insl
loopne
mov
rcll
repz je
idivl
jl
loope
and
xchg
lret
test
(bad)  
jnp
dec
xchg
sub
shrb
and
inc
xchg
movsl
je
jge
mov
test
adc
lods
cmp
arpl
popf   
mov
jle
or
arpl
fsubrs
inc
and
jo
jbe
mov
jbe
or
dec
mov
mov
jmp
incl
pop
pop
add
das    
or
fnstcw
cmp
push
int3   
jno
xchg
icebp  
stos
push
out
lahf   
cmpsl
in
push
pop
pop
loopne
shr
lret
cltd   
or
fildl
jnp
xchg
sub
pop
ds in
sti    
inc
cltd   
adc
xchg
inc
faddl
dec
jge
sbb
outsb
xchg
sbb
push
adc
aas    
cmpsb
leave  
fs dec
pusha  
xchg
add
sub
xlat
shrl
jnp
cmp
loop
out
push
(bad)  
out
adc
add
call
stc    
fcompl
inc
sub
daa    
in
cmp
pop
std    
pop
pop
jo
mov
mov
popa   
or
ja
xchg
test
sub
mov
jecxz
addb
hlt    
push
xor
je
pop
cld    
outsl
sbb
and
sub
cmp
xchg
jns
out
(bad)  
rep lods
sbb
pop
js
add
pop
xor
insb
enter
sub
je
sub
out
mov
imul
lahf   
inc
push
push
movsb
dec
aaa    
fldl
sbb
aas    
dec
nop
pop
xor
cmp
sbb
add
ret    
jmp
les
xor
leave  
pusha  
pop
mov
jnp
pop
push
daa    
stos
xor
shrl
xlat
sbb
mov
pop
dec
(bad)  
jbe
push
push
mov
dec
ret
es jge
popf   
inc
mov
pop
dec
lcall
nop
outsb
(bad)  
movsb
mov
insl
and
pop
pop
outsl
mov
mov
xchg
inc
jo
mov
repnz add
les
pop
(bad)  
lahf   
je
jns
nop
pop
dec
fidivrl
fwait
popf   
out
in
jecxz
xchg
cmp
cmp
add
ret
push
fdivrl
cmc    
bound
or
inc
int
jnp
scas
pop
xor
push
adcb
add
and
loopne
mov
lcall
pusha  
rcll
inc
test
mov
and
fwait
xchg
aad
pusha  
jmp
and
add
cli    
ds xchg
loope
cmp
mov
mov
sub
dec
cmpsl
xchg
dec
shlb
mov
pop
in
sub
adc
shl
mov
push
jg
push
faddl
jp
into   
je
(bad)  
jae
cs fcompp 
inc
dec
mov
jo
hlt    
jnp
xor
cmp
jle
fwait
in
push
pop
(bad)  
lods
repz jae
int3   
push
sbbl
sub
adc
pushf  
and
inc
dec
in
sub
and
or
std    
cmp
or
das    
sahf   
dec
(bad)  
in
lret
or
in
push
push
inc
jae
dec
sbb
push
outsw
dec
outsb
mov
mov
mov
pop
mov
cwtl   
inc
mov
fucomip
mov
out
push
fdivrs
adc
adc
insb
add
add
dec
loop
mov
inc
xchg
cwtl   
xchg
sub
push
lock dec
jmp
mov
add
mov
loop
rorl
cltd   
push
popf   
xchg
cwtl   
adc
pop
mov
add
jbe
mov
(bad)  
ljmp
scas
and
inc
mov
sub
(bad)  
pop
pop
mov
jns
sub
clc    
adc
prefetcht1
mov
dec
add
lcall
out
cmp
stos
sub
inc
mov
into   
xchg
and
mov
test
xchg
movl
imul
push
dec
mov
adc
xchg
fnstenv
sbb
inc
fs dec
mov
js
jmp
mov
mov
js
adc
or
jnp
int3   
es
cmp
mov
(bad)
xlat
(bad)  
outsl
repz not
add
mov
add
pushf  
mov
push
pusha  
es sahf 
xor
popf   
in
scas
ss push
pop
xor
xor
fwait
fwait
sbb
adc
stos
jne
loopne
mov
adc
orl
mov
jbe
fsubs
sbb
dec
pop
rcll
mov
mov
int3   
xor
dec
xor
lcall
xor
ss pop
insl
cmp
xchg
call
lcall
scas
mov
dec
mov
add
dec
mov
aaa    
fimull
mov
adc
jae
pop
xchg
lret
and
mov
jbe
(bad)  
std    
inc
ds pop
inc
ds or
pop
in
(bad)  
enter
cwtl   
ss
cs pushf 
sbb
inc
andl
inc
sbb
imul
fabs   
int
es into 
test
sbb
ljmp
jae
fnstsw
inc
imulb
imul
(bad)  
jge
lret
lock dec
(bad)  
outsb
bound
cwtl   
nop
xor
add
pop
pop
push
mov
sbb
sti    
std    
mov
sub
ja
dec
or
subl
in
dec
notb
pop
sahf   
out
push
mov
xlat
imul
or
andl
mov
mov
add
xor
push
mov
(bad)  
(bad)  
sbb
dec
xchg
mov
or
out
sti    
in
test
add
fcompl
push
in
push
test
lret
les
data16 mov
lcall
adcl
test
jno
jge
mov
pop
or
adc
cld    
(bad)  
aad
addl
mov
push
mov
inc
in
pop
mov
je
sub
mov
(bad)  
jne
(bad)  
aas    
or
test
pushf  
push
mov
je
mov
popa   
xor
mov
adc
enter
xchg
aaa    
dec
fmuls
inc
in
mov
jns
adc
or
ror
xor
pop
xchg
and
andl
push
pop
(bad)  
push
(bad)
insb
sub
je
push
mov
addl
int3   
imul
mov
sbb
mov
stc    
inc
(bad)  
inc
daa    
cld    
pop
jl
add
lahf   
cmp
add
mov
jge
jne
mov
lcall
insl
jp
xor
leave  
xchg
add
mov
pushf  
mov
adc
wbinvd 
lret
cmp
dec
scas
jl
(bad)  
mov
push
jb
pop
stc    
jg
aam
mov
pop
and
call
stos
mov
(bad)
aaa    
int3   
les
xchg
pusha  
push
inc
loopne
das    
mov
shr
mov
mov
iret   
mov
popa   
repz push
pop
add
inc
loope
dec
push
movsl
cmc    
int3   
popf   
mov
pop
xor
sub
outsb
movsb
sbb
das    
mov
aas    
je
mov
hlt    
aas    
outsb
mull
(bad)  
or
add
cmpsl
push
cwtl   
push
push
jl
lods
into   
lods
shrb
pop
jo
push
inc
icebp  
and
gs fs je
cmp
dec
jae
cmpsb
jbe
xor
(bad)  
jo
and
or
mov
fs jp
push
dec
clc    
test
icebp  
xchg
xor
xchg
int3   
in
out
int3   
xor
test
push
js
or
mov
scas
subl
and
dec
data16 fnstsw
in
mov
and
jbe
jb
lret
(bad)  
hlt    
sbb
jnp
out
out
(bad)  
pop
jae
lret   
inc
sbb
out
adc
jno
or
xchg
pop
push
cmc    
jns
pusha  
dec
dec
gs cmp
cmp
xor
add
cmp
or
aad
repz add
ss pop
and
pop
sbb
ss push
and
test
xor
or
imulb
mov
push
cwtl   
mov
xor
jle
add
ds ds hlt 
xchg
hlt    
sti    
scas
pop
rol
shr
lcall
jbe
jae
outsb
xor
pop
mov
jp
cmp
dec
mov
mov
xchg
jne
stos
push
xlat
jge
mov
mov
leave  
or
fwait
std    
xchg
addl
xlat
cmp
loopne
stos
pop
pop
mov
or
adc
jle
shrl
xchg
mov
shll
loopne
movsl
pop
cmp
scas
in
dec
sbb
jo
repnz mov
push
sbb
into   
mov
and
push
out
inc
fdivrl
inc
ror
add
add
mov
push
xor
lret
popf   
pop
std    
scas
mov
jg
test
jbe
hlt    
adc
std    
cbtw   
js
ljmp
or
outsb
jb
test
sub
fwait
movsb
(bad)  
or
sbb
add
fpatan 
xchg
outsb
adc
ficompl
icebp  
js
aad
push
adc
mov
loope
jmp
adc
xor
aas    
or
test
pop
out
xchg
vpunpckhwd
arpl
icebp  
mov
mov
in
mov
or
sub
rcrl
and
sub
pushf  
inc
or
mov
inc
xor
dec
cmp
sub
push
jne
stos
daa    
and
push
inc
(bad)  
pop
and
jno
xor
in
lret
rcrl
sbbb
outsb
pusha  
push
mov
mov
mov
push
xchg
sbb
loop
adc
or
mov
daa    
ds pop
add
aad
xor
ds push
mov
daa    
cmp
jbe
lea
(bad)  
ss lcall
inc
adc
lods
cmp
mov
push
cli    
sbb
xchg
inc
pop
cmp
out
test
dec
out
xchg
mov
xchg
pop
in
jnp
cmp
dec
pushf  
pop
dec
pop
addr16 test
and
out
lods
icebp  
mov
mov
jo
dec
rcll
xchg
mov
insl
sub
jmp
jo
faddl
mov
call
enter
sbb
adc
adc
shrl
push
fdivrl
cmp
sub
push
mov
(bad)  
jb
pusha  
adc
mov
jmp
xchg
push
jp
lds
imul
cmp
xchg
mov
insl
sbb
das    
cmp
dec
sarb
jns
push
(bad)  
test
cmp
xor
push
jle
out
xor
or
leave  
push
flds
sub
(bad)  
mov
hlt    
sub
sub
in
add
gs fwait
cmc    
mov
rol
lds
dec
adc
cmp
xchg
int
not
or
push
frstor
xchg
sarl
out
xor
movsl
jmp
add
ret
scas
cmpsl
in
jmp
lock pop
into   
mov
test
aam
or
push
jge
out
into   
cwtl   
dec
mov
loop
jb
mov
repz enter
in
xchg
pop
jl
xor
shlb
pop
rorl
sub
loope
cmp
frstor
xchg
pop
outsb
jae
sub
xchg
cmp
jbe
cmc    
ud1    
or
hlt    
dec
jno
loop
mov
xor
jns
into   
mov
mov
xor
negl
push
lret
mov
dec
adc
les
mov
inc
lret   
lret
lahf   
push
das    
out
shll
push
inc
aaa    
push
dec
jp
lcall
xchg
mov
pop
dec
mov
mov
enter
aaa    
cmpsl
roll
jp
ret    
nop
pop
jg
(bad)  
ficom
scas
aam
(bad)  
pop
clc    
sbb
insb
sub
xchg
jne
pop
xchg
insb
int
mov
lcall
dec
sbb
cmovge
rcl
jg
xor
cmp
pushf  
in
loope
pop
pop
call
daa    
nop
scas
inc
imul
rcl
rolb
mov
push
cmp
adc
pop
add
rol
add
jge
clc    
sbb
pop
out
aaa    
cmpsl
mov
adc
sbb
dec
es push
mov
sub
cmp
or
push
inc
mov
lods
xor
and
jle
or
int
jp
in
jmp
jle
insb
dec
dec
xor
rcl
stos
les
ja
jno
add
dec
cli    
fnsave
test
push
mov
jns
in
adc
mov
sub
sub
dec
mov
repz sub
sbb
scas
dec
(bad)  
mov
inc
arpl
xchg
mov
push
arpl
cmp
cld    
mov
pop
jle
xor
cmp
inc
mov
mov
dec
aad
mov
inc
mov
sub
je
mov
int
cmpsl
in
push
or
(bad)  
(bad)  
jo
bound
lods
mov
pop
dec
or
or
dec
mov
stc    
gs aad
adc
jge
sub
dec
cmpsl
push
aam
sbb
mov
jmp
mov
std    
cmp
push
(bad)  
dec
dec
inc
(bad)  
pushf  
mov
fsubl
ret    
cmp
mov
loop
cld    
pop
lea
sbb
cmp
aam
(bad)  
sub
aam
push
pop
in
mov
ss mov
push
push
les
push
leave  
mov
inc
fxch
sub
xchg
fs push
arpl
stos
ret    
inc
xlat
cmp
nop
dec
or
rcll
lods
out
fbstp
in
in
xor
jb,pn
pop
aaa    
fbld
and
les
mov
popf   
out
xchg
and
int3   
push
popa   
dec
faddl
rol
inc
mov
(bad)  
stos
cmp
mov
nop
mov
int
lds
leave  
cbtw   
sub
loopne
mov
push
hlt    
scas
inc
push
insb
mov
out
dec
mov
xor
dec
or
push
push
test
(bad)  
cld    
mov
adc
jecxz
(bad)  
jnp
mov
cmp
in
and
dec
xchg
incb
rolb
(bad)  
mov
sahf   
jne
jbe
test
ljmp
neg
data16 faddl
inc
test
jbe
fiadd
sub
call
pop
mov
push
addr16 or
scas
add
enter
mov
add
xchg
dec
xor
xchg
int3   
cld    
(bad)  {%k3}
mov
jge
xchg
inc
cmpsb
inc
aas    
or
mov
mov
add
cli    
in
mov
int
(bad)  
dec
jo
xchg
scas
mov
jb
mov
add
aas    
xchg
enter
mov
push
test
add
mov
sahf   
mov
icebp  
lds
mov
stos
cmpsl
pop
imul
call
or
cli    
rorl
lea
or
jecxz
cld    
add
mov
add
mov
inc
add
mov
mov
call
loopne
adc
inc
out
cmp
rcl
out
mov
fstl
xchg
jle
mov
cmp
xchg
adc
daa    
outsb
int3   
cld    
jns
sub
sub
mov
mov
mov
cs call
lock inc
testl
ja
xchg
dec
bound
add
jbe
mov
jge
sub
inc
sub
jecxz
pop
cmc    
inc
in
xchg
push
mov
xorb
xor
cmp
out
and
pop
fidivr
popa   
jg
cmpsl
addl
push
out
inc
sbb
scas
mov
cmp
loop
jns
enter
cmp
and
ror
sub
aas    
clc    
mov
mov
ret    
scas
cmc    
cmp
sbb
icebp  
inc
insl
ljmp
add
sbb
mov
mov
pop
xchg
or
shrl
and
leave  
cmp
jecxz
sub
sub
cmp
stos
loope
enter
decb
inc
xchg
stos
lods
cltd   
scas
inc
idivl
(bad)  
xor
orl
and
je
xchg
push
iret   
repnz or
jne
pop
(bad)  
cmp
repz push
sbb
add
fbld
(bad)  
push
(bad)  
sbb
call
xor
xlat
jecxz
or
jno
jl
mov
jge
mov
push
add
cmp
daa    
lods
sub
data16
inc
xchg
push
mov
mov
dec
jge
popf   
jb
cltd   
cmp
movups
sub
or
jmp
pop
stos
dec
lods
out
jl
leave  
aad
mov
sbb
sbb
lcall
lods
mov
jge
push
adc
scas
sub
fwait
loop
in
sbb
rcll
lea
dec
sub
cwtl   
pop
jmp
xchg
int
cmp
incb
and
push
lods
bound
ficom
cvtps2pd
movsl
stc    
inc
or
repnz lock aad
dec
adc
(bad)  
loope
sbb
adc
shrb
jmp
mov
jb
or
fisub
aad
push
(bad)  
mov
arpl
xchg
mov
stos
outsl
fwait
mov
cmp
popl
lret
or
dec
mov
mov
int
inc
and
test
test
fidivl
insl
sbb
fistp
sbb
addr16 push
imulb
aad
sub
sbb
xlat
dec
cmp
mov
push
mov
or
push
scas
(bad)  
lcall
xor
js
sbb
loope
pushw
or
xor
push
jbe
pop
jbe
push
mov
call
jmp
pop
and
sbb
or
scas
fiaddl
dec
lea
ss sbb
call
repnz cmp
repz push
jmp
xchg
dec
out
or
or
xchg
and
adc
loope
xchg
rcll
into   
mov
fimul
xor
rolb
cli    
cmp
xchg
sbb
adc
push
sahf   
jns
or
sti    
test
xor
lock into 
mov
ret    
and
mov
clc    
pop
frstor
cltd   
add
out
js
jbe
jl
cmp
stos
stos
loope
jmp
and
push
sbb
xor
mov
mov
insl
test
das    
xchg
xor
xchg
test
add
xlat
mov
add
lahf   
stos
sbb
or
ficompl
jp
jo
and
mov
fidivl
mov
enter
push
or
cmp
jno
mov
hlt    
(bad)  
ret
jno
pop
stc    
xorl
dec
xchg
xchg
scas
loope
daa    
adc
repnz stos
and
lock xor
inc
mov
(bad)  
jnp
push
dec
ja
es cli 
xchg
test
lahf   
or
mov
mov
pop
imul
out
pushf  
outsl
inc
into   
outsl
out
push
jnp
or
xor
xchg
xchg
fldl
mov
mov
adc
insl
addr16 push
insb
jg
insl
xchg
loopne
mov
mov
push
in
lock ds data16 aaa 
cmp
sbb
in
in
test
fwait
jo
in
outsl
fucomi
jge
add
arpl
pop
push
sub
jmp
mov
inc
mov
sahf   
mov
cs push
shrl
sti    
xchg
or
dec
or
loopne
lods
or
jp
xlat
orl
sbb
inc
int
xor
adc
ret    
loopne
repz ret
xor
into   
push
cmpsb
cmc    
addb
cltd   
stos
inc
test
(bad)  
ja
inc
(bad)  
jg
mov
out
push
sub
test
mov
mov
(bad)  
jb
stos
arpl
pop
int
xor
jbe
dec
mov
cmc    
fcmovne
gs and
xchg
sbb
out
out
add
insl
mov
out
fidivrl
lcall
xor
xchg
(bad)  
push
mov
jge
cmp
sbb
push
sbb
sub
jle
nop
pushf  
jbe
inc
xchg
ljmp
movsb
inc
into   
xor
lea
test
xor
call
adc
sub
xor
cmp
xchg
pop
(bad)  
pop
push
dec
mov
lea
and
fucom
adc
jmp
pop
xchg
mov
data16 int3 
ljmp
int3   
fisub
add
stos
dec
and
push
sahf   
(bad)  
ljmp
add
mov
cmp
mov
xor
and
js
incb
cwtl   
mov
jbe
dec
mov
mov
dec
add
in
(bad)  
sti    
sbb
pop
mov
lock or
adc
test
sub
fsts
sbb
lahf   
jne
es pop
xchg
lahf   
xor
jo
jb
adc
cmpsl
dec
lret   
adc
or
lods
xlat
imul
push
sahf   
mov
cmp
inc
test
addr16
mov
std    
pop
in
xor
fisubr
sub
aad
dec
ja
add
xor
xor
jnp
sub
stos
dec
dec
repnz xchg
cmp
cli    
out
js
inc
js
shlb
loop
fwait
bound
stc    
sub
lahf   
pushf  
sbb
test
nop
test
cmp
xchg
pusha  
mov
fmuls
dec
(bad)  
rcrb
or
lods
cwtl   
jbe
mov
cmp
mov
pop
test
push
jp
(bad)  
cmp
hlt    
jecxz
orl
loop
jbe
loop
xor
aaa    
dec
outsb
and
adc
call
add
add
movsl
cmp
or
add
xchg
mov
rcrb
sub
shl
xchg
fidivrl
sub
mov
hlt    
ja
or
imul
adc
cli    
pop
adcl
dec
xor
cltd   
xchg
push
xchg
(bad)  
or
mov
jmp
test
pop
(bad)
add
pop
loop
xor
test
push
xchg
cmpsb
mov
lea
inc
loopne
inc
pop
je
xchg
cmp
fwait
xor
push
sub
and
jmp
pop
icebp  
xor
cltd   
scas
push
mov
les
sahf   
cmp
xchg
adc
test
jno
stc    
ljmp
stc    
(bad)  
mov
cld    
push
in
sub
or
inc
cmp
data16
inc
subl
jbe
push
ret
lods
ss daa 
lock pop
ficom
cld    
cwtl   
bound
xchg
shll
cmp
rcr
mov
test
cmp
shr
cmp
(bad)  
mov
fisttpll
stc    
push
adc
sbb
jae
jbe
xchg
lds
ficom
cld    
dec
icebp  
addb
pop
inc
dec
mov
or
push
(bad)  
inc
ljmp
in
ds push
leave  
aaa    
int
cmp
mov
mov
cltd   
(bad)  
lahf   
lds
adc
(bad)  
sub
sub
mov
xchg
inc
dec
jmp
jg
add
fcompl
stos
cs enter
push
bnd jge
jne
pop
aam
dec
jl
or
xlat
in
add
mov
sub
sub
sbb
fucomip
jno
(bad)  
or
lods
mov
xchg
mov
fwait
mov
xor
out
imul
and
fsubrs
adc
sbb
je
(bad)  
mov
imul
dec
imul
cmp
xchg
lods
jbe
leave  
mov
sbb
jge
adcl
cmp
(bad)  
mov
push
or
scas
(bad)  
das    
sbb
add
or
aaa    
jg
cmp
jnp
jno
bound
cltd   
dec
cmp
out
xchg
jno
gs loope
data16 and
push
mov
fsubrl
and
fldcw
push
xor
adc
andl
adc
jp
xchg
cltd   
pop
aas    
addl
xchg
xchg
cmp
ficomp
or
addr16 sbb
dec
sub
jg
lret   
pop
xorl
mov
movsl
insb
xor
xor
push
scas
fptan  
add
aam
imul
push
in
mov
loopne
cltd   
outsl
test
jl
int
or
stos
or
repz jmp
cmpsl
fbld
jecxz
add
or
pop
cmc    
xchg
mov
sbb
mov
int
or
in
pusha  
adc
(bad)
popa   
sub
addl
aas    
outsl
sti    
loopne
sahf   
mov
inc
leave  
ret    
sbb
aam
push
add
mov
addr16 xor
je
mov
mov
(bad)  
ds sub
add
jo
je
and
xor
mov
adc
cmp
es add
punpcklbw
aam
jmp
xlat
call
test
and
jbe
adc
xor
jle
add
test
clc    
mov
or
or
xor
adc
xor
stos
test
xor
pop
call
arpl
lahf   
stc    
sbb
cmp
subb
sti    
ljmp
fldcw
fdivl
mov
aas    
jg
shr
mov
cmp
aas    
(bad)  
ljmp
les
pop
jmp
jae
xorl
lcall
mov
push
pop
ret    
pop
jl
add
cli    
cmpsl
sbb
mov
std    
sub
test
andb
mov
arpl
mov
and
daa    
fisttpl
push
sbb
mov
sbb
and
pop
sbb
push
jae
cli    
(bad)  
clc    
dec
sar
dec
adc
in
enter
dec
add
pop
sbb
inc
je
test
add
(bad)  
mov
in
jmp
sbb
popf   
popa   
out
and
pop
inc
jmp
add
inc
out
fisttpll
lret
pop
es nop
test
sbb
dec
test
sub
cli    
and
xchg
mov
mov
hlt    
xlat
(bad)  
jns
add
rcll
mov
fsubp
inc
rcl
subl
jns
(bad)  
jbe
xchg
pop
sub
roll
arpl
int3   
lods
add
mov
mov
adc
aas    
cmp
cli    
mov
xor
cmc    
push
mov
mov
(bad)  
pop
jb
imul
cmp
adc
scas
pop
mov
sub
fiaddl
adc
ss push
pushf  
jnp
cmp
decl
fdivrs
push
mov
dec
lret
mov
mov
inc
push
cmp
xchg
sub
adc
cmp
inc
aas    
pop
mov
clc    
pop
xchg
(bad)  
dec
sti    
jno
push
pusha  
cmp
push
mov
cmp
ss and
out
mov
or
dec
inc
sarb
jns
ljmp
sbb
pushf  
loop
aaa    
test
xchg
aaa    
jb
movsb
ret    
pop
sbb
jo
in
lret
pop
and
sbb
push
in
cli    
psubusw
rcll
(bad)  
(bad)  
sti    
(bad)  
pop
out
out
aaa    
out
(bad)  
adc
aas    
sub
inc
mov
mov
mov
sbb
dec
imul
out
loop
adc
dec
test
fwait
ss pop
imul
push
pop
jecxz
sub
or
call
add
adc
sbb
scas
jecxz
mov
add
jne
xchg
fdivrs
xchg
inc
pop
cmp
idivl
xchg
loopne
idivl
mov
(bad)  
mov
sbb
mov
mov
sub
sbb
sbb
lea
mov
loope
cmp
(bad)  
into   
push
ffree
xor
(bad)  
cmpsl
or
out
(bad)  
xchg
push
sbb
pop
or
sub
cli    
xchg
sub
(bad)  
xchg
sbb
(bad)  
sbb
and
and
dec
jle
xor
lret   
lock push
pop
cmp
and
sub
sbb
jne
sub
push
test
enter
adc
mov
imul
inc
ss pushf 
jnp
stc    
insl
lock push
stc    
push
loop
cs lock dec
incl
(bad)  
adc
add
cmp
dec
mov
jnp
clc    
fwait
sbbl
jnp
mov
adc
and
mov
es mov
pop
test
or
mov
leave  
sbb
sbb
movsl
test
push
jp
js
cmp
scas
cmp
ja
paddw
fildl
xor
les
ret    
add
sbb
imul
int
sub
jge
xor
adc
push
xchg
stc    
nop
insb
stos
pushf  
push
fsub
dec
or
sbb
mov
and
iret   
xchg
cmc    
dec
add
das    
dec
mov
pop
dec
loopne
aam
popa   
jo
inc
push
fwait
loope
inc
xor
or
(bad)  
je
dec
cwtl   
lcall
daa    
pop
cs in
ret    
fs inc
sbb
shlb
and
and
ja
jns
adc
jp
lds
clc    
shlb
jno
jnp
mov
ret    
add
mov
pusha  
xor
insb
lock aas 
(bad)  
mov
mov
insb
cmpsl
jae
and
add
clc    
dec
mov
imul
repnz or
or
and
pushf  
and
subb
ror
adc
xchg
insb
test
xor
push
repz
push
xor
push
dec
cs ret 
dec
dec
cli    
mov
dec
mov
cmp
pusha  
int
test
inc
cmpsl
cmp
stc    
xchg
mov
out
jno
inc
lcall
rcrl
dec
(bad)  
mov
mov
lods
movsb
aaa    
inc
push
repz
adc
adcl
xor
xchg
stc    
cmp
rorb
sub
std    
cmc    
xorl
sbb
sbb
hlt    
imull
fwait
ss icebp 
jl
nop
jo
push
fdivrl
xlat
lods
push
iret   
in
mov
mov
je
push
(bad)  
addr16 clc 
push
ret    
orps
cli    
add
mov
insl
test
sub
push
movsl
pusha  
mov
and
pop
movsl
and
jb
frstor
icebp  
stos
pop
mov
or
pop
mov
mov
adc
jmp
xlat
fistpl
(bad)  
cmp
sbb
push
negl
dec
jp
movsb
test
bnd jb
mov
(bad)  
stos
iret   
test
or
xchg
inc
cmpsb
mov
inc
ret
ret    
sub
loop
mov
outsb
out
movsl
outsl
lea
pusha  
shll
dec
inc
stos
(bad)  
inc
into   
mov
int
mov
ret    
(bad)  
jmp
mov
push
mov
sbb
jae
in
or
xchg
test
xchg
andl
xchg
xchg
jg
cs mov
rolb
dec
jns
sbb
jp
jmp
iret   
xchg
fmul
sbbl
push
mov
mov
jno
jmp
outsb
inc
fildll
pop
daa    
jo
cmp
or
das    
xor
mov
insb
iret   
cwtl   
jecxz
icebp  
jo
cld    
scas
gs adc
xchg
dec
sbb
test
sub
sub
in
je
lret   
and
push
adc
jbe
loopne
mov
mov
adc
enter
inc
scas
pop
fs inc
adc
push
adc
outsl
push
aam
and
inc
out
in
scas
pop
roll
push
pop
leave  
lods
nop
dec
lea
sbb
fstl
dec
(bad)  
jg
jecxz
jno
test
ljmp
xchg
insl
cmp
cwtl   
mov
pop
call
xchg
inc
adc
xchg
sbb
out
jbe
scas
int3   
(bad)  
in
lret   
(bad)  
sub
jmp
dec
mov
loop
cmp
xchg
fcoml
dec
jle
jb
jns
sbb
cmc    
sub
scas
(bad)  
mov
in
or
call
jbe
sarb
mov
adc
jl
iret   
in
nop
adc
loop
rorl
bnd ja
(bad)  {%k3}
aam
xor
stos
leave  
call
add
(bad)  
push
mov
cs pop
sbb
xor
aad
daa    
prefetchwt1
fcos   
dec
adc
push
inc
sahf   
cmp
(bad)  
imul
ficomp
mov
bound
add
pop
daa    
adc
adc
mov
repnz in
push
sub
mov
das    
xor
sbb
and
cld    
cmp
fstpl
xchg
scas
jb
sbb
lds
dec
scas
sbb
mov
jge
xor
loope
and
or
fs sub
or
lds
or
repz jb
stc    
sbb
push
push
pop
lea
rorb
(bad)  
or
(bad)  
divb
xchg
mov
dec
sti    
in
xchg
int
std    
ja
outsb
scas
push
scas
pop
daa    
jbe
sbb
jp
mov
mov
sub
mov
adcb
fs inc
sbb
repnz adc
daa    
es add
loopne
push
mov
add
mov
push
shrb
jmp
call
test
in
push
xor
loopne
add
faddl
mov
lcall
jb
mov
aam
adc
sti    
dec
cmc    
mov
pop
inc
push
fs dec
mov
xchg
xor
out
aas    
xor
movb
sar
std    
lahf   
jp
cs pop
fsubrs
adc
mov
sarl
mov
sub
loop
push
cmp
cmp
hlt    
dec
mov
inc
sub
xchg
and
push
repnz
dec
adc
add
call
sbb
leave  
dec
adc
add
adc
es dec
daa    
outsb
pop
arpl
fsts
push
fucom
sub
test
xor
(bad)
or
aad
imul
ficompl
movl
mov
int3   
fwait
imul
int
sarl
cld    
xchg
dec
sbb
sub
call
fdivp
sub
fldcw
adc
pop
sar
cmp
adc
out
fbstp
cmpsb
sbb
fsubl
insl
jge
stos
xchg
xor
aaa    
jecxz
repnz or
dec
push
jp
and
jb
push
xlat
in
lock sub
loope
push
push
popa   
add
idivl
pop
push
or
leave  
jne
and
pusha  
jg
fcompl
jb
dec
(bad)  
or
int3   
sub
jmp
dec
sbbl
sahf   
(bad)  
push
xchg
fiaddl
pop
rorb
xor
into   
adc
mov
rorl
(bad)  
outsl
ret
popf   
mov
pushf  
push
mov
bound
mov
add
hlt    
outsb
xor
adc
mov
loope
push
sub
sarl
jns
cmovl
jmp
and
js
cmpsb
ret
stos
add
xchg
sbb
cmpsb
movsb
push
jb
out
ret
bound
xor
jno
sbb
xchg
lret
stc    
shrb
clc    
push
test
sbb
ret    
and
test
adc
(bad)  
push
cmpsl
adc
mov
add
imul
dec
movsb
loop
testl
jno
mov
adc
out
add
cmpsb
xchg
test
movsl
sti    
mov
mov
inc
fdivp
mov
in
mov
ja
lahf   
mov
jp
popf   
jae
add
jo
lock pop
scas
aas    
push
jl
(bad)  
(bad)  
rorl
mov
fild
int
pushf  
jne
inc
push
add
mov
add
aas    
into   
loope
mov
daa    
scas
adc
fnstcw
in
pop
(bad)  
pop
je
ret    
mov
shrl
jo
lret
outsl
cmp
stos
jle
mov
pop
jle
in
int
sub
cmp
add
push
iret   
pop
jmp
mov
leave  
xor
sub
sub
jno
jmp
lret   
ja
pushf  
cld    
push
outsb
dec
dec
int3   
dec
jge
cmpl
cmp
pusha  
ljmp
xchg
nop
sbb
mov
jno
dec
sbb
jb
mov
jmp
outsl
das    
dec
push
jno
fnstenv
imul
dec
adc
pop
pop
jne
popf   
jo,pn
in
popa   
or
pop
jl
out
icebp  
pop
mov
dec
or
ds pop
or
aam
lret
fdivr
cmp
loopne
mov
jnp
icebp  
icebp  
push
mov
in
fstpl
loopne
or
cld    
stos
inc
scas
sub
in
loop
xor
test
dec
rcrb
pop
fild
push
ja
out
je
mov
icebp  
push
loope
mov
mov
(bad)  
xor
dec
jne
inc
inc
scas
sub
or
add
or
ret    
xchg
outsl
in
xor
mov
and
and
pop
dec
jmp
(bad)  
aas    
or
jmp
fwait
das    
popa   
pop
jbe
and
push
and
and
adc
ds mov
imul
push
daa    
jmp
nop
sbb
cmc    
cmovo
adc
data16 mov
dec
mov
mov
es pushw
rcl
push
in
(bad)  
dec
es loopne
decb
test
push
loope
movsb
insl
or
xchg
xchg
out
int3   
mov
xor
sti    
aas    
jae
push
adc
shrb
add
xchg
sahf   
lahf   
sarl
test
cmp
into   
movsl
jp
cmpsl
lret   
cld    
sbb
test
mov
xchg
push
mov
mov
adc
cld    
jnp
sarl
(bad)  
mov
adc
jecxz
(bad)  
pop
mov
lahf   
rcll
in
push
adc
mov
mov
dec
sbb
push
je
stos
sub
lock and
adc
mov
lods
xchg
xor
scas
jp
add
mov
bound
xchg
outsl
xor
in
ret
mov
cmp
sbb
fistl
xchg
sub
cmp
pop
fdivp
mov
data16 jnp
aad
sub
stc    
sub
jb
sub
js
dec
push
lods
add
mov
insl
jno
pusha  
mov
roll
dec
mov
push
stc    
ljmp
jo
jo
pop
dec
stos
sub
mov
hlt    
add
jns
rcl
xchg
fist
mov
mov
(bad)  
xor
iret   
fnstcw
test
test
in
pop
sbb
ret
rolb
xor
xor
scas
mov
push
negl
fnop   
(bad)  
out
adc
jge
mov
push
loop
das    
sarl
sub
push
or
js
mov
fcompl
orl
and
mov
negb
test
(bad)  
rcll
cmp
fsubrl
ss lods
cmp
pushw
sbb
push
fcmovbe
imul
(bad)  
and
jg
sti    
sbb
and
stos
movsl
std    
push
xor
inc
and
out
outsl
jp
mov
(bad)  
mov
mov
xchg
icebp  
daa    
adc
mov
cmp
adc
lods
aas    
fnstsw
cmp
mov
gs pop
lock sbb
xchg
mov
(bad)  
(bad)  
fldl
xchg
sahf   
mov
pusha  
leave  
push
into   
xchg
mov
popa   
sbb
sub
xchg
xchg
xchg
or
mov
push
sbb
outsb
bound
(bad)  
repz xlat
xchg
je
setae
inc
rorl
jo
lods
ss dec
push
mov
fcomip
add
cmpps
add
div
push
inc
sbb
loop
lret   
pusha  
repnz sub
jg
(bad)  
mov
mov
adc
sub
pop
clc    
cvtps2pd
cld    
popa   
test
and
leave  
repz and
mov
jae
or
jmp
(bad)  
insl
movsl
inc
mov
sbb
jno
sahf   
fimull
cld    
sub
imulb
gs mov
mov
movsl
out
fs xor
pop
outsb
dec
add
fstpt
jle
xor
push
mov
out
jbe
jp
add
call
push
js
outsb
or
jno
enter
xchg
pusha  
push
cmpsl
ja
cltd   
aas    
icebp  
mov
inc
enter
(bad)  
(bad)  
xor
sbb
xlat
shrb
lds
jg
mov
cmp
out
data16 fdivr
sti    
stc    
ss adc
rclb
mov
adc
sbb
test
ret
lods
xlat
dec
mov
sub
cs icebp 
(bad)  
sub
in
out
push
jmp
cmpsl
scas
(bad)  
cmc    
nop
pushf  
mov
(bad)  
ficoml
sbb
dec
movsb
cmp
daa    
sbb
int3   
jmp
or
hlt    
jno
cmp
add
(bad)  
and
or
imul
sbb
inc
jns
push
push
negl
aam
xor
test
rclb
and
xor
mov
mov
stc    
jl
mov
dec
es daa 
and
int
stc    
inc
div
mov
cmp
(bad)  
leave  
adc
sub
(bad)  
or
lods
cmp
movsl
leave  
mull
cwtl   
pop
push
hlt    
sbb
neg
outsl
xchg
negb
adcl
js
pop
adc
jle
sbb
mov
fs fdivrp
lods
(bad)  
fisttpll
addr16 icebp 
stos
imul
xor
add
mov
andb
repz xor
mov
xchg
and
insl
fsubl
add
sti    
push
imul
std    
out
mov
mov
push
nop
add
pop
or
repnz mov
xchg
(bad)  
mov
(bad)  
rorb
push
sahf   
fucompp 
adc
and
xor
fistpll
ret    
leave  
and
or
leave  
icebp  
inc
xchg
sbb
or
adc
adc
je
xchg
lcall
mov
data16 mov
and
push
out
fimul
xchg
scas
add
mov
mov
fsubrs
mov
repnz rorl
jle
pusha  
add
and
pop
and
(bad)  
rol
xor
sbb
or
dec
mov
and
test
pop
pop
sarl
mov
rorl
mov
fcoms
xlat
jecxz
mov
(bad)  
push
(bad)  
repnz pop
xchg
ret    
mov
xchg
mov
fstl
in
jl
xor
mov
daa    
sub
mov
leave  
jmp
cs cmc 
out
out
iret   
jle
ljmp
adc
xchg
fbld
call
int3   
xor
jne
mov
xchg
decl
test
xor
add
jb
movsb
and
sarl
insb
out
adc
pop
mov
fldcw
in
lretw
mov
fcompl
lods
(bad)  
mov
mov
mov
inc
popa   
mov
fwait
xor
xchg
in
mov
push
mov
jp
hlt    
push
mov
stos
xchg
cmp
inc
mov
sbb
jg
roll
test
mulb
clc    
fcomip
push
cmp
dec
cmp
je
add
and
dec
cli    
std    
mov
(bad)  
or
xchg
aam
lods
push
add
aad
pusha  
scas
into   
mov
stc    
(bad)  
push
mov
das    
or
dec
out
sbb
loopne
int
adc
ret
adc
pop
jl
jecxz
cmp
jl
rcrl
jg
push
addl
leave  
jl
into   
aam
mov
mov
adc
gs loop
jecxz
mov
mov
cwtl   
push
mov
pop
loop
mov
mov
mov
or
jp
mov
and
repnz or
or
pop
or
movsl
jp
(bad)  
push
icebp  
mov
xor
mov
dec
mov
lods
and
mov
inc
int3   
push
psllq
or
pop
imul
and
(bad)  
xor
rcr
cwtl   
inc
xchg
das    
lods
push
imull
mov
sub
cmp
fldt
daa    
and
push
mov
ds
sti    
add
push
ljmp
mov
cmp
mov
lds
lahf   
bound
xor
cmp
repz test
imul
xchg
mov
ret
xchg
inc
and
sbb
gs loopne
loop
jle
(bad)  
cmp
in
in
mov
cmp
or
pop
mov
pop
(bad)  
jle
push
mov
sub
fisubrl
sub
fdivl
sbb
push
out
pop
out
xchg
call
adc
js
pop
inc
out
js
mov
jmp
gs sub
adc
xchg
inc
add
test
sub
push
cmp
push
mov
push
xlat
(bad)  
mov
push
cmp
std    
(bad)  
cmp
pop
pushf  
cmp
pop
fisttp
or
push
insb
test
or
sub
(bad)  
(bad)  
fidivrl
push
jae
ljmp
repz push
pop
or
aam
mov
push
pop
cmp
je
push
mov
lret   
jnp
pop
pop
add
repnz xchg
and
leave  
xchg
jbe
inc
sbb
mov
aam
dec
and
xor
fnstenv
clc    
dec
sub
jns
adc
(bad)
push
arpl
xchg
lods
and
repnz mov
sti    
mov
ds scas
jmp
shll
dec
ss scas
push
and
mov
and
cmp
sub
and
ja
mov
mov
jmp
add
movnti
xor
inc
lcall
aas    
mov
pop
insb
ja
fcomps
outsl
sub
lret
ljmp
cmp
stc    
icebp  
inc
out
lock xchg
pop
data16 mov
cmp
int
das    
jb
add
push
dec
inc
js
sbb
call
push
jbe
loope
pop
cmp
mov
mov
cwtl   
mulb
mov
outsb
push
(bad)  
fstl
dec
inc
sub
add
dec
xlat
int3   
mov
inc
(bad)  
jbe
push
mov
vpslld
and
push
jns
dec
jle
inc
ja
sti    
pushf  
mov
sub
ds dec
adc
addr16 pusha 
stos
cmp
(bad)  {%k3}
fdivs
dec
out
iret   
cwtl   
cld    
loope
push
xor
lds
sub
in
jo
into   
mov
jl
jecxz
dec
fimul
or
jno
xor
dec
push
lret   
ficoml
leave  
dec
movsl
mov
jmp
in
xor
repz imul
stos
fisubr
add
(bad)  
mov
mov
(bad)  
lret
sbb
mov
test
add
fld
andl
cmp
fs ret 
fwait
push
mov
add
pop
int3   
out
ja
(bad)  {%k3}
iret   
sub
rcl
mov
jmp
cmp
jae
push
sbb
dec
or
jle
mov
mov
mov
test
in
sbb
mov
loope
maskmovq
divl
gs
stos
out
aam
lods
mov
mov
pop
cwtl   
mov
ret    
jnp
jge
and
pop
mov
lock inc
jno
int
into   
test
ss or
pop
sbb
xor
dec
xor
fsubp
inc
in
hlt    
je
or
push
dec
loop
mov
mov
sbb
lcall
(bad)  
ss hlt 
pop
cltd   
xchg
clc    
xchg
in
inc
pop
sahf   
push
sbb
icebp  
and
push
(bad)  
std    
aaa    
xor
shlb
(bad)  
and
dec
stc    
sbb
and
adc
test
fcmovb
(bad)  
dec
aaa    
or
and
sub
pop
mov
pop
and
cmp
xlat
dec
mov
cmpsl
or
adcl
and
nop
ds push
loop
xchg
jae
imul
inc
cmp
rclb
loop
push
data16 and
clc    
shr
fdivrs
ficom
cmpsl
or
lret   
ret
in
xchg
push
cwtl   
movsl
lds
test
repz in
jle
push
jg
jmp
mov
rclb
out
dec
jmp
pop
aaa    
dec
lcall
pushf  
popf   
mov
xchg
jbe
je
mov
add
xor
xchg
aaa    
pop
ret
insb
cmp
test
je
adc
mov
sysexit 
pop
les
inc
not
ds
pop
mov
mov
popa   
cld    
and
fdivs
sub
addr16 lock pop
mov
fwait
mov
aas    
aad
int
sti    
dec
adc
mov
cmp
cli    
pop
adc
cmp
movsb
jmp
stc    
lret   
sbb
pop
mov
dec
sbb
imul
shrb
mov
out
insb
jb
inc
sub
dec
les
and
or
cmc    
(bad)  
shrl
add
jbe
rcrb
test
inc
in
mov
dec
mov
(bad)
(bad)
mov
pop
xchg
sbb
(bad)  
inc
sbb
mov
adcb
jl
(bad)  {%k3}
hlt    
pop
mov
xor
movnti
pop
push
stc    
aaa    
mov
stos
and
pop
sub
sbb
cmp
aas    
(bad)  
xchg
pusha  
inc
cmp
(bad)  
out
add
adc
cmp
and
push
scas
imul
mov
addr16 mov
mov
mov
inc
jbe
aad
mov
or
pop
movsl
cmp
jp
pop
push
out
ret    
mov
jecxz
mov
test
push
in
test
xor
shrl
aas    
xchg
mov
mov
inc
insb
push
mov
(bad)  
mov
cwtl   
push
fsubrs
jbe
roll
stc    
enter
xlat
sub
mov
stc    
imul
jp
daa    
jp
ljmp
popa   
movsl
ljmp
lcall
mov
test
pop
cmp
out
gs cmp
lea
lods
fs mov
inc
push
push
mov
shrl
inc
cmpsl
cli    
mov
jl
js
jmp
test
mov
loopne
leave  
(bad)  
je
inc
jo
cmc    
jle
jge
mov
mov
jmp
andl
enter
push
pop
add
fs
in
pusha  
bound
lds
sbb
lret
push
js
push
push
push
das    
and
inc
ret    
xchg
mov
xchg
inc
jnp
xorl
xor
xchg
mull
mov
sbb
or
hlt    
addl
lahf   
pop
cmpsl
in
fxch
lods
mov
imul
or
pop
jg
add
push
mov
and
sahf   
jo
xor
xor
sbb
aaa    
and
out
sahf   
mov
pop
test
(bad)  
xchg
sbb
jmp
loopne
mov
mov
mov
dec
cmp
ret
imul
ja
mov
dec
loope
mov
jle
lret
sub
jbe
mov
daa    
(bad)  
push
mov
push
xlat
rcll
insb
out
lcall
sub
out
fcmovnb
jne
add
daa    
xor
ja
xchg
xor
push
scas
outsb
ss mov
pop
popa   
add
jne
push
fnstenv
ljmp
es dec
scas
xlat
cwtl   
shlb
test
pusha  
popa   
cltd   
xchg
xor
ljmp
in
xchg
mov
cmp
lock addr16 mov
xor
inc
ret    
test
addr16 push
fistp
das    
mov
cmpsb
stc    
outsl
sbb
and
xor
adcl
and
jmp
xchg
cli    
lods
lahf   
jo
xlat
mov
xchg
das    
test
addl
ss aaa 
in
insb
jecxz
xchg
aas    
shlb
decb
mov
pop
add
xlat
push
jge
mov
sub
inc
jbe
mov
jns
data16 xor
push
mov
add
in
ds or
or
jns
cmp
jo
jnp
cs mov
xchg
in
xchg
mov
inc
push
(bad)  
outsb
scas
hlt    
stos
ret
mov
fidivl
pop
pop
ja
or
mov
hlt    
dec
jp
cmpsb
pop
repnz sarb
aaa    
push
cmp
out
cmpsl
lds
in
mov
jae
pop
pop
cmp
jmp
or
out
add
mov
cwtl   
mov
fldt
jl
mov
daa    
(bad)  
(bad)  
in
jmp
iret   
int3   
gs jmp
mov
or
mov
cmp
adc
ja
pop
jo
das    
adc
sbb
sahf   
cmp
ds sub
add
add
jmp
(bad)  
cmp
adc
mov
mov
jae
popf   
loopne
(bad)  
test
mov
xchg
test
lods
mov
mov
std    
mov
iret   
inc
mov
(bad)  
call
mov
xchg
adc
es xchg
inc
mov
mov
into   
enter
cli    
push
inc
dec
nop
push
push
and
mov
addr16 rcl
ret
dec
inc
adc
outsl
gs cltd 
test
xchg
jb
dec
(bad)  
outsb
lahf   
mov
ds sarl
push
mov
mov
and
adc
and
jns
mov
addb
adc
iret   
xor
and
push
dec
jno
rcl
test
inc
fildl
add
mov
loope
inc
xlat
aad
ret    
dec
push
sub
mov
dec
sbb
push
adc
push
mov
popa   
adc
test
movsb
mov
xchg
out
dec
imul
mov
cmp
lds
mov
lahf   
mov
jp
push
gs pop
test
int3   
shrb
movsb
dec
cli    
mov
cwtl   
int3   
and
fmull
mov
jg
cli    
(bad)  
or
mov
insl
jmp
mov
or
icebp  
cmpsl
mov
out
add
jp
xchg
fbstp
cmp
mov
ret
fbstp
int
cli    
bound
ror
outsl
cmp
xchg
xchg
push
push
frstor
adc
xchg
pop
(bad)  
jno
xchg
aaa    
or
or
mov
jp
in
out
push
(bad)  
fldl
(bad)  
scas
mov
pop
pop
mov
cmpsb
stos
daa    
rcr
dec
js
jl
jmp
xchg
mov
mov
jbe
ljmp
xor
xorl
(bad)  
mov
loopne
loopne
adc
jle
(bad)  
stos
add
ret
dec
lea
xor
mov
cwtl   
bound
jns
test
or
sub
rcll
lcall
lret   
in
outsl
out
mov
lret
imul
icebp  
push
push
sub
fs mov
es das 
scas
(bad)  
cltd   
cmpsl
jp
jns
imul
jl
out
sub
(bad)  
jmp
orb
lods
dec
out
xor
pop
std    
icebp  
mov
or
lahf   
dec
xchg
xchg
cmp
jbe
push
fisttpl
and
aas    
and
(bad)  {%k3}
jmp
jne
andb
je
push
mov
xor
inc
loopne
dec
(bad)  
inc
repz jecxz
(bad)  
push
test
aad
cltd   
pop
rcrb
mov
pop
(bad)  
sub
dec
sbb
imul
jno
out
and
or
mov
cmp
and
adcl
divl
jle
mov
clc    
mov
cmc    
jle
lret   
pop
rolb
(bad)  
(bad)  
adc
add
and
or
hlt    
js
pop
insl
insb
mov
fildl
adc
add
jecxz
adc
in
(bad)  
jl
push
ja
xchg
mov
fwait
fwait
adc
add
rcll
jge
dec
test
pusha  
fucomi
sbb
mov
test
in
pop
cmp
pop
int3   
inc
sarb
inc
xchg
or
push
lea
flds
adc
add
sarb
rcrb
inc
bound
push
ja
xor
mov
and
pop
(bad)  
mov
in
cmp
mov
dec
pop
mov
(bad)  
imul
sub
movsb
xchg
je
orb
aad
out
push
rolb
mov
(bad)  
jb
mov
test
add
inc
daa    
lcall
cmc    
pop
(bad)  
sub
in
xchg
pusha  
pop
out
ret    
and
roll
mov
cmp
jp
outsb
push
jnp
pop
jnp
jno
mov
sub
add
cltd   
sub
pop
jl
cmp
add
dec
iret   
test
pop
ret    
add
loopne
sbb
cmc    
insb
inc
jmp
mov
mov
test
pop
cmp
xchg
lods
fcmovb
out
and
ljmp
push
(bad)  
into   
mov
add
je
cmpsl
daa    
lret   
mov
sbb
movsl
push
out
jne
bound
popa   
nop
roll
sbb
mov
pop
bound
pop
loope
inc
xchg
(bad)  
(bad)  
dec
out
mov
push
ret
pop
push
dec
mov
dec
(bad)  
xchg
jecxz
jno
and
test
jmp
sbb
or
js
cmp
fldenv
rsm    
mov
add
shl
fwait
adc
mov
daa    
das    
xor
cltd   
imul
dec
fiadd
(bad)  
aam
jbe
jge
sub
outsl
je
cwtl   
pop
movsb
int
sub
fs sub
or
inc
push
xor
outsl
xchg
mov
mov
xchg
push
push
shlb
mov
les
scas
dec
push
sub
inc
or
outsb
(bad)  
xor
jae
mov
mov
cmp
inc
cwtl   
hlt    
int
or
cmp
enter
insl
nop
pop
lds
rolb
push
sub
jge
xorl
ja
xchg
aad
lcall
ljmp
sbb
push
or
lahf   
cmp
or
mov
fs in
sub
shll
aaa    
pushf  
sub
mov
adc
mov
sub
orl
addl
movsb
sub
out
cltd   
lret
jo
jp
inc
hlt    
rclb
addr16 enter
sub
or
scas
jl
(bad)  
aaa    
notl
cmp
fdivs
insl
test
mov
stc    
push
aad
push
pop
sub
add
imul
call
repz test
leave  
ret    
sbb
and
in
stos
js
mov
cmp
or
xlat
xchg
jg
and
mov
pusha  
mov
jmp
xor
dec
mov
movsb
sahf   
mov
dec
(bad)  
jo
dec
lret
xchg
inc
es shll
les
test
adc
and
loopne
xchg
and
rorl
mov
scas
pop
jns
mov
pop
mov
pop
mov
or
cmp
xchg
cld    
subb
rcrb
(bad)  
hlt    
mov
ja
inc
in
movsl
inc
mov
loope
enter
or
cwtl   
pop
xchg
(bad)
mov
xchg
push
xchg
cld    
rorb
cli    
pusha  
xchg
(bad)  
pop
push
and
dec
aam
pop
or
sbb
dec
fsubr
jnp
lds
leave  
in
xlat
push
cmp
insb
push
test
or
lock push
mov
fs dec
sub
cmpl
leave  
inc
(bad)  
fdivrs
shlb
subl
hlt    
fbstp
lock ret
mov
lds
out
insb
add
into   
cs cltd 
ljmp
fiaddl
push
arpl
sub
xchg
(bad)  
rep lods
lock xor
add
pop
fs mov
inc
xor
popa   
repz sbb
jmp
aad
jns
pop
xor
sbb
mov
(bad)  
adc
test
rcl
push
cmp
mov
fildl
aas    
mov
repz sub
xchg
cs mov
cmp
inc
cmpsl
mov
adc
pop
push
aaa    
inc
daa    
jp
inc
scas
add
aam
lods
push
push
test
popf   
pop
dec
cld    
xor
sti    
xlat
ret
add
data16 xor
inc
push
sbb
or
loope
mov
add
out
out
inc
out
cmp
cmpsb
pop
and
jo
aas    
(bad)
repz jo
scas
dec
and
ret
add
setp
lds
cli    
mov
ljmp
jg
mov
pop
aaa    
ret
into   
adc
add
(bad)  
ljmp
dec
fadd
mov
fidivrl
mov
(bad)  
movsl
imul
popa   
in
inc
lret   
icebp  
stc    
arpl
mov
inc
xor
and
xor
pop
mov
rorl
lret   
push
ja
jb
cmpl
xlat
or
mov
fisttpll
mov
push
aam
lcall
int3   
mov
loopne
jnp
and
add
js
mov
ret
cld    
hlt    
xchg
pop
gs mov
fisubl
stos
cmc    
xor
mov
inc
gs pop
mov
hlt    
fisubrl
insb
dec
imul
ret    
pop
fnop   
mov
cli    
bound
sti    
jecxz
pop
mov
daa    
and
pop
add
cli    
loope
jo
call
int3   
mov
shrb
jbe
jle
sti    
pop
imul
cmp
push
mov
sti    
mov
inc
shlb
jecxz
push
cmc    
dec
adc
jmp
repnz push
stos
es into 
outsl
xchg
cs inc
enter
xor
sbb
fiaddl
dec
jo
push
xor
xor
mov
mov
dec
out
pusha  
mov
in
and
xor
popf   
mov
dec
into   
mov
cli    
ret
rol
popa   
sub
stos
mov
and
pop
pop
cmp
test
cmovns
sbb
fcompl
leave  
adc
mov
jae
pop
jp
pop
hlt    
clc    
outsl
pop
stos
aad
xor
cmpsl
stos
push
mov
stos
jmp
xorb
(bad)  
adc
mov
xchg
sub
pop
inc
mov
daa    
cwtl   
xor
pusha  
xchg
cmpsl
arpl
not
std    
xchg
fs jno
cmpsl
mov
sets
shll
insl
adc
or
sbb
dec
dec
loope
or
arpl
xchg
dec
pop
cmp
loope
in
jne
cmp
pop
and
jno
vmovntps
mov
push
lcall
sbb
aad
ds das 
mov
adc
loop
jnp
push
lea
sub
pop
mov
pop
enter
xchg
lods
lods
and
and
cmpsl
adc
scas
in
push
jb
(bad)
cmc    
popl
push
(bad)  
or
aas    
cmp
(bad)  
enter
ror
lret
test
repz in
jbe
add
xor
das    
add
rorl
sbb
hlt    
sti    
ret    
repnz cs in
xor
dec
sahf   
add
push
push
and
xlat
(bad)  
repnz lcall
por
cmp
mov
pop
test
add
clc    
inc
mov
out
stos
test
incl
pop
or
mov
mov
push
xchg
adc
mov
mov
stos
pop
xchg
loop
jle,pn
mov
mov
sbbb
or
or
and
popf   
jg
push
xor
dec
jmp
push
sbb
inc
insl
fcmovnbe
ljmp
sbb
lahf   
pushf  
sub
jae
xor
cmp
dec
mov
test
pop
ss inc
adc
lcall
mov
repnz in
inc
imul
inc
or
jnp
movsb
xchg
test
(bad)  
rcl
daa    
lds
flds
xor
daa    
in
inc
rorl
cmp
and
outsb
js
cltd   
pop
add
push
es leave 
sbb
pusha  
movsl
and
nop
or
sub
sub
es xchg
sub
in
xorb
add
sti    
out
fs inc
pop
cmp
ficoml
or
or
xchg
popa   
cltd   
mov
pop
ret    
(bad)  
fstl
(bad)  
push
fwait
sbb
adcl
lret
(bad)  
daa    
in
test
repz mov
or
xlat
sbb
lret   
dec
lods
jnp
stos
mov
pop
cmp
xchg
lods
outsl
pop
push
inc
pushf  
jle
pop
sbb
sti    
pop
or
dec
cs adc
adc
cli    
scas
mov
push
adc
daa    
movsb
push
jge
jmp
iret   
sub
push
lods
mov
imul
pusha  
push
cmp
xchg
push
cs push
test
(bad)  
dec
fucomp
fisttp
and
or
pop
xchg
pop
mov
sahf   
fcmovu
add
jecxz
sbb
ficomp
bound
lods
xor
jbe
jmp
in
lahf   
sbb
push
daa    
and
std    
push
lods
push
scas
mov
std    
addr16 in
inc
jle
dec
leave  
mov
loope
mov
jnp
sub
cmp
stos
pop
xchg
rorb
mov
rcr
repz
fildl
dec
cs pop
stc    
lret   
or
loope
inc
sub
xor
push
or
sarb
jae
push
rorl
test
stos
into   
lahf   
xor
or
dec
jo
(bad)  
iret   
insl
pushf  
mov
or
add
pop
into   
out
icebp  
test
addr16 mov
sub
pop
or
dec
xchg
popa   
sbb
cmpsl
incl
lods
(bad)  
pop
and
outsl
aam
cs inc
dec
add
lea
adc
inc
daa    
jno
push
add
cmp
jno
dec
xchg
movsl
xchg
fisttp
xorl
out
push
into   
and
push
adc
pusha  
push
arpl
rcrl
mov
sarb
push
push
js
adc
jge
enter
pushf  
jl
popl
in
mov
pop
jne
imul
jmp
mov
sbb
xchg
arpl
out
test
dec
sub
test
dec
push
cld    
mov
xchg
dec
nop
mov
pop
frstor
dec
push
imul
push
push
and
sub
ret    
or
je
in
adc
cmovae
dec
mov
stos
dec
(bad)  
jo
ds lahf 
sub
or
leave  
mov
loop
xor
dec
sbb
sti    
pop
xchg
mov
dec
pop
outsb
stos
inc
inc
jg
xor
scas
in
aam
xor
psrlw
sbb
adc
push
mov
jl
addr16 ss hlt 
lds
sbb
xchg
jns
loope
outsl
out
push
mov
addr16 jnp
fcmovu
sub
mov
out
add
pop
cmc    
inc
cs xchg
and
cli    
(bad)  
push
or
movsb
cmp
xchg
fsts
sti    
and
test
in
mov
je
(bad)  
insl
leave  
iret   
mov
lock
jmp
xchg
xchg
das    
cwtl   
inc
dec
outsl
inc
out
mulb
bound
addl
sub
loope
xlat
xor
mov
xchg
pop
sarl
push
shl
sub
xorb
stc    
(bad)  
mov
or
repnz push
fimull
add
cltd   
nop
out
fsubrs
pop
call
stos
ret    
mov
pop
and
or
insb
cmp
std    
mov
cltd   
aas    
lcall
cmpsl
loopne
out
iret   
jp
loope
gs icebp 
andb
out
hlt    
std    
inc
dec
icebp  
fnstcw
arpl
js
es mov
loopne
and
sbb
(bad)  
repz fcmovnb
jmp
std    
add
mov
shll
sahf   
push
ljmp
dec
popf   
rol
mov
dec
mov
pop
mov
scas
out
jnp
cmp
mov
push
mov
mov
inc
mov
out
aas    
pop
mov
mov
popf   
daa    
data16 outsb
(bad)  
enter
sahf   
dec
and
lahf   
push
dec
and
and
cmp
pop
in
add
fstpt
clc    
jbe
in
in
jp
popa   
xlat
lcall
outsl
dec
mov
nop
rorb
xchg
and
adc
sbb
mov
mov
xchg
jne
ret
fld
(bad)  
jnp
addr16 pop
mov
push
xor
dec
push
pop
shr
out
xor
mov
sub
or
mov
loop
xchg
push
fistl
adc
inc
lret
pop
mov
bound
or
mov
cmc    
cmp
jns
shrb
xchg
jne
xchg
jns
lahf   
lea
and
dec
cltd   
fsubrl
in
inc
fs aad
cmp
(bad)  
dec
mov
into   
cmp
inc
lahf   
sub
cmpsl
add
and
rcrb
jo
or
ror
movsl
push
mov
das    
inc
sub
(bad)
mov
push
inc
jp
inc
inc
lahf   
xor
push
stc    
jbe
xchg
pop
iret   
stos
mov
and
add
cmp
push
add
loopne
mov
push
test
in
or
fmull
xchg
mov
test
outsb
mov
dec
insb
inc
fmuls
sbb
in
mov
xchg
inc
mov
ret
out
jae
outsl
out
or
sti    
test
(bad)  
je
mov
(bad)  
in
movsb
jbe
les
cmc    
out
add
sbb
rcll
ljmp
data16 das 
mov
subl
mov
data16 clc 
mov
cmpsb
rclb
push
loope
in
enter
loope
dec
cmpsl
jnp
stc    
cmp
pop
lds
call
mov
test
popa   
loopne
inc
in
fwait
and
mov
out
jne
mov
jo
leave  
lock cmc 
std    
mov
dec
pop
stc    
mov
lock nop
jb
gs es pop
imul
(bad)  
in
or
dec
xor
cmc    
push
jae
mov
repz ret
int3   
adc
or
push
mov
out
jo
es enter
push
rclb
pop
dec
mov
outsb
adc
inc
cli    
and
(bad)  
stc    
inc
sti    
lock jo
(bad)  
cmc    
xchg
jge
push
push
lods
jnp
xor
cmp
out
add
outsl
call
test
sbb
pop
adc
sti    
mov
xchg
mov
sub
dec
inc
fsubrs
dec
xlat
aaa    
xchg
idivb
orb
mov
pop
daa    
inc
imul
xchg
adc
or
push
and
sbb
(bad)  
cli    
pop
movntq
into   
cmpsb
lret
(bad)  
jl
dec
push
loope
test
cld    
inc
mov
jno
inc
dec
in
in
div
pop
push
lahf   
aad
ss dec
loop
scas
in
test
push
pop
jge
pop
adc
jmp
mov
popa   
and
stos
in
adc
cltd   
aaa    
lret   
mov
xor
icebp  
je
stos
clc    
sbb
dec
mov
jl
xor
rorb
loop
and
test
sub
jge
xor
push
subl
xor
fwait
push
push
mov
(bad)  
jg
(bad)  
pop
hlt    
or
pushf  
jp
add
fdivrs
cmp
cmp
and
sbb
(bad)  
icebp  
adc
sarl
jo
xlat
(bad)  
xchg
xchg
call
into   
sbb
lea
roll
cmpsb
push
mov
jns
fdivs
mov
aam
insb
push
or
pop
add
loopne
rcrb
mov
ret    
popf   
nop
and
call
addr16 inc
xor
mov
insl
inc
push
outsl
mov
sbb
xor
mov
(bad)  
je
jmp
test
xor
sbb
test
inc
cmp
popf   
inc
bound
mov
xor
lcall
jns
cwtl   
call
mov
(bad)  
xor
push
cmpsb
dec
sti    
sbb
and
notb
jl
(bad)  
jae
xorb
rcl
cltd   
dec
sbb
fdivp
xchg
cmp
sub
(bad)  
mov
cmp
insb
dec
popf   
stos
test
push
dec
jno
js
lock stos
shl
mov
jmp
pop
out
subb
cwtl   
xor
bound
adc
mov
adc
test
inc
cwtl   
jo
pop
and
cwtl   
into   
fnstenv
scas
hlt    
sbb
mov
push
clc    
xchg
sub
roll
sub
mov
fnstsw
nop
xchg
loop
push
je
adc
call
cmp
test
mov
and
and
lods
xchg
sahf   
dec
mov
data16 ja
into   
mov
pop
inc
jnp
inc
(bad)  {%k3}
call
cmpsl
stos
imul
insb
cmpsb
popf   
(bad)  
xor
lahf   
adc
pop
data16 jp
jecxz
hlt    
mov
push
fcomip
dec
dec
(bad)
in
(bad)  
and
imul
inc
hlt    
leave  
inc
imul
loopne
push
jl
cli    
ljmp
mov
inc
adc
loopne
push
pop
arpl
insb
fstps
movsb
jns
push
hlt    
adc
pusha  
sbb
jmp
add
into   
mov
cmp
pop
xchg
addr16 test
inc
hlt    
sbb
(bad)
rorl
aaa    
xchg
mov
push
addl
fs mov
cmp
mov
adc
ficom
jmp
add
add
add
adc
es sub
divl
mov
test
je
int3   
inc
sub
sbb
rorl
pop
xor
pop
push
xchg
lret
test
daa    
test
clc    
test
inc
mov
jl
in
mov
jo
or
mov
lods
imul
cmp
cmpsl
test
int
gs xor
enter
cmp
jne
dec
push
fwait
mov
outsb
mov
pop
arpl
inc
mov
int3   
push
popf   
int3   
aam
scas
adc
shrl
sub
popf   
lcall
adc
adc
out
adc
popa   
mov
adc
addr16 stc 
insl
in
aad
out
sub
jmp
pop
jle
daa    
fistp
into   
fist
(bad)  {%k3}
fild
dec
push
sub
xchg
or
out
sbb
mov
cltd   
bound
add
dec
xor
push
das    
(bad)  
mov
into   
insl
xchg
andl
jmp
push
sbb
lock data16 ror
nop
(bad)  
mov
and
repnz dec
jnp
flds
into   
loop
push
push
std    
dec
es mov
shrl
leave  
xchg
xor
inc
push
cmc    
add
adc
inc
fcmovb
fisttpl
inc
jae
adc
pop
pop
loop
iret   
mov
xchg
jbe
cmp
push
mov
jb
and
xor
xchg
jne
and
push
sbb
or
clc    
pop
and
xchg
ljmp
adc
mov
mov
popl
(bad)
outsb
xchg
add
dec
and
or
push
mov
cmpl
imulb
jmp
cmc    
cmpl
add
pop
xor
adc
push
fdiv
adc
rolb
pop
outsl
jae
sub
push
(bad)  
mov
pushf  
sub
ja
xor
je
xchg
push
cmpsb
in
jb
mov
xor
leave  
mov
jg
dec
sub
cmp
fsubp
jne
mov
roll
outsl
dec
pop
clc    
scas
mov
ret
cmp
push
mov
mov
pop
popf   
(bad)
rorb
out
mov
cli    
popf   
add
push
add
sub
outsb
out
dec
jge
push
pushf  
adc
sbb
mov
(bad)  
xor
xchg
outsb
cld    
jbe
push
sbb
mov
test
add
inc
lods
cmp
pop
xor
pop
push
inc
mov
sbb
pop
mov
jle
inc
mov
inc
repz scas
fdivr
dec
dec
inc
or
(bad)  
lock mov
ret
ljmp
xor
pop
fcoml
mov
push
and
(bad)  
cmp
jbe
jle
fdiv
imul
movsb
dec
inc
(bad)  
mov
add
lahf   
cmpsb
(bad)  {%k3}
fidivr
cmpsb
or
outsb
dec
inc
(bad)  
mov
jno
loopne
das    
fdiv
push
push
jmp
cmp
push
inc
jle
popf   
out
mov
jae
dec
dec
repnz push
push
inc
and
(bad)  
push
das    
push
addr16 mov
adc
xchg
xchg
cmp
js
inc
aam
or
(bad)
sbb
pop
lret
jbe
lods
jmp
popf   
stos
movsl
jae
fisubrl
sbb
insl
adc
imul
jge
shll
insl
in
sbb
push
cs
mov
incl
dec
test
loopne
or
sahf   
push
pop
arpl
nop
ljmp
mov
mov
or
repnz xorl
inc
gs jp
jno
out
(bad)  
repnz into 
inc
in
mov
std    
test
ss xchg
fdivr
sbb
mov
cmc    
(bad)  
mov
add
gs xlat
dec
sub
or
ffree
cli    
sbb
sbb
sti    
mov
mov
xchg
and
lret   
int3   
xor
out
and
aad
xor
aaa    
mov
jb
sub
xchg
cmp
sbb
jbe
cmp
shl
js
mov
fidivrl
xchg
in
xchg
pop
in
stc    
imul
pusha  
xchg
ffreep
jl
cmpsb
jg
gs jno
and
ss jne
jecxz
xor
or
(bad)  
icebp  
inc
sbb
xchg
(bad)  
or
daa    
test
sbb
jno
call
hlt    
pop
mov
int
insl
xchg
xor
mov
xchg
fwait
in
movsb
sub
lods
sub
xchg
mov
add
adc
ds adc
and
shrl
adcl
xor
push
call
es dec
xchg
and
addr16 mov
ret
lods
mov
daa    
insl
jmp
repnz test
rcrb
imul
jecxz
push
repnz xchg
pushaw 
pop
dec
dec
int3   
test
divl
lods
es test
(bad)  {%k3}
fimull
test
clc    
inc
and
inc
lods
fs jnp
and
push
lret   
imul
add
mov
xor
cs pusha 
push
std    
pop
pop
inc
sti    
imul
xor
mov
jno
xchg
jne
xchg
clc    
jp
sbb
sbb
sbb
cmp
scas
sbb
fwait
cmpsl
push
jo
int3   
pop
push
add
and
loopne
mov
inc
test
pop
mov
rorb
mov
xchg
nop
push
inc
ljmp
dec
cmp
cli    
scas
mov
loopne
dec
mov
mov
inc
mov
sahf   
xchg
sbb
rcrl
lahf   
add
pop
xchg
fildll
push
mov
call
xchg
repnz fildl
jmp
out
jno
dec
cmp
mov
mov
idivl
xchg
popa   
xlat
xchg
xor
bound
fcmovnb
xchg
xor
or
mov
movsb
xchg
insb
psubw
ret
rcrb
test
das    
cmc    
fwait
xchg
pop
adc
(bad)  
cmc    
repz sti 
inc
mov
mov
shrl
les
lahf   
pop
movsb
mov
mov
sub
or
push
out
nop
jb
data16 ss ja
scas
dec
(bad)  
jecxz
or
loope
(bad)  
lock cld 
loopne
ficompl
ljmp
cli    
idiv
pop
cmp
data16 mov
mov
ret
mov
mov
loope
push
js
std    
or
pop
dec
push
daa    
mov
pop
xchg
pop
push
lahf   
lea
jp
lret   
lds
popf   
popf   
xor
ss pop
add
leave  
sub
cmp
add
xchg
jne
iret   
ss or
jns
pop
jns
insb
and
std    
jbe
add
jecxz
xor
je
jmp
lahf   
es mov
std    
loope
mov
add
ret
pop
lcall
stos
insl
stc    
lods
daa    
mov
and
(bad)  
or
adc
mov
mov
(bad)  {%k3}
lret
pop
sub
outsb
mov
loop
rorb
dec
popf   
pushf  
fcomip
lods
cli    
fcomps
mov
push
(bad)  
loopne
mov
je
jno
aas    
outsl
pop
dec
data16 lock sti 
inc
or
or
in
(bad)  
or
xor
or
loop
sbb
push
adc
sub
jnp
es dec
stc    
data16 adc
rclb
inc
cmp
insb
iret   
and
push
mov
xchg
rcr
jmp
call
mov
scas
pop
mov
cs dec
aaa    
jbe,pn
or
add
and
aaa    
aas    
gs jle
sub
loope
fsts
mov
test
push
int
add
dec
in
fisttpl
pusha  
mov
mov
cltd   
jae
pop
aaa    
dec
jecxz
addr16 pop
xor
pop
mov
lods
sbb
push
loope
dec
sbb
int
fsubrs
sub
adc
or
push
and
push
jmp
dec
push
inc
hlt    
sti    
loope
(bad)  
jl
and
mov
xchg
mov
adcb
cwtl   
in
je
xchg
mov
xor
xor
mov
cmc    
scas
cmp
cmp
cmc    
and
call
(bad)  
out
aaa    
mov
jecxz
ja
(bad)  
imul
popa   
int
lods
cmpsl
xchg
jno
mov
mov
push
and
ficomp
lea
shlb
push
mov
clc    
and
pushf  
iret   
adc
xor
loop
js
aad
popf   
aad
pop
mov
movsl
mov
mov
ja
sbb
mov
pop
in
mov
lods
repz pusha 
pop
movsb
movsb
inc
xor
ja
lods
scas
cmpsb
adc
mov
pop
cld    
xchg
xchg
fisubl
arpl
xor
push
mov
lret   
stos
mov
inc
mov
push
mov
cmpsl
xlat
pop
pop
add
or
jnp
mov
ljmp
push
mov
or
fcoms
jno
mov
mov
and
out
sahf   
pop
mov
ret    
sub
in
arpl
xchg
lret
pop
addb
inc
stos
sbb
and
xor
loope
push
js
add
scas
repnz lods
ds
add
or
fdiv
mov
jo
mov
jne
adc
sbb
mov
and
add
inc
(bad)  {%k3}
ljmp
cwtl   
inc
or
add
xchg
or
mov
cld    
loope
jae
cltd   
jo
pusha  
or
xor
jbe
jle
(bad)  
mov
fidivl
push
xchg
sbb
mov
mov
dec
or
adc
push
sahf   
push
xor
test
mov
(bad)  
or
jle
mov
mov
fldenv
jl
lcall
mov
gs sbb
stos
daa    
dec
dec
out
out
mov
dec
or
aad
xchg
jp
xchg
mov
int3   
mov
mov
dec
mov
(bad)  
int3   
mov
pop
sub
icebp  
xchg
mov
mov
loopne
imul
insb
stos
xchg
movsl
adc
ret    
pushf  
mov
mov
push
jno
hlt    
lods
in
pop
andl
sbb
out
add
mov
mov
push
push
cld    
(bad)
cmpb
cmpsl
pop
int3   
mov
cmc    
push
stos
inc
inc
mov
add
mov
adc
lcall
or
pushf  
loopne
fisubl
lods
mov
into   
gs push
loopne
xchg
adc
and
stos
adc
or
jecxz
mov
jo
adc
jp
lods
push
xchg
fwait
adc
push
cltd   
fstl
sbb
xchg
nop
mov
pushf  
fs dec
gs inc
(bad)  
jmp
pop
sub
jno
roll
push
xor
xlat
enter
push
lret   
cld    
(bad)  
cmp
outsb
stos
int
sub
adc
adc
test
mov
adc
aas    
pop
adcb
mov
enter
mov
cmpl
scas
cmc    
cmpsb
insl
cmp
jne
jae
sbb
mov
pop
fimull
mov
faddp
adc
sti    
fbstp
cmp
movsl
push
ret
adc
sahf   
jmp
in
das    
pop
aad
mov
outsb
scas
loop
in
movsb
stc    
lret   
jmp
dec
jb
pusha  
lock push
insl
sub
cwtl   
cmpsb
ret
xchg
push
icebp  
rcll
pop
and
(bad)  
cld    
pop
sub
mov
iret   
xchg
push
sbb
lds
scas
sbb
cmc    
cmp
in
xor
sbb
add
push
mov
add
and
push
mov
and
jae
inc
ret
xor
sub
xor
push
push
(bad)  
into   
mov
mov
jmp
push
inc
cmp
adc
xor
xor
ficompl
xor
ja
lods
(bad)
(bad)  
aad
(bad)  
outsl
fs push
dec
jl
cmp
add
(bad)  
(bad)  
test
repnz sbb
pop
or
mov
sbb
popf   
ss out
daa    
xchg
in
pusha  
stos
sub
aas    
daa    
xchg
mov
and
xor
and
cmpsb
frstor
inc
fistp
je
push
enter
ss inc
ss xchg
inc
cmpl
adc
movsl
in
add
mov
outsl
int3   
cmpsl
and
pusha  
adc
call
std    
fildl
frstor
xchg
fnsave
mov
ds adc
jmp
xlat
cld    
and
in
jp
out
js
inc
pop
pop
jp
lods
test
mov
popf   
xchg
bound
jg
and
adc
mov
dec
ss aam
ds mov
inc
in
popa   
es dec
lret
pop
jnp
jmp
jp
imul
mov
in
inc
dec
cmp
out
pop
adc
ret    
stos
add
roll
je
pop
icebp  
push
push
popa   
sbb
stc    
cmpsb
pop
push
out
inc
jle
sub
stc    
mov
iret   
fwait
mov
inc
call
ds inc
or
loop
shll
or
(bad)  
adc
sbb
jae
sbb
jo
add
andl
clc    
jp
push
sbb
push
hlt    
decb
jne
frstor
push
mov
push
repz sub
dec
les
pushf  
xchg
push
xchg
cmp
scas
push
add
arpl
sbb
jno
pop
pop
sub
push
outsb
gs dec
mov
sub
sbb
mov
bound
sub
xchg
popa   
cmc    
mov
mov
(bad)  
popf   
push
daa    
mov
add
dec
mov
add
dec
cwtl   
xor
in
or
popf   
xlat
add
sti    
pop
xchg
jae
xor
xchg
push
cs pop
xchg
rcrb
int
fstpl
mov
cld    
outsb
insb
loop
cmpsl
test
(bad)  
jbe
sbb
imul
loopne
add
mov
mov
outsl
out
rorb
gs in
cmpsb
adc
dec
cli    
(bad)  
int
dec
mov
shll
fwait
out
cmp
jno
or
mov
hlt    
add
inc
popf   
sub
es
fimull
mov
out
cwtl   
fwait
or
adc
rorl
jb
in
push
outsl
and
or
add
mov
rcll
or
popf   
mov
cmpsb
push
pop
xchg
mov
cmp
mov
arpl
dec
jnp
sub
pop
das    
cmpsl
dec
lahf   
(bad)  
je
in
sbb
cmp
cs adc
cmp
lahf   
je
test
arpl
add
push
and
mov
in
mov
jmp
adc
mov
fdiv
adc
sub
mov
pop
pop
sti    
rcl
push
and
sbb
in
mov
js
push
lds
daa    
cld    
(bad)  
fwait
push
dec
cltd   
mov
xchg
xchg
stc    
(bad)  
jecxz
sti    
push
jle
and
jbe
ret    
(bad)  
jg
loopne
cs in
iret   
std    
dec
fdivr
cmp
addr16 mov
jb
mov
(bad)  
js
ret    
mov
and
test
loop
(bad)  
mov
insb
lods
fbstp
int3   
jb
das    
or
mov
push
in
out
daa    
out
stc    
push
or
push
sub
xlat
adc
mov
mov
repz or
pop
rolb
dec
in
pusha  
int
stos
and
or
pop
mov
dec
or
sbb
lcall
jo
iret   
ret    
bound
hlt    
push
fldcw
cli    
sub
jbe
adc
int
rcl
imul
arpl
add
fidiv
test
negl
ljmp
sub
insb
inc
pop
out
mov
lea
js
cwtl   
jnp
dec
mov
mov
dec
ljmp
popf   
adc
xor
sbb
jmp
xchg
ljmp
add
push
mov
pop
xchg
xchg
outsb
fistpl
pop
test
sub
mov
fwait
mov
(bad)  
arpl
mov
xchg
mov
inc
pop
repnz add
mov
inc
jns
add
lods
sbb
fwait
call
pop
test
xor
cs pop
mov
adcl
cmc    
pop
jbe
xor
sbb
and
mov
int
push
daa    
dec
cmpsb
mov
jno
push
(bad)  
out
mulb
test
fnstsw
sbb
or
mov
mov
cmc    
loopne
sbb
lds
xchg
pop
pushf  
nop
dec
xchg
pop
xor
(bad)  
movsl
(bad)  
sub
movsb
push
add
ljmp
sbb
cmpsb
xchg
ja
push
cmp
or
jg
(bad)
lods
dec
sbb
data16 jns
icebp  
les
clc    
sub
or
sbb
clc    
adc
add
nop
xor
in
insb
in
insb
loopne
imul
jl
shr
inc
and
pop
adc
xchg
adc
pop
sub
or
push
scas
popf   
xor
fdivs
adcl
jle
cmpsl
adc
data16 fcoml
(bad)  
jbe
or
xchg
mov
jbe
adc
add
cli    
lahf   
inc
mov
nop
out
push
ret
push
(bad)  
inc
and
add
add
mov
jecxz
sub
pop
loope
and
hlt    
push
mov
fstl
add
push
add
pop
inc
outsl
jb
js
dec
popa   
imul
jb
gs cs fs insb
insb
add
add
add
add
add
adc
add
and
add
cmp
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
rolb

