jle
ror
cmp
adc
scas
and
shrb
push
sub
negl
sub
test
and
xchg
sahf   
fwait
scas
jg
push
mov
mov
popf   
pop
(bad)  
cli    
inc
stc    
sub
jl
lea
bound
test
sbb
out
pop
out
aad
xor
or
and
cltd   
inc
into   
jg
loope
dec
(bad)  
sti    
daa    
mov
lds
add
lret   
es xchg
sub
push
imul
pop
mov
fcmovnbe
test
pop
push
xchg
cmpsl
stos
aas    
(bad)  
jo,pn
push
imul
inc
mul
es fs fwait
sbb
jne
xchg
push
xchg
cmp
iret   
in
es
in
rorl
adc
sbb
xor
cmp
xchg
xorb
xchg
push
xlat
enter
adc
add
stos
xchg
mov
push
cmp
dec
insl
jg
les
lds
(bad)  
xor
(bad)  
push
pop
js
sbb
jae
movsl
mov
pop
dec
arpl
gs add
push
mov
je
popa   
push
in
mov
push
adc
rclb
sub
call
mov
outsb
mov
and
sbb
xor
mov
(bad)  
mov
sbb
fldt
leave  
out
(bad)  
pop
mov
cmp
int3   
pop
cmpl
ror
pop
js
adc
dec
push
sahf   
and
fidivr
shrb
test
inc
rcr
sub
les
sub
push
jmp
sbbl
dec
test
arpl
xchg
rcr
or
cmc    
xor
jl
mov
or
notb
mov
mov
lahf   
adc
xor
data16 movsb
dec
xchg
out
std    
adc
dec
mov
mov
imul
(bad)
out
add
dec
(bad)  
jae
or
xchg
jmp
xorb
cmp
sbb
inc
cmp
cmp
ja
push
shll
mov
jecxz
outsl
stos
add
sub
and
or
(bad)  
mov
jo
or
dec
movsl
sbb
sahf   
pusha  
and
sbb
dec
(bad)  
sbb
(bad)  
dec
test
dec
pop
out
sbb
mov
ret    
jl
xor
sahf   
cmp
push
mov
in
fiadd
cmp
and
inc
call
push
stc    
xchg
xchg
inc
or
or
negl
inc
mov
dec
cltd   
insl
call
xchg
inc
jecxz
mov
sahf   
mov
cmc    
inc
adc
push
sahf   
iret   
nop
aaa    
hlt    
mov
pop
dec
inc
push
jp
add
idivb
repnz frstor
in
jg
dec
cmpsl
movb
or
test
lcall
dec
sub
push
or
stos
les
dec
push
cmp
lods
cmc    
mov
pop
imul
scas
es pop
repnz add
movsb
adc
jmp
mov
xor
adc
pop
int
cwtl   
mov
push
mov
pop
(bad)  
xchg
cld    
mov
ficompl
bound
push
orl
pusha  
cmp
mov
(bad)  
leave  
push
addr16 xchg
adc
mov
pop
sahf   
push
ret
mov
cmp
imul
out
shrl
xor
lea
(bad)  
je
lcall
(bad)  
adc
stc    
jb
xor
cmp
cld    
ret
mov
jg
jb
mov
ja
fucom
int
and
and
imul
aam
addr16 es
aas    
mov
stos
rolb
adc
jle
pop
push
aad
mov
push
subl
pop
and
fadd
adc
xchg
sbb
pop
popa   
xchg
cmpsl
das    
(bad)  
bnd je
(bad)  
enter
xlat
fimul
inc
push
fcmovnbe
dec
nop
cmp
inc
pop
clc    
jle
sbb
repz xchg
cmpl
xor
sbb
mov
sbb
xchg
sub
sub
xchg
push
ss in
and
es xchg
ljmp
xchg
loope
push
push
hlt    
lds
(bad)  
and
test
lods
out
sub
push
andb
lds
ljmp
jb
in
mov
jo
cmp
(bad)  
jo
push
sbb
(bad)  
and
xchg
(bad)  
lock dec
add
fcmovb
add
xchg
xchg
bound
icebp  
and
lods
jbe
xchg
into   
mov
fwait
and
xor
adc
sub
jns
sar
(bad)  
xchg
dec
out
jl
insb
add
lock ljmp
cs push
cmp
lods
in
loope
xchg
out
lds
test
dec
movsl
lds
es in
out
push
mov
xchg
sahf   
inc
scas
or
and
sub
add
add
dec
cltd   
and
movsb
push
jno
fiaddl
imull
mov
les
jle
mov
cmp
jb
jno
icebp  
sub
(bad)  
sti    
fisubr
sahf   
cmpsb
int3   
sti    
pop
std    
mov
mov
outsb
leave  
movsl
popa   
sub
mov
xlat
sub
adcb
cwtl   
ret
mov
ljmp
out
pushf  
fmull
scas
sahf   
pop
jo
mov
adc
sbb
mov
aad
pop
rcrl
ljmp
bound
pop
jle
mov
pop
jecxz
jbe
lods
dec
pop
out
data16 daa 
or
mov
add
iret   
inc
mul
push
stos
xchg
(bad)
aam
test
popl
rorl
std    
(bad)  
ja
mov
into   
sbb
nop
inc
dec
fs popf 
mov
adc
pop
movq
inc
ljmp
insb
mov
(bad)  
or
adc
icebp  
fisttpl
adc
cltd   
pop
data16 xor
loopne
gs sub
jmp
bound
cmp
or
jbe
pop
stos
cmp
inc
in
in
mov
sbb
jl
push
and
lcall
scas
mov
leave  
dec
xchg
add
sbb
faddl
pop
int3   
dec
in
push
dec
scas
inc
(bad)  
and
nop
sbb
mov
xor
mov
xchg
cmp
outsb
mov
in
subl
imul
add
enter
jmp
xor
mov
roll
sub
push
das    
ret    
fcmovnb
mov
adc
lods
cltd   
add
out
loopne
and
lret
mov
popa   
in
inc
sub
xor
add
sub
mov
adc
outsl
add
xlat
sahf   
mov
push
call
or
mov
fistpl
aas    
xor
and
movsl
in
cli    
sti    
sub
xchg
addl
(bad)
gs inc
cmp
jmp
push
loopne
ret
pop
pop
mov
jecxz
enter
ljmp
je
nop
pop
xchg
in
mov
push
pop
sahf   
fdivl
rclb
pushaw 
xchg
sbb
in
cmp
sub
cmpsl
xor
(bad)  
fsubrs
in
cli    
test
and
pop
addr16 xchg
imul
jmp
inc
or
popa   
(bad)  
call
mov
das    
and
insl
sbb
cmp
pop
sbb
bound
les
popf   
or
push
fwait
aaa    
inc
leavew 
lock push
xchg
ss lret 
pop
jne
adc
lds
dec
ret    
cmp
lahf   
xlat
rolb
jae
into   
cltd   
leave  
cmpsl
pop
inc
mov
adc
xchg
negl
dec
cltd   
call
jle
sbb
and
ret    
insb
dec
mov
scas
mov
sub
repnz aas 
mov
inc
xchg
ljmp
jle
push
push
pop
jl
mov
mov
sub
test
pop
dec
lret
movsb
cld    
mov
pop
jns
mov
iret   
xor
shll
das    
repz hlt 
jns
insb
outsb
(bad)  
loope
lahf   
mov
test
lcall
test
in
cwtl   
xchg
xchg
arpl
cmpsl
aad
fcmovne
sub
push
xchg
cmp
xchg
or
inc
mov
mov
jb
in
inc
leave  
loope
in
loopne
loopne
into   
mov
(bad)  
xchg
mov
test
iret   
in
lret   
mov
fldcw
jo
jmp
inc
jno
ficoml
ds push
add
jns
mov
xor
sub
inc
loopne
push
cld    
es cltd 
bound
mov
(bad)  
pop
jl
jecxz
push
sarb
dec
and
sarb
lea
jo
add
mov
ss rcr
imul
mov
shl
shrb
scas
leave  
daa    
insb
imul
fcoms
cmpsl
stc    
cwtl   
mov
repnz cmp
addl
sahf   
aaa    
andl
lods
mov
int3   
sarl
(bad)  
jae
jge
mov
and
inc
inc
inc
cli    
jp
mov
xor
jecxz
mov
icebp  
pop
inc
jp
jne
jno
or
addr16
mov
jle
das    
sbb
adcb
loop
pop
pop
fld
lahf   
cmp
scas
add
sub
cli    
test
inc
sbb
les
dec
xchg
and
bound
mov
add
pop
rol
(bad)  
mov
subl
pusha  
flds
push
pop
adc
repnz popa 
leave  
daa    
dec
sub
inc
or
fwait
push
xor
inc
mov
inc
xchg
jmp
imul
jle
mov
xor
and
scas
mov
mov
add
out
in
bound
or
(bad)  
jae
pop
dec
lea
outsl
mov
ljmp
cmp
(bad)  
push
jnp
pop
mov
xchg
jnp
pop
cmp
cltd   
adcb
subb
cmp
mov
cmp
fcoms
jae
jle
std    
orb
sub
das    
jg
sbb
nop
nop
xchg
int
dec
(bad)  
test
mov
out
or
adc
and
cmpsb
insl
orl
pop
add
pop
ds xor
pop
fbstp
push
adc
incl
dec
repnz negl
sub
mov
dec
pop
xor
aaa    
pop
mov
fimull
adc
(bad)  
aas    
addr16
dec
lret   
mov
std    
push
mov
add
fsubl
pop
jbe
(bad)  
mov
xor
clc    
xchg
imul
lret
mul
ret
cltd   
pop
xor
cmpb
pop
(bad)  
movsb
dec
(bad)  
xchg
push
out
adc
test
cmpsb
test
mov
sahf   
inc
pop
sub
cli    
fwait
inc
xchg
mov
inc
int3   
push
pop
imul
orb
inc
mov
sahf   
test
mov
mov
(bad)  
dec
add
xbegin
push
(bad)  
sub
stc    
cwtl   
cltd   
add
dec
push
inc
lock or
or
pop
mov
std    
pop
movsb
add
incb
jbe
inc
xor
cmp
adcl
mov
movaps
test
sub
imul
jl
aaa    
adc
movsb
loop
mov
push
repnz adc
(bad)  
jbe
js
scas
stos
cwtl   
popa   
mov
add
hlt    
out
scas
cmp
aaa    
rcr
mov
and
rorl
es add
sbb
mov
mov
bound
cmc    
fs mov
mov
(bad)
stc    
inc
jb
fadds
mov
xchg
popa   
jnp
dec
mov
pop
and
rcl
jl
jnp
sub
fsin   
pop
or
or
xchg
addr16
negl
jo
sbb
les
stos
ds mov
add
(bad)  
pop
sbb
pop
(bad)  
mov
push
sbb
movsb
dec
xchg
shll
ljmp
mov
(bad)  
daa    
sahf   
fldl
cmp
xor
popf   
cmp
roll
clc    
or
mov
sbb
sarb
adc
out
pushl
insb
dec
mov
icebp  
aaa    
sub
pushf  
pusha  
daa    
popf   
mov
sub
and
mov
out
push
je
xchg
cwtl   
jg
fisubrl
clc    
xchg
xor
or
fildll
cmp
(bad)  
mov
(bad)  
js
movsb
pop
iret   
sub
ds and
mov
in
xchg
adc
ds jmp
sbb
cmpsb
(bad)  
mov
cmp
mov
insl
mov
sub
cmpsl
insb
outsb
sbb
push
mov
or
xlat
xor
push
es out
mov
lods
cmp
inc
dec
jge
adc
sub
stos
xor
pop
gs imul
(bad)  
movsl
outsb
pusha  
inc
pop
jle
cmp
push
cmp
fwait
mov
mov
test
in
jmp
cmp
fsubp
inc
pop
mov
xchg
add
insl
shll
xor
aas    
mov
jle
pop
fs lret
inc
fadds
cwtl   
(bad)  
sarb
and
add
xor
cmpsl
or
push
or
push
and
dec
leave  
sub
lahf   
pop
negb
ljmp
push
hlt    
xchg
add
in
mov
repz
(bad)  
xchg
jb
shll
push
popa   
inc
cs mov
out
inc
cmp
mov
push
dec
xchg
lret   
mov
mov
cmp
jle
or
pop
fwait
(bad)  
gs mov
rcl
bound
pushf  
test
addl
rorl
adc
pop
lods
in
dec
loopne
inc
and
es push
mov
(bad)  
repnz mov
std    
add
pushw
and
fcmovnb
inc
leave  
(bad)  
pop
mov
fsubs
mov
or
(bad)  
mov
inc
in
adcb
pop
inc
(bad)  
xor
pop
lcall
cltd   
pusha  
xchg
je
mov
adc
inc
cmp
dec
and
and
pusha  
push
daa    
mov
push
ss jnp
or
aas    
sbb
cmp
rolb
xor
shlb
stos
jp
mull
ja
inc
les
mov
lahf   
and
cmpsb
popf   
sub
jg
pusha  
xchg
(bad)  
mov
cmp
pop
and
adc
cwtl   
sbb
sub
lret   
insl
cld    
adc
fcoms
ljmp
xor
xor
sub
jnp
enter
sbb
jle
dec
outsb
outsl
lret   
(bad)  
cmp
xor
das    
outsb
test
aad
dec
xchg
xchg
fistpll
ljmp
inc
ljmp
mov
sub
nop
or
mov
popa   
cmpsl
test
imul
pop
dec
bound
in
add
es jmp
jmp
test
sub
inc
pop
pop
idivl
inc
jmp
stos
int
cmp
je
inc
fadds
popa   
popl
shlb
in
test
dec
mov
(bad)  
in
hlt    
mov
cs sbb
push
cs and
jb
cmp
icebp  
jne
aam
mov
sbb
(bad)  
pop
stos
dec
jmp
andl
jno
movsb
fsubrl
clc    
loopne
repnz pop
ficompl
mov
popa   
fimul
cmp
arpl
inc
jo
mov
roll
and
sbb
out
out
cmp
mov
mov
sbb
mov
imul
or
test
or
and
mov
jae
inc
sub
push
hlt    
jge
mov
(bad)  
jmp
popa   
(bad)  
shrb
mov
hlt    
push
add
sti    
dec
pushf  
xchg
pop
pop
jg
push
dec
adc
mov
fmull
cmpsb
inc
sub
or
call
inc
adc
clc    
popf   
mov
mov
sub
sbb
mov
xchg
je
call
cs jmp
pusha  
cltd   
fs out
push
xor
popf   
dec
mov
arpl
inc
jl
xchg
xchg
popf   
pop
fld
aaa    
outsb
test
pop
inc
cmp
mov
stos
out
lea
das    
lret   
push
test
push
(bad)  
mov
lock xchg
outsl
push
(bad)  
imull
lea
mov
ljmp
test
sbb
fadds
iret   
aam
mov
ljmp
adc
lret   
pop
mov
popa   
scas
jb
dec
stc    
mov
in
popf   
mov
imul
push
pop
mov
pop
pop
test
outsl
(bad)  
lcall
push
pop
dec
aas    
pop
aad
mov
je
push
iret   
jns
shlb
inc
je
cmp
sti    
and
push
pop
add
push
mov
loopne
cld    
repnz rcrl
stc    
ret
ret    
and
loope
aaa    
inc
dec
aad
pop
mov
xor
cld    
in
popf   
add
cmc    
adc
xor
cmpsl
pop
ret
sub
fnstsw
cmc    
adc
mov
or
push
jecxz
pop
or
fs pop
scas
lss
cmp
dec
adc
jecxz
loopne
mov
dec
jno
repnz or
test
in
mov
leave  
pop
pusha  
xor
and
fsubrp
jae
xor
cmp
and
xor
xchg
and
inc
mov
(bad)  
push
repnz and
enter
dec
mov
imul
pop
push
stc    
dec
mov
in
xor
cmp
fisttpll
sahf   
lods
push
loop
faddl
pop
xor
xchg
sti    
jne
out
(bad)  
ja
rolb
or
clc    
int
inc
rorb
mov
bound
and
or
stos
mov
jg
push
popf   
fsubs
into   
movsb
mov
mov
ret
into   
pop
loopne
or
add
(bad)  
ss pop
mov
push
jo
mov
sub
je
lds
cwtl   
je
lea
jae
pop
fs out
adc
cwtl   
pop
push
cmc    
mov
mov
or
movsl
pop
dec
sbb
mov
fsts
sub
dec
pop
arpl
xchg
push
ret
daa    
inc
mov
mov
popf   
mov
xchg
push
push
std    
mov
add
mov
pop
mov
fdivr
js
pushl
mov
inc
test
push
sub
(bad)  
dec
sbb
ror
mov
ret
in
(bad)  
xchg
mov
push
cltd   
sbb
loopne
fwait
test
pop
shrb
stc    
cmp
fwait
lret
test
and
popa   
mov
mov
push
or
rep insb
adc
jnp
mov
inc
or
fucom
cmp
add
out
lahf   
or
inc
cmpsb
(bad)  
cld    
xchg
or
sbb
push
(bad)  
out
sbb
jbe
(bad)  
movsl
mov
lret
and
das    
(bad)  
neg
es imul
jg
cmp
inc
sbbl
push
icebp  
call
adc
lahf   
push
lcall
mov
and
sub
ds pushf 
pop
fadds
fxtract 
ljmp
pop
cmp
push
jo
leave  
dec
jecxz
jge
jns
aas    
movsl
fsub
push
outsl
out
xchg
dec
nop
push
test
jno
leave  
dec
movl
inc
pop
repz xor
mov
stos
add
mov
mov
mov
mov
xchg
bound
jmp
das    
or
in
pop
ret
jl
xlat
cmc    
sub
js
idivl
jecxz
add
dec
push
xor
out
mov
insb
inc
xchg
(bad)  
ljmp
and
arpl
inc
imull
jp
mov
and
jmp
ret
(bad)  
addr16 sahf 
fsubp
or
adc
ret    
push
and
or
mov
(bad)  
nop
mov
ret    
mov
fdivs
mov
movsb
jecxz
inc
leave  
cld    
jl
scas
pop
in
iret   
div
xlat
push
cmp
in
jb
sbb
mov
inc
rorb
nop
loopne
push
mov
inc
mov
icebp  
pushf  
or
(bad)  
(bad)  
repz mov
daa    
add
mov
dec
jmp
aaa    
and
adc
push
cmp
fdivr
or
inc
inc
lock cltd 
cmpsw
xor
xchg
fnop   
add
sbb
lea
cld    
mov
dec
test
out
dec
inc
jno
mov
into   
lock
in
adc
add
movsb
aad
xor
stc    
add
movsl
fcom
mov
or
pop
pushf  
mov
jnp
hlt    
mulb
sbb
or
jnp
jae
add
jl
jns
dec
jo
sti    
mov
iret   
into   
dec
cli    
dec
lods
in
pop
jle
das    
mov
sbb
imul
sahf   
stc    
jl
sub
xchg
push
jno
cmp
cld    
xchg
mov
mov
dec
lea
sub
loopne
and
lock xchg
add
and
cmp
inc
push
jge
mov
cmp
shll
lods
addr16
jmp
dec
idivl
daa    
xchg
sarl
movsl
popf   
ds arpl
scas
pop
xor
(bad)  
insl
(bad)  
inc
cmp
jecxz
out
dec
push
mov
pop
pop
rol
cmp
xor
inc
jb
mov
fidivrl
iret   
(bad)  
push
ljmp
aaa    
push
fcomps
addr16 nop
lcall
ds popf 
mov
stc    
shll
enter
pop
in
movsb
enter
mov
cmp
out
cmp
mov
in
scas
sbb
dec
pushl
or
cmc    
mov
push
icebp  
test
xchg
ss daa 
push
cwtl   
lods
and
sub
mov
pop
pushf  
cs push
ret
lcall
in
sub
test
dec
cmp
je
cld    
inc
into   
lret   
lock inc
popf   
adcl
lods
popf   
mov
mov
jae
cmp
imul
movsb
add
hlt    
ficomp
mov
call
add
nop
lds
test
test
mov
std    
insb
sbb
jp
inc
push
popa   
lret   
add
(bad)  
js
jg
mov
lret
cmp
sub
pop
xchg
sbb
(bad)  
or
or
pop
pop
sub
dec
cmc    
test
jae
cmp
stos
rcrl
jl
es insb
lods
mov
int3   
or
cs addr16 iret 
aaa    
lds
mov
mov
and
pop
and
dec
pusha  
cmc    
sbb
scas
shrb
pop
cmp
stos
xchg
lcall
mov
loope
mov
add
pop
daa    
and
or
out
mov
pop
sti    
mov
mov
add
test
jno
fstpl
in
fsubl
pop
add
sbb
mov
dec
xchg
int
sbb
jnp
xchg
add
andl
loop
mov
stos
mov
push
inc
xchg
je
and
aad
push
leave  
or
cmp
stos
lock out
jno
push
and
out
jecxz
adc
scas
sbb
sahf   
or
inc
inc
(bad)  
mov
loope
fcomi
aaa    
movsl
ja
or
mov
mov
sbb
jno
leave  
lods
push
add
int3   
jp
mov
cmpsl
aas    
sbb
jge
xor
clc    
xorl
out
adc
add
dec
in
or
inc
das    
sub
mov
lret   
data16 sub
dec
clc    
call
(bad)  
mov
ret
call
(bad)  
mov
mov
aaa    
sub
dec
movsb
lret   
in
aam
inc
in
insl
jecxz
jmp
jne
lods
gs repz dec
fldl
scas
xor
mov
mov
outsl
push
mov
xor
pop
jp
insb
push
inc
rol
mov
xbegin
dec
jecxz
ja
jle
imul
out
mov
xor
leave  
int3   
or
adc
inc
pop
lds
mov
lds
adc
sbb
mov
imull
hlt    
jp
mov
pop
push
pusha  
sub
lret   
stc    
jne
xor
xchg
mov
movsb
add
rorl
push
enter
cltd   
xor
xchg
mov
cli    
sbb
fs
mov
inc
aas    
fisub
jno
addr16 mov
addl
dec
add
pop
pop
pop
sub
push
repnz popf 
jne
icebp  
rorb
pop
clc    
bound
push
jmp
cmpsb
test
mov
xor
lods
jle
mov
fucomip
ds aaa 
sub
out
mov
adc
int3   
es lret
pop
adc
xchg
in
imull
sub
and
dec
xchg
cmpsb
fcoml
(bad)  
sub
mov
aas    
int3   
fcoms
jae
ja
dec
(bad)  
dec
lret
mov
jnp
es xchg
pop
addl
mov
and
ljmp
push
mov
ss pop
pop
adc
lds
pop
sub
in
or
adc
mov
in
in
cs push
shl
aaa    
mov
mov
jo
adc
xchg
pushf  
add
dec
jecxz
insl
lods
push
mov
dec
mov
ret
int
dec
jl
fbld
fsubp
bound
or
addr16 test
xor
inc
pop
setle
inc
sbb
push
mov
mov
mov
cmp
mov
pop
cmp
lret
push
jbe
test
ja
inc
into   
imul
fcomp
gs inc
outsb
mov
jno
out
cld    
lret   
dec
stos
rcrb
cmpsl
xchg
cmp
mov
cmp
xor
sub
es mov
insl
mov
fcmovnu
sub
xchg
das    
negb
push
add
mov
hlt    
cmp
or
repnz pop
sub
lcall
adcl
inc
jb
(bad)
notl
enter
(bad)  
aam
mov
push
fnstsw
and
mov
scas
lahf   
xchg
inc
test
jmp
fcmovne
fstpl
cmpsl
jp
sbb
test
inc
sub
sbb
nop
enter
pop
mov
das    
jl
add
imul
pop
pop
dec
leave  
(bad)  
sub
outsl
arpl
push
jns
loope
sarb
lock cltd 
daa    
dec
xor
stc    
push
jge
sahf   
lret   
aaa    
lret
cli    
push
loope
dec
push
aas    
repnz
lock dec
jl
aaa    
jge
fbld
sbb
mov
jg
inc
xor
xchg
jns
inc
mov
mov
shrl
add
sub
mov
outsb
lds
lds
mov
std    
push
aam
sub
pop
sub
pop
pop
sub
xchg
movsb
jbe
sub
(bad)
(bad)  
jmp
cmp
xlat
pop
dec
dec
mov
std    
(bad)  
mul
(bad)  
repz cmp
lret   
add
sti    
sbb
out
loopne
outsb
subb
mov
ljmp
jp
pop
ds push
jno
mov
fnstenv
push
cmp
ds test
ja
jnp
mov
bound
jl
inc
and
sbb
mov
test
(bad)  
movsl
xor
popa   
mov
mov
mov
mov
sub
nop
stos
sbbb
push
jno
inc
inc
jmp
pop
fstl
(bad)  
lcall
cli    
xor
in
(bad)  
dec
adc
jmp
mov
dec
mov
inc
outsb
mov
jecxz
insl
dec
inc
cltd   
lahf   
xchg
into   
dec
mov
add
addl
pop
sub
jae
ret    
daa    
push
in
pushf  
push
and
test
loop
sbb
arpl
lahf   
jmp
repz push
sub
push
scas
push
in
sbb
popa   
adc
movsb
icebp  
mov
sti    
hlt    
or
(bad)  
cmp
mov
dec
loop
push
jo
outsl
xchg
mov
mov
sub
push
outsb
xor
cmp
out
inc
jb
cmpsl
aaa    
subb
(bad)  
(bad)
cld    
call
nop
jb
loopw
outsb
stos
fsub
mov
xchg
sub
lods
jle
stc    
fwait
pusha  
pop
daa    
mov
sbb
(bad)  
cmc    
rcrl
iret   
push
in
dec
jae
lret
ja
jp
cmp
aam
(bad)  
sub
mov
imul
inc
push
adc
xchg
sub
ret    
(bad)  
int
sbb
pushf  
and
mov
xchg
dec
lock inc
pop
shlb
pop
cmp
mov
insb
jp
push
test
xchg
adc
inc
icebp  
out
jo
push
iret   
dec
insl
sahf   
lock mov
nop
xchg
sub
lret   
inc
dec
push
push
pop
in
data16 std 
mov
and
test
pop
loop
in
jne
mov
inc
sub
fiadd
and
adc
jl,pn
cld    
bound
inc
in
push
adc
insl
jmp
(bad)  
dec
sti    
add
mov
mov
loopne
lahf   
int3   
cmp
inc
xchg
pop
mov
cs mov
cmp
es sahf 
in
jl
test
aam
loopne
push
test
cmp
sbb
inc
jnp
ficomp
mov
push
mov
dec
jns
jp
fdivl
xchg
call
enter
(bad)  
aad
push
aad
(bad)  
aaa    
dec
rcll
loope
je
jne
leave  
pop
ss push
mov
(bad)  
xchg
jb
sbb
jmp
push
(bad)  
out
xchg
lahf   
push
(bad)  
mov
es xchg
stc    
xchg
sahf   
mov
or
mov
dec
leave  
mov
or
enter
or
sbb
dec
or
ret
lds
add
sub
mov
dec
sub
fwait
inc
dec
inc
mov
inc
jle
das    
jp
sbb
dec
lods
cmp
push
lods
sbb
in
popa   
xor
arpl
push
incb
xor
(bad)  
cltd   
add
ds mov
rcr
push
mov
push
sti    
dec
movsl
gs xchg
popa   
in
xor
dec
(bad)  
in
xchg
pop
pop
xor
xchg
iret   
(bad)  
imul
lahf   
jb
lret
mov
mov
enter
push
pop
lcall
sub
cmp
add
mov
insb
xor
push
lcall
pop
jno
je
inc
adc
fldenv
and
mov
xchg
sub
int3   
pop
cmp
js
dec
xchg
cmp
mov
mov
outsb
clc    
push
mov
sub
push
into   
repz sub
aad
adc
mov
rcll
cmp
inc
iret   
inc
fist
mov
ja
aas    
or
stos
mov
sbb
or
cmp
mov
mov
ljmp
cs inc
mov
sbb
push
xchg
add
pop
adc
sbb
leave  
ret    
imul
jne
pop
cmp
dec
jge
sub
test
mov
das    
inc
sahf   
xchg
sbb
mov
push
lret   
adc
add
fdivl
push
aam
js
ljmp
cmp
sarb
push
lds
xor
adc
xchg
arpl
cmp
inc
(bad)
mov
sub
aad
(bad)  
repz sbb
sub
sbb
fnstcw
nop
and
pop
xor
mov
cmpsl
fs dec
xor
xchg
and
dec
pop
sahf   
push
cmp
leave  
pop
adc
negl
jb
or
clc    
lea
jbe
nop
lret   
push
sbb
jae,pt
daa    
js
data16 addr16 cli 
xchg
and
jne
jmp
repnz fwait
cmpsb
add
ss in
jae
ljmp
mov
push
ret
gs mov
imul
stos
int3   
stc    
sub
pushf  
pop
mov
sub
(bad)  
fwait
stc    
cli    
outsl
jle
sbb
push
sub
sub
call
pop
cltd   
aaa    
push
imul
aam
inc
movsb
jg
fs or
iret   
shl
fiadd
in
(bad)  
int3   
das    
and
jbe
gs pop
lods
mov
out
sbb
in
inc
push
xor
out
cmpsl
or
mov
jae
enter
fsubl
pop
sbb
xlat
test
push
lods
mov
mov
push
in
(bad)  
fwait
jb
in
mov
cltd   
jecxz
mov
lret
imul
mov
sahf   
inc
mov
js
xlat
mov
cwtl   
jp
lcall
mov
test
add
jbe
lret   
push
inc
pop
and
scas
out
cli    
out
js
hlt    
cmp
imul
lods
lahf   
aaa    
mov
xchg
pop
xchg
mov
jle
in
and
jp
inc
shll
test
mov
insl
scas
xchg
in
ret    
mov
dec
imul
jb
xor
push
add
into   
faddl
inc
push
mul
mov
in
add
sub
or
rol
cmp
mov
repz gs push
sub
sub
jg
divb
pop
(bad)  
jo
dec
mov
inc
jae
jp
cs mov
test
mov
outsl
dec
sbbb
(bad)  
dec
jp
iret   
xorb
push
stos
into   
mov
push
mov
xlat
or
insb
cmp
imul
mov
pop
mov
aad
mov
notl
enter
mov
xchg
int
cmpsb
push
mov
dec
pop
outsl
xor
cld    
xor
shl
arpl
es xchg
jne
iret   
into   
scas
pop
inc
and
xor
pop
fstl
dec
cwtl   
fidiv
fsubs
stos
sarl
icebp  
repnz dec
punpcklbw
jg
fsubrl
sub
std    
(bad)  
fs enter
hlt    
jecxz
fstl
add
loope
add
leave  
lret   
cmp
loop
outsb
sub
mov
add
cmp
sbb
xchg
inc
popa   
sub
jmp
dec
and
cmp
jecxz
cs cmc 
imul
mov
(bad)  
lock lods
std    
(bad)  
xor
(bad)  
dec
xor
push
insb
mov
addl
in
add
pop
cmp
sahf   
cmc    
mov
test
cmp
add
sub
arpl
cmp
lods
jmp
js
and
inc
stos
lods
fwait
aas    
es leave 
jno
mov
int
paddd
inc
gs sahf 
sbbl
jb
jle
jl
xlat
sbb
xchg
mov
jno
cmp
push
mov
(bad)  
cltd   
inc
out
sarb
mov
cmc    
insb
movsl
mov
push
fstl
mov
pusha  
push
sub
cmc    
cmpsb
enter
aad
pop
rcl
movsl
icebp  
fcmove
repz in
sti    
dec
fcompp 
or
mov
lahf   
push
jae
and
aaa    
push
(bad)  
mov
mov
dec
ja
gs sbb
xlat
out
inc
outsl
orl
sub
add
mov
xchg
sbb
xor
inc
xorl
sar
rolb
insl
dec
mov
fcom
xor
sbb
addb
in
(bad)  
xor
adc
loopne
mov
jmp
mov
notl
push
in
mov
push
dec
(bad)  
sbb
out
rclb
mov
jnp
pushf  
mov
movl
fdivrl
adc
mov
ds into 
out
jbe
or
sub
das    
stos
fcomps
das    
fstp
jp
ja
mov
pushf  
sub
sub
cmp
pop
sahf   
sbb
aas    
jmp
pop
xchg
in
lret   
jl
out
pop
pop
dec
(bad)  
jbe
jae
xchg
lret
loop
divb
loope
inc
lea
std    
popf   
add
call
repnz push
fwait
repnz lods
lcall
movsl
jnp
xchg
imul
out
add
aad
rorl
cmp
add
addr16 ret 
test
sub
and
movsb
cmp
lret   
xchg
inc
stc    
(bad)  
cmp
push
mov
rolb
cmc    
pop
jge
mov
test
lods
(bad)  
(bad)  
test
sahf   
fsubs
(bad)  
lods
(bad)  
or
test
mov
dec
push
pop
inc
adc
mov
mov
xor
insl
cmp
loop
mov
mov
mov
xor
(bad)  
sbb
jb
inc
popa   
inc
jae
pop
pop
sbb
(bad)  
push
imul
and
jnp
stos
cmp
ja
push
icebp  
int
rorl
repz cmp
rorb
lret   
mov
sbb
in
lret   
pop
cmp
mov
cmp
add
(bad)  
fucom
int
or
jo
fnstsw
out
xchg
inc
xor
dec
cwtl   
rorb
fwait
mov
and
das    
and
js
das    
xor
insb
cli    
jg
mov
inc
cmpsb
(bad)  
stos
jle
ret    
adc
hlt    
in
mov
xchg
inc
cmp
insb
imul
mov
mov
and
jne
(bad)  
fadds
je
shrl
pop
sbb
mov
roll
jae
paddb
addl
out
movsl
mov
adc
mulb
imul
fstl
xor
pop
repz in
enter
(bad)  
xchg
pushf  
cli    
insb
in
mov
add
in
xor
mov
pop
dec
xor
fidiv
ss jmp
or
dec
fstps
bound
stc    
jge
jle
outsb
stc    
decl
data16 loope
(bad)  
mov
mov
xchg
and
mov
jge
daa    
add
or
test
dec
popf   
ret
iret   
aaa    
icebp  
sub
jg
pop
inc
icebp  
xor
adc
push
pop
aas    
add
mov
loope
mov
jns
daa    
movsb
lcall
ds in
aam
or
push
cmp
pop
pop
pop
jno
mov
dec
iret   
jg
or
or
adc
push
jbe
or
repnz inc
sub
insl
add
or
add
pop
stc    
inc
insb
(bad)  
xchg
mov
and
das    
jns
mov
in
add
pop
push
test
pop
pop
cld    
shr
iret   
stos
insl
sti    
jno
ret    
cmpsb
aad
xchg
ljmp
xchg
bound
callw
sub
(bad)  
lret
sbb
in
inc
(bad)  
stos
loopne
ds push
pop
and
and
mov
fwait
push
mov
pop
mov
cmp
mov
cmp
movsl
inc
out
pop
fsubrl
jecxz
xchg
imul
out
add
ja
out
ja
push
jmp
sub
out
mov
mov
inc
xchg
adc
sahf   
push
mov
stos
push
cmp
mov
ret    
pop
cmp
xor
lret
(bad)  
lock fs lock pop
jle
in
mov
mov
je
xlat
pusha  
jo
cld    
mov
in
mov
jmp
xchg
jmp
inc
bound
popf   
sub
pop
mov
push
repz xor
pop
(bad)  
sub
outsb
cltd   
les
fistpl
or
adc
stos
loop
aas    
scas
add
or
xchg
hlt    
cmp
pop
dec
gs loope
scas
ss cmc 
pop
dec
or
add
push
iret   
xor
push
and
push
das    
mov
(bad)  
pop
int
mov
movsl
movsb
cld    
inc
js
fist
jle
sbb
rol
ja
sbb
dec
adc
dec
(bad)  
jnp
jo
add
es jo
loop
in
fstl
cli    
and
sbb
daa    
xchg
and
out
adc
fdivrl
and
mov
loopne
mov
dec
mov
xor
scas
idivb
inc
cmp
jb
sub
pop
sahf   
arpl
fsubs
pop
mov
ret    
(bad)  
lods
(bad)  
jecxz
sbb
and
pop
icebp  
push
arpl
insb
repz adc
aad
add
scas
arpl
mov
popf   
insl
vpavgw
icebp  
mov
add
popf   
or
xchg
jo
xor
and
jbe
cld    
lret   
dec
jge
fmuls
fdivrs
cmp
push
enter
iret   
push
fcomps
sub
push
in
and
inc
cmp
pop
(bad)  
hlt    
ljmp
mov
es icebp 
pop
imul
jmp
loop
or
cmp
int3   
add
push
push
mov
push
cmp
cmpsl
lahf   
add
lahf   
inc
inc
adc
lcall
xchg
adc
es push
imul
out
mov
lret   
and
sub
call
xchg
shld
lcall
(bad)  
pop
mov
push
sbb
cmp
imul
fild
sub
repnz aad
xor
xlat
add
test
or
cmp
and
andb
(bad)  
add
cmp
push
sub
mov
mov
in
or
push
je
aam
mov
add
inc
mov
outsb
ret    
mov
sub
inc
mov
cmp
xor
pusha  
test
push
jl
dec
aas    
(bad)  
repz bound
fisubrl
add
repz fs jmp
loop
or
cmp
mov
add
mov
mov
mov
add
lcall
jns
sti    
fsubrl
jmp
cmp
(bad)  
jmp
sbb
or
add
cmp
das    
mov
into   
aad
pop
and
ljmp
pushl
cmpsb
pop
lea
mov
rorl
fldl
xchg
data16 test
pop
add
jge
fwait
mov
push
jmp
sub
scas
mov
std    
mov
mov
inc
mov
jae
(bad)  
popl
jg
pop
sub
jo
(bad)  
in
retw   
lahf   
arpl
mov
xor
or
out
cmp
cmp
sahf   
jp
push
test
or
leave  
(bad)  
jo
flds
mov
mov
in
push
stos
outsb
pop
and
nop
fnstcw
loop
xchg
mov
out
push
insb
jb
fidivr
test
test
lods
cmc    
mov
(bad)  
std    
sti    
ljmp
add
push
xlat
fimul
sbb
sbb
iret   
cmp
pop
icebp  
icebp  
enter
fidiv
mov
mov
mov
sub
add
orb
xor
imul
add
add
mov
pop
mov
fistpll
jns
jge
xor
sbb
notb
mov
pop
add
test
cmc    
jne
adc
roll
rorl
sub
jle
add
movsb
dec
mov
jns
xchg
fldenv
rclb
pop
add
int3   
test
(bad)  
aaa    
mov
(bad)  
cli    
imul
shr
cmp
lea
mov
jnp
outsl
add
icebp  
testl
call
bound
adc
test
adc
in
or
rcrl
mov
pop
cs push
mov
ret    
and
pop
adc
sbb
cmp
out
add
insl
call
mov
push
sbb
mov
xor
mov
es je
sub
adc
lock ja
scas
add
inc
inc
cmpsl
cmp
insb
lods
mov
lret
or
int
adcl
jg
fstpl
mov
mov
addb
test
adc
pop
inc
and
movsb
fmull
cmp
test
into   
ret    
push
pop
popf   
jno
sub
inc
inc
mov
(bad)  
dec
push
dec
pop
pop
or
or
sub
movsb
add
add
aas    
jne
xchg
(bad)  
popa   
in
repz cmp
je
into   
rcl
in
fcmovne
(bad)  
ret    
imul
or
rol
and
push
test
and
adc
cmpsl
jl
xlat
sub
movsb
jge
ja
cmpsl
or
int
fs sbb
mov
fwait
xchg
aas    
jle
xor
jle
(bad)  
dec
xchg
adc
dec
ss leave 
inc
sub
xor
pop
in
sub
pop
xchg
pop
sub
popa   
jl
aaa    
test
pop
mov
lcall
push
xchg
cltd   
int3   
pop
(bad)  
std    
mov
lcall
push
arpl
fdivs
mov
sbb
mov
stos
mov
addl
stos
jo
(bad)  
lret
lds
push
push
cmp
stc    
pop
mov
stos
ljmp
push
scas
mov
cmpsb
in
mov
push
out
shrb
add
jmp
neg
push
fidivr
jg
cltd   
xchg
mov
jne
lds
pop
ret    
xor
dec
(bad)  
pop
(bad)  
jle
sub
xchg
stos
lahf   
nop
sub
push
and
das    
mulb
in
aam
(bad)  
jne
push
mov
outsb
xchg
fidivr
leave  
mov
adc
int
lock push
adc
cmp
or
sub
ret
push
push
cs lahf 
(bad)  
fwait
pusha  
mov
daa    
push
mov
ss mov
push
fldl
pop
(bad)  
cltd   
or
xchg
sbb
outsb
add
pusha  
test
repnz sbb
push
(bad)  
cwtl   
sub
or
ljmp
sbb
test
sub
sub
xchg
pop
fldt
push
pop
xchg
repz loop
in
dec
lods
adc
(bad)  
xor
sbb
movsb
mov
dec
push
or
les
push
test
lret
sbb
movsl
pop
mov
xor
and
jae
repnz push
xchg
jle
ljmp
and
fistl
arpl
dec
mov
add
repnz scas
add
cmp
aam
pop
movl
dec
(bad)  
sbb
jecxz
sarb
repnz mov
icebp  
iret   
xor
mov
adc
xor
cltd   
rcl
cmp
bound
sub
xorl
addr16
mov
sti    
and
movsl
mov
scas
js
pop
jp
pushf  
cld    
leave  
mov
push
sub
outsl
scas
in
stc    
add
bound
pop
dec
fbld
xor
stc    
push
rorl
daa    
pop
fimul
adcb
jnp
xor
rorl
fidivrl
inc
(bad)
popf   
test
fldenv
outsl
jae
xchg
and
movsb
or
dec
or
in
outsl
cmp
daa    
std    
cltd   
cmp
mov
push
(bad)
inc
imul
rcrl
outsl
int3   
into   
mov
jnp
aad
lret
and
(bad)
cmpsl
jge
rorl
aad
aas    
sub
test
push
jg
fcomip
mov
fistl
dec
ja
xor
nop
pusha  
add
out
out
popf   
imul
pop
outsl
and
aam
push
outsl
or
lods
xchg
push
stc    
adc
push
lock stc 
div
or
mov
popa   
jg
xchg
addr16 xchg
mov
fcmovnbe
jl
xchg
rclb
cli    
pop
push
int
nop
pop
int3   
mov
mov
dec
outsb
leave  
gs jno
arpl
and
aam
jae
sub
and
push
cmp
aas    
(bad)  
pop
aam
dec
xchg
shlb
int3   
lcall
insl
cmp
mov
mov
stc    
test
xor
inc
frstor
or
ja
scas
mov
inc
mov
mov
out
insl
pop
or
repz out
cmpsb
xor
aas    
lods
sub
pusha  
jp
pop
or
jnp
pusha  
dec
in
dec
mov
and
pushf  
and
jo
in
pop
cmpsb
sub
les
xlat
jmp
sbb
mov
xor
mov
sub
sbb
arpl
inc
(bad)  
inc
adc
lahf   
hlt    
jp
inc
cs xor
push
xor
out
xor
mov
inc
idiv
es add
adc
xchg
(bad)  
out
jns
aaa    
mov
movsb
xchg
mov
fs dec
pusha  
mov
movd
xor
inc
pop
icebp  
mov
mov
push
add
gs mov
cmp
push
and
repnz pop
xchg
fildll
hlt    
sub
repz adc
mov
mov
aam
push
sahf   
sub
add
add
scas
mov
cmc    
add
push
push
add
pop
sub
(bad)  
insl
ret    
or
ljmp
int3   
test
and
int3   
lds
mov
pop
push
loopne
ljmp
and
xchg
imulb
cmp
dec
inc
sbb
sbb
andl
cmpsl
adc
push
in
mov
imul
divl
xor
ret
mov
jg
pop
rcll
or
jmp
cmp
jno
push
aad
cli    
xor
mov
mov
jle
adc
lcall
fdivs
rcll
insb
loop
cwtl   
cmc    
add
push
dec
and
dec
pop
pop
ret
movsl
nop
mov
cmp
xor
std    
sub
jnp
push
push
es fsubp
mov
pop
pop
or
cld    
pop
pop
aam
mov
popa   
jmp
xlat
cmp
int
pop
xchg
add
negl
pushf  
jo
add
mov
pop
pushf  
(bad)  
mov
xchg
cwtl   
in
jb
out
cmc    
mov
pop
pop
push
fnstsw
push
lahf   
and
leave  
outsb
aaa    
mov
pop
fcompl
push
xor
jne
sub
inc
sahf   
mov
sbb
lcall
push
cmp
dec
(bad)  
stos
stos
xchg
pop
subb
mov
cld    
pop
pop
push
popf   
cmp
sub
insl
and
add
push
jmp
jp
sub
jecxz
test
jne
mull
stc    
fsubrs
arpl
xor
dec
shl
inc
xchg
inc
jnp
push
lcall
push
(bad)  
ffree
(bad)  
fmuls
mov
test
sub
ret    
sbb
vpmaxsw
and
mov
jge
mov
xor
arpl
and
lret   
inc
mov
lods
dec
mov
add
or
stos
xchg
test
pop
in
jae
xchg
shrl
addr16 cmp
leave  
cmp
call
imul
xchg
nop
cmp
push
mov
xor
inc
jmp
sbbl
out
fcmovbe
sti    
cli    
cmpsl
(bad)  
repz into 
inc
xchg
jmp
addr16 jg
andnps
cltd   
jns
popf   
lods
insl
aas    
loopne
sahf   
(bad)  
cmpsb
aad
jle
xor
mov
pop
scas
das    
cmp
adc
popf   
movsl
cli    
adc
sub
cltd   
pop
jae
inc
pop
rcrl
cld    
xchg
jo
inc
in
inc
sub
es jmp
ljmp
ret    
mov
(bad)  
adc
daa    
fimul
outsl
lret   
lock in
mov
pop
mov
bound
(bad)  
push
cmc    
ss stc 
xor
(bad)  
dec
(bad)  
or
xchg
ret    
aaa    
mov
stos
lret
es add
xchg
out
mov
cmp
enter
in
std    
fdivrl
(bad)  
scas
inc
adc
jne
xchg
add
in
daa    
mov
mov
mov
push
fadds
les
stos
inc
repz jmp
push
and
or
mov
fmul
xor
test
and
sbb
out
pop
out
sub
sub
loop
js
mov
cli    
rcl
mov
sub
rorb
push
and
adc
push
mov
sbb
jo
add
mov
mov
imul
pop
fistl
adc
jae
pushl
dec
enter
push
mov
jno
fs stos
outsb
icebp  
(bad)  
mov
daa    
shrb
iret   
push
mov
pop
mov
pop
pop
jo
imul
jmp
and
js
xchg
mov
mov
or
pop
xor
pop
and
cmc    
or
fmul
in
and
jnp
add
jp
in
jae
adc
inc
imul
mov
mov
pop
sub
jmp
sub
pop
inc
jae
or
aaa    
sbb
int3   
stos
gs cli 
and
xrelease movb
pop
jmp
mov
mov
(bad)  
(bad)  
ljmp
or
push
ds iret 
popa   
mov
lock
movsl
in
push
out
mov
test
insb
sub
xchg
mov
popa   
push
je
subl
xchg
lods
sub
test
ja
out
imul
push
pusha  
insl
mov
add
lcall
xchg
xchg
test
mov
(bad)  
cmp
lret
arpl
xchg
and
mov
xchg
mov
out
mov
cmp
(bad)  
push
mov
and
push
fwait
loope
cld    
cmp
xchg
push
jg
int3   
xchg
enter
dec
inc
(bad)  
ja
je
ficomp
cs pop
pop
in
repz bound
push
push
(bad)  
call
int3   
sbb
and
jo
inc
sub
add
sti    
mov
xchg
inc
dec
xor
jle
mov
xor
mov
add
push
or
xlat
adc
(bad)  
aad
sub
mulb
nop
aad
cs inc
call
sbb
or
rclb
push
dec
scas
fimull
pop
jle
out
jge
pop
inc
stos
shrb
pushl
lret   
(bad)  
fs sub
pop
jmp
and
mov
pop
ror
or
adc
pop
dec
addr16 jne
insl
fs xor
sub
in
and
fs jbe
dec
test
movl
rcrb
dec
push
mov
incb
into   
or
lcall
(bad)  
popf   
mov
cmp
dec
fdivs
outsb
push
cmp
icebp  
pushf  
jp
leave  
push
shll
in
out
mov
out
(bad)  
cs imul
mov
inc
pop
(bad)  
in
(bad)  
mov
fcom
fcmovb
outsl
jmp
in
lahf   
cmc    
ret    
dec
mov
pop
cmp
xchg
test
js
or
mov
data16 and
push
add
xor
outsb
xor
mov
int
lds
push
mov
pusha  
push
pushf  
stc    
(bad)  
mov
fdivr
cmpsb
stos
ror
dec
(bad)  
icebp  
(bad)  
mov
and
dec
sub
out
sbb
bound
mov
fistp
push
rorl
or
imul
jg
push
xor
pop
pop
ret
dec
or
in
add
mov
std    
lods
mov
lcall
jo
leave  
in
aad
pop
jne
(bad)  
pop
push
add
sahf   
xchg
ret    
xor
cmp
leave  
jb
orb
sub
ror
iret   
imul
fimull
dec
fcmove
xchg
rcr
ret    
push
jge
std    
xor
in
sti    
mov
in
inc
jns
and
sub
jg
dec
xchg
mov
cli    
or
sub
add
dec
shlb
pop
add
loop
leave  
xchg
hlt    
flds
add
push
ret
dec
add
inc
pop
into   
lods
jns
push
jge
std    
ss loopne
dec
fnstsw
(bad)  
dec
call
bound
push
jmp
jb
pop
cmc    
and
(bad)  
nop
in
sub
out
outsl
push
mov
fnstenv
orl
dec
(bad)  
cmp
in
bswap
jge
cmpsb
xchg
rcrb
addl
divl
incl
and
push
lock push
sbb
sbb
jmp
add
mov
jecxz,pt
and
sahf   
mov
(bad)  
(bad)  
mov
or
pop
adc
mov
test
and
inc
es daa 
mov
cli    
mov
jo
out
fs push
inc
mov
dec
cmp
fcmovnb
adc
pop
and
fsubrl
aam
and
inc
dec
or
iret   
push
dec
aad
movsb
out
pop
inc
push
add
cmp
adc
insb
fucom
int
(bad)  
dec
add
xchg
imul
out
pop
pushf  
or
sub
shrb
mov
jp
push
add
jge
ds sbb
mov
rcll
dec
adc
pushf  
enter
mov
cmc    
icebp  
sbb
loop
xor
fisubl
inc
mov
(bad)  
cmp
out
and
pushf  
push
ret    
stc    
lods
xchg
add
sub
push
ljmp
push
cmp
fs stc 
push
arpl
fldt
loope
cmp
fldenv
sti    
xchg
mov
stc    
xor
mov
xchg
pop
pusha  
jp
sub
int3   
mov
lret   
cmp
adc
mov
addr16
jb
aas    
adc
es
imul
call
mov
rcll
or
std    
add
int
in
roll
outsl
cmc    
lods
dec
sub
stos
jl
(bad)  
call
pop
(bad)  
aad
ror
pop
das    
fstl
sbb
push
repz and
mov
mov
(bad)  
inc
adc
bound
pop
push
pop
das    
sbb
pop
sarl
jnp
push
add
das    
arpl
cltd   
mov
mov
xor
daa    
test
in
mov
out
pop
xlat
add
push
cli    
xlat
mov
push
or
popa   
loopne
inc
or
test
loop
mov
jle
mov
lods
ds cmp
repnz pop
test
push
dec
stos
popl
shrb
mov
mov
lret
sar
daa    
loop
mov
cld    
jnp
(bad)  
cli    
mov
aam
ja
es lret
cmpl
repnz iret 
inc
cmp
inc
das    
mov
and
mov
mov
stos
mov
bound
or
mov
push
data16 lahf 
loop
lahf   
jo
cmc    
mov
xchg
mov
jnp
sti    
nop
out
mov
push
push
(bad)
mov
dec
lret
push
das    
imul
mov
cmp
push
idivb
clc    
and
test
mov
sbb
sahf   
(bad)  
push
dec
mov
roll
jl
test
daa    
cmpsb
and
inc
xchg
push
movsb
loop
loopne
aad
fwait
out
(bad)  
mov
sub
or
ljmp
mov
fstps
repnz clc 
and
leave  
dec
push
lahf   
je
arpl
scas
pop
aaa    
les
mov
push
mov
into   
das    
sub
xchg
aas    
cmp
(bad)  
std    
addr16 xor
jmp
out
push
loopne
jge
fwait
jo
fmull
pusha  
xor
pop
loopne
std    
std    
jbe
xor
fbld
add
mov
cmpsl
es sub
sbb
stos
dec
cli    
lods
fsubr
lcall
inc
jmp
or
movntq
out
inc
mov
scas
push
jmp
dec
xlat
sbb
andb
cmp
or
js
and
xchg
mov
pcmpeqb
sub
add
sahf   
arpl
ja
mov
xor
movsl
gs jmp
lds
sbb
pop
mov
mov
decl
xor
mov
mov
jne
xchg
inc
xchg
lds
mov
pop
(bad)  
sub
in
sbb
pop
popa   
nop
mov
xchg
lret
sbb
cmp
sbb
pop
insl
sbb
test
mov
jp
rorb
dec
data16 rorb
loope
ds in
adc
insl
enter
fbld
push
(bad)  
or
jno
pop
cmpsb
cmp
sbbl
xchg
mov
or
mov
mov
cltd   
arpl
out
imul
xchg
pop
leave  
or
jno
rolb
xor
andl
cmpsl
aas    
mov
je
aam
fwait
adc
xchg
jb
pop
fmull
insl
add
push
pop
push
shll
and
cld    
dec
insl
pop
shl
dec
outsl
lds
cwtl   
outsb
test
add
mov
dec
(bad)  
out
mov
mov
lret
pop
lahf   
lret
pop
pop
dec
sbb
enter
adc
mov
gs pop
(bad)  
fcomi
or
lret   
inc
shr
mov
mov
push
(bad)  
xchg
test
dec
mov
arpl
pushf  
hlt    
jle
cmp
dec
inc
mov
mov
dec
into   
and
sar
cmpsl
push
xlat
push
nop
out
fwait
sbb
lock shll
cmpsl
imul
popf   
jno
xchg
aaa    
lcall
mov
loope
push
aad
add
sub
andb
add
lcall
movsl
ds lock pusha 
(bad)  
push
outsl
push
lret   
les
(bad)  
and
outsb
ret    
inc
cmp
mov
aam
hlt    
scas
sbb
and
mov
and
out
push
mov
pop
ret    
pop
sbb
mov
add
lea
std    
fwait
mov
movsb
mov
test
pop
sub
out
bound
inc
loop
cltd   
pop
mov
xor
ret    
add
mull
inc
add
mov
pop
mov
jg
rcrl
clc    
cltd   
and
pop
divl
nop
std    
xor
cmc    
lcall
loop
cmpsb
out
add
shlb
cmp
leave  
cmp
shlb
pop
sbb
movsb
(bad)  
pextrw
inc
lds
movsl
test
inc
mov
add
lret   
xchg
loopne
adc
cmp
stos
adc
sub
xchg
(bad)  
notb
lea
sub
add
sahf   
out
sbb
pop
xor
out
xor
inc
ja
fldl
ret    
je
repnz idivb
pop
add
inc
jnp
inc
fs
lock push
mov
xchg
fnstsw
stos
rclb
jg
add
(bad)  
jae
cwtl   
outsb
xchg
jo
iret   
ss and
mov
push
pusha  
xchg
lret   
inc
loop
rcrb
push
sbb
test
int3   
loopne
push
cmpsl
sarl
pop
adc
jge
into   
popa   
pop
(bad)  
in
jle
xchg
mov
mov
jl
sbb
imul
ret
mov
shrl
aas    
adc
cmc    
push
pushf  
fiaddl
rcr
add
dec
sbb
fnstcw
xchg
mov
inc
cmc    
(bad)  
xor
push
mov
fcomps
addr16 cs inc
cs xor
xlat
mov
ljmp
jae
sub
dec
stos
cwtl   
push
push
(bad)  
out
pop
rorl
(bad)  
mov
movsl
inc
jno
pop
and
pop
std    
lret   
test
sub
sub
cmc    
cmpsb
push
cmp
outsb
jne
out
jnp
mov
insl
out
mov
ret    
xchg
mov
mov
push
out
es jmp
dec
sub
out
mov
xor
pop
or
add
mov
dec
mov
sti    
movsl
es dec
nop
sti    
icebp  
or
into   
repz cmp
push
test
in
pop
add
imul
xchg
sarl
vhaddps
out
mov
xchg
or
add
ret    
adc
enter
sbb
xor
enter
dec
fdivrs
sub
mov
leave  
into   
(bad)  
and
repz dec
mov
subl
enter
call
test
insl
jge
lods
mov
jle
or
lock hlt 
and
lret
inc
les
mov
fs push
rorb
mov
mov
pop
lods
adc
je
ficomp
jo
pop
loop
rolb
(bad)  
jbe
adcl
int
jae
add
pop
enter
insl
daa    
loope
in
xchg
cmp
repnz dec
jb
dec
loope
push
mov
push
push
fcompp 
rcrb
cmp
ja
mov
adc
fs hlt 
cmc    
pop
cmp
cmp
xchg
addr16 mov
movsl
and
fimul
and
inc
push
fstl
sbb
out
push
add
sbb
das    
fwait
sub
stos
ss cmp
xchg
jnp
push
cmp
mov
jl
dec
es stos
sbb
insl
jbe
mov
and
pop
or
mov
in
and
mov
dec
xchg
test
jne
jmp
pop
jbe
clc    
out
pop
loopne
leave  
sahf   
and
inc
repz or
cmp
mov
pop
jbe
ficompl
push
pop
push
jno
es push
jno
sbb
clc    
mov
out
subb
xchg
bound
xchg
push
jbe
and
push
sub
and
enter
cmp
inc
xchg
mov
or
(bad)  
push
sub
(bad)  
es jnp
mov
mov
sbb
fcoml
push
scas
mov
and
lret   
jae
dec
dec
rclb
mov
xor
ret
xchg
pop
or
pop
cmp
lahf   
loopne
(bad)  
repnz
pusha  
rcll
pop
cmovae
mov
bound
in
or
add
push
mov
mov
mov
hlt    
lds
push
stc    
cmp
inc
enter
jmp
mov
int
mov
jae
sub
in
xchg
mov
daa    
aaa    
push
push
adc
rorb
xor
insl
scas
xchg
add
imul
out
jmp
push
add
test
lcall
insb
sub
pop
pop
adc
cli    
aad
je
push
xor
push
movsb
mov
push
dec
add
xor
pop
mov
fsubl
in
ljmp
and
dec
out
push
and
push
call
or
pop
lret
lds
nop
push
pop
sbb
push
pusha  
xchg
mov
mov
xchg
and
mov
sub
jg
je
xor
or
fbstp
das    
dec
(bad)  
cmc    
(bad)  
fisubr
pop
jnp
rol
jae
adc
notb
sub
pop
mov
fstl
in
and
jno
ljmp
fs je
(bad)
sbb
mov
test
loope
mov
dec
(bad)  
rolb
std    
repz test
pop
sbb
add
(bad)  
pop
in
xor
jae
(bad)  
lahf   
negl
pop
xchg
sub
ror
sub
cwtl   
ret    
dec
hlt    
int3   
or
and
mov
fwait
push
in
mov
fs test
xor
jne
hlt    
addr16 mov
sub
or
adc
in
leave  
push
or
test
iret   
jns
jg
dec
rcll
data16 arpl
xchg
and
mov
jge
push
in
(bad)  
mov
sub
mov
loopne
adc
fdivrs
inc
mov
xchg
dec
dec
sub
pop
rcr
pushf  
xchg
pop
rep outsb
cmp
jmp
into   
int3   
pop
xchg
data16 mov
lea
cmc    
jno
cmp
out
push
pushf  
push
arpl
cmp
roll
rcll
cmp
xchg
test
in
pop
add
push
movsb
outsb
in
pop
lds
mov
adc
or
sub
sbb
cmp
popa   
cwtl   
(bad)  
das    
jecxz
push
add
jmp
mov
popf   
jecxz
in
clc    
stc    
(bad)
mov
mov
cld    
mov
jae
mov
clc    
mov
and
lcall
sub
mov
or
adc
mov
xchg
out
call
cwtl   
cmp
repnz add
loopne
popa   
(bad)  
mov
repz and
inc
insb
pop
fidivr
cmp
xchg
scas
je
mov
in
push
push
out
xor
push
mov
out
or
nop
js
mov
cltd   
rcll
ds
jnp
inc
pop
fisubl
xchg
inc
adc
lock adc
and
cmpsl
int
pop
insl
pop
push
mov
dec
into   
std    
mov
xchg
(bad)  
fildl
arpl
mov
inc
xor
hlt    
mov
jo
stos
jne
cmpl
ljmp
in
fadds
add
add
stos
and
xor
mov
in
nop
mov
push
mov
mov
outsb
pop
in
mov
mov
and
int
in
adc
jecxz
xor
scas
jne
pop
push
jecxz
fdivl
(bad)  
lret   
es jne
cmpsl
insl
mov
cmp
sahf   
sub
nop
out
ljmp
outsb
adc
call
dec
cmp
aaa    
jbe
sbb
mov
add
cmp
push
loop
dec
sbb
imul
and
mov
xchg
jae
(bad)  
lret   
adc
pop
push
jne
adc
lods
adc
dec
lds
rolb
in
jecxz
pusha  
out
xor
inc
pop
in
dec
andl
(bad)  
scas
rcrb
mov
js
mov
sub
cs icebp 
cmp
data16
loopne
pop
ljmp
and
ss cmp
jg
mov
mov
xchg
cltd   
nop
stc    
adc
lret
test
div
iret   
add
and
sbb
xchg
pusha  
sub
sahf   
cmpsl
pop
ret    
sbb
fs sahf 
pop
or
sub
cmp
push
je
jge
fcmove
jle
xor
push
aaa    
and
in
push
fistpl
push
subb
jnp
pop
pop
aaa    
push
add
inc
jl
inc
add
aad
adc
test
icebp  
sarl
and
push
sbb
sbb
xchg
rorb
sub
add
aad
pop
gs repnz cltd 
std    
fistpl
cli    
std    
ss
loopne
insl
icebp  
loopne
(bad)
inc
adc
int3   
add
leave  
mov
aam
cwtl   
inc
dec
js
add
scas
dec
mov
sub
data16 in
push
cmp
jno
adc
rclb
xlat
jp
adc
xlat
mov
fisub
mull
sbb
jecxz
cmp
inc
cmovl
(bad)  
insl
sbb
(bad)  
stos
popa   
mov
ds je,pt
xchg
jmp
dec
aaa    
sub
add
(bad)  
aam
jb
ja
push
jnp
mov
push
ss cld 
mov
in
loopne
orb
out
mov
add
les
ja
rolb
outsl
jecxz
in
mov
mov
inc
jno
inc
jns
lds
pop
mov
call
outsl
add
sub
test
cmp
in
or
mov
mov
and
mov
psubd
pop
and
cmp
dec
das    
lea
inc
push
mov
lods
inc
xchg
push
rorb
lret   
ja
lds
sbb
int
bound
and
xor
lds
loopne
cwtl   
insl
pop
sbb
xchg
sub
imull
mov
sbb
or
loopne
pusha  
xchg
ds aad
mov
sub
in
xchg
in
popa   
mov
insl
bound
mov
sub
negb
mov
scas
mov
sub
daa    
push
je
cmp
pop
aam
pop
hlt    
and
mov
sub
mov
add
(bad)  
(bad)  
hlt    
repnz scas
daa    
pop
push
faddl
call
imul
aam
aaa    
adc
je
in
sub
sub
imul
into   
mov
jecxz
sti    
and
push
add
fstl
mov
push
lods
pop
add
movsl
push
jb
pop
push
dec
js
xlat
data16 into 
sti    
mov
dec
xchg
mov
out
mov
cmp
push
imul
or
popf   
test
movsb
in
call
pop
or
shl
pusha  
push
mov
push
or
push
push
adc
or
(bad)  
out
xor
mov
xchg
out
mov
xchg
jne
adc
out
mov
pop
lea
iret   
jno
and
enter
repz icebp 
loope
jmp
stos
jb
xchg
pop
mov
cmp
pushf  
daa    
push
je
imul
jmp
or
test
mov
fst
xchg
outsb
leave  
ja
sti    
out
add
mov
icebp  
xchg
xchg
iret   
imul
sbb
jno
add
cmpsl
(bad)  
(bad)
ds cs
xor
xor
dec
push
xchg
repnz fs es sbb
mov
roll
rcrb
aaa    
hlt    
cmp
adc
call
out
and
sub
paddsb
cld    
xor
lcall
cvtps2pi
sub
insb
subb
fmull
(bad)  
(bad)  
jb
or
sbb
bound
(bad)  
daa    
ds std 
dec
loop
arpl
xor
leave  
mov
(bad)  
aad
add
cmpsb
mov
movsb
scas
mov
ss pop
xchg
lea
into   
xchg
das    
out
sbb
or
mov
adc
mov
adc
out
sub
jb
outsl
call
add
mov
push
or
sbb
fiadd
sahf   
repnz adc
inc
lods
dec
fstp
xchg
mov
(bad)  
cmp
xor
jle
push
cmp
pop
sub
fadds
jecxz
mov
sbb
mov
test
jmp
dec
scas
inc
popa   
imul
test
and
mov
and
inc
sub
push
cld    
jb
sub
repnz push
stos
add
xlat
lldt
jne
fstps
inc
mov
cmp
movsl
jle
aas    
pusha  
cmp
or
or
or
mov
pop
xchg
repnz sbb
sahf   
pushf  
shr
imul
popa   
pop
add
push
lea
jb
pop
das    
mov
fisttpl
xchg
popa   
lcall
nop
pop
push
dec
imul
or
lahf   
pop
int
sub
adc
push
iret   
stos
ret
pushf  
clc    
mov
lock mov
jmp
stc    
icebp  
mov
sub
push
add
fnsave
add
sbb
push
sub
lahf   
test
out
popa   
imul
insb
mov
aam
and
aas    
cld    
pop
mov
push
xor
push
xchg
repz loope
cmp
aas    
daa    
fild
and
aam
pop
sbb
mov
in
enter
push
sbb
cmp
lahf   
popa   
mov
ret    
jno
cmpl
aad
push
out
lods
xor
decl
orl
mov
jo
daa    
xchg
ret
jnp
dec
dec
jbe
(bad)  
mov
fxtract 
clc    
lock insb
add
mov
loop
jg
fs jge
pop
lods
js
(bad)  
push
pop
iret   
call
divl
das    
shlb
clc    
mov
lds
in
mov
cld    
outsb
jl
clc    
adc
pushf  
jmp
jp
pop
pop
fldt
cli    
(bad)  
jno
xlat
test
int
xchg
jecxz
jp
sahf   
packssdw
lcall
mov
fbld
or
xchg
(bad)  
cmp
in
cli    
imul
(bad)  
stc    
enter
sbb
inc
fmuls
sbb
stos
jbe
and
ret
mov
les
je
mov
push
jle
(bad)  
or
push
cmp
xchg
xor
fisttpll
push
lock cld 
add
mov
sbb
add
sbbl
jle
xchg
rsqrtps
sub
loope
jo
aaa    
test
test
clc    
inc
test
sub
cmpsb
cmp
hlt    
inc
sbbl
sub
in
dec
sub
mov
fisttpll
sub
push
xor
mov
or
push
dec
adc
add
scas
sarb
cmpsl
pop
jne
push
pop
xor
fnsave
xor
adc
add
pop
(bad)  
pop
inc
jo
mov
das    
dec
out
mov
mov
and
imul
leave  
pop
dec
je
js
mov
aam
fidivl
dec
mov
pop
pop
mov
les
cmp
(bad)  
aas    
pop
jl
movsb
daa    
sub
xchg
fadds
outsb
xor
insb
test
cmp
aaa    
shrl
jne
pop
ret    
(bad)
imul
fldl
or
pop
fistl
mov
je
xor
ret    
stos
mov
out
int3   
pop
dec
bound
pop
jne
(bad)  
in
xorl
mov
inc
ds cmp
mov
and
inc
dec
and
imul
lods
aad
jl
imul
shlb
icebp  
sbb
in
(bad)  
dec
adc
(bad)  
lahf   
lret   
xor
push
lock xchg
mov
sub
sbb
subl
ds ds mov
jecxz
xchg
mov
cwtl   
jo
fwait
pop
mov
test
lock fnstsw
fs lret 
sbb
xchg
out
add
stos
insb
push
outsl
lods
lock ss xchg
repz add
ret    
fmull
cmpsb
adc
mov
loop
mov
stc    
(bad)  
add
in
daa    
xchg
pop
mov
mov
out
stos
bound
mov
repz inc
in
mov
imul
sub
in
pop
inc
mov
das    
data16 add
iret   
in
jns
std    
lahf   
ret
test
(bad)  
pop
cwtl   
cmp
scas
inc
scas
dec
adc
push
lcall
push
mov
std    
lahf   
repz js
push
or
xchg
daa    
adc
mov
cmp
fstpt
dec
cmc    
mov
fist
movb
loope
dec
in
loopne
mov
gs sbb
inc
push
(bad)  
es loop
jp
sarl
pop
xchg
jmp
sub
mov
testl
add
jns
rclb
cmp
jbe
fdivrl
or
loop
ja
mov
inc
std    
scas
push
in
push
jbe
xor
and
test
jg
fstpt
leave  
stos
jg
push
std    
rol
sahf   
aaa    
sub
pop
mov
mov
and
push
or
sub
mov
out
inc
push
(bad)  
or
(bad)  
jnp
or
add
xchg
mov
data16 sbb
sub
sub
lds
or
call
or
(bad)  
dec
xor
(bad)  
xor
jg
inc
pop
into   
je
sbb
pop
in
sar
out
dec
push
mov
loopne
jp
or
xor
jg
seto
jecxz
mov
pop
cmp
jmp
sar
push
inc
loopne
gs add
jb
mov
fdivl
mov
fsts
mov
imul
mov
daa    
mov
lods
imul
stc    
dec
(bad)  
push
jmp
mov
outsl
aad
adc
inc
cmpsl
in
pushf  
jmp
xor
mov
mov
call
xor
(bad)  
xchg
mov
inc
mov
leave  
push
out
std    
dec
arpl
mov
(bad)  
sbb
stos
hlt    
sbb
rol
lahf   
mov
mov
mov
(bad)  
adc
dec
adc
or
inc
aas    
jmp
mov
mov
cwtl   
pop
movsb
push
mov
pop
xchg
xchg
jle
enter
cli    
(bad)  
gs loopne
loope
fmull
imull
xor
cmp
push
sub
dec
divl
mov
shlb
mov
fdivl
jb
adc
(bad)  
cli    
push
lcall
and
adc
and
or
pop
sub
mov
push
cmp
sbb
mov
pop
fsubrl
jge
imul
loope
mov
xor
lahf   
cwtl   
cs scas
cmp
daa    
jne
les
inc
pop
mov
sub
add
dec
(bad)  
popf   
pop
mov
xor
cld    
sahf   
cmp
rol
(bad)  
aam
xchg
mov
dec
push
fcomps
cwtl   
in
decb
outsb
push
scas
les
adc
rorl
mov
ds sub
xchg
push
cs mov
loope
sub
or
nop
cmp
cwtl   
ds iret 
mov
jmp
(bad)  
and
sbb
roll
sub
xchg
xor
(bad)  
mov
lods
ret
ret    
pushf  
adc
cmp
bound
leave  
(bad)  
pop
lods
pop
mov
aam
in
jno
jb
mov
sbb
cmp
nop
and
cld    
mov
orb
scas
pusha  
stc    
in
ja
out
outsb
cmp
pop
mov
outsl
jle
dec
jno
push
sub
adc
aas    
jbe
fnsave
mov
lds
pop
(bad)  
fcoml
and
sub
inc
xor
dec
loope
pop
(bad)  
mov
or
addr16 dec
aam
aaa    
mov
sahf   
add
mov
add
rcrl
sbb
mov
mov
enter
xorl
pop
mov
adc
xor
dec
jns
dec
jns
push
mov
pop
dec
stos
sahf   
push
dec
gs aad
movsl
mov
push
imul
int
pop
xor
dec
jne
adc
repz inc
aaa    
add
in
jnp
sub
pushf  
loope
imul
int3   
out
and
shr
sub
aas    
cmpl
out
cltd   
cmc    
jge
push
rcl
ret    
mov
std    
jle
lahf   
pop
es jnp
scas
icebp  
ss ljmp
dec
pop
aam
xchg
inc
sub
scas
aam
push
rcrl
or
sbb
and
mov
in
and
adc
cmpsl
rclb
out
lcall
fimul
ret
push
jne
repnz ss insl
test
push
mov
lods
sarl
out
jmp
dec
fwait
mov
mov
and
cld    
cmp
sub
aam
mov
test
mov
push
push
aam
pop
mov
xlat
cltd   
roll
xchg
pop
fnstcw
and
lret   
cwtl   
pop
pop
and
imul
pop
xchg
sbb
loopne
addr16 aad
int3   
push
or
xchg
and
inc
add
insb
adc
jg
lret   
sbb
cld    
mov
xchg
or
fstl
sbbl
xor
push
add
xor
xchg
and
jbe
push
cwtl   
test
scas
mov
sti    
int
or
add
and
pop
push
inc
rorb
out
jg
lock sbb
ja
stos
sbb
xchg
push
push
adc
es push
pushf  
pop
outsl
pop
sub
xor
movsb
cltd   
cmp
cmpsl
mov
out
mov
sub
lea
arpl
xor
inc
xchg
jbe
decl
popa   
(bad)  
adc
repz inc
sbb
shl
xor
stos
xchg
xor
out
sub
or
notb
fldenv
movsl
xchg
mov
cltd   
out
lock jge
addr16 lret
xor
rorb
mov
sbb
dec
std    
xor
adc
jns
mov
push
add
imul
xchg
pop
sub
inc
push
xchg
mov
pop
aad
repnz sub
les
adc
adc
dec
adc
mov
lahf   
cld    
out
aas    
jecxz
sarl
adc
aam
aad
sbb
mull
sub
adc
cmp
jle
xchg
jecxz
mov
add
lods
hlt    
aaa    
or
inc
adc
and
jle
pushf  
jno
popa   
imul
or
sti    
outsl
int
add
cmpsl
sbb
pop
das    
lret
push
push
jne
fdivl
lods
test
addl
fs xchg
int
inc
loop
dec
and
push
push
dec
mov
call
je
insl
push
or
das    
(bad)  
decl
sub
mov
xor
subb
sub
fnstcw
mul
dec
mov
rcr
pop
jb
or
test
mov
mov
mov
add
adc
in
sub
and
sub
ficom
mov
mov
add
in
inc
mov
icebp  
loop
xor
clc    
addr16 sahf 
imul
mov
in
pop
push
shl
imull
imulb
rcrb
int
sbb
mov
xchg
ljmp
mov
movsb
dec
push
pop
in
setle
lock and
cmc    
push
aaa    
std    
cmp
or
mov
xchg
dec
pop
cmpb
movsl
xor
in
push
pop
xchg
jno
jle
inc
lret   
iret   
pushf  
add
and
mov
xchg
out
(bad)  
mov
rcrb
outsl
dec
out
mov
pop
test
int3   
addb
pop
in
repnz push
test
or
lret   
jae
call
push
push
ret
cmc    
add
test
mov
xchg
insb
and
push
or
mov
out
push
(bad)  
mov
stc    
loopne
scas
dec
fwait
push
fnsave
xor
insl
push
xchg
aam
lret   
frstor
mov
sbb
sub
jno
push
aas    
sbb
cli    
test
mov
les
jne
sbb
push
test
mov
sub
and
xchg
adc
or
enter
sbb
adc
sahf   
setns
scas
ss mov
lcall
sbb
push
aas    
push
jbe
mov
jnp
sub
mul
sbb
movsl
jns
lret   
jbe
push
aad
in
lock cmpsb
(bad)  
out
(bad)  
cmc    
dec
adc
cmp
cltd   
mov
adc
or
gs into 
jo
das    
xchg
mov
push
loopne
mov
jbe
cld    
sub
mov
nop
push
xchg
nop
sub
fist
jo
fiadd
outsb
pusha  
xchg
(bad)  
dec
decl
pusha  
ret    
pushf  
or
sub
mov
(bad)  
and
movsl
subl
lahf   
insl
pop
inc
out
je
inc
mov
push
out
mov
and
fstpt
arpl
cmp
xor
xchg
cmc    
jecxz
lds
mov
dec
pcmpeqb
or
out
and
sahf   
movsb
sub
das    
lahf   
xchg
mov
rcll
or
sub
(bad)  
push
and
cmp
insb
sub
aaa    
push
loop
or
jg
pop
jnp
lods
add
movsb
out
sub
enterw
add
in
xor
(bad)  
cmp
mov
jns
cmp
sub
out
enter
and
sbb
inc
jl
loop
out
(bad)  
out
dec
cli    
aas    
lods
fisub
add
mov
stos
dec
mov
push
jecxz
imul
xor
leave  
sbb
xlat
ljmp
ss push
jp
add
xchg
dec
bound
fs fwait
jae
mov
lock test
and
punpckhbw
inc
in
mov
in
add
push
mov
(bad)  
cmpsb
addl
jp
add
fwait
mov
(bad)  
lods
test
stos
lock pop
sbb
mov
pop
add
les
lock dec
and
ss data16 stc 
daa    
jo
cld    
test
or
lret   
fwait
inc
mov
(bad)  
jle
push
mov
fldt
jbe
mov
inc
pop
mov
inc
ret    
andb
arpl
repz les
dec
nop
inc
test
sub
pop
mov
inc
(bad)  
mov
inc
pusha  
pop
(bad)  
mov
xchg
sub
adc
mov
pop
clc    
xlat
and
and
fdivp
xchg
loopne
push
jecxz
jge
push
or
dec
hlt    
sbb
xor
lahf   
mov
xor
inc
fist
movsb
dec
sbb
xchg
push
xchg
in
ja
mov
fbld
mov
fucom
pop
mov
cmpsb
push
sbb
fdivl
call
cli    
scas
adc
pop
test
sbb
sub
clts   
sub
in
dec
mov
mov
das    
add
out
pop
pushf  
call
inc
jg
lock gs lret
icebp  
mov
xor
loope
add
pop
push
push
fisub
in
mov
xchg
sti    
aam
jg
loop
lret
adcl
dec
(bad)
nop
xchg
imul
rcr
push
lods
xchg
mov
or
dec
sub
pop
aam
daa    
repz and
loop
mov
fs xchg
sub
pop
sbbb
mov
mov
test
xchg
pop
or
loope
dec
sub
dec
imul
lods
test
jg
fisttpll
insl
loope
mov
push
nop
cmp
je
mov
mov
or
xor
cmp
jp
in
mov
mov
in
sbb
push
test
les
jp
jne
mov
dec
push
mul
out
ja
ss int
add
pop
xchg
cli    
mov
sub
mov
enter
dec
pop
and
xchg
int
mov
mov
dec
daa    
mov
pop
add
loope
jle
sub
cwtl   
testb
xor
adc
cs data16 adc
loopne
iret   
(bad)  
fdivrs
cmpsb
adc
sub
sub
pop
mov
popa   
sar
mov
sub
int
sbb
imul
dec
out
stos
dec
pop
stos
jnp
addr16 and
orl
cltd   
pop
mov
lea
xor
push
stos
adc
shrl
faddl
xchg
xor
pop
into   
in
js
lcall
sahf   
and
add
stos
add
(bad)  
mov
and
sbb
xchg
adc
std    
insl
jmp
mov
cs test
out
hlt    
fbld
movsl
push
inc
add
cmc    
pop
pop
pop
cmp
popa   
(bad)  
sti    
pop
repz divb
fnstenv
mov
mov
xchg
rclb
xchg
xor
(bad)  
dec
imul
add
repnz push
lret   
enter
js
ja
inc
clc    
test
xor
pusha  
xor
pop
fs jp
loope
gs das 
push
sub
mov
fs or
xchg
es in
xor
fsubrs
and
inc
lcall
lret
sub
push
aad
insb
inc
ffreep
mov
lock add
mov
sti    
fwait
rcrb
mov
das    
test
shrb
(bad)  
jmp
mov
ds
xchg
pusha  
and
imul
ret    
add
movsb
sarl
xchg
scas
(bad)  
and
pop
stc    
and
loope
sbb
mov
in
mov
xchg
dec
push
in
xchg
fisubrl
dec
cmp
mov
add
fcoml
xchg
inc
adc
bound
fs push
out
icebp  
cli    
sbb
fwait
push
pusha  
repz test
mov
lds
xor
sbb
or
rclb
mov
pop
pop
mov
cmp
pop
jle
out
xlat
data16 mov
test
push
movsl
adcb
xor
and
jge
scas
cld    
(bad)  
dec
xchg
mov
(bad)  
faddp
push
sub
xchg
lods
fwait
movsb
mov
dec
divl
scas
pop
shll
pop
in
xchg
cwtl   
dec
int3   
lods
jle
dec
inc
js
test
(bad)  
cmc    
sahf   
repnz pop
aam
xlat
shl
and
daa    
pop
(bad)  
mov
mov
mov
cli    
pop
or
jne
push
dec
xchg
inc
xlat
cmp
xor
sub
or
mov
mov
jg
fidivr
aaa    
lods
mov
ret
dec
sbb
sbb
sub
adc
nop
fcmovnu
cmpsl
or
dec
mov
cmpsl
stc    
jns
out
arpl
adc
imul
mov
jp
aas    
cmpsb
mov
inc
test
pop
lret   
(bad)  
mov
sub
aas    
dec
(bad)  
sbb
stos
sahf   
dec
std    
mov
sub
imul
(bad)  
xor
aas    
sub
clc    
pusha  
jle
aas    
(bad)  
aam
fsubl
adc
in
mov
sub
cmpl
imul
data16 mov
adc
iret   
xor
lock xchg
fidiv
xor
out
mov
xchg
jne
stos
test
mov
and
loop
sar
cmp
mov
cmp
jle
pop
cmp
mov
sarl
xlat
add
lock les
xchg
out
addr16 in
adc
add
out
pop
mov
push
fwait
jo
xor
or
push
inc
loopne
jb
cmova
dec
int
aad
ficom
div
xchg
(bad)  
sbb
cmp
movsb
and
int
movsb
ret
cli    
pop
pop
fist
add
rolb
lods
fs test
xchg
cmp
stos
aad
jmp
pop
pop
push
sub
ret    
fisubr
inc
ret    
(bad)  
mov
cmpsl
mov
dec
rcrl
repz mov
fstl
fwait
(bad)  
xor
mov
dec
ja
xor
cltd   
popa   
lods
fdivrs
or
sub
sbb
adc
popw
ret
hlt    
cmpsl
mov
push
jae
push
adc
repz fs dec
shll
push
inc
hlt    
mov
sahf   
lods
ret    
xor
outsl
aaa    
adc
(bad)  
out
divb
sbb
cltd   
push
jb
test
xlat
xchg
push
inc
or
lret
clc    
and
sbb
insb
cmp
out
push
pop
and
lock jge
cmc    
lcall
in
loopne
test
add
jns
and
add
inc
jle
xchg
sbb
sub
cli    
leave  
(bad)  
cmp
or
sbb
dec
das    
xchg
outsl
test
xchg
fildl
and
xchg
iret   
cmc    
frstor
sarb
mov
push
jp
mov
sarb
cmp
push
decl
mov
inc
fs xchg
int
xchg
xchg
shlb
xchg
pushf  
add
jmp
lret
xchg
sub
mov
xchg
cwtl   
dec
inc
mov
mov
(bad)  
negb
repnz pop
cmp
inc
pop
popf   
sbb
repz
jb
dec
pop
mov
loopne
in
add
and
lcall
movsb
mov
test
cmp
leave  
push
fcoms
or
xor
test
popa   
ret
inc
scas
mov
mov
cs cmc 
push
fcmovne
push
scas
xchg
adc
add
add
js
jnp
popf   
mov
mov
push
add
xor
inc
mov
daa    
or
cmp
jbe
loop
mov
jo
dec
mov
jns
dec
sub
and
add
mov
inc
popa   
das    
stos
(bad)  
js
(bad)  
cltd   
hlt    
loope
in
pushf  
push
cmpsl
pop
lret
rcr
xchg
mov
in
pop
sbb
(bad)  {%k3}{z}
add
adc
jp
pop
adc
cmpsb
lds
mov
jns
jmp
shlb
pop
imull
lea
sbb
mov
(bad)  
adc
icebp  
xor
outsb
addr16 jae
sub
adc
jae
(bad)  
xchg
pop
mov
sbb
mov
adc
test
add
cmp
addr16
int3   
mov
cmp
sbb
out
test
cmp
add
inc
jmp
pop
les
adc
pop
jmp
push
dec
inc
sbb
push
in
sbb
jb
add
cmp
sbb
xor
adc
fwait
aaa    
mov
inc
or
cmp
das    
cmpsb
cmp
lahf   
sbb
dec
add
or
decl
dec
inc
xchg
or
rcr
lcall
imul
in
popa   
push
inc
cmp
add
adc
scas
mov
add
lahf   
add
out
mov
sub
(bad)  
pop
fidivrl
mov
pusha  
inc
mov
or
sbb
mov
(bad)  
out
test
xor
nop
adc
imul
dec
add
loopne
xchg
insb
dec
faddl
ret    
aam
xchg
sbb
add
scas
pop
fs
or
stos
subl
lret
xchg
adc
int3   
movsb
lahf   
lahf   
and
sub
shll
add
shr
inc
fsubs
pop
mov
jge
aam
(bad)  
jae
loopne
aad
mov
ja
cld    
aad
out
mov
sub
ret
int3   
or
cmpl
lret   
(bad)
xchg
iret   
das    
xor
fldl
and
xor
mov
xchg
stc    
cmpsl
fisttpll
inc
in
and
ret    
fisttp
enter
enter
int
cwtl   
call
mov
jecxz
mov
out
popl
xchg
in
jg
push
xchg
out
test
outsl
sbb
lods
mov
clc    
cmp
test
out
dec
or
movsb
fwait
cmp
out
icebp  
or
lods
inc
daa    
sub
popf   
loop
or
insb
mov
dec
cli    
sti    
adc
inc
inc
(bad)  
neg
mov
dec
arpl
lcall
pop
je
clc    
mov
jo
in
cmp
jbe
test
pop
add
lret
stos
pusha  
nop
push
add
(bad)  
pop
push
pop
sbb
add
sub
lock fwait
scas
cmp
push
push
adc
pop
sbb
or
sub
pusha  
(bad)  
cltd   
mov
out
xor
insl
js
in
mov
cmovp
gs ljmpw
xchg
ror
sub
mov
pop
mov
aas    
mov
ret    
je
imul
rol
and
pop
dec
fs insl
repz mov
sbb
sbb
mov
out
adc
xchg
lret
and
or
data16 ja
or
int
push
popa   
and
cwtl   
jns,pn
fildll
(bad)  
and
or
cltd   
sarb
stc    
sbb
add
xchg
sbb
adc
xchg
fnstenv
loop
add
lods
test
xor
fistpl
js
xor
mov
or
bound
fistl
xchg
rcrl
cmp
mov
lods
sbb
inc
repz cwtl 
cmp
cmp
xchg
je
inc
call
imul
ljmp
inc
xchg
jp
dec
in
(bad)  
insl
inc
inc
data16 mov
cwtl   
mov
inc
gs inc
fild
push
in
adc
inc
inc
pop
push
pushf  
out
mov
dec
dec
lret   
cs pop
sahf   
pop
jne
hlt    
repz mov
jae
mov
(bad)  
jae
xchg
(bad)  
daa    
mov
jle
adc
stos
cltd   
movsl
push
sbb
push
cmpl
mov
(bad)  
incb
push
out
mov
loope
push
mov
fsubrs
mov
pop
imul
mov
pop
int
mov
arpl
incb
loope
mov
push
movsb
stc    
mov
ljmp
(bad)  
ja
mov
mov
(bad)  
popa   
pop
dec
pop
mov
push
fadds
gs or
insw
adc
hlt    
imul
aaa    
leave  
sub
or
ja
pop
push
imul
jno
or
ds pop
sub
insl
pop
jae
ret    
(bad)  
sbb
sbb
mov
(bad)  
decl
in
int
mov
fs
(bad)  
push
into   
test
je
out
in
jmp
mov
cmp
ret    
mov
and
cwtl   
in
into   
and
movsb
and
and
movsb
ror
mov
es pop
stc    
sarb
rclb
ljmp
adc
aam
pop
test
andb
adc
mov
mov
lahf   
xor
xchg
cmp
sub
jp
daa    
and
mov
addr16 jne
sub
jne
push
cmp
loope
xorl
lea
adc
adc
cmp
lahf   
js
sbb
xor
cmp
je
xchg
add
adc
add
xchg
ds and
(bad)  
xchg
jmp
(bad)  
push
inc
lds
out
out
test
or
jge
dec
push
les
lahf   
add
ja
add
cmp
cltd   
jg
sbb
sub
dec
push
outsb
xor
paddb
push
xor
test
das    
rorl
test
repnz movsb
mov
stos
loope
test
popa   
js
push
leave  
mov
out
out
dec
mov
inc
xchg
in
out
test
pop
push
adc
pmuludq
pop
xor
sbbl
(bad)  {%k3}{z}
fmull
inc
mov
int
popa   
fs inc
loop
mov
outsl
cmp
repnz mov
mov
cli    
inc
js
pop
mov
cli    
iret   
popa   
adc
push
es push
pop
rcrb
push
cmc    
jmp
push
ret
pusha  
sbb
sub
add
pop
dec
xor
jo
fcoms
pop
pop
sbb
dec
jb
lods
dec
enter
push
xor
inc
je
(bad)  
dec
lret
inc
and
sysenter 
jbe
push
popa   
int3   
rcrb
enter
push
mov
jp
std    
push
sarl
mov
aam
sbb
sub
cmpsb
push
fdivs
xor
test
ret
cwtl   
or
xchg
xchg
daa    
xor
and
je
jg
cmp
cmp
aaa    
xchg
or
cmp
cmp
pop
xor
in
ljmp
sbb
jne
out
dec
cmp
adc
and
jg
push
and
jmp
push
cmp
(bad)  
cmp
inc
push
adcl
push
xchg
xor
pusha  
adc
jo
push
cltd   
mov
es push
das    
in
fidivr
ret    
xchg
mov
dec
pop
sub
mov
mov
sti    
jle
scas
push
fdivrl
rclb
xchg
xor
cltd   
pusha  
jbe
add
mov
mov
mov
sbb
jnp
mov
test
mov
mov
mov
push
push
lods
inc
sub
xor
push
idivl
test
scas
stos
push
pop
ror
cmp
in
lret
or
xchg
rclb
(bad)  
push
jb
(bad)  
jae
jns
mov
mov
les
negl
jb
mov
scas
cmp
sub
adc
mov
jge
or
mov
(bad)  
fmuls
add
fidivr
fs aas 
fldt
xchg
(bad)  
enter
ljmp
movsl
sub
fdivrp
dec
pop
jnp
outsl
mov
outsl
nop
idivb
mov
sbb
(bad)  
mov
cmp
adc
lds
rclb
in
jns
jnp
lcall
into   
fldl
mov
inc
jbe
adc
xchg
inc
test
mov
(bad)  
scas
icebp  
sub
adc
push
or
xchg
sub
add
dec
daa    
loopne
insl
lea
popf   
scas
dec
sub
rcrl
mov
in
(bad)  
sub
ja
mov
and
adc
int
lods
sub
cmp
imul
movsl
ret
int
loope
push
add
sahf   
adc
inc
in
or
sbbb
jno
stos
(bad)  
jmp
pmaxsw
pop
ud1    
je
xor
out
push
jne
or
lret   
adcb
jne
mov
in
(bad)  
in
cltd   
or
sbb
loop
pop
lcallw
pop
sahf   
add
mov
sahf   
cltd   
or
cmc    
sbbl
xchg
adc
xlat
adc
sub
insl
add
jmp
sti    
ret    
or
cltd   
and
or
dec
push
bound
jno
clc    
(bad)  
xchg
push
cwtl   
sub
mov
jmp
push
push
mov
cmp
adc
jnp
sbb
mov
dec
add
(bad)  
mov
inc
and
loope
inc
outsb
push
sbb
and
leave  
out
shr
cmp
adc
addl
sub
loope
dec
pop
insb
lret   
outsb
jne
sbb
adc
loope
push
pop
or
lods
xor
adc
mov
push
shrb
jns
or
mov
mov
fisttpll
or
sahf   
pop
pop
pop
in
(bad)  
aas    
cmp
and
insb
inc
adc
sbb
les
sbb
or
xor
sub
or
rcrl
pop
rorl
and
and
mov
adc
aaa    
sbb
inc
and
jne
pop
inc
xchg
cmp
mov
adc
xlat
aad
sbb
sbb
sbb
fistpll
mov
cltd   
mov
mov
xor
jle
xchg
shlb
test
mov
stos
fwait
je
int3   
loope
test
aaa    
mov
push
xor
arpl
sbb
mov
xchg
mov
adc
(bad)  
jb
mov
sbb
mov
test
pop
jmp
lds
mov
pop
mov
inc
rolb
lcall
inc
aaa    
adc
gs jge
inc
xchg
stc    
movsb
cmpsl
sbb
(bad)  
outsb
sub
jmp
sub
fildll
xchg
dec
inc
dec
out
movsl
outsb
dec
or
(bad)  
mov
dec
push
rcrb
xchg
rep movsl
jb
adc
call
dec
push
cwtl   
int
js
jno
cltd   
xor
adc
ror
pushf  
std    
push
jb
push
insl
call
jae
sub
mov
(bad)  
or
mov
dec
and
mulb
clc    
xor
pop
cwtl   
jno
movsb
aad
jnp
stos
xlat
pushf  
inc
jecxz
scas
xchg
cmpl
xor
inc
push
iret   
andb
mov
js
inc
mov
stc    
lods
hlt    
loop
add
aas    
sub
rclb
mov
ljmp
stos
dec
ret
lcall
pusha  
xor
sti    
test
inc
push
dec
sahf   
push
in
pop
das    
mov
test
mov
push
dec
test
int3   
cwtl   
in
dec
and
jno
movsl
arpl
and
sub
jp
jp
rclb
pop
xor
cmp
xor
jnp
push
fwait
fwait
dec
das    
enter
xor
or
jb
jb
xchg
and
sbb
inc
cs inc
cmp
test
jne
movsl
inc
or
(bad)  
cmpsb
dec
cmp
cld    
sub
inc
jo
sub
adc
dec
fisttp
outsb
xor
jno
scas
rorl
sbb
pop
dec
xor
aam
pop
xor
sbb
push
nop
js
jbe
sbb
xchg
dec
jne
mov
or
cld    
pop
add
push
movsl
pusha  
jo
cli    
add
adcl
stc    
xchg
js
fldl
iret   
add
sub
cld    
mov
icebp  
adc
mov
push
lods
lods
adc
mov
imul
or
lock adcl
clc    
push
xchg
sbb
xchg
mov
in
sti    
fisttpl
push
mov
lds
pushf  
es jge
call
xchg
mov
mov
add
repz push
and
xchg
xchg
inc
mov
stc    
fild
dec
cmpsl
jnp
fwait
enter
ljmp
push
cs mov
xchg
dec
cli    
xchg
into   
jo
xchg
xchg
xchg
cli    
dec
mov
pusha  
cltd   
aam
xchg
icebp  
imulb
mov
imul
cs popf 
mov
nop
fisub
stc    
add
sub
rorl
gs pop
fs add
cmpsl
stc    
clc    
(bad)  
(bad)  
dec
cwtl   
fsubrp
mov
inc
or
lahf   
sub
jecxz
dec
enter
add
mov
loopne
aam
subb
add
ss inc
shll
pop
lcall
fwait
ss int3 
add
jl
insb
(bad)  
mov
out
outsl
mov
cmpsl
arpl
leave  
add
out
(bad)  
(bad)  
dec
sub
or
shll
(bad)  
or
sbb
mov
(bad)  {%k3}{z}
hlt    
in
mov
data16 aaa 
sar
jb
hlt    
push
adc
xor
aaa    
test
lea
cwtl   
repz dec
repnz mov
scas
mov
xchg
pop
insb
inc
(bad)  
aas    
ret
popa   
sub
xchg
mov
sbb
es out
lret
mov
xchg
sub
sub
dec
push
leave  
sub
cltd   
int
mov
mov
dec
stos
fisubrl
lock adc
dec
adc
fwait
xor
aaa    
add
pusha  
jne
int
xchg
loopne
fnstenv
pushf  
xchg
mov
sbb
shlb
jg,pt
inc
pusha  
aad
movsb
sbbl
mov
xchg
or
fiaddl
daa    
lret
dec
xor
mov
in
fmuls
inc
fwait
mov
in
inc
push
cmovne
jp
fwait
mov
jb
stc    
sbb
jge
test
sbb
push
clc    
outsl
ljmp
sub
jmp
xchg
pop
adc
fstl
dec
in
mov
loope
cs aas 
add
push
(bad)  
cwtl   
popl
js
arpl
mov
mov
sbb
fwait
jo
or
adc
sub
mov
fs jo
jno
xchg
dec
pmaxub
push
push
mov
adc
sub
adcl
adc
arpl
test
or
inc
lcall
xorl
dec
mov
repnz lret 
int3   
in
dec
pop
pop
scas
or
add
sub
mov
push
mov
pop
pop
lods
pop
sarl
lock or
adc
mov
mov
ficoml
js
jne
and
xchg
mov
mov
fsubs
cli    
mov
lret   
in
cmp
xchg
adc
dec
pop
adcb
mov
les
cmp
imul
daa    
(bad)  
mov
dec
pop
insl
dec
push
daa    
nop
mov
loopne
scas
sbb
icebp  
les
test
xor
ss push
enter
pop
cld    
rclb
imul
sub
push
lret
xor
addr16 jno
jbe
mov
xchg
and
fmulp
add
sti    
and
adc
jnp
pop
inc
aad
lahf   
arpl
cmc    
loope
jns
sub
and
loope
or
sub
push
jle
(bad)  
jno
int
xchg
sub
movsl
aad
(bad)  
jmp
sub
xor
xorl
das    
rcrb
push
jl
movsl
dec
popf   
(bad)
mov
ja
pop
add
push
push
and
mov
lock cmpsl
push
xchg
push
cmpsl
lods
hlt    
mov
add
or
aad
dec
pop
stos
fldt
adc
push
mov
mov
rcll
adc
adc
jbe
lds
aas    
es jp
out
dec
pushf  
mov
cld    
fiadd
add
movsb
mov
gs loope
mov
scas
xchg
cmpsb
pop
adc
lahf   
dec
aaa    
call
cmp
pushf  
sub
ds ss insl
cs
jb
xchg
adcb
push
das    
cmp
adc
mov
push
leave  
cmp
pop
fiaddl
mov
sub
push
leave  
mov
sahf   
mov
aas    
hlt    
imul
nop
(bad)  
lods
mov
sub
adc
xchg
pop
js
jmp
mov
inc
imul
fwait
mov
(bad)  
lods
(bad)  
mov
dec
lock arpl
mov
mov
xchg
adc
push
jno
jne
push
mov
mov
orb
mov
cli    
hlt    
inc
sbb
and
pop
pop
or
ret    
mov
ret
dec
jecxz
sub
daa    
sbb
pop
dec
bound
les
fsubs
(bad)  
lods
dec
scas
push
inc
sahf   
iret   
lcall
adc
test
xor
and
dec
rclb
add
adc
(bad)  
lock fwait
sbb
jnp
cmp
sbb
(bad)  
mov
sbb
(bad)  
mov
insb
loop
lock xchg
add
nop
aad
cltd   
pop
ds inc
out
xor
movsb
mov
sub
testl
sbb
xor
mov
jae
dec
in
pushf  
sub
loop
stos
aad
mov
sbb
aad
dec
cmp
enter
test
jl
push
or
jae
mov
leave  
lcall
xchg
push
inc
in
sti    
mov
cltd   
flds
(bad)  
jno
leave  
inc
out
xchg
ljmp
or
jge
mov
mov
nop
sbb
push
rcl
lret
sub
adc
call
mov
add
mov
(bad)  
sahf   
(bad)  
sbb
push
and
gs inc
mov
(bad)  
push
test
dec
movsl
fwait
jecxz
(bad)  
icebp  
addl
or
loopne
dec
dec
sbbb
mov
push
mov
imul
repnz sub
adc
stos
xor
add
push
sbb
pop
ja
outsl
xchg
cwtl   
mov
sarl
push
jmp
(bad)  
sbb
or
mov
push
xor
or
ret    
scas
or
in
jmp
movsl
daa    
roll
dec
daa    
sbb
jge
mov
sbb
jne
mov
mov
cld    
pop
jmp
push
cmp
push
cwtl   
and
out
(bad)  
mov
push
pop
call
fcoms
adc
data16 icebp 
mov
cmp
es inc
pop
mov
stos
sbb
mulb
jnp
jnp
sarl
sbb
lock es pop
sub
pop
jnp
cli    
clc    
mov
push
add
stos
xchg
es or
out
push
xchg
bound
lods
jb
xor
shl
push
imul
out
mov
cmp
loopne
insl
cli    
inc
mov
sbb
mov
mov
jg
jmp
aad
cmp
sbb
rcll
sub
push
mov
je
mov
lcall
mov
std    
inc
mov
stos
xor
(bad)  
clc    
push
inc
scas
and
popf   
addl
xchg
popa   
call
sbb
js
mov
mov
(bad)  
jb
push
enter
cs mov
adc
(bad)  
stos
inc
inc
mov
cmpsw
scas
and
inc
popf   
ljmp
(bad)  
push
push
xor
ficompl
push
aad
inc
jno
rep stos
xchg
jno
clc    
mov
int
aam
mov
mov
leave  
(bad)  
repz ss das 
ret
test
mov
mov
std    
adcl
(bad)  
mov
inc
loopne
or
mov
test
cmpsb
rclb
dec
ljmp
(bad)  
sub
(bad)  
sub
lret
out
pushf  
mov
add
mov
cmc    
(bad)  
hlt    
pop
mov
adc
cld    
scas
push
pop
inc
cli    
lea
lcall
xor
push
fnstsw
(bad)  
(bad)  
rolb
adc
(bad)  {%k3}{z}
loop
subl
fisub
movsl
push
out
in
lea
mov
(bad)  
adc
insb
movsb
repnz lea
inc
ret    
iret   
iret   
cmpsb
mov
push
adc
nop
xor
rol
push
pop
mov
jbe
ljmp
add
(bad)  
fsts
sub
popf   
cmc    
sbbl
loopne
cmp
sbb
jle
xorb
and
in
jno
add
arpl
dec
lret   
(bad)  
outsl
imul
(bad)  
hlt    
stos
frstor
int
jg
out
jns
mov
xor
add
push
pop
pop
jae
incb
mov
repnz xlat
mov
jle
or
stos
sbb
add
(bad)  
jmp
pop
sub
loop
sahf   
jmp
ljmp
fcoml
adc
mov
xchg
out
pop
cli    
or
mov
pop
jmp
jecxz
or
andl
dec
or
(bad)  
xchg
lds
dec
aam
(bad)  
pushf  
cmc    
out
add
test
test
lea
sbb
and
xor
repnz
ficom
jecxz
and
xorl
jmp
fiadd
xchg
jb
or
mov
or
out
xor
and
lea
mov
mov
push
xor
jns
je
mov
mov
xor
mov
je
(bad)  
int
jns
mov
and
outsl
ret
(bad)  
mov
push
inc
xor
gs jmp
orl
push
push
enter
jmp
pushf  
mov
sub
xor
dec
rorl
(bad)  
adc
inc
mov
and
repz push
lret
insl
stos
ja
rcrl
lods
push
sbb
std    
js
cmc    
xor
or
xchg
(bad)
aam
(bad)  
cli    
cmp
push
lcall
mov
in
movsb
push
xorl
adc
pop
cmp
xor
popl
cmpsl
imul
lea
insl
xchg
insl
jo
out
ret    
adc
xor
inc
sub
pop
jns
(bad)  
jg
mov
push
test
je
test
mov
aam
pop
push
lds
lods
fwait
mov
imul
lds
in
sub
addr16 enter
fidivr
and
jp
xchg
shrb
pop
pop
popa   
push
mov
ret
lea
xchg
dec
arpl
or
cmp
or
cwtl   
fwait
sub
sub
pop
test
xor
popf   
push
xchg
mov
in
and
fcoms
test
insb
pop
push
gs add
jbe
movsl
in
and
inc
mov
frstor
sti    
and
sbb
shrb
sbbl
ret    
clc    
cmc    
cmc    
in
sahf   
xor
daa    
or
in
imul
int3   
subl
sub
aas    
mov
mov
fsubr
out
push
and
inc
je
mov
xchg
mov
loope
fcomps
jl
mov
lods
sbb
adc
cmp
repnz pop
pop
mov
xchg
jle
stos
aad
outsl
(bad)  
rol
push
sub
mov
(bad)  
dec
hlt    
and
or
inc
les
rclb
mov
jbe
mov
aad
orl
(bad)  
repz xchg
xchg
fisttpl
ficom
mulb
insb
sahf   
dec
ret    
mov
mov
mov
xchg
movsb
popa   
int
cli    
lock adc
cmpsb
imul
push
sub
and
xlat
jne
jmp
add
stos
imul
push
sub
push
outsl
add
lods
shrl
cmp
pop
in
jg
mov
(bad)  
xor
gs or
ss mov
lcall
lcall
or
jp
push
mov
cmc    
mov
int3   
lret   
lods
add
sbb
daa    
stos
out
enter
loopne
pop
les
mov
in
sbb
xchg
dec
or
sub
or
sub
push
and
out
(bad)  
dec
push
jmp
inc
mov
pop
push
jle
xchg
lret
cld    
fwait
sub
fcompl
or
dec
in
xchg
pop
pusha  
xchg
mov
mov
jl
mov
xchg
call
cmpsl
les
jne
es loopne
and
nop
js
daa    
xor
push
cmc    
in
pop
push
pop
data16
jno
push
popf   
popf   
into   
clc    
outsb
mov
dec
mov
mov
fistl
out
int
rolb
adc
int3   
adc
imul
mov
out
xor
or
mov
js
daa    
mov
dec
mov
scas
scas
pop
and
fmull
in
fnstcw
add
fildll
sbb
push
in
cs es push
popa   
cmp
cmp
out
clc    
pop
incl
ret
nop
sbb
cltd   
xchg
and
test
mov
pop
lods
push
pop
xchg
and
int
jb,pn
xchg
pop
inc
push
mov
addr16 inc
push
inc
jge
nop
loopne
inc
loop
cwtl   
dec
mov
push
xchg
outsb
pop
out
nop
pop
loop
mov
xor
mov
icebp  
cmp
dec
dec
addr16 jge
cltd   
(bad)
cli    
and
inc
(bad)  
out
shr
jbe
fadds
in
addr16 dec
jp
inc
shl
mov
xchg
sub
je
imul
and
add
test
les
shrb
sbb
pop
dec
enter
test
cmp
(bad)  
sbb
lcall
and
and
pop
cmp
repnz icebp 
push
mov
fs arpl
popa   
icebp  
mov
shrb
stc    
add
(bad)  
(bad)  
das    
(bad)  
mov
(bad)  
shrb
dec
cld    
(bad)  
mov
or
es jge
xchg
je
mov
xchg
jl
lods
inc
xor
shlb
xchg
xchg
ss
push
mov
inc
fcomps
cli    
nop
push
aam
mov
mov
pop
out
fcoms
cmp
repnz
or
push
popa   
fs jge
cmp
iret   
adc
test
or
rorb
or
push
push
and
jl
xchg
or
dec
fwait
es jl
xchg
mov
movl
sbb
mov
mov
mov
cltd   
leave  
push
mov
mov
mov
sbb
xchg
pusha  
xchg
sbb
jnp
xchg
(bad)  
or
xor
push
jl
add
fwait
test
pop
inc
ret    
or
and
pop
adc
cmp
lds
mov
push
xchg
jecxz
dec
push
pop
in
adc
or
enter
subl
(bad)  
je
fisubl
fist
inc
call
lret   
lods
pop
in
divl
roll
add
xchg
xor
inc
fsubl
xchg
mov
xlat
mov
(bad)  
xchg
push
push
mov
adc
jb
pop
into   
add
sbb
or
lcall
xor
pop
mov
sbbb
mov
jne
sbb
pop
ds mov
push
pushf  
cmp
dec
es jbe
repz es js
adc
subl
sub
sbb
mov
pop
(bad)  
sahf   
test
and
jae
mov
adc
jnp
subb
inc
jae
mov
ds dec
popa   
pop
ficoml
inc
xchg
popl
pop
sub
mov
sbb
and
cwtl   
call
mov
xchg
and
rcl
push
push
dec
cld    
out
xor
(bad)  
cmp
rcl
pop
jns
dec
(bad)  
ret
xchg
shufps
jl
mov
call
cmpsb
fninit 
fstl
int
je
ret
or
iret   
dec
push
mov
fcoml
mov
daa    
into   
push
jge
mov
shll
ret
sarl
test
aad
lret   
cmpsb
sub
jmp
fstps
xlat
inc
lahf   
mov
cmpl
lods
fsts
jae
das    
fidivr
in
fcmovnb
inc
cmpsb
xor
xchg
sar
(bad)
mov
mov
ret
in
aad
dec
xor
mov
jp
loope
shr
repnz pop
mov
pop
dec
cld    
jecxz
xchg
mov
push
fisttpl
nop
stc    
and
out
scas
aas    
xchg
js
ja
in
cmp
aas    
pop
(bad)  
jo
(bad)  
enter
setle
push
sbb
mov
sub
mov
mov
inc
lods
(bad)  
sub
repz jl
and
shrb
xchg
sbb
or
(bad)
or
(bad)
jno
add
ret    
jne
xor
enter
push
dec
sub
rolb
cli    
fsts
lret
xor
mov
lods
loopne
mov
or
inc
xchg
and
sub
push
in
addr16 push
cmp
cmc    
pop
out
cmp
cmp
fs leave 
jbe
ret    
cmovl
jle
insl
xchg
fsubrs
dec
outsb
dec
imul
loopne
and
inc
jo
fsubl
mov
scas
popa   
or
cmp
mov
andl
mov
adc
xchg
pop
cmp
lahf   
mov
out
mov
mov
(bad)  
mov
pushf  
adc
nop
addr16 mov
sbbl
push
gs cmp
jnp
mov
(bad)  
repnz push
insl
bound
test
int3   
jg
sbb
xchg
or
(bad)  
js
stc    
sbb
cltd   
lods
jb
loopne
enter
push
imul
lret
int3   
and
inc
(bad)  
jbe
xchg
int3   
ret    
int
and
std    
js
pop
mov
and
call
push
mov
imul
(bad)  
repnz pop
cmp
mov
pop
pop
pop
imull
imul
xchg
or
add
adcl
insb
rclb
loopne
xor
jle
and
add
jmp
cli    
mov
adc
lcall
cmp
sbb
jmp
mov
aaa    
(bad)  
jmp
jle
inc
shlb
lea
cmpsl
aas    
aad
sbb
mov
(bad)  
mov
mov
repnz popf 
or
cmpsb
mov
xlat
mov
jle
pusha  
lods
das    
sahf   
int
push
mov
pop
ljmp
cmp
mov
mov
mov
xor
cmpsl
aas    
and
mov
das    
(bad)  
mov
arpl
jl
test
mov
pushf  
pop
mov
cli    
stc    
and
out
xchg
lahf   
rcr
dec
xchg
int3   
andl
mov
fisubrl
icebp  
mov
dec
sbb
imul
test
adc
sahf   
xor
in
pop
xchg
ret    
test
ret    
inc
push
add
ficom
(bad)  
(bad)  
lret   
and
sbb
imul
add
icebp  
enter
push
mov
xchg
lret
mov
jbe
pop
mov
and
js
cs int3 
into   
jns
in
and
mov
repz ror
dec
mull
mov
in
test
sbb
(bad)  
jle
stos
jmp
movsl
icebp  
out
sub
stc    
add
std    
(bad)  
scas
vcvttss2si
push
fcmovu
add
or
mul
je
lea
data16
xor
jmp
xor
les
repz push
outsl
ss xchg
pop
orb
sbb
add
xchg
rcrl
sbb
jle
mov
inc
and
mov
fsts
mov
and
pop
mov
daa    
xor
xchg
sti    
(bad)  
sub
out
and
outsl
adc
dec
sbbl
adc
pop
cmpl
rclb
daa    
sbb
or
cmp
mov
addl
aaa    
ss mov
subb
scas
fs
int
push
push
push
cmp
mov
sbb
push
sub
mov
dec
outsb
inc
and
sub
sbb
inc
or
or
cmp
xchg
adc
(bad)  
fistpl
jbe
mov
adc
pushl
mov
int
test
out
xchg
cmpsl
into   
adc
add
int
mov
xchg
hlt    
xchg
mov
jnp
daa    
(bad)  
fadd
xchg
inc
insb
out
add
rcl
jp
leave  
adc
out
je
sub
loope
add
(bad)  
int
dec
sbb
or
sahf   
jp
xlat
sbb
hlt    
sbb
pop
jge
stos
adc
repnz mov
jg
andb
or
push
add
aaa    
pushf  
xchg
cs jecxz,pn
test
jno
xor
mov
jae
adc
xor
and
and
std    
sbb
push
popa   
popa   
mov
cmpsl
(bad)  
loop
out
adc
mov
jp
popf   
ret    
sub
xchg
(bad)  
push
push
out
cwtl   
push
cmp
lret
jmp
and
stc    
imul
mov
sub
mov
inc
xchg
pop
xor
jmp
test
xor
pushf  
hlt    
jbe
repnz push
mov
mov
or
xchg
lods
dec
add
add
adc
dec
xor
add
mov
dec
push
jnp
push
ss leave 
mov
and
hlt    
push
cs push
shrl
in
push
sti    
sub
add
mov
and
jae
cmp
rorb
or
pop
xchg
pop
aas    
cmpsb
pop
mov
in
(bad)  
or
xor
bound
jno
in
and
lahf   
or
mov
mov
cltd   
fldl
test
inc
mov
push
mov
push
xchg
addr16 adc
xchg
shlb
xor
mov
sbb
xor
adc
int3   
sbb
add
loope
adc
loope
xor
push
nop
jbe
mulb
int
cmp
pop
jns
lret
jmp
push
and
rcll
pop
daa    
jmp
dec
jge
jno
(bad)  
divl
jg,pt
inc
jg
pop
mov
sub
shll
mov
pop
test
test
in
jp
and
xchg
roll
fisttpl
mov
hlt    
fistpll
and
mov
mov
cmp
test
in
sbb
nop
lret
mov
(bad)  
pop
sarl
fucomip
out
mov
data16 jae
xchg
loop
jae
add
xchg
dec
(bad)  
ret    
in
fcmovbe
stos
inc
push
sbb
lcall
inc
inc
or
fs pushf 
lds
repnz fwait
jnp
dec
popf   
ret
movsb
or
hlt    
test
dec
cmpsb
xchg
fsubs
mov
cmp
stc    
mov
(bad)  
dec
aas    
inc
mov
sti    
and
scas
push
or
in
negb
xchg
mov
cld    
test
pushl
push
inc
mov
jge
pop
dec
push
pop
repnz xchg
pusha  
scas
inc
fsubs
fcomps
push
pop
pop
gs inc
mov
stos
inc
push
dec
repnz xchg
pop
ss cmp
mov
jg
or
pop
fisttpl
mov
push
mov
pusha  
jmp
mov
or
outsb
add
mov
mov
das    
inc
sub
mov
push
pop
and
mov
iret   
ljmp
xor
push
cmp
xchg
ret
out
jl
mov
ret    
fyl2x  
les
lds
shll
jo
(bad)  
out
jge
pop
cmp
jae
xorb
(bad)  
popw
sub
push
jge
jbe
jno
add
jge
repnz sub
jle
imul
mov
jns
std    
(bad)  
sub
or
test
sti    
sbb
sub
sahf   
and
adc
dec
in
(bad)  
sub
cmp
fimull
rclb
cmp
mov
mov
cmp
fisttpl
loopne
push
test
aas    
cmc    
add
sub
dec
cmp
orl
aaa    
adc
cmp
scas
xchg
xor
or
int3   
in
arpl
xchg
lret
ljmp
sbb
mov
adc
inc
lcall
dec
inc
sub
(bad)  
repnz and
pop
in
sbb
test
and
mov
mov
js
test
inc
mov
sahf   
ret
adc
mov
push
or
js
push
out
in
push
leave  
in
test
ljmp
imul
loopne
mov
ss mov
loope
mov
loop
push
loop
sbb
in
(bad)  
pop
push
add
imul
call
inc
mov
loop
ret    
jmp
dec
in
stc    
jo
mov
xchg
sbb
testb
dec
js
lods
in
push
cli    
add
mov
clc    
pop
stc    
jmp
iret   
dec
in
gs insl
mov
rorl
mov
sbb
jb
push
mov
icebp  
sbbl
bound
jp
in
scas
sub
out
std    
jge
adc
mov
shll
dec
addr16 jno
les
sbb
aaa    
stos
(bad)  
jo
cs popa 
pop
and
andb
out
imul
or
dec
or
mov
shrb
pop
push
out
mov
cmp
inc
push
mov
add
push
cmp
and
push
adc
fwait
pop
popa   
xor
test
xor
cmp
and
inc
push
ret    
xchg
mov
xor
push
xor
xchg
scas
inc
cmp
sbb
sahf   
cmp
cmp
lds
(bad)  {%k3}{z}
hlt    
cs inc
lods
sbbl
xor
sbb
add
sbb
jle
cmp
lahf   
ret
shrb
push
loope
jns
add
movsb
shlb
sahf   
(bad)  
jno
mov
leave  
popa   
mov
repz sub
xchg
xchg
(bad)  
sub
mov
loop
std    
call
stc    
xchg
adc
cli    
pop
lret
(bad)  
sti    
jecxz
repnz add
mov
in
cli    
mov
in
das    
xor
inc
imul
mov
push
fnsave
insb
lcall
sbb
loope
outsl
and
push
sbb
mov
(bad)  
scas
jne
sbb
push
jl
lret
popa   
adc
xor
adc
push
sbb
imul
xor
fidiv
sahf   
cmp
adc
adc
mov
or
aad
add
adc
(bad)  
pop
cmp
andl
popf   
les
jmp
loopne
test
(bad)  
fldt
and
leave  
andb
movl
lret   
leave  
int
and
lcall
jle
dec
and
into   
outsl
jp
add
es mov
jo
rcrb
pop
sub
stos
cmp
jl
aad
ret
nop
or
hlt    
jecxz
sub
pop
or
ficoml
cmp
xchg
xchg
test
pusha  
push
cmpsb
xor
lcall
mov
or
fldenv
outsb
aaa    
dec
mov
(bad)  
into   
pop
mov
mov
cmp
(bad)  
aaa    
jbe
out
mov
push
xchg
dec
jae
call
mov
mov
ljmp
push
xchg
inc
push
aas    
in
add
sbbl
popa   
or
fwait
push
pop
repnz dec
mov
dec
cmp
sub
add
dec
adc
xchg
iret   
(bad)  
dec
jp
dec
stos
and
mov
int3   
mov
dec
int
jne
repnz inc
xchg
sti    
mov
mov
cmpsl
or
sbb
pop
push
ds stos
idiv
pop
add
jp
lods
mov
cli    
in
push
xchg
add
add
call
rorb
pop
sbb
cmp
or
(bad)
pusha  
fs mov
mov
fs push
or
adc
bound
add
mov
aaa    
mov
clc    
mov
(bad)  
jl
addr16 jg
pop
mov
shrl
mov
fcmovu
add
and
lret
sbb
push
outsb
jbe
xchg
ja
test
push
je
(bad)  
jbe
or
sub
in
dec
leave  
xchg
xchg
jo
jp
xchg
jne
pop
mov
js
aad
out
divb
xchg
pop
into   
or
and
and
jae
jnp
cmpsb
mov
es
pop
mov
(bad)  
mov
add
and
and
mov
aad
pop
fs sub
inc
xchg
pop
lret   
leave  
sub
adc
fiaddl
sub
xchg
mov
nop
xor
ljmp
test
and
loope
lret
data16 mov
lea
inc
mov
(bad)  
push
sar
in
mov
inc
xchg
push
or
mov
test
xlat
xchg
movsl
xchg
int3   
js
ljmp
or
nop
push
dec
inc
inc
ds insl
cltd   
sub
mov
sub
rcrb
and
adc
arpl
xor
hlt    
cmpl
add
cltd   
mov
dec
adc
dec
jge
std    
mov
or
bound
into   
mov
lds
push
ljmp
shrl
mov
test
add
clc    
icebp  
scas
cmpsl
aas    
adc
(bad)  
mov
(bad)  
(bad)  
jbe
cmc    
mov
mov
or
cld    
pop
adc
sbb
or
pop
pop
bound
inc
cmpl
mov
out
mov
pop
xchg
inc
cmpsl
sub
in
dec
mov
gs jnp
imul
scas
out
imul
xor
daa    
in
outsb
call
pop
xchg
sbb
or
(bad)  
fidiv
sbb
aaa    
cmp
jae
pop
pop
sub
test
test
and
sub
inc
(bad)  
and
jp
push
xor
jae
sahf   
enterw
loope
mov
arpl
add
jbe
mov
or
aas    
xchg
lahf   
(bad)  
xor
shrl
dec
mov
sbb
xor
js
mov
mov
sbb
mov
jbe
dec
jecxz
andb
jl
(bad)  
popa   
ljmp
ffreep
loopne
fidivr
test
pushf  
shrb
dec
outsl
mov
scas
pop
dec
xchg
out
xchg
out
test
cmp
and
(bad)  
mov
or
fisttp
stc    
and
adc
ret
aad
subl
inc
lea
lret   
jecxz
xchg
repz inc
in
adc
cld    
add
and
es push
sub
adc
imul
xor
and
iret   
std    
add
add
(bad)  
xor
push
into   
stc    
sub
int3   
lock adc
dec
cmp
mov
jae
inc
add
jns
loope
rcll
aam
cmc    
inc
dec
xchg
fisttpl
push
jge
mov
iret   
insb
push
mov
les
xchg
rcrb
sub
(bad)  
jns
fadds
adc
mulb
mov
(bad)
mov
pusha  
sbb
dec
sbb
dec
in
fs je
or
lock xchg
pop
cmp
mov
cwtl   
jle
movsb
fisttp
xchg
repnz pop
aaa    
lods
loope
lea
(bad)  
push
xchg
cmp
imul
out
fsubs
fisubr
icebp  
sub
int3   
jo
or
ss inc
pop
jo
xchg
pop
dec
push
dec
push
jae
js
popa   
popa   
insl
or
pop
aaa    
pop
push
(bad)  
loop
(bad)  
lock
mov
aam
mov
icebp  
mov
out
or
pop
hlt    
outsl
repz ret 
and
cld    
adc
and
popa   
(bad)  
sahf   
mov
loop
lahf   
or
cmpsl
test
lods
sbb
add
sub
jb
rorl
cmp
jae
out
pop
sub
cmp
movsl
sbbl
jmp
mov
mov
mov
sbb
bound
adc
jg
aad
dec
insl
jbe
pop
outsl
sarl
push
push
jns
cmpsb
addr16 iret 
sub
test
xor
xor
and
and
push
sahf   
aas    
imul
cmp
popf   
aam
mov
repnz icebp 
sahf   
mov
add
lea
repnz stos
movsl
lret
inc
jns
mov
xlat
add
(bad)  
push
ljmp
in
push
fsubp
std    
xchg
lret   
in
dec
or
fcomip
mov
into   
mov
je
punpckhdq
mov
loope
(bad)  
sbb
lret   
lret
loop
pop
mov
cmpsb
icebp  
pop
sti    
inc
lods
pop
jp
cmpsb
(bad)  
das    
and
mov
xchg
inc
imul
dec
mov
or
lock
mov
ffreep
leave  
pop
ss mov
subl
es pop
push
incb
jne
fbstp
xchg
inc
dec
std    
cmp
push
mov
aas    
lcall
or
pop
scas
push
das    
pop
or
sbb
jb
into   
mov
xor
(bad)  
mov
(bad)  
daa    
shll
jecxz
xor
adc
mov
xchg
sub
add
in
imul
add
bndstx
mov
and
jmp
movsl
push
bound
xchg
jle
dec
inc
push
repnz popa 
(bad)  
cltd   
sarl
(bad)  
dec
mov
dec
cmp
xchg
inc
mov
sub
sub
pop
bound
dec
pop
daa    
mov
dec
arpl
dec
outsb
sub
and
cwtl   
sub
mov
nop
inc
and
out
enterw
into   
push
xlat
test
sbb
mov
or
push
clc    
rclb
ljmp
jg
js
out
sub
inc
push
sub
lds
cwtl   
roll
fstpl
push
pop
mov
stc    
or
sbb
add
decl
dec
fild
push
add
pop
dec
mov
lret   
lods
dec
int3   
jp
pop
adc
xchg
push
mov
sub
out
xor
cmp
in
rcrb
frstor
pop
or
mov
loopne
pop
mov
(bad)  
(bad)  
test
mov
aas    
push
lock mov
addr16 push
and
pop
cmp
jne
rcrl
inc
imul
push
push
fstps
inc
std    
mov
sbb
movsl
xchg
jo
or
pop
cli    
pop
pop
xchg
hlt    
call
pop
xchg
aad
dec
mov
enter
push
xchg
adc
push
or
sti    
jmp
xchg
hlt    
pop
dec
push
out
insb
pushf  
idivl
inc
sbb
sbb
popf   
aad
push
repz dec
push
mov
loopne
out
fcoml
mov
mov
fildl
pusha  
add
mov
mov
xchg
mov
jb
rolb
lods
fs dec
pop
add
mov
jp
xor
jne
es test
(bad)  
jbe
push
fidivr
icebp  
lret   
std    
insb
fdivrs
daa    
or
fwait
dec
pusha  
pusha  
loope
pop
leave  
lret   
(bad)  
nop
insb
push
out
mov
out
mov
fwait
rclb
movsl
scas
call
div
icebp  
mov
clc    
or
mov
into   
push
out
mov
out
inc
pop
stos
inc
(bad)  
mov
ja
and
push
jp
mov
push
jge
lods
jmp
(bad)  
out
ficompl
mov
mov
jle
in
jnp
rol
push
clc    
iret   
(bad)  
test
lret   
fdivs
scas
or
xchg
lock mov
adc
push
xor
sub
mov
sub
cmpsb
push
pop
bndstx bnd2,0x12716f7f
rcrl
push
pop
xor
add
aaa    
dec
fidiv
sub
ret    
mov
outsl
iret   
inc
dec
bound
outsb
push
jnp
les
shrb
in
loope
sub
cmp
(bad)  
cmp
push
sub
add
inc
xor
lea
dec
push
scas
push
notl
mov
hlt    
push
in
(bad)  
cmp
jmp
das    
(bad)  
mov
add
push
movsl
test
jp
pop
jle
je
out
cmpb
inc
or
loop
(bad)  
punpcklbw
mov
dec
test
push
cmpsb
test
add
mov
xchg
sbb
mov
lahf   
xchg
mov
cmc    
xor
rcr
mov
stc    
mov
inc
inc
mov
inc
push
push
mov
imulb
pop
dec
mov
mov
sbb
push
repz push
inc
dec
js
dec
jle
or
roll
(bad)  
stc    
(bad)  
fmuls
cwtl   
cmp
mov
jns
subb
mov
add
or
ret    
cs stos
xchg
sbb
repnz test
ffree
add
ror
in
or
fnstcw
pushf  
pop
aam
mov
or
ljmp
dec
ret    
movsb
push
pop
cld    
test
out
dec
dec
divl
dec
push
dec
test
arpl
mov
sub
mov
nop
stos
adc
mov
popf   
(bad)  
lea
fbld
mov
jns
inc
lret   
cmpsw
ja
pop
(bad)  
add
addr16 sub
xor
popf   
addr16 mov
sub
sbb
mov
push
or
push
loopne
fiadd
add
movsl
orl
jb
push
int
xchg
mov
loope
js
call
hlt    
jge
xor
xchg
cmp
outsl
movsl
xor
dec
push
add
push
sub
mov
pop
adc
pop
sub
cli    
adc
mov
dec
pop
or
dec
jg
rorl
sub
cmp
sub
inc
sbb
mov
adc
or
lods
inc
sbb
hlt    
xor
dec
add
loope
and
jno
push
sub
in
push
cwtl   
fs in
push
mov
decb
inc
inc
loopne
push
or
pop
mov
dec
xor
mov
mov
test
and
xchg
movsb
or
pop
dec
and
jno
mov
push
daa    
mov
pop
lcall
pop
mov
sub
lods
mov
or
pop
pop
adc
sub
push
xchg
push
pop
aas    
push
ja
mov
pusha  
push
dec
daa    
push
inc
jl
orl
pop
inc
mov
pop
sub
(bad)  
clc    
push
loope,pt
dec
js
push
xchg
insb
xor
sub
mov
add
mov
pop
dec
xchg
mov
fwait
and
pushf  
push
pop
mov
movsb
lea
icebp  
aad
cmp
inc
mov
clc    
xor
insl
aam
(bad)  
ror
xchg
sbb
adc
aad
movsb
mov
or
hlt    
aad
xchg
(bad)  
sub
movsb
out
aad
pop
push
repz enter
into   
fisttp
out
xor
jg
fldt
in
fnstenv
(bad)  
or
sahf   
outsl
stos
sti    
push
mov
jb
inc
mov
lcall
int
mov
ljmp
rcll
rcl
jo
icebp  
in
xlat
xor
fistp
rclb
enter
js
fistpl
lds
sarl
fmul
jg
add
(bad)  
(bad)  
stos
scas
dec
outsl
xor
pop
mov
rcll
jge
divl
jl
pop
push
xorb
hlt    
mov
add
push
mov
cmp
xor
insb
std    
push
add
imul
mov
jns
stos
sahf   
idivl
cmc    
push
(bad)  
insl
out
enter
add
loopne
cmp
jb
notb
(bad)  
mov
push
rcl
(bad)  
ja
ljmp
ss fwait
push
push
add
popf   
ret
adc
and
sahf   
adc
sub
or
in
fdivs
mov
lock xchg
mov
or
dec
pop
dec
cmp
jle
dec
fs jae
bound
notl
mov
hlt    
arpl
or
pop
cmp
adc
cmpl
movsl
dec
add
cld    
jne
push
iret   
jle
jecxz
push
push
sarl
ret
inc
out
jo
rcl
and
sarl
inc
ret
inc
out
daa    
push
in
mov
adc
jp
imul
mov
jb,pt
jnp
dec
mov
jae
xchg
push
data16 mov
mov
push
stos
sbb
std    
ret
dec
out
cwtl   
sbb
xor
jb
mov
sbb
mov
aas    
bound
mov
scas
mov
ja
sub
lea
push
jae
xchg
out
dec
dec
dec
xor
(bad)  
cli    
shlb
enter
sar
xor
in
pop
sub
mov
loope
ret
fmul
cmpsb
fdivl
repz
int
gs js
mov
cmpsl
inc
jo
std    
(bad)  
mov
call
cmc    
(bad)  
(bad)  
dec
call
loope
add
ficomp
add
inc
cmc    
push
fisttpl
aam
loop
mov
fucomp
les
xor
xorl
adc
and
or
dec
or
mov
push
and
js
push
cwtl   
push
pushf  
inc
pop
inc
mov
sub
(bad)
out
jmp
pop
fiaddl
pop
and
shlb
decb
cmc    
(bad)  
stos
add
add
leave  
sub
out
push
insl
pop
stos
popf   
mov
and
rcrl
jno
mov
mov
xor
or
push
mov
mov
(bad)  
rcrl
mov
pusha  
fisttpl
cmpsl
cld    
bound
sbb
pmulhuw
gs lahf 
ret
pop
or
rclb
mov
push
adc
and
push
imul
mov
push
ja
mov
lods
ret
into   
sbb
adc
lds
pop
xor
fldenv
je
dec
cs xchg
sbb
lds
cli    
pop
cmp
jbe
(bad)  
cmp
mov
pop
and
js
mov
and
icebp  
loop
pop
cmp
adc
daa    
into   
lds
mov
roll
sub
cltd   
stos
jg
loopne
aad
daa    
in
sub
outsb
push
(bad)  
jmp
das    
fsubs
inc
jb
sbb
iret   
mov
xchg
push
(bad)  
xchg
cli    
scas
ja
push
test
jnp
sti    
ljmp
adc
(bad)
mov
test
stos
sbb
stc    
jg
mov
faddl
loopne
(bad)  
enter
cmp
xchg
cld    
pop
add
mov
(bad)  
(bad)  
cmpsl
jmp
jecxz
dec
repnz ss repnz cld 
es and
mov
and
int3   
push
jecxz
xchg
scas
rcrl
add
fist
xchg
inc
ficom
and
fs aaa 
and
mov
mov
dec
dec
mov
js
rcl
pop
js
dec
mov
insl
inc
mov
xabort
jb
mov
(bad)  
in
adc
fnstsw
cltd   
pop
(bad)  
(bad)  
xchg
out
mov
jecxz
inc
test
jae
ret    
push
(bad)  
mov
add
(bad)  
lcall
into   
and
xchg
leave  
int
mov
(bad)  
jmp
xchg
jg
cltd   
stc    
js
int3   
and
nop
lea
sub
xchg
pop
inc
jae
mov
in
jne
sbb
stc    
dec
or
cmp
mov
insl
mov
mov
jbe
xchg
pop
ljmp
cmp
into   
into   
pop
xlat
mov
jnp
inc
cmp
cmovg
pop
dec
cmpsl
clc    
mov
mov
pop
or
xor
outsl
imul
mov
jne
jns
pop
cli    
cmpsl
icebp  
ljmp
sti    
je
popa   
icebp  
cmc    
repnz mov
or
das    
jmp
pusha  
jns
mov
stc    
pop
sub
ja
mov
adc
stc    
mov
xor
push
mov
mov
mov
in
fsubl
test
mov
push
adc
fstps
mov
dec
out
imul
vpextrw
lds
cmpb
(bad)  
(bad)  
dec
dec
sbb
(bad)  
mov
daa    
sbb
iret   
jb
stos
lock enter
pop
adc
xor
jle
lret   
mov
jne
inc
or
ja
push
mov
and
cli    
jns
daa    
sbb
jmp
cmp
jl
sti    
jg
sbb
mov
jle
iret   
jecxz
dec
push
add
add
ljmp
hlt    
ja
fldcw
add
paddusb
xchg
xor
fsts
push
and
adc
xor
lods
mov
xchg
(bad)  
loopne
cmp
ss std 
sbbl
jecxz
subps
cs push
jge
jmp
jecxz
cmp
loope
sbb
call
nop
incb
inc
ljmpw
rcl
xchg
jl
lret
pusha  
jmp
repnz cmpsb
or
lods
in
sub
inc
and
faddp
xchg
icebp  
cltd   
or
popf   
setbe
repz lret
dec
test
cmp
sti    
mov
dec
mov
fwait
mov
sub
fimul
lret   
jmp
pop
inc
push
sbb
test
mov
(bad)  
test
mov
dec
sub
aad
pop
stos
sbb
scas
data16 arpl
pop
fdiv
repnz mov
aaa    
adc
push
jle
pop
or
or
adcl
ds cltd 
mov
or
push
mov
in
pusha  
mov
mov
rclw
pop
adc
sub
ljmp
js
mov
mov
iret   
pop
test
xchg
adc
pop
fnstenv
sbb
pop
push
jo
data16 jne
push
lods
xchg
sbb
hlt    
mov
(bad)  
cmp
enter
push
cmp
sbb
push
cmp
and
jg
sub
mov
and
mov
rclb
and
jl
mov
inc
rorb
jle
pop
int3   
aam
cmpsb
in
sub
in
push
sub
jp
sub
sbb
dec
mov
xchg
xchg
(bad)  
test
neg
or
sbb
les
mov
pop
fidivr
idivl
cmp
mov
sbb
adc
jo
in
stos
sub
testl
cmpsl
insl
cld    
shrb
inc
xor
sarl
insb
and
shrb
mov
jmp
out
test
or
ret    
in
sub
cmpsl
mov
mov
xor
jp
jmp
cwtl   
inc
lods
int3   
adc
dec
xchg
imul
sub
(bad)  
hlt    
mul
hlt    
repnz fimul
fidivrl
cmp
or
test
lcall
cmp
jmp
xchg
mov
sub
insl
cld    
dec
inc
sub
xchg
jecxz
(bad)  
in
sahf   
(bad)  
mov
pop
pop
rcrb
iret   
movsb
adc
mov
xor
repnz add
dec
mov
push
mov
dec
in
xchg
std    
mov
bound
inc
dec
sbb
scas
(bad)  
stc    
xchg
cmc    
mov
movsl
or
pop
push
jg
sub
cmc    
popf   
imul
stos
imul
add
jb
push
loope
lock lods
pushf  
call
add
xor
lea
(bad)  
jne
mov
xchg
pop
inc
popa   
mov
pop
mov
xor
cmp
pusha  
movsl
or
or
xchg
ret
fucom
mov
dec
imul
pop
mov
mov
jge
mov
xchg
adc
pop
xadd
xor
(bad)  
push
insb
lcall
sbb
mov
xlat
les
nop
sbb
(bad)  
cmp
mov
pop
sbb
sub
icebp  
mov
jne
jg
int3   
sbb
and
aam
inc
js
push
data16 into 
dec
lcall
shlb
sarb
jmp
ss mov
jge
sti    
sub
sub
jo
and
xchg
aad
push
mov
cwtl   
pop
aam
push
movsb
cmc    
xlat
push
jmp
cs leave 
xor
test
jp
cli    
cmc    
fwait
xchg
push
mov
enter
dec
test
adc
cmp
daa    
lea
xchg
scas
or
cli    
sbb
lds
mov
dec
cmp
sub
ja
insb
lods
add
dec
sbb
cmp
push
dec
jmp
add
xchg
out
ss
cld    
fisttpl
and
ret    
roll
scas
(bad)  
cs inc
icebp  
pop
popa   
lahf   
sbb
fwait
in
test
cmpsl
pop
out
or
sbb
sti    
jl
adc
lahf   
jmp
lahf   
mov
adc
or
jns
test
jmp
mov
movsb
and
xlat
adc
aaa    
ss dec
mov
dec
les
imul
sahf   
xor
call
scas
and
in
stos
push
fsubrl
inc
mov
imul
ds xor
cmp
test
mov
into   
pop
mov
stc    
dec
jns
xchg
mov
jns
rol
lcall
imul
mov
jge
rcrb
lcall
inc
sbb
jnp
rcrb
fwait
jecxz
or
push
mov
dec
cmpsl
outsl
fldenv
sbb
xchg
xor
inc
iret   
pop
(bad)  
mov
loopne
lahf   
sub
sub
aad
int3   
cltd   
jl
and
cmp
and
push
dec
pop
lods
(bad)  
stc    
mov
push
and
add
dec
mov
xchg
outsb
int3   
pop
divb
mov
jle
iret   
out
test
sbb
imul
pop
fildll
ja
in
lods
inc
test
repz lret 
push
sub
int
push
sti    
xor
insl
adc
push
sbb
mov
dec
fildl
sub
push
dec
mov
pop
iret   
iret   
pop
cmp
dec
jge
dec
mov
cmpsb
leave  
lods
push
mov
add
loopne
cs
hlt    
rcll
adc
cs add
hlt    
pop
dec
push
subl
push
lcall
(bad)  
fldcw
es jbe
sub
pop
pxor
cmpsl
mov
and
addr16 mov
mov
imul
out
popf   
push
cmp
cmp
sbb
xlat
xchg
ret    
rcrl
sbb
sbb
and
sub
lea
fwait
pop
cmc    
test
mov
cmp
stos
lock mov
lret
cmp
rcrl
pushf  
mov
lods
sub
cmp
lods
mov
(bad)  
sub
pop
mov
mull
popa   
testl
xor
pop
pop
mov
fsub
in
das    
loopne
inc
gs mov
xchg
add
pop
or
imul
xchg
sub
add
pop
xor
pop
lds
inc
les
lret
push
inc
icebp  
aam
mov
sbbb
icebp  
rcl
mov
push
cwtl   
pop
aad
repz sbb
mov
orb
cld    
jg
ja
push
xor
imul
sti    
movsb
jge
sti    
xlat
lret
sub
mov
lcall
xchg
or
sub
std    
and
imul
adc
fldenv
movsb
mov
stos
call
fadd
sbb
les
cmpsl
mov
cli    
(bad)  
jbe
ret    
daa    
mov
xchg
mov
movsl
lods
loopne
jecxz
cs push
and
stos
jo
mov
daa    
push
sub
shlb
jecxz
sub
xor
pop
ljmp
push
push
ret    
jp
jge
cmp
(bad)  
enter
dec
scas
push
pop
inc
(bad)  
in
xor
dec
sbb
(bad)  
pop
popf   
pushf  
inc
xchg
call
sbb
insb
adc
inc
cltd   
mov
pop
shlb
jo
shrl
add
lock addr16
xor
cli    
inc
mov
dec
shrb
xchg
leave  
inc
xor
sarb
idivl
cmp
jl
push
lock mov
jbe
jmp
adcb
je
outsb
push
fwait
out
xchg
add
xor
or
inc
popa   
xchg
out
lods
clc    
(bad)  
rol
and
adc
loop
insb
mov
mov
fyl2xp1 
enter
inc
cmp
jnp
dec
push
or
sub
loopne
pusha  
mov
push
cmc    
push
lcall
mov
fwait
xchg
push
inc
out
xchg
and
jne
and
mov
mov
jnp
fsts
repnz rcl
adc
into   
mov
in
js
jnp
test
(bad)  
call
divb
ret
lcall
xchg
mov
(bad)  
repnz
ss jbe
mov
sarb
jns
nop
ljmp
les
ja
sahf   
outsl
xchg
jne
adc
or
mov
outsb
cmp
sub
mov
sub
or
cmp
mov
cli    
sub
push
xchg
test
iret   
js
pop
push
mov
jbe
and
pop
and
ds scas
xor
mov
jmp
sbb
pushf  
(bad)  
xorl
jg
adc
or
jmp
ss mov
pop
mov
aas    
or
sub
push
fisttpl
popf   
adc
pop
pushl
dec
dec
and
repz imul
(bad)  
mov
aaa    
cld    
bound
lods
ds ret 
out
out
leave  
cmp
cs mov
ret
test
fucomip
sbb
outsb
cmpsl
mov
in
call
cli    
imul
icebp  
xor
and
cltd   
jno
(bad)  
sbb
inc
or
push
mov
iret   
negb
arpl
inc
sub
addr16 push
xchg
insl
mov
repnz mov
sbb
les
hlt    
jno
pop
xchg
outsb
fdivs
mov
stc    
jae
pop
fwait
xchg
test
xchg
icebp  
loop
mov
outsb
shlb
inc
scas
push
in
sahf   
out
sbb
cs sti 
insb
xchg
data16 mov
shrl
sbb
imul
fistp
add
cmp
jmp
mov
xchg
cmpsb
rcrl
cwtl   
frstor
leave  
dec
test
divl
dec
pop
test
sbb
add
fmuls
adc
inc
movsl
add
or
lcall
jae
fcompl
add
aad
push
rclb
jge,pt
outsb
push
lret   
mov
hlt    
fdivrl
mov
pop
out
cmp
xorl
daa    
mov
or
mov
outsl
loop
cmp
and
lds
adc
fucomi
rclb
push
sbb
shr
sub
jecxz
sarl
int
(bad)  
xchg
sub
repz jmp
push
xchg
jnp
rcrb
push
imul
cmp
or
pop
push
sbb
les
mov
std    
xor
inc
push
fist
fs
in
jmp
les
push
and
mov
out
push
add
xor
push
add
std    
andb
add
jnp
pop
push
ljmp
push
clc    
add
les
(bad)  
(bad)  
push
pop
add
(bad)  
loope
mov
or
push
mov
xchg
out
mov
cmp
outsl
sbb
ss insl
enterw
dec
mov
js
stos
adc
sub
cltd   
xchg
push
aam
adc
ds cs jae
pop
inc
xchg
in
lods
icebp  
jp
and
ss mov
and
mov
in
aaa    
in
pop
pop
das    
push
jno
push
movsb
divb
adc
mov
jo
xchg
insb
mov
xlat
adc
pop
(bad)  
jb
js
xchg
jmp
cld    
push
push
fcoml
inc
jb
andb
adc
xor
jae
test
icebp  
adc
pop
jb
test
xchg
push
adc
dec
test
jo
test
repnz mov
inc
adc
test
xchg
adc
popl
cmpsb
ja
test
(bad)  
dec
test
adc
adc
jbe
test
nop
adc
cmp
mov
sahf   
jbe
xor
xchg
adc
(bad)  
dec
xor
movsb
adc
jbe
add
xchg
adc
(bad)  
mov
movb
jne
xchg
and
and
mov
push
mov
xchg
mul
xchg
sti    
sbb
and
mov
scas
repz decb
cmc    
add
cmp
scas
fimull
push
xor
push
int
aas    
jge
mov
mov
sbb
xlat
sbb
jne
sahf   
add
push
push
adc
inc
xchg
xchg
jecxz
or
adc
and
xlat
add
arpl
inc
fstl
pusha  
push
pop
and
jae
sub
and
cwtl   
es dec
sbb
gs ret 
lods
xchg
rorb
cmp
js
push
sbb
loopne,pn
xor
sbb
jl
gs mov
repnz add
jns
sub
xchg
inc
add
idivb
xor
add
cmpl
cli    
(bad)  
sbb
add
call
xchg
jb
(bad)  
out
adc
jae
sahf   
sti    
mov
mov
nop
daa    
ja
in
je
xchg
adc
mov
or
mov
mov
xchg
cld    
add
pop
cwtl   
lods
mov
or
dec
mov
and
inc
sbb
shrl
inc
out
or
xchg
fwait
sarl
and
sub
stos
je
(bad)  
mov
add
xorb
or
insb
jmp
fwait
mov
gs xor
xor
jo
pop
(bad)  
xlat
rorb
ds jmp
movsl
push
mov
fs adc
mov
push
cwtl   
hlt    
popa   
jno
sbb
stos
test
orb
jge
xchg
cli    
pop
test
inc
adc
js
cmpb
xchg
push
and
adc
or
add
mov
fldl
movsb
add
add
pushl
ljmp
jge
sbb
ds sti 
mov
imull
inc
jb
mull
mov
(bad)  
jb
ja,pn
xchg
icebp  
and
add
jge
es mov
inc
jne
clc    
mov
icebp  
fadds
jge
andb
sbb
adc
jmp
inc
jp
or
add
cli    
test
xchg
pop
and
add
xchg
jg
addl
adc
and
std    
(bad)  
stos
sahf   
push
lods
out
jl
xor
pop
pop
(bad)  
dec
mov
test
push
rcrl
and
sub
mov
(bad)
sub
leave  
inc
in
ljmp
add
sahf   
rorl
nop
dec
inc
sbb
(bad)  
idivb
icebp  
adc
stc    
out
jle
dec
test
or
sti    
pop
push
mov
cmpsl
xchg
loopne
std    
push
daa    
and
inc
stos
(bad)  
mov
add
inc
movsl
lods
(bad)  
mov
add
push
or
jecxz
dec
pop
sahf   
ljmp
adc
scas
pop
iret   
mov
repnz or
adc
xchg
xor
mov
and
xor
mov
cmpsl
hlt    
fisubl
cld    
mov
fmul
ds addr16 xchg
punpcklbw
or
ret    
mov
cmp
insb
cmc    
mov
ret
dec
sbb
push
mov
je
lret   
or
push
adc
and
dec
ja
jnp
int
ret
ret    
or
iret   
cmp
adc
scas
and
shrb
push
sub
negl
sub
test
and
xchg
sahf   
fwait
scas
jg
push
mov
mov
popf   
pop
(bad)  
cli    
inc
stc    
sub
jl
lea
bound
test
sbb
out
pop
out
aad
xor
or
and
cltd   
inc
into   
jg
loope
dec
(bad)  
sti    
daa    
mov
lds
add
lret   
es xchg
sub
push
imul
pop
mov
fcmovnbe
test
pop
push
xchg
cmpsl
stos
aas    
(bad)  
jo,pn
push
imul
inc
mul
es fs fwait
sbb
jne
xchg
push
xchg
cmp
iret   
in
es
in
rorl
adc
sbb
xor
cmp
xchg
xorb
xchg
push
xlat
enter
adc
add
stos
xchg
mov
push
cmp
dec
insl
jg
les
lds
(bad)  
xor
(bad)  
push
pop
js
sbb
jae
movsl
mov
pop
dec
arpl
gs add
push
mov
je
popa   
push
in
mov
push
adc
rclb
sub
call
mov
outsb
mov
and
sbb
xor
mov
(bad)  
mov
sbb
fldt
leave  
out
(bad)  
pop
mov
cmp
int3   
pop
cmpl
ror
pop
js
adc
dec
push
sahf   
and
fidivr
shrb
test
inc
rcr
sub
les
sub
push
jmp
sbbl
dec
test
arpl
xchg
rcr
or
cmc    
xor
jl
mov
or
notb
mov
mov
lahf   
adc
xor
data16 movsb
dec
xchg
out
std    
adc
dec
mov
mov
imul
(bad)
out
add
dec
(bad)  
jae
or
xchg
jmp
xorb
cmp
sbb
inc
cmp
cmp
ja
push
shll
mov
jecxz
outsl
stos
add
sub
and
or
(bad)  
mov
jo
or
dec
movsl
sbb
sahf   
pusha  
and
sbb
dec
(bad)  
sbb
(bad)  
dec
test
dec
pop
out
sbb
mov
ret    
jl
xor
sahf   
cmp
push
mov
in
fiadd
cmp
and
inc
call
push
stc    
xchg
xchg
inc
or
or
negl
inc
mov
dec
cltd   
insl
call
xchg
inc
jecxz
mov
sahf   
mov
cmc    
inc
adc
push
sahf   
iret   
nop
aaa    
hlt    
mov
pop
dec
inc
push
jp
add
idivb
repnz frstor
in
jg
dec
cmpsl
movb
or
test
lcall
dec
sub
push
or
stos
les
dec
push
cmp
lods
cmc    
mov
pop
imul
scas
es pop
repnz add
movsb
adc
jmp
mov
xor
adc
pop
int
cwtl   
mov
push
mov
pop
(bad)  
xchg
cld    
mov
ficompl
bound
push
orl
pusha  
cmp
mov
(bad)  
leave  
push
addr16 xchg
adc
mov
pop
sahf   
push
ret
mov
cmp
imul
out
shrl
xor
lea
(bad)  
je
lcall
(bad)  
adc
stc    
jb
xor
cmp
cld    
ret
mov
jg
jb
mov
ja
fucom
int
and
and
imul
aam
addr16 es
aas    
mov
stos
rolb
adc
jle
pop
push
aad
mov
push
subl
dec
adc
sub
sbb
add
sbb
(bad)  
sub
mov
add
movsl
add
add
outsl
add
call
movl
and
sbb
sbb
orl
mov
add
adcl
or
push
push
push
call
or
sbbl
adc
mov
add
adcl
orl
or
adc
call
sbb
xor
adc
add
adc
add
movl
adc
sub
mov
add
sub
adc
xor
(bad)  
(bad)  
mov
mov
add
push
push
push
call
or
sub
mov
add
mov
add
andl
adc
movl
sub
call
or
add
or
add
xor
(bad)  
sub
or
mulb
add
add
add
adc
adc
adc
adc
adcl
or
adc
push
call
mov
adc
adc
adc
add
xorl
and
adcl
xor
push
call
add
add
adcl
add
andl
add
adcl
and
call
adc
mov
add
add
adc
sub
add
orl
xorl
add
add
adc
cmp
orl
and
sbb
mov
add
(bad)  
(bad)  
or
add
push
push
push
call
test
jne
mov
add
orl
adc
mov
add
add
add
adc
add
call
orl
add
and
sub
add
andl
xor
or
add
add
add
add
xor
orl
or
mov
adc
mov
add
orl
push
push
push
call
xorl
sbbl
mov
add
xor
and
and
adc
sbbl
push
push
call
test
jne
mov
add
and
sub
(bad)  
les
adc
add
sub
sbbl
call
(bad)  
(bad)  
out
adc
or
sub
(bad)  
sub
lock or
sbbl
adc
add
add
add
orl
or
andl
adc
movl
mov
adc
push
push
call
test
jne
sbb
add
adcl
movl
mov
add
sbbl
movl
xor
push
call
mov
(bad)  
lds
sub
add
cmp
adc
and
and
sub
add
call
add
adcl
xor
adc
orl
mov
add
or
add
add
add
add
adc
add
(bad)  
sub
test
add
adc
add
push
push
call
test
jne
xor
sub
adc
mov
add
(bad)  
lret   
add
add
flds
add
xorl
mov
adc
push
call
sbbl
sbb
(bad)  
fsubrl
out
imul
add
push
add
add
lock call
add
andl
xorl
(bad)  
lret   
arpl
and
or
orl
mov
add
add
and
adc
mov
add
sbb
adc
add
mov
(bad)  
lds
add
sbbl
push
call
xor
mov
add
xorl
or
sub
sbbl
mov
add
(bad)  
repnz lcall
adc
arpl
add
and
add
add
add
repnz adc
(bad)  
sub
pop
adc
mov
add
sub
sub
call
sub
(bad)  
(bad)  
jae
adc
adc
(bad)  
sub
test
(bad)  
mov
adc
sub
or
xor
xorl
adc
mov
add
and
mov
add
push
push
push
call
sbbl
adc
add
xor
adc
adc
(bad)  
sub
jnp
add
push
push
push
call
cmp
jne
mov
add
add
or
(bad)  
sub
mov
add
cmp
leave  
call
add
adc
add
call
adc
adc
adcl
sub
add
adc
xorl
xorl
add
add
add
add
and
pusha  
push
add
mov
lea
mov
mov
add
mov
(bad)  
roll
adc
xor
and
adcl
add
adc
push
push
push
call
or
adc
mov
add
adcl
adc
add
sbb
add
push
call
add
adcl
add
(bad)  
sub
lret   
adc
add
sub
movl
call
adcl
adc
or
add
sub
xor
sub
mov
(bad)  
(bad)  
add
add
add
mov
add
xor
adc
adc
adcl
adc
sbb
push
push
call
test
jne
orl
xor
or
adc
mov
adc
mov
add
sub
add
push
call
mov
(bad)  
lds
into   
xor
movl
adc
sbb
mov
adc
add
call
adc
adc
add
and
adc
adc
adcl
sbb
add
add
add
add
add
adc
xorl
or
adcl
mov
add
sub
add
push
push
push
call
cmp
jne
add
adc
or
mov
add
add
adcl
mov
adc
adc
call
movl
xorl
xorl
adc
(bad)  
ret
movb
cmp
xor
add
add
add
add
adc
add
add
add
mov
(bad)  
ret
rolb
test
add
push
out
mov
shrl
outsl
add
call
mov
adc
or
andl
adc
add
sub
andl
or
call
add
add
sub
adc
and
xor
adc
mov
adc
add
add
add
add
add
and
sbb
add
add
adcl
(bad)  
sub
inc
push
push
push
call
adc
add
sub
sbb
add
adc
sbbl
adc
push
push
call
test
jne
or
adc
adc
mov
add
add
sbb
add
xorl
call
adc
andl
andl
xor
sbb
sbbl
adc
add
xorl
add
xor
sub
xor
sbbl
orl
push
push
push
call
cmp
jne
mov
add
mov
add
adc
sub
adc
(bad)  
sub
jp
or
or
push
push
push
call
cmp
jne
xorl
mov
add
mov
add
(bad)  
icebp  
ljmp
adc
sbbl
or
call
sub
xor
add
add
xorl
or
adc
add
add
add
(bad)  
sub
and
add
adcl
(bad)  
sub
lds
add
(bad)  
(bad)  
insb
orl
add
push
push
push
call
test
jne
mov
add
add
sbb
sub
add
and
add
sbb
push
call
add
sub
add
adc
or
(bad)  
les
and
adc
call
sbbl
sub
xor
or
sbb
xor
sub
xor
add
mov
adc
add
or
or
or
orl
(bad)  
sub
xor
fldt
outsl
add
call
mov
add
(bad)  
ljmp
adc
sbb
or
sbb
cmp
divl
outsl
add
call
test
jne
mov
add
sub
add
add
adc
adc
sub
orl
call
adc
sbb
xor
(bad)  
lret   
scas
sbb
xor
adc
movl
movl
xorl
add
or
sbb
adc
mov
adc
sub
push
call
or
sub
mov
add
xor
orl
sub
sub
add
call
adc
sbb
adcl
xor
sbb
add
or
add
add
adc
mov
adc
sub
adcl
sub
or
or
push
call
adcl
add
mov
add
add
sub
sub
xor
sub
call
sub
and
(bad)  
(bad)  
insl
sbb
xorl
orl
add
add
sub
adc
add
add
adc
mov
adc
add
push
push
push
call
mov
add
andl
mov
adc
and
sub
or
adc
and
call
adc
sub
sub
add
adc
sub
sub
and
add
add
addl
add
adc
add
andl
orl
sbbl
sub
adc
push
push
call
test
jne
adcl
xor
sbb
mov
add
adc
adc
xor
sub
push
push
push
call
test
jne
xor
xor
mov
add
adc
adcl
or
mov
add
adc
call
adc
adc
add
sub
or
add
adc
add
sub
adcl
mov
adc
adc
sbb
mov
add
adc
xor
push
push
push
call
test
jne
adc
add
xorl
adc
add
add
mov
add
adcl
push
call
add
sub
movl
movl
sub
mov
add
adc
xor
call
sub
add
or
movl
or
adc
adc
add
add
andl
adc
mov
add
adc
add
sbb
add
push
push
call
test
jne
mov
add
add
adcl
add
and
mov
add
add
add
push
push
push
call
adc
sbb
adc
adcl
sub
adc
xor
mov
add
call
or
sbb
xor
add
add
add
(bad)  
sub
add
add
add
adc
xor
mov
adc
adc
or
sbbl
mov
add
add
push
call
sub
add
or
orl
(bad)  
sub
insb
sbbl
mov
adc
xor
push
push
push
call
test
jne
sbbl
mov
add
add
xor
or
sub
sub
adcl
call
adc
and
xor
sub
add
add
mov
add
sub
xor
andl
adcl
mov
add
(bad)  
sub
fadds
mov
add
push
call
adc
mov
(bad)  
mov
add
add
adc
movl
xor
sub
adcl
adc
call
adc
adc
xor
sub
adc
adc
adc
add
add
les
adc
adc
iret   
orl
mov
add
xorl
(bad)  
sub
jg
xchg
outsl
add
push
push
call
test
jne
xor
mov
add
xor
andl
sbb
or
adc
add
call
mov
add
adcl
add
(bad)  
sub
adcl
sub
adc
orl
add
add
add
sbb
xorl
sbb
sub
adcl
xor
adc
push
push
push
call
cmp
jne
sub
or
mov
adc
orl
andl
sbb
adcl
mov
add
call
(bad)  
fstp
add
adcl
sub
or
andl
sbb
add
add
add
add
inc
push
cmp
adc
ret    
or
sbbl
adc
mov
add
push
call
(bad)  
sub
sub
xor
sub
(bad)  
sub
mov
add
mov
adc
add
and
push
push
push
call
test
jne
or
add
xor
adcl
or
mov
add
add
adc
call
sbb
sbb
and
adc
adc
sub
mov
add
xor
sub
mov
add
mov
adc
add
adc
xor
adcl
push
push
push
call
sub
mov
adc
(bad)  
(bad)  
dec
or
sub
mov
add
or
adc
call
or
adcl
or
add
movl
add
add
xorl
mov
pop
icebp  
xor
mov
add
sub
adc
adc
sub
adcl
adc
push
push
push
call
add
add
sbbl
adc
movl
andl
add
adc
push
push
call
test
jne
adc
and
mov
add
sbb
xor
xor
sbb
movl
call
adcl
add
sbbl
mov
add
adc
adcl
add
add
adc
add
sub
sub
(bad)  
sub
jmp
mov
add
sbb
push
push
call
test
jne
orl
movl
and
sub
sbb
mov
add
adc
mov
add
call
adcl
sub
adc
(bad)  
sub
dec
xor
sub
or
add
adc
movl
or
add
sbb
mov
(bad)  
ret
cmp
or
push
push
call
cmp
jne
mov
add
xor
sub
adc
sbb
adc
andl
adcl
push
push
push
call
sbb
sub
add
mov
add
adc
or
sbb
(bad)  
sub
hlt    
call
sub
or
sub
sub
sbb
and
or
add
orl
sbbl
sub
adc
mov
adc
sbb
adc
sbbl
push
call
sub
add
mov
add
add
add
add
or
adc
push
push
push
call
mov
add
orl
or
sub
sub
add
adc
xor
call
sub
(bad)  
les
add
and
adc
(bad)  
xlat
sbb
or
or
(bad)  
sub
subl
adc
adc
add
add
adc
orl
adc
mov
add
push
push
call
cmp
jne
adc
adc
mov
add
mov
adc
sub
xor
sbbl
adc
push
push
call
cmp
jne
movl
adcl
adcl
mov
add
xorl
xor
(bad)  
sub
pop
xor
call
adc
sbb
or
adcl
andl
sub
adc
xorl
add
adcl
adc
xor
add
add
adc
adc
mov
adc
push
push
call
test
jne
sub
andl
add
mov
add
mov
add
sub
(bad)  
sub
and
sti    
(bad)  
call
cmp
(bad)  
lret   
xor
icebp  
or
sub
adc
add
add
mov
adc
orl
mov
add
adc
add
add
xor
push
push
push
call
sbb
adcl
mov
add
add
mov
add
add
add
xor
call
(bad)  
jecxz
sub
sbb
sub
sbb
and
orl
and
add
add
or
add
and
andl
sub
or
orl
adc
push
push
call
cmp
jne
mov
adc
adcl
adcl
mov
add
and
(bad)  
sub
push
add
sub
push
call
mov
(bad)  
vmovlps
adc
adc
adc
adcl
orl
xor
call
add
add
xorl
adc
or
or
adc
mov
add
add
mov
add
add
mov
add
sbb
adcl
adc
sbb
sbb
push
call
add
add
mov
add
sub
adcl
add
orl
adc
call
or
sub
adcl
mov
adc
(bad)  
imulb
sbb
add
add
cmp
and
sbbl
adc
sbb
add
mov
adc
adc
push
push
push
call
test
jne
adcl
mov
add
add
adcl
sbb
adc
xor
add
call
andl
adcl
orl
mov
add
sbbl
sbb
sub
add
xor
mov
adc
or
mov
add
xor
xor
or
sub
push
push
push
call
test
jne
adc
adc
sbb
adcl
mov
adc
sub
adc
(bad)  
sub
pop
push
call
and
sub
(bad)  
sub
outsb
adcl
adc
mov
adc
and
or
call
and
adcl
sub
(bad)  
sub
adc
in
add
stos
sbb
adcl
add
add
add
adc
adc
(bad)  
sub
rcrl
xor
movl
orl
movl
(bad)  
sub
mov
adc
pusha  
in
call
cmp
mov
add
xor
xorl
sbb
mov
add
sbb
add
push
push
push
call
mov
adc
add
mov
adc
adc
sbbl
adc
sbbl
or
call
adc
adc
(bad)  
out
adc
sbbl
add
sub
adc
add
add
add
sbb
mov
add
xor
xorl
mov
add
add
adcl
sub
push
push
push
call
sub
and
add
mov
add
mov
add
and
add
add
push
push
call
cmp
jne
add
sub
adc
mov
add
adc
mov
add
add
orl
call
adc
sbbl
adc
adc
add
sub
xorl
add
xor
sub
adc
(bad)  
sub
test
cmp
orl
sbb
and
push
push
call
test
jne
mov
add
mov
adc
or
add
sbbl
add
add
or
push
push
push
call
add
adcl
andl
adcl
mov
add
and
add
add
call
adc
adc
sbb
adcl
add
adcl
xor
add
add
add
add
mov
add
sbb
xor
and
add
adcl
push
push
call
cmp
jne
adc
andl
sub
add
or
or
or
xor
call
mov
add
orl
add
adc
xor
adc
sub
add
adc
sbb
adcl
sub
xor
mov
add
sbbl
mov
add
push
call
adc
sbbl
(bad)  
sub
or
adc
jo
add
repz add
add
movl
add
insl
repz
inc
add
or
add
xor
adc
sbb
sbbl
andl
mov
add
mov
add
add
(bad)  
iret   
jge
(bad)  
arpl
sbb
(bad)  
(bad)  
ljmp
mov
add
xor
push
push
push
call
add
or
andl
mov
adc
and
adc
xorl
sbbl
push
push
push
call
or
mov
add
mov
add
or
adc
sbb
add
add
call
or
sub
adc
(bad)  
iret   
jl
adc
and
(bad)  
sub
or
add
add
sbb
add
mov
add
sbb
adc
and
push
push
push
call
cmp
jne
adc
add
add
or
mov
add
adc
(bad)  
sub
pop
mov
add
call
sbb
sub
xor
adc
adc
sbb
sub
orl
add
jmp
sbbl
adc
add
sub
(bad)  
sub
pop
adcl
push
call
mov
add
mov
adc
sub
add
add
orl
xorl
orl
call
and
xor
sbb
(bad)  
sub
mov
lret
cli    
or
add
add
outsl
add
push
push
call
cmp
jne
sbbl
adc
adcl
adc
and
add
xorl
mov
adc
lea
movb
(bad)  
sub
jo
sbb
adc
add
sbbl
xor
or
or
push
adc
adc
mov
add
adc
adc
movl
adc
movl
lea
call
mov
adc
add
or
or
add
add
adc
adcl
lea
inc
push
adcl
add
xor
or
adc
sbb
xorl
or
push
add
sub
sbb
sub
sbb
adc
sbbl
adc
push
mov
movb
sbb
sub
sub
add
adc
or
adc
xorl
push
or
or
xorl
adc
or
(bad)  
in
pop
adc
sub
lea
call
adc
adc
xor
adc
and
add
add
sbbl
mov
push
push
call
pop
push
push
push
call
cmp
jne
pop
movb
push
push
lea
inc
push
call
push
test
je
movl
add
or
sbb
add
andl
or
xor
movb
(bad)  
les
adc
or
or
xorl
adcl
(bad)  
sub
push
and
push
push
lea
inc
push
add
and
sbb
xorl
sub
mov
add
add
or
call
test
jne
adc
movl
or
adcl
sub
andl
orl
orl
xor
and
add
adc
mov
adc
add
(bad)  
in
jp
adc
push
or
add
or
adc
or
sub
or
sbb
push
push
push
lea
call
(bad)  
jmp
adc
or
adc
adc
add
and
add
decl
jne
sbbl
adc
adc
xor
adcl
adc
xor
xorl
add
movb
push
push
push
call
cmp
jne
push
push
push
call
cmp
jne
add
sbbl
adc
mov
add
andl
add
and
add
pop
adc
movl
and
add
(bad)  
sub
lahf   
sub
sub
add
add
xor
xor
andl
sub
or
sbbl
and
(bad)  
sub
pop
add
mov
movl
or
xor
adc
add
sbb
xor
(bad)  
sub
and
add
adc
or
adc
adc
sub
add
adcl
mov
call
mov
sbbl
adc
add
xor
add
add
adc
adc
lea
sub
push
sub
lea
inc
popl
lea
push
incl
pushl
lea
call
push
push
pushl
push
push
call
push
push
call
cmp
jne
andl
add
xor
adcl
sub
mov
add
sub
andl
lea
or
adc
adcl
movl
orl
adc
adc
add
sbbl
jb
cs ds lea
call
add
add
sub
andl
add
sbb
adc
xor
addl
sub
(bad)  
sub
sbb
xlat
xor
xor
add
adc
adc
xor
call
adcl
sub
or
add
adc
sub
adc
sbb
add
adc
mov
add
xor
mov
add
add
sub
sbbl
and
push
push
call
test
jne
mov
add
adc
(bad)  
sub
mov
add
mov
adc
adc
adc
xorl
call
and
add
sbb
adc
orl
movl
add
add
add
add
add
add
add
xor
mov
add
adc
add
adc
add
push
push
call
test
jne
xor
adc
or
or
adc
adc
adc
sbb
push
push
push
call
sub
mov
add
mov
(bad)  
(bad)  
adc
sub
fld
add
pop
add
add
adc
add
call
orl
adc
adc
adc
(bad)  
int3   
je
xor
aam
add
add
add
or
adc
or
add
add
xor
adc
adc
push
push
push
call
cmp
jne
sub
or
adc
or
andl
add
add
xor
call
adc
movl
mov
adc
sub
adc
mov
adc
xorl
add
add
xor
sub
and
xor
xor
add
and
sbb
push
push
push
call
sbb
sub
sub
sub
andl
sbb
or
adcl
call
add
xor
or
adc
adcl
adc
sbbl
add
mov
add
add
sub
orl
sbb
or
mov
add
or
push
push
push
call
test
jne
adc
adc
mov
adc
and
sbbl
sub
sbb
mov
adc
call
sbb
sub
adc
(bad)  
sub
or
imulb
adc
(bad)  
xor
add
add
add
add
add
adc
mov
add
add
sbb
adcl
sub
xor
push
push
push
call
cmp
jne
adc
xor
sub
mov
add
adc
andl
mov
adc
adc
call
add
movl
adc
or
sbbl
xor
sub
orl
add
sbb
mov
adc
adc
add
adc
mov
add
adc
or
push
call
adc
mov
add
movl
and
sub
sub
add
adc
push
call
mov
add
add
sbb
sub
or
adc
mov
add
adcl
call
or
andl
sbbl
add
movl
xor
andl
add
add
add
add
adc
mov
add
adc
xorl
sub
adc
or
push
push
push
call
cmp
jne
add
xor
mov
adc
orl
and
movl
sub
sbb
call
sbb
sub
or
(bad)  
hlt    
jg
cmp
adcl
sbb
add
adc
sbbl
mov
add
or
and
mov
add
sbbl
adc
push
push
push
call
test
jne
sub
adcl
sbb
sub
add
xorl
xor
add
call
mov
add
sub
mov
add
(bad)  
sub
ret
jbe
add
adc
add
mov
add
add
sub
mov
add
movl
adc
sub
add
push
push
call
test
jne
mov
adc
or
adc
or
mov
add
and
sbb
xor
push
call
adcl
mov
add
sbb
sub
or
xor
or
add
call
adc
or
movl
xor
mov
(bad)  
ret
icebp  
or
add
adc
adc
mov
adc
movl
(bad)  
lret
or
or
sub
push
push
push
call
xor
mov
add
and
(bad)  
lds
cmp
sub
sub
mov
adc
push
push
push
call
(bad)  
sub
inc
adc
sbb
mov
adc
sbb
adc
(bad)  
sub
inc
add
call
or
sub
mov
add
add
sub
adc
or
add
add
xor
mov
adc
sub
sbb
sub
adc
andl
adc
push
push
push
call
cmp
jne
add
adc
add
sbbl
sub
adcl
xor
adc
call
sbbl
sbb
sbb
sub
mov
add
mov
adc
sbb
adc
add
add
add
adc
add
adc
movl
or
mov
add
sbb
(bad)  
sub
lcall
test
add
xchg
add
mov
add
xor
add
sub
and
add
mov
adc
adc
push
call
adc
add
sub
mov
add
sub
xor
adc
and
call
add
xor
(bad)  
loope
movl
add
or
adc
adc
add
mov
add
mov
adc
andl
xor
orl
adc
adcl
and
push
call
adc
adcl
mov
add
andl
add
orl
or
adc
push
push
push
call
mov
add
sub
add
adc
or
add
movl
sbb
call
sub
xor
and
(bad)  
sub
notb
fist
sbb
add
add
add
adc
adc
add
add
adc
andl
orl
movl
adc
mov
add
push
push
push
call
andl
and
adc
xor
sbb
xor
mov
add
sub
call
adcl
xor
adc
or
mov
add
xorl
sub
add
cmp
adc
and
mov
add
xor
sub
mov
add
adc
push
call
adc
adcl
and
xorl
sub
or
adc
andl
call
adc
adc
orl
add
(bad)  
sub
movsb
adc
mov
adc
adc
add
add
cmp
adc
movl
movl
andl
add
xor
or
push
push
push
call
test
jne
andl
adc
xor
orl
sub
sub
add
mov
add
push
push
call
test
jne
mov
add
add
sub
movl
sbb
sbb
mov
adc
add
call
xor
add
sub
adc
or
adc
adc
add
xor
adcl
add
add
add
movl
mov
add
push
call
(bad)  
sub
repz sub
sub
adc
sub
mov
add
sub
movl
call
add
adc
mov
add
xor
sbb
add
andl
adcl
andl
or
adc
adc
add
mov
adc
xor
(bad)  
sub
popf   
push
push
push
call
test
jne
sbbl
mov
add
sub
add
or
adc
sub
sub
call
add
movl
sub
sbb
adc
movl
add
(bad)  
add
adc
xorl
orl
adc
or
mov
add
adc
push
call
add
adc
or
mov
add
mov
add
sbbl
add
sbb
call
add
xor
adc
sbb
sub
xor
sbbl
adc
adc
mov
add
and
xor
and
sub
xor
push
push
push
call
cmp
jne
adc
or
or
adcl
mov
add
xor
mov
add
xor
call
xorl
sub
add
adc
adc
sub
(bad)  
loop
xor
add
add
sub
add
or
mov
add
or
mov
add
sub
push
push
call
cmp
jne
sbbl
mov
add
add
adc
xorl
and
adc
add
call
andl
adc
adc
adcl
sbbl
add
(bad)  
ret    
movsb
sub
add
add
add
adcl
adcl
xor
sbbl
add
add
mov
adc
(bad)  
sub
inc
push
push
push
call
test
jne
mov
add
xor
mov
add
or
or
xorl
or
or
call
adc
sub
add
adc
sbbl
adc
adc
add
add
adc
add
(bad)  
sub
scas
sub
xorl
add
add
adc
push
push
call
cmp
jne
sub
mov
adc
sub
or
xor
or
adc
sbb
call
adc
movl
movl
movl
adc
sub
sbb
add
add
orl
and
or
adc
or
xor
add
push
push
push
call
add
and
mov
add
add
adc
sub
add
or
push
call
add
add
adc
or
xorl
xor
adc
sub
call
sub
sbb
adc
sub
or
and
adc
mov
add
adcl
sub
orl
mov
adc
sub
movl
sub
mov
add
push
push
call
cmp
jne
sub
add
adc
mov
add
add
adc
adc
mov
add
call
or
or
(bad)  
ffree
andl
xor
add
andl
add
add
movl
andl
adc
sub
xor
adc
add
mov
adc
push
push
push
call
test
jne
adcl
add
adc
adcl
or
andl
adcl
mov
adc
push
push
push
call
sub
xor
mov
(bad)  
ret
cmp
(bad)  
sub
movsb
and
sub
sbb
call
adc
sbb
xorl
adc
mov
add
sub
adcl
add
testl
and
sbbl
or
adc
push
push
call
test
jne
mov
add
xorl
add
add
xor
add
sub
sbbl
push
push
push
call
movl
adc
mov
adc
or
adc
or
(bad)  
sub
xchg
or
call
adc
adcl
sub
adc
sub
adc
andl
add
adc
sub
xor
(bad)  
sub
fwait
sub
sbb
adc
add
push
push
push
call
add
add
or
or
(bad)  
(bad)  
add
sub
and
push
push
push
call
test
jne
and
xor
xor
mov
add
sbbl
mov
add
sub
and
call
add
add
and
add
or
adc
sbb
add
sub
andl
add
mov
adc
adcl
sub
(bad)  
rorl
outsl
add
push
push
call
cmp
jne
adc
mov
(bad)  
lds
or
adc
sub
mov
add
xorl
sub
call
or
add
adc
or
adc
adc
sub
adc
add
add
add
add
add
add
sub
adcl
add
sub
adc
adc
push
push
push
call
test
jne
mov
adc
adc
sbb
add
adc
adcl
(bad)  
loope
sbb
call
adc
or
add
and
adc
sub
add
(bad)  
sub
add
adcl
or
(bad)  
sub
cmp
xor
andl
or
xor
mov
adc
push
call
sbb
adc
sub
(bad)  
sub
loopne
adc
mov
add
xor
(bad)  
testl
add
(bad)  
incl
adc
jmp
and
adc
sub
or
(bad)  
sub
lods
add
call
sbb
sub
xor
sub
add
add
mov
adc
add
add
add
add
sub
movl
adc
adc
andl
sub
mov
add
mov
adc
push
push
push
call
sbbl
sub
sbb
andl
mov
add
or
(bad)  
sub
out
shll
call
add
add
adc
add
orl
sbb
adcl
add
add
add
add
andl
add
sbb
sbb
movl
add
adc
push
push
push
call
cmp
jne
mov
add
adcl
adc
andl
andl
or
mov
add
sbb
push
push
push
call
cmp
jne
mov
add
xor
add
sub
adc
add
adc
xor
call
sub
xor
mov
add
adc
adc
adc
(bad)  
sub
inc
sbb
add
add
fistpll
add
add
(bad)  
sub
pop
orl
adc
xor
sub
push
push
push
call
test
jne
adcl
sbbl
add
sub
adc
mov
add
adc
xor
push
push
call
cmp
jne
and
adc
mov
add
andl
or
adc
mov
add
add
call
add
movl
add
sbb
xor
or
adc
sub
add
add
add
add
lock
sub
jp
cmp
or
mov
add
add
mov
add
add
push
push
push
call
cmp
jne
mov
add
sbb
adc
mov
add
or
and
sbbl
add
call
sbb
xor
add
adc
orl
and
andl
add
add
adc
iret   
movb
sbb
sbb
andl
adc
adcl
adcl
push
call
or
sbb
andl
mov
add
xor
adc
xorl
add
call
adcl
xor
or
sbb
add
andl
add
xorl
add
mov
not
push
mov
not
push
mov
not
push
mov
push
call
cmp
je
sub
sub
neg
xor
add
sub
xor
lea
push
add
or
adc
add
xor
sub
add
movl
pushl
pop
xor
xorl
xorl
sbb
add
adc
and
add
add
xor
adc
sbb
sub
and
add
add
xorl
not
xorl
add
xor
sbb
adc
adc
add
sbb
add
and
sbbl
sbbl
adc
sbb
sbb
add
add
ror
add
xorl
sbb
sub
add
andl
sbb
adc
rol
add
add
or
or
or
sbb
orl
add
add
orl
sub
xor
xor
sub
(bad)  
sub
dec
sub
sub
dec
adc
or
xorl
andl
adcl
adc
add
sbb
mov
adc
movl
adc
sub
adcl
sub
adc
or
rol
adcl
sub
(bad)  
sub
(bad)  
xorl
sbb
sbb
and
add
ror
add
adc
add
(bad)  
sub
adc
add
add
adc
and
push
popl
adc
adc
add
sub
adc
xor
sbb
add
add
adcl
add
movl
adc
or
add
xor
xor
clc    
sbb
adc
(bad)  
sub
add
incl
fisubr
adc
xchg
push
lock push
fbstp
stc    
add
test
(bad)  
lcall
sbb
push
xor
and
xor
add
(bad)  
sub
rcll
movl
and
add
orl
adc
adcl
or
adc
adc
call
add
add
add
add
adc
or
add
mov
add
xor
sub
(bad)  
sub
mov
or
outsl
add
call
cmp
jne
adcl
add
add
sub
adc
mov
add
sbbl
sbbl
push
push
push
call
test
jne
adc
add
sbb
mov
add
xor
or
xor
mov
add
call
adc
sbb
xor
sub
(bad)  
sub
in
(bad)  
hlt    
adc
sub
add
xor
adc
add
mov
add
xor
sub
push
push
call
test
jne
add
and
or
mov
add
sub
mov
add
adc
add
call
or
sbb
or
sbb
xorl
xor
sub
add
mov
add
adc
sbb
add
sbb
adc
xorl
(bad)  
sub
xor
outsl
add
push
push
call
test
jne
and
adc
or
add
add
and
movl
sub
push
call
adc
mov
add
adc
and
sbbl
adc
add
or
call
or
sbb
adc
sub
add
and
orl
mov
add
adc
sbb
sbbl
mov
add
adc
mov
add
xor
movl
push
call
adc
mov
adc
or
or
sbbl
adcl
sbb
movl
push
call
add
mov
add
sub
add
sub
adc
xor
adc
call
(bad)  
sarl
adc
and
sbbl
sbbl
adc
adcl
mov
add
add
add
adc
mov
add
or
or
sub
add
mov
add
sub
push
push
push
call
adc
add
sbbl
add
add
mov
add
add
sub
push
call
sub
adc
movl
add
mov
add
adc
xor
sub
call
andl
sub
xor
mov
add
(bad)  
sub
pop
sub
or
add
add
ret    
movl
adcl
adc
or
mov
adc
sub
or
push
push
push
call
andl
xor
add
adc
add
add
movl
movl
push
push
push
call
test
jne
adc
sbb
orl
xor
add
sbb
(bad)  
fcmovnbe
adcl
call
sbb
add
or
mov
add
sbb
andl
xorl
sbbl
add
adc
cmp
sub
movl
xor
adcl
mov
add
sub
push
push
push
call
mov
(bad)  
rol
add
add
adc
or
or
xor
adcl
add
sub
call
adc
adc
(bad)  
sub
fild
adc
add
add
add
(bad)  
sub
xor
movl
add
movl
sub
and
movl
adc
sub
adc
adc
push
call
adc
add
adc
movl
sbb
movl
mov
add
adc
push
call
sbbl
add
mov
add
add
and
adc
(bad)  
sub
xchg
or
call
and
add
xor
sub
add
sbbl
add
adc
add
add
add
sub
add
sub
andl
adc
adc
adc
push
push
push
call
sub
mov
add
adc
or
sbb
mov
add
add
(bad)  
sub
pop
push
call
add
add
(bad)  
sub
jg
and
sub
sbbl
add
xor
call
mov
add
movl
xor
adc
add
sub
sub
movl
add
add
mov
sbb
or
mov
adc
sbb
mov
add
orl
push
call
mov
add
adc
add
mov
adc
adc
xorl
sub
(bad)  
(bad)  
sbb
adc
lret
incl
cmp
or
movl
adc
adc
(bad)  
sub
stc    
sbbl
sub
call
add
(bad)  
sub
push
mov
(bad)  
ret
adc
mov
add
adc
sbb
adc
add
add
add
decl
and
or
movl
mov
add
andl
xor
adc
push
call
add
orl
mov
add
xor
adc
add
orl
and
call
xor
xorl
or
adc
add
or
or
add
add
add
or
sbb
adc
sbb
orl
sub
andl
push
push
push
call
test
jne
xorl
add
add
sbb
add
add
mov
add
adc
push
push
call
test
jne
mov
add
sbb
adc
or
sbbl
(bad)  
rcrl
add
andl
call
or
add
sub
adcl
mov
add
or
sub
adcl
add
add
add
xorl
sbbl
orl
adc
orl
adcl
or
push
push
push
call
test
jne
mov
adc
xor
(bad)  
sub
jg
xor
lcall
push
cmp
add
add
adc
push
push
push
call
add
adc
or
adc
mov
add
add
add
adc
call
xorl
adc
adc
(bad)  
sub
jp
(bad)  
repnz and
mov
add
xorl
add
add
adc
xor
sbb
add
mov
add
sub
sbb
xor
push
push
push
call
andl
xorl
adcl
adc
(bad)  
sub
jmp
xor
movl
mov
add
push
push
push
call
cmp
jne
mov
add
adc
add
orl
sbb
orl
xor
sbbl
call
xor
adc
(bad)  
sub
pop
orl
add
adc
movl
mov
adc
(bad)  
sub
(bad)  
sub
mov
adc
adcl
add
xor
add
push
push
push
call
cmp
jne
add
mov
add
adc
xorl
add
xor
xor
mov
add
push
call
xorl
sbb
sbb
add
adc
mov
add
adc
sub
call
and
adc
adcl
add
sbb
sub
mov
add
add
add
add
add
add
adc
add
adc
and
movl
mov
adc
movl
orl
push
push
call
test
jne
movl
mov
add
sbb
xor
add
adc
adc
sub
call
sbb
sbb
xor
sub
xor
adc
add
andl
add
add
add
sarb
fsts
add
sbbl
adc
xor
sub
sub
push
push
push
call
cmp
jne
sbb
xorl
xor
adc
orl
or
xorl
mov
add
push
push
push
call
test
jne
sub
and
sbbl
adc
mov
(bad)  
ret
fdivs
add
sbb
call
add
or
andl
or
add
add
adc
and
add
sub
sbb
add
xor
adc
andl
add
sbb
push
push
push
call
mov
adc
or
or
adc
adcl
or
sub
mov
(bad)  
(bad)  
push
call
xor
adcl
add
and
xor
adc
adc
add
add
add
or
sbbl
mov
add
sub
adc
add
orl
xor
push
call
mov
adc
sbb
sub
adc
add
andl
sbb
orl
push
call
andl
mov
adc
mov
add
adc
orl
(bad)  
shrl
test
cld    
call
xor
sbb
add
(bad)  
xlat
pop
adc
adc
xorl
or
add
add
add
cmp
adc
add
movl
add
xor
adc
adcl
push
push
call
test
jne
adc
xor
xorl
adc
and
adc
and
add
push
call
or
xor
mov
add
sub
xor
adc
sbb
mov
adc
call
orl
adc
add
sbbl
orl
adc
sub
add
add
shrb
adc
adcl
mov
adc
add
or
adc
push
call
mov
adc
adc
adc
adc
adc
sbb
sub
(bad)  
in
call
add
adc
adc
adc
or
or
adc
add
cmp
adc
sbb
or
or
add
(bad)  
les
add
push
call
or
mov
adc
mov
add
adc
sbb
xor
(bad)  
sub
je
fsubrs
mov
(bad)  
decl
sbb
(bad)  
(bad)  
aaa    
sbb
adc
adc
adc
xor
add
movl
add
mov
add
sbbl
sbb
sbbl
or
and
push
push
push
call
test
jne
add
mov
add
mov
add
sbb
adc
sbb
or
sbbl
push
call
xor
sbb
xor
mov
add
or
adcl
sub
sub
call
mov
adc
adc
xor
orl
sbbl
xorl
(bad)  
lret
add
mov
adc
adc
sub
adc
adc
sbb
add
adc
push
call
sub
adc
add
sub
add
mov
adc
xor
adc
push
push
call
cmp
jne
adc
movl
adc
adc
sbb
andl
mov
add
xor
call
xor
xor
xor
andl
sbb
adc
sub
sbbl
add
jmp
sub
mov
add
orl
sub
mov
add
and
add
xor
push
call
sbbl
andl
(bad)  
sub
cmpsb
movl
and
and
or
mov
add
push
push
push
call
cmp
jne
and
movl
orl
adc
sub
(bad)  
sub
lods
add
add
call
sub
or
add
sub
sbbl
add
adcl
add
lock sub
add
sbb
adc
xor
xor
mov
adc
push
push
push
call
cmp
jne
adcl
mov
add
adc
adc
adc
xor
mov
add
sub
push
call
movl
sub
mov
add
add
sub
xor
adc
adc
call
(bad)  
iret   
fstl
sbb
sbb
mov
add
add
add
or
(bad)  
sub
mov
add
sbb
add
or
or
mov
add
add
sbb
push
push
push
call
add
xorl
mov
add
adcl
xor
mov
add
xor
(bad)  
sarl
adc
outsl
add
push
call
or
xor
orl
xor
mov
add
sub
sub
and
call
or
add
sbb
xor
or
add
movl
andl
add
mov
adc
adc
adc
adc
sbb
add
adc
sub
push
push
push
call
test
jne
mov
add
mov
add
or
and
and
adcl
adc
adc
call
sub
and
adc
xor
adc
or
xor
add
testb
push
xor
fildl
add
movl
adcl
adc
add
push
push
call
test
jne
add
adc
add
sub
mov
add
add
adcl
and
call
andl
add
mov
add
sbb
sbb
sub
xor
orl
add
add
add
sbb
add
xorl
mov
add
adc
adc
add
sub
push
push
push
call
test
jne
adc
adc
sbb
adc
sub
mov
adc
sub
xor
call
adc
mov
add
movl
adc
movl
or
adcl
movl
add
add
xor
or
xor
sbb
adcl
(bad)  
sub
stos
add
adc
push
push
call
test
jne
sub
or
mov
add
mov
add
or
sbb
xor
(bad)  
aam
push
push
call
test
jne
xor
add
mov
add
xorl
sub
adc
add
adc
call
add
and
or
adc
xor
xorl
adc
or
andl
sub
sub
adc
xorl
or
add
push
push
call
cmp
jne
add
mov
adc
adc
sub
orl
add
adc
sbbl
push
push
call
test
jne
and
adc
mov
(bad)  
lds
loope
repz sub
sub
mov
add
call
orl
sub
sub
sub
andl
or
adc
add
adc
adcl
sub
sbbl
adc
add
mov
add
orl
push
push
push
call
(bad)  
sub
pop
mov
add
add
sbb
add
(bad)  
sub
(bad)  
add
andl
push
push
push
call
add
or
adcl
adcl
adc
mov
add
sub
mov
adc
call
orl
or
adc
add
add
adc
adc
add
add
(bad)  
ret    
jo
add
add
adc
adc
(bad)  
sub
mov
add
sbb
xor
push
push
call
cmp
jne
sub
mov
(bad)  
(bad)  
ja
add
adc
mov
add
add
add
adc
call
adc
or
sub
adcl
xor
add
sbbl
mov
add
add
and
sub
mov
add
(bad)  
sub
xchg
sub
add
push
push
push
call
sub
adcl
or
andl
adc
or
adc
sbb
call
xor
mov
add
sub
and
add
or
or
add
add
add
add
add
sbb
add
andl
add
adc
adc
xorl
sub
push
push
call
test
jne
adcl
mov
add
sub
sbb
add
sub
add
mov
adc
call
sbbl
sub
sub
add
(bad)  
sub
jo
xor
adc
add
rolb
imul
add
add
andl
sbb
sub
(bad)  
sub
jge
xchg
outsl
add
push
push
call
test
jne
mov
add
add
mov
add
sub
adc
adc
adc
sbb
call
sbb
add
add
adc
adc
sbb
add
xor
add
add
add
add
pushf  
push
add
mov
push
add
mov
add
push
add
add
add
push
add
dec
push
add
jbe
add
fs push
add
push
push
add
adc
add
add
cmp
add
add
add
mov
add
push
add
mov
push
add
lods
push
add
add
add
push
push
add
nop
push
add
or
add
in
push
add
cs push
add
inc
push
add
fs push
add
sbb
add
add

